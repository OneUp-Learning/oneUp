////
/// @group typography
////
@import 'globals';


/// Boolean if the typography should extend the base html tags as well.
/// @type Boolean
$md-typography-extended: true !default;

/// Boolean if the text container class name should be created by default. This class name
/// is really used to keep a max line-width for text.
/// @type Boolean
$md-typography-include-text-container: true !default;

/// Boolean if common text positioning/transforms/styles class names should be included by default.
/// @type Boolean
$md-typography-include-utilities: true !default;

/// The font name to use throughout the application. It is recommended
/// to use Roboto or Noto, but it can be whatever.
/// @type String
$md-font-name: Roboto !default;

/// The font family for the application. This only combines the `$md-font-name`
/// with a fallback font of `sans-serif`.
/// @type String
$md-font-family: '#{$md-font-name}', sans-serif !default;

/// The max length a line of text can be.
/// @type Number
$md-typography-max-line-length: 640px !default;

/// The min width to apply to the `html` tag. This is set mostly if you are using
/// components that rely on hiding the main window's toolbar to prevent scrolling.
///
/// Setting this value to `null` will not update the `html` with the min-width.
///
/// @type Number
$md-html-min-width: 100% !default;



/// The light text weight.
/// @type Number
$md-font-light: 300 !default;

/// The regular text weight.
/// @type Number
$md-font-regular: 400 !default;

/// The medium text weight.
/// @type Number
$md-font-medium: 500 !default;

/// The semibold text weight.
/// @type Number
$md-font-semibold: 600 !default;

/// The bold text weight.
/// @type Number
$md-font-bold: 700 !default;

/// A list of all the text weights. This is mainly used so you can
/// loop over the weights and include locally hosted fonts.
/// @type List
/// @access private
$md-font-weights: ($md-font-light $md-font-regular $md-font-medium $md-font-semibold $md-font-bold);


/// The `.md-display-4` font size.
/// @type Number
$md-display-4-font-size: 112px !default;

/// The `.md-display-4` line height.
/// @type Number
$md-display-4-line-height: 128px !default;

/// The `.md-display-3` font size.
/// @type Number
$md-display-3-font-size: 56px !default;

/// The `.md-display-3` line height.
/// @type Number
$md-display-3-line-height: 84px !default;


/// The `.md-display-2` font size.
/// @type Number
$md-display-2-font-size: 45px !default;

/// The `.md-display-2` line height.
/// @type Number
$md-display-2-line-height: 48px !default;


/// The `.md-display-1` font size.
/// @type Number
$md-display-1-font-size: 34px !default;

/// The `.md-display-1` line height.
/// @type Number
$md-display-1-line-height: 40px !default;


/// The `.md-headline` font size.
/// @type Number
$md-headline-font-size: 24px !default;

/// The `.md-headline` line height.
/// @type Number
$md-headline-line-height: 32px !default;


/// The `.md-title` font size.
/// @type Number
$md-title-font-size: 20px !default;

/// The `.md-title` line height.
/// @type Number
$md-title-line-height: 28px !default;


/// The \`.md-subheading-1` and `.md-subheading-2` font size for
/// mobile devices.
/// @type Number
$md-subheading-mobile-font-size: 16px !default;

/// The \`.md-subheading-1` and `.md-subheading-2` font size for
/// desktop screens.
/// @type Number
$md-subheading-desktop-font-size: 15px !default;

/// The `.md-subheading-2` line height.
/// @type Number
$md-subheading-2-line-height: 28px !default;

/// The `.md-subheading-1` line height.
/// @type Number
$md-subheading-1-line-height: 24px !default;

/// The base font size. This is really just the mobile font size
/// without the `px` suffix.
/// @access private
$md-font-size-base: 14 !default;

/// The `.md-body-1` and `.md-body-2` font size for mobile devices.
/// @type Number
$md-body-mobile-font-size: #{$md-font-size-base}px !default;

/// The `.md-body-1` and `.md-body-2` font size for
/// desktop screens.
/// @type Number
$md-body-desktop-font-size: 13px !default;

/// The `.md-body-2` font size.
/// @type Number
$md-body-2-line-height: 24px !default;

/// The `.md-body-1` font size.
/// @type Number
$md-body-1-line-height: 20px !default;

/// The `.md-caption` font size.
/// @type Number
$md-caption-font-size: 12px !default;

/// The font icon size.
/// @type Number
/// @group icons
$md-font-icon-size: 24px !default;

/// The dense font icon size
/// @type Number
/// @group icons
$md-font-icon-dense-size: 20px !default;

/// The line height to use on almost all elements.
/// @type Number
$md-line-height: 20 / $md-font-size-base !default;


/// A placeholder for styling a class with the material design tracking of -10.
%md-tracking--10 {
  letter-spacing: -.1px;
}

/// A placeholder for styling a class with the material design tracking of -5.
%md-tracking--5 {
  letter-spacing: -.05px;
}

/// A placeholder for styling a class with the material design tracking of 0.
%md-tracking-0 {
  letter-spacing: 0;
}

/// A placeholder for styling a class with the material design tracking of 5.
%md-tracking-5 {
  letter-spacing: .5px;
}

/// A placeholder for styling a class with the material design tracking of 10.
%md-tracking-10 {
  letter-spacing: .1px;
}

/// A placeholder for styling a class with the material design tracking of 20.
%md-tracking-20 {
  letter-spacing: .2px;
}

%md-display-1,
%md-display-2,
%md-display-3,
%md-display-4,
%md-headline,
%md-title,
%md-subheading-1,
%md-subheading-2,
%md-body-1,
%md-body-2,
%md-caption {
  margin: 0;
}

%md-display-1,
%md-display-2,
%md-display-3,
%md-display-4,
%md-headline,
%md-title {
  margin-bottom: #{$md-font-size-base}px;
}

%md-subheading-1,
%md-subheading-2,
%md-body-1,
%md-body-2,
%md-caption {
  margin-bottom: 10px;
}



%md-display-3,
%md-display-4,
%md-title {
  white-space: nowrap;
}

%md-display-1,
%md-display-2,
%md-display-3,
%md-headline,
%md-subheading-1,
%md-subheading-2,
%md-body-1,
%md-caption {
  font-weight: $md-font-regular;
}

%md-title,
%md-body-2 {
  font-weight: $md-font-medium;
}

/// A placeholder for the Display 4 typography.
%md-display-4 {
  @extend %md-tracking--10;

  font-size: $md-display-4-font-size;
  font-weight: $md-font-light;
  line-height: $md-display-4-line-height;
}

/// A placeholder for the Display 3 typography.
%md-display-3 {
  @extend %md-tracking--5;

  font-size: $md-display-3-font-size;
  line-height: $md-display-3-line-height;
}

/// A placeholder for the Display 2 typography.
%md-display-2 {
  @extend %md-tracking-0;

  font-size: $md-display-2-font-size;
  line-height: $md-display-2-line-height;
}

/// A placeholder for the Display 1 typography.
%md-display-1 {
  @extend %md-tracking-0;

  font-size: $md-display-1-font-size;
  line-height: $md-display-1-line-height;
}

/// A placeholder for the headline typography.
%md-headline {
  @extend %md-tracking-0;

  font-size: $md-headline-font-size;
  line-height: $md-headline-line-height;
}

/// A placeholder for the title typography.
%md-title {
  @extend %md-tracking-5;

  font-size: $md-title-font-size;
  line-height: $md-title-line-height;
}

/// A placeholder for the subheading-2 typography.
%md-subheading-2 {
  @extend %md-tracking-10;

  line-height: $md-subheading-2-line-height;
}

/// A placeholder for the subheading-1 typography.
%md-subheading-1 {
  @extend %md-tracking-10;

  line-height: $md-subheading-1-line-height;
}

/// A placeholder for the body-1 typography
%md-body-1 {
  @extend %md-tracking-10;

  line-height: $md-body-1-line-height;
}

/// A placeholder for the body-2 typography
%md-body-2 {
  @extend %md-tracking-10;

  line-height: $md-body-2-line-height;
}


/// A placeholder for the caption typography.
%md-caption {
  @extend %md-tracking-20;

  font-size: $md-caption-font-size;
}

/// A simple placeholder for aligning text left.
%md-text-left {
  text-align: left;
}

/// A simple placeholder for aligning text center.
%md-text-center {
  text-align: center;
}

/// A simple placeholder for aligning text right.
%md-text-right {
  text-align: right;
}

/// A simple placeholder for aligning text by `text-align: justify`.
%md-text-justify {
  text-align: justify;
}

/// A simple placeholder for capitalizing text.
%md-text-capitalize {
  text-transform: capitalize;
}

/// A simple placeholder for lowercasing text.
%md-text-lowercalse {
  text-transform: lowercase;
}

/// A simple placeholder for uppercasing text.
%md-text-uppercase {
  text-transform: uppercase;
}

/// A simple placeholder for allowing no white space wrap.
%md-text-nowrap {
  white-space: nowrap;
}

/// A simple placeholder for setting `user-select: none`.
%md-text-no-select {
  user-select: none;
}

/// A simple placeholder for setting the font weight to the material design's light weight.
%md-font-light {
  font-weight: $md-font-light;
}

/// A simple placeholder for setting the font weight to the material design's regular weight.
%md-font-regular {
  font-weight: $md-font-regular;
}

/// A simple placeholder for setting the font weight to the material design's medium weight.
%md-font-medium {
  font-weight: $md-font-medium;
}

/// A simple placeholder for setting the font weight to the material design's semibold weight.
%md-font-semibold {
  font-weight: $md-font-semibold;
}

/// A simple placeholder for setting the font weight to the material design's bold weight.
%md-font-bold {
  font-weight: $md-font-bold;
}

/// This includes the CSS for simple typography in react-md. It will
/// update all items to use `box-sizing: border-box`, set the font
/// family, set the line-height, text-rendering, and create the base
/// class names for the typography. If the `$extend-html-tags` is true,
/// the `h1` - `h6`, `p`, and `caption` tags will be updated with the
/// corresponding CSS class name.
///
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the application
///     is using the light theme.
/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries
///     should be included.
/// @param {Boolean} extend-html-tags [$md-typography-extended] - Boolean if the base html tags should
///     be updated or not.
/// @param {Boolean} include-text-container [$md-typography-include-text-container] - Boolean if the
///     text container class name should be included.
/// @param {Boolean} include-utilities [$md-typography-include-utilities] - Boolean if the
///     text helper class names should be included.
@mixin react-md-typography(
  $light-theme: $md-light-theme,
  $include-media: $md-media-included,
  $extend-html-tags: $md-typography-extended,
  $include-text-container: $md-typography-include-text-container,
  $include-utilities: $md-typography-include-utilities
) {
  $md-text-color: get-color('text', $light-theme);
  $md-secondary-text-color: get-color('secondary', $light-theme);
  $md-hint-text-color: get-color('hint', $light-theme);
  $md-disabled-text-color: get-color('disabled', $light-theme);

  @if $include-media {
    @include react-md-typography-media($extend-html-tags);
  }

  *,
  *::before,
  *::after {
    box-sizing: border-box;
    // scss-lint:disable ColorVariable
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    transition-timing-function: $md-transition-standard;
  }

  html {
    background: if($light-theme, $md-light-theme-background-color, $md-dark-theme-background-color);
    font-size: #{$md-font-size-base}px;
    min-width: $md-html-min-width;
  }

  body {
    font-family: $md-font-family;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-weight: $md-font-regular;
    line-height: $md-line-height;
    text-rendering: optimizeLegibility;
  }

  %md-headline,
  %md-title,
  %md-subheading-2,
  %md-subheading-1,
  %md-body-2,
  %md-body-1 {
    color: $md-text-color;
  }

  %md-display-4,
  %md-display-3,
  %md-display-2,
  %md-display-1,
  %md-caption {
    color: $md-secondary-text-color;
  }

  @if $extend-html-tags {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p,
    button,
    input,
    textarea,
    html {
      font-family: $md-font-family;
    }

    h1 {
      @extend %md-display-1;
    }

    h2 {
      @extend %md-headline;
    }

    h3 {
      @extend %md-title;
    }

    h4 {
      @extend %md-subheading-2;
    }

    h5 {
      @extend %md-subheading-1;
    }

    h6 {
      @extend %md-body-2;
    }

    p {
      @extend %md-body-1;
    }

    caption {
      @extend %md-caption;
    }
  }

  .md-display-1 {
    @extend %md-display-1;
  }

  .md-display-2 {
    @extend %md-display-2;
  }

  .md-display-3 {
    @extend %md-display-3;
  }

  .md-display-4 {
    @extend %md-display-4;
  }

  .md-headline {
    @extend %md-headline;
  }

  .md-title {
    @extend %md-title;
  }

  .md-subheading-1 {
    @extend %md-subheading-1;
  }

  .md-subheading-2 {
    @extend %md-subheading-2;
  }

  .md-body-1 {
    @extend %md-body-1;
  }

  .md-body-2 {
    @extend %md-body-2;
  }

  .md-caption {
    @extend %md-caption;
  }

  @if $include-utilities {
    @include react-md-typography-utilities;
  }

  @if $include-text-container {
    @include react-md-typography-text-container;
  }
}

/// Creates a utility class name for containing long amounts of text. This is set up
/// to center the text in the page and keep the line width to the `$md-typography-max-line-length`.
@mixin react-md-typography-text-container {
  .md-text-container {
    @extend %md-block-centered;

    max-width: $md-typography-max-line-length;
    width: 100%;

    &.md-text-container.md-cell {
      margin-left: auto;
      margin-right: auto;
    }
  }
}

/// Creates utility class names for common text positioning and transforms.
@mixin react-md-typography-utilities {
  .md-text-left {
    @extend %md-text-left;
  }

  .md-text-center {
    @extend %md-text-center;
  }

  .md-text-right {
    @extend %md-text-right;
  }

  .md-text-justify {
    @extend %md-text-justify;
  }

  .md-text-capitalize {
    @extend %md-text-capitalize;
  }

  .md-text-lowercalse {
    @extend %md-text-lowercalse;
  }

  .md-text-uppercase {
    @extend %md-text-uppercase;
  }

  .md-text-nowrap {
    @extend %md-text-nowrap;
  }

  .md-text-no-select {
    @extend %md-text-no-select;
  }

  .md-font-light {
    @extend %md-font-light;
  }

  .md-font-regular {
    @extend %md-font-regular;
  }

  .md-font-medium {
    @extend %md-font-medium;
  }

  .md-font-semibold {
    @extend %md-font-semibold;
  }

  .md-font-bold {
    @extend %md-font-bold;
  }
}

/// Creates the CSS for typography on mobile devices. If the `$extend-html-tags` param is true,
/// the `h6`, `h5`, `h4`, and `p` tags will also be modified. This should most likely be used within
/// a media query.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-mobile-media} {
///     @include react-md-typography-mobile;
///   }
///
/// @param {Boolean} extend-html-tags [$md-typography-extended] - Boolean if the base html tags should
///     be updated.
/// @group typography, media-queries
@mixin react-md-typography-mobile($extend-html-tags: $md-typography-extended) {
  .md-subheading-2,
  .md-subheading-1 {
    font-size: $md-subheading-mobile-font-size;
  }

  .md-body-2,
  .md-body-1 {
    font-size: $md-body-mobile-font-size;
  }

  @if $extend-html-tags {
    h5,
    h4 {
      font-size: $md-subheading-mobile-font-size;
    }

    h6,
    p {
      font-size: $md-body-mobile-font-size;
    }
  }
}

/// Creates the CSS for typography on desktop screens. If the `$extend-html-tags` param is true,
/// the `h6`, `h5`, `h4`, and `p` tags will also be modified. This should most likely be used within
/// a media query.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-desktop-media} {
///     @include react-md-typography-desktop;
///   }
///
/// @param {Boolean} extend-html-tags [$md-typography-extended] - Boolean if the base html tags should
///     be updated.
/// @group typography, media-queries
@mixin react-md-typography-desktop($extend-html-tags: $md-typography-extended) {
  .md-subheading-2,
  .md-subheading-1 {
    font-size: $md-subheading-desktop-font-size;
  }

  .md-body-2,
  .md-body-1 {
    font-size: $md-body-desktop-font-size;
  }

  @if $extend-html-tags {
    h5,
    h4 {
      font-size: $md-subheading-desktop-font-size;
    }

    h6,
    p {
      font-size: $md-body-desktop-font-size;
    }
  }
}

/// Includes the mobile and desktop media queries for typography. If the `$extend-html-tags` param is true,
/// the `h6`, `h5`, `h4`, and `p` tags will also be modified.
///
/// @example scss - Example Usage SCSS
///   @include react-md-typography-media;
///
/// @param {Boolean} extend-html-tags [$md-typography-extended] - Boolean if the base html tags should
///     be updated.
/// @group typography, media-queries
@mixin react-md-typography-media($extend-html-tags: $md-typography-extended) {
  @media #{$md-mobile-media} {
    @include react-md-typography-mobile($extend-html-tags);
  }

  @media #{$md-desktop-media} {
    @include react-md-typography-desktop($extend-html-tags);
  }
}

/// Updates the theme of the typography ONLY if the `$light-theme` does not equal `$md-light-theme`.
/// You will need to apply this `$html-class-name` to the `html` tag to get the effects. This is because
/// the base `html` tag had the background color set which everything inherits.
///
/// @example scss - Example Usage SCSS
///   @include react-md-theme-typography(dark-theme, false);
///
/// @example scss - Example Usage CSS Output
///   .dark-theme {
///     background: #303030;
///   }
///
///   .dark-theme .md-headline,
///   .dark-theme .md-title,
///   .dark-theme .md-subheading-2,
///   .dark-theme .md-subheading-1,
///   .dark-theme .md-body-2,
///   .dark-theme .md-body-1,
///   .dark-theme h4,
///   .dark-theme h3,
///   .dark-theme h2,
///   .dark-theme h1,
///   .dark-theme p {
///     color: #fff;
///   }
///
///   .dark-theme .md-display-1,
///   .dark-theme .md-caption,
///   .dark-theme h1,
///   .dark-theme caption {
///     color: rgba(#fff, .7);
///   }
///
/// @param {String} html-class-name - The class name to use for the html tag.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.
/// @param {Boolean} extend-html-tags [$md-typography-extended] - Boolean if the base html tags should be
///     styled as well.
/// @group typography, themes
@mixin react-md-theme-typography($html-class-name, $light-theme: $md-light-theme, $extend-html-tags: $md-typography-extended) {
  @if $light-theme != $md-light-theme {
    .#{$html-class-name} {
      background: get-color('background', $light-theme);

      .md-headline,
      .md-title,
      .md-subheading-2,
      .md-subheading-1,
      .md-body-2,
      .md-body-1 {
        color: get-color('text', $light-theme);
      }

      .md-display-4,
      .md-display-3,
      .md-display-2,
      .md-display-1,
      .md-caption {
        color: get-color('secondary', $light-theme);
      }

      @if $extend-html-tags {
        h6,
        h5,
        h4,
        h3,
        h2,
        h1,
        p {
          color: get-color('text', $light-theme);
        }

        h1,
        caption {
          color: get-color('secondary', $light-theme);
        }

      }

    }
  }
}

/// Converts a font weight into the google font suffix.
///
/// @param {Number} $font-weight - The font weight to convert
/// @return {String} the font suffix
@function get-font-suffix($font-weight) {
  $font-weights: (
    $md-font-light: '-Light',
    $md-font-regular: '-Regular',
    $md-font-medium: '-Medium',
    $md-font-semibold: '-SemiBold',
    $md-font-bold: '-Bold',
  );

  $suffix: map-get($font-weights, $font-weight);
  @if not $suffix {
    @warn "The given font weight '#{$font-weight}' is not one of the four material design weights.";
  }

  @return $suffix;
}

/// Creates a font face for a locally hosted google font
///
/// @example scss - Basic Usage Sass
///   @include host-google-font(Roboto, 400);
///   @include host-google-font(Roboto, 500, my-special-fonts);
///
/// @example scss - Basic Usage CSS Output
///   @font-face {
///     font-family: 'Roboto';
///     font-style: normal;
///     font-weight: 400;
///     src: local('Roboto'),
///          local('Roboto-Regular'),
///          url(/fonts/roboto/Roboto-Regular.ttf) format('truetype');
///   }
///
///   @font-face {
///     font-family: 'Roboto';
///     font-style: normal;
///     font-weight: 500;
///     src: local('Roboto'),
///          local('Roboto-Medium'),
///          url(my-sepcial-fonts/Roboto-Medium.ttf) format('truetype');
///   }
///
/// @param {String} $font-name [Roboto] - The font name to create a font face for
/// @param {Number} $font-weight [400] - The font weight of the google font
/// @param {String} $fonts-url - The url to your fonts.
/// @require get-font-suffix - The function to convert a font weight to a font suffix.
@mixin host-google-font($font-name: Roboto, $font-weight: 400, $fonts-url: null) {
  $full-font-name: str-replace($font-name, ' ') + get-font-suffix($font-weight);

  $fonts-url: if($fonts-url == null, '/fonts/' + to-lower-case(str-replace($font-name, ' ', '-')), $fonts-url);
  $fonts-url: if(char-at($fonts-url) != '/', $fonts-url + '/', $fonts-url);

  @font-face {
    font-family: quote($font-name);
    font-style: normal;
    font-weight: $font-weight;

    src: local(#{quote($font-name)}), local(#{quote($full-font-name)}), url($fonts-url + $full-font-name + '.ttf') format('truetype');
  }
}

/// Hosts the material icon font library locally by declaring the font face
/// and the .material-icons CSS class.
///
/// @example scss - Basic Usage Sass
///   @include host-material-icons('/fonts/material-icons');
///
/// @example scss - Basic Usage CSS Output
///   @font-face {
///     font-family: 'Material Icons';
///     font-style: normal;
///     font-weight: 400;
///     src: url(/fonts/material-icons/MaterialIcons-Regular.eot');
///     src: local('Material Icons'),
///          local('MaterialIcons-Regular'),
///          url(/fonts/material-icons/MaterialIcons-Regular.woff2') format('woff2'),
///          url(/fonts/material-icons/MaterialIcons-Regular.woff') format('woff'),
///          url(/fonts/material-icons/MaterialIcons-Regular.ttf') format('truetype');
///   }
///
///   .material-icons {
///     direction: ltr;
///     display: inline-block;
///     font-family: 'Material Icons';
///     // Support for IE.
///     font-feature-settings: 'liga';
///     font-size: $md-font-icon-size;
///     // Support for Firefox.
///     -moz-osx-font-smoothing: grayscale;
///     // Support for all WebKit browsers.
///     -webkit-font-smoothing: antialiased;
///     font-style: normal;
///     font-weight: normal;
///     height: 1em;
///     letter-spacing: normal;
///     line-height: 1;
///     // Support for Safari and Chrome.
///     text-rendering: optimizeLegibility;
///     text-transform: none;
///     white-space: nowrap;
///     width: 1em;
///     word-wrap: normal;
/// 	}
///
/// @param {String} $font-url ['/fonts/material-icons'] - The path to the material icons fonts
@mixin host-material-icons($font-url: '/fonts/material-icons') {
  $icon-link: $font-url + '/MaterialIcons-Regular';
  @font-face {
    font-family: 'Material Icons';
    font-style: normal;
    font-weight: 400;
    src: url($icon-link + '.eot');
    // scss-lint:disable SpaceAfterComma
    src: local('Material Icons'),
         local('MaterialIcons-Regular'),
         url($icon-link + '.woff2') format('woff2'),
         url($icon-link + '.woff') format('woff'),
         url($icon-link + '.ttf') format('truetype');
    // scss-lint:enable SpaceAfterComma
  }

  .material-icons {
    direction: ltr;
    display: inline-block;
    font-family: 'Material Icons';
    // Support for IE.
    font-feature-settings: 'liga';
    font-size: $md-font-icon-size;
    // Support for Firefox.
    -moz-osx-font-smoothing: grayscale;
    // Support for all WebKit browsers.
    -webkit-font-smoothing: antialiased;
    font-style: normal;
    font-weight: normal;
    letter-spacing: normal;
    line-height: 1;
    // Support for Safari and Chrome.
    text-rendering: optimizeLegibility;
    text-transform: none;
    white-space: nowrap;
    word-wrap: normal;
	}
}

/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}
