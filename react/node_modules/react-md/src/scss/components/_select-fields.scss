////
/// @group select-fields
////

/// The distance that a new value for the select field should drop.
/// @type Number
$md-select-field-drop-distance: 6px !default;

/// The transition time that a new value in a select field should drop.
/// @type Number
$md-select-field-drop-transition-time: $md-transition-time * 2 !default;

/// The left padding for a select field that has a position of `SelectField.Positions.BELOW`
/// @type Number
$md-select-field-left-padding: 24px !default;

/// The right padding for a select field that has a position of `SelectField.Positions.BELOW`
/// @type Number
$md-select-field-right-padding: 16px !default;

/// Creates the styles for select fields. Like the `autocompletes`, the `SelectField` component
/// also depends on the styles for the `TextField`.
///
/// @example scss - Example Usage SCSS
///   @include react-md-select-fields;
///
/// @see react-md-text-fields
/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries for select fields
///     should also be included.
@mixin react-md-select-fields($include-media: $md-media-included) {
  .md-select-field {
    cursor: inherit;
    display: flex;
    flex-wrap: wrap;
    user-select: none;

    .md-divider {
      width: 100%;
    }

    &__toggle {
      position: relative;
    }
  }

  // To override text field padding
  .md-select-field--btn.md-select-field--btn {
    padding-bottom: $md-default-padding;
    padding-left: $md-select-field-left-padding;
    padding-right: $md-select-field-right-padding;
    padding-top: $md-default-padding;
  }

  .md-select-field--text-field {
    // without this, mobile safari will not bubble the click event up to the toggle element so the
    // options never appear.
    pointer-events: none;
  }

  @include react-md-select-fields-drop-transition;

  @if $include-media {
    @include react-md-select-fields-media;
  }
}

/// Creates the styles for select fields on a mobile device. This should
/// _normally_ be used within a media query.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-mobile-media} {
///     @include react-md-select-fields-mobile;
///   }
///
/// @group select-fields, media-queries
@mixin react-md-select-fields-mobile {
  .md-select-field--btn {
    height: $md-text-field-mobile-height;
  }

  .md-select-field--text-field {
    height: 18px;
  }
}

/// Creates the styles for select fields on a desktop screen. This should
/// _normally_ be used within a media query.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-desktop-media} {
///     @include react-md-select-fields-desktop;
///   }
///
/// @group select-fields, media-queries
@mixin react-md-select-fields-desktop {
  .md-select-field--btn {
    height: $md-text-field-desktop-height;
  }

  .md-select-field--text-field {
    height: 15px;
  }
}

/// Creates the media queries and styles for select fields on mobile devices and
/// desktop screens.
///
/// @example scss - Example Usage SCSS
///   @include react-md-select-fields-media;
/// @group select-fields, media-queries
@mixin react-md-select-fields-media {
  @media #{$md-mobile-media} {
    @include react-md-select-fields-mobile;
  }

  @media #{$md-desktop-media} {
    @include react-md-select-fields-desktop;
  }
}

/// Creates the drop down transition for a new value appearing in the select field. This is included
/// in the `react-md-select-fields` mixin, so it _might_ not be used on its own.
@mixin react-md-select-fields-drop-transition {
  .md-drop-enter {
    transform: translate3d(0, -$md-select-field-drop-distance, 0);

    &.md-drop-enter-active {
      transform: translate3d(0, 0, 0);
      transition-duration: $md-select-field-drop-transition-time;
      transition-property: transform;
    }
  }
}
