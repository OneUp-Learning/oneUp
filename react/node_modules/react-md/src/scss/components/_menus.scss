////
/// @group menus
////

/// Boolean if the cascading menu styles should be included. This will update the
/// collapser icon to be rotated to the side.
///
/// @type Boolean
/// @see md-menu-include-cascading-styles
$md-menu-include-cascading: true !default;

/// Boolean if the additional styles for cascading menus should be included. I'm not
/// really sure why these styles are part of the spec.
///
/// @type Boolean
/// @see md-menu-cascading-font-size
/// @see md-menu-cascading-height
/// @see md-menu-cascading-padding
/// @see md-menu-cascading-list-padding
$md-menu-include-cascading-styles: true !default;

/// The z-index to use for menus. This is really only if the z-index for a layover
/// is not preferred.
/// @type Number
/// @see md-btn-fixed-z-index
/// @see md-dialog-full-page-z-index
/// @see md-dialog-overlay-z-index
/// @see md-drawer-z-index
/// @see md-overlay-z-index
/// @see md-picker-inline-z-index
/// @see md-snackbar-z-index
/// @see md-toolbar-z-index
/// @group menus, z-indexes
$md-menu-z-index: null !default;

/// The width for a menu's `unit`. I don't really get it myself. It is a part of the material design
/// specs though.
/// @type Number
$md-menu-units-width: 56px !default;

/// The transition time to use for menus
/// type Number
/// @deprecated
$md-menu-transition-time: null !default;

/// The min width to apply to menus. If this value is set, the mobile/desktop values will not be used.
///
/// @see md-menu-mobile-min-width
/// @see md-menu-desktop-min-width
/// @type Number
$md-menu-min-width: $md-menu-units-width * 2 !default;

/// The max width to apply to menus. If this value is set, the mobile/desktop values will not be used.
///
/// @see md-menu-mobile-max-width
/// @see md-menu-desktop-max-width
/// @type Number
$md-menu-max-width: null !default;

/// The max height to apply to menus. If this value is set, the mobile/desktop values will not be used.
///
/// @see md-menu-mobile-max-height
/// @see md-menu-desktop-max-height
/// @type Number
$md-menu-max-height: null !default;


/// An optional min width to apply to menus on tablet displays.
/// @see md-menu-min-width
/// @type Number
$md-menu-mobile-min-width: null !default;

/// An optional max width to apply to menus on mobile devices.
///
/// @see md-menu-max-width
/// @type Number
$md-menu-mobile-max-width: null !default;

/// The max height for menus on mobile devices.
/// @type Number
$md-menu-mobile-max-height: $md-height * 5 + $md-height / 3 + $md-list-mobile-padding * 2 !default;

/// An optional min width to apply to menus on desktop displays.
/// @see md-menu-min-width
/// @type Number
$md-menu-desktop-min-width: null !default;

/// An optional max width to apply to menus on desktop screens.
///
/// @see md-menu-max-width
/// @type Number
$md-menu-desktop-max-width: null !default;

/// The max height for menus on desktop screens.
/// @type Number
$md-menu-desktop-max-height: $md-height * 5 + $md-height / 3 + $md-list-desktop-padding * 2 !default;

/// The font size to use for cascading menus.
/// @type Number
$md-menu-cascading-font-size: 15px !default;

/// The padding to use for cascading menus.
/// @type Number
$md-menu-cascading-padding: 24px !default;

/// The Height to use for each list item in a cascading menu.
/// @type Number
$md-menu-cascading-height: 32px !default;

/// The amount of padding to add to the top and bottom of a list in
/// a cascading menu.
/// @type Number
$md-menu-cascading-list-padding: 16px !default;

/// Includes the styles for menus.
///
/// @example scss - Example Usage SCSS
///   @include react-md-menus;
///
/// @param {Boolean} include-media [$md-media-included] - Boolean if the media queries are included
///     for menus.
/// @param {Boolean} include-cascading [$md-menu-include-cascading] - Boolean if the desktop cascading
///     styles for menus should be included.
@mixin react-md-menus($include-media: $md-media-included, $include-cascading: $md-menu-include-cascading, $include-cascading-styles: $md-menu-include-cascading-styles) {
  .md-list--menu {
    max-width: $md-menu-max-width;
    min-width: $md-menu-min-width;
    z-index: $md-menu-z-index;

    &-restricted {
      @include md-ios-scroll-momentum;

      max-height: $md-menu-max-height;
      overflow-y: auto;
    }

    &-contained {
      width: 100%;
    }

    &-below {
      left: 0;
      top: 100%;
      transform-origin: 50% 0;
    }

    &-tr {
      right: 0;
      top: 0;
      transform-origin: 100% 0;
    }

    &-tl {
      top: 0;
      transform-origin: 0 0;
    }

    &-br {
      right: 0;
      transform-origin: 100% 100%;
    }

    &-bl {
      transform-origin: 0 100%;
    }
  }

  @if $include-cascading {
    @include react-md-menus-cascading($include-cascading-styles);
  }

  @if $include-media {
    @include react-md-menus-media;
  }
}

/// Creates the styles for cascading menus. This really just rotates the collapser icon to change
/// from vertical to horizontal.
///
/// @param {Boolean} include-cascading-styles [$md-menu-include-cascading-styles] - Boolean if the material design
///     spec styles should also be included. This changes font-size, padding, and height of the items in a cascading
///     menu.
@mixin react-md-menus-cascading($include-cascading-styles: $md-menu-include-cascading-styles) {
  @media #{$md-desktop-media} {
    .md-list--menu-cascading {
      @if $include-cascading-styles {
        padding-bottom: $md-menu-cascading-list-padding;
        padding-top: $md-menu-cascading-list-padding;

        .md-list-tile {
          padding-left: $md-menu-cascading-padding;
          padding-right: $md-menu-cascading-padding;

          &:not(.md-list-tile--two-lines):not(.md-list-tile--three-lines) {
            height: $md-menu-cascading-height;
          }
        }

        .md-tile-text--primary {
          font-size: $md-menu-cascading-font-size;
        }
      }

      .md-collapser {
        transform: rotate3d(0, 0, 1, -90deg);
      }

      .md-collapser--flipped {
        transform: rotate3d(0, 0, 1, 90deg);
      }
    }
  }
}

/// Creates the styles for menus on mobile devices. This should _normally_
/// be used a media query.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-mobile-media} {
///     @include react-md-menus-mobile;
///   }
/// @group menus, media-queries
@mixin react-md-menus-mobile {
  @if $md-menu-max-width == null or $md-menu-min-width == null {
    .md-list--menu {
      max-width: if($md-menu-max-width == null, $md-menu-mobile-max-width, null);
      min-width: if($md-menu-min-width == null, $md-menu-mobile-min-width, null);
    }
  }

  @if $md-menu-max-height == null {
    .md-list--menu-restricted {
      max-height: $md-menu-mobile-max-height;
    }
  }
}

/// Creates the styles for menus on desktop screens. This should _normally_
/// be used a media query.
///
/// @example scss - Example Usage SCSS
///   @media #{$md-desktop-media} {
///     @include react-md-menus-desktop;
///   }
/// @group menus, media-queries
@mixin react-md-menus-desktop {
  @if $md-menu-max-width == null or $md-menu-min-width == null {
    .md-list--menu {
      max-width: if($md-menu-max-width == null, $md-menu-desktop-max-width, null);
      min-width: if($md-menu-min-width == null, $md-menu-desktop-min-width, null);
    }
  }

  @if $md-menu-max-height == null {
    .md-list--menu-restricted {
      max-height: $md-menu-desktop-max-height;
    }
  }
}

/// Includes the media queries for menus on mobile devices and desktop screens.
///
/// @example scss - Example Usage SCSS
///   @include react-md-menus-media;
/// @group menus, media-queries
@mixin react-md-menus-media {
  @if $md-menu-max-height == null or $md-menu-max-width == null or $md-menu-min-width == null {
    @media #{$md-mobile-media} {
      @include react-md-menus-mobile;
    }

    @media #{$md-desktop-media} {
      @include react-md-menus-desktop;
    }
  }
}
