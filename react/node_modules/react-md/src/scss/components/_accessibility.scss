////
/// @group accessibility
////

/// The left position of the content jump link when it has gained keyboard focus. This is
/// for the link that appears in the navigation drawer that skips to the main content.
/// @type Number
$md-content-jump-left-active: 0 !default;

/// Boolean if iOS should allow scroll momentum in places where manual scrolling
/// is enabled.
/// @type Boolean
$md-enable-ios-scroll-momentum: true !default;

/// The left position of the content jump link when it does not have keyboard focus. This is
/// for the link that appears in the navigation drawer that skips to the main content.
/// @type Number
$md-content-jump-left-inactive: -1000px !default;

/// The top position of the content jump link when it has gained keyboard focus. This is
/// for the link that appears in the navigation drawer that skips to the main content.
/// @type Number
$md-content-jump-top-active: $md-content-jump-left-active !default;

/// The top position of the content jump link when it does not have keyboard focus. This is
/// for the link that appears in the navigation drawer that skips to the main content.
/// @type Number
$md-content-jump-top-inactive: $md-content-jump-left-inactive !default;

/// Creates the _accessible_ styles and class names.
///
/// This will create the following class names:
/// - `.md-fake-btn`
/// - `.md-no-scroll`
/// - `.md-pointer--hover`
/// - `.md-pointer--none`
/// - `.md-content-jump`
///
/// @example scss - Example Usage SCSS
///   @include react-md-accessibility;
@mixin react-md-accessibility {
  .md-fake-btn {
    background: transparent;
    position: relative;

    &--no-outline {
      outline-style: none;
    }
  }

  // Need to add one additional level of precedence for some dialogs,
  // but don't want to use !important
  .md-no-scroll.md-no-scroll {
    overflow: hidden;
    position: fixed;
  }

  .md-pointer--hover:hover {
    cursor: pointer;
  }

  .md-pointer--none {
    pointer-events: none;
  }

  .md-content-jump {
    left: $md-content-jump-left-inactive;
    position: absolute;
    top: $md-content-jump-top-inactive;

    &:active,
    &:focus {
      left: $md-content-jump-left-active;
      top: $md-content-jump-top-active;
    }
  }
}

/// A simple mixin that will add scroll momentum to a class ONLY if the momentum is
/// enabled via the mixin or the `$md-enable-ios-scroll-momentum` variable.
///
/// @param {Boolean} enable-momentum [$md-enable-ios-scroll-momentum] - Boolean if the momentum
///     should be added
@mixin md-ios-scroll-momentum($enable-momentum: $md-enable-ios-scroll-momentum) {
  @if $enable-momentum {
    -webkit-overflow-scrolling: touch;
  }
}
