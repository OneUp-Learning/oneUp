////
/// @group layovers
////


/// Boolean if the minimal styles for the simple layovers should be included.
/// These styles are required if the `simplified` prop is enabled on the `Layover`
/// @type Boolean
$md-layover-include-simplified: true !default;

/// The transition time for a layover's child to appear or disappear.
/// @type Number
$md-layover-transition-time: .2s !default;

/// The z-index for the layover's child.
/// @type Number
/// @group layovers, z-indexes
$md-layover-child-z-index: 100 !default;

/// A Map of the available child positions for a layover. It is a mapping of the suffix
/// to apply and a transform-origin to apply when animating.
/// @type Map
$md-layover-child-positions: (
  tl: '0 0',
  tr: '100% 0',
  bl: '0 100%',
  br: '100% 100%',
  below: '50% 0',
) !default;

/// Creates the styles for layovers
@mixin react-md-layovers($include-simplified: $md-layover-include-simplified) {
  .md-layover-enter {
    transform: scale(0);

    &.md-layover-enter-active {
      transform: scale(1);
      transition-duration: $md-layover-transition-time;
      transition-property: transform;
      transition-timing-function: $md-transition-deceleration;
    }
  }

  .md-layover-leave {
    opacity: 1;

    &.md-layover-leave-active {
      opacity: 0;
      transition-duration: $md-layover-transition-time;
      transition-property: opacity;
      transition-timing-function: $md-transition-acceleration;
    }
  }

  .md-layover-child {
    position: fixed;
    z-index: $md-layover-child-z-index;

    @each $position, $origin in $md-layover-child-positions {
      &--#{$position} {
        transform-origin: unquote($origin);

        @if $position == 'below' {
          &.md-layover-enter {
            transform: scaleY(0);

            // scss-lint:disable NestingDepth, SelectorDepth
            &.md-layover-enter-active {
              transform: scaleY(1);
            }
          }
        }
      }
    }
  }

  @if $include-simplified {
    .md-layover--simplified {
      position: relative;
    }

    .md-layover-child--simplified {
      position: absolute;
    }
  }
}
