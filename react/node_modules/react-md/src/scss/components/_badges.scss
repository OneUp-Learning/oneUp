////
/// @group badges
////

/// Boolean if the styles for a circular badge should be included.
/// @type Boolean
$md-badge-include-circular: true !default;

/// Boolean if the default badge styles should be included. This will be
/// just a background color change for the badge.
/// @type Boolean
$md-badge-include-default: true !default;

/// The top position for a badge within the container. You can set this value to
/// null if it should not be applied.
/// @type Number
$md-badge-top: -8px !default;

/// The right position for a badge within the container. You can set this value to
/// null if it should not be applied.
/// @type Number
$md-badge-right: -8px !default;

/// The bottom position for a badge within the container. You can set this value to
/// null if it should not be applied.
/// @type Number
$md-badge-bottom: null !default;

/// The left position for a badge within the container. You can set this value to
/// null if it should not be applied.
/// @type Number
$md-badge-left: null !default;

/// The border-radius to apply to the circular badge.
/// @type Number
$md-badge-circular-border-radius: 50% !default;

/// The font size to use within a circular badge.
/// type Number
$md-badge-circular-font-size: 10px !default;

/// The height to use for a circular badge.
/// @type Number
$md-badge-circular-height: 24px !default;

/// The width to use for a circular badge.
/// @type Number
$md-badge-circular-width: $md-badge-circular-height !default;

/// The background color to use for a _default_ badge in the light theme.
/// @type Color
$md-badge-light-theme-default-color: rgba(0, 0, 0, .2) !default;

/// The background color to use for a _default_ badge in the dark theme.
/// @type Color
$md-badge-dark-theme-default-color: get-color('background', false) !default;

/// Creates the styles for a badge.
///
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if the badge should be styled for
///   the light theme. This really only gets applied if `$md-badge-include-default` is `true`.
/// @param {Boolean} include-circular [$md-badge-include-circular] - Boolean if the styles for
///   a circular badge should be included.
/// @param {Boolean} include-default [$md-badge-include-default] - Boolean if _default_ styles
///   should be created for a badge. This will be the background color of the badge.
@mixin react-md-badges($light-theme: $md-light-theme, $include-circular: $md-badge-include-circular, $include-default: $md-badge-include-default) {
  .md-badge-container {
    position: relative;
  }

  .md-badge {
    bottom: $md-badge-bottom;
    left: $md-badge-left;
    position: absolute;
    right: $md-badge-right;
    top: $md-badge-top;

    @if $include-circular {
      &--circular {
        align-items: center;
        border-radius: $md-badge-circular-border-radius;
        display: flex;
        font-size: $md-badge-circular-font-size;
        height: $md-badge-circular-height;
        justify-content: center;
        width: $md-badge-circular-width;
      }
    }

    @if $include-default {
      &--default {
        background: if($light-theme, $md-badge-light-theme-default-color, $md-badge-dark-theme-default-color);
      }
    }
  }
}

/// Only updates the default styles for a badge if the `$light-theme` does not equal
/// `$md-light-theme` and the default badge styles should be included.
///
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.
/// @param {Boolean} include-default [$md-badge-include-default] - Boolean if the default
///   styles for a badge should be included.
@mixin react-md-theme-badges($light-theme: $md-light-theme, $include-default: $md-badge-include-default) {
  @if $light-theme != $md-light-theme and $include-default {
    .md-badge--default {
      background: if($light-theme, $md-badge-light-theme-default-color, $md-badge-dark-theme-default-color);
    }
  }
}
