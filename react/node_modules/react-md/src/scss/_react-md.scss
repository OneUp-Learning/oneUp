@import 'globals';
@import 'typography';
@import 'transitions';
@import 'helpers';
@import 'grids';


@import 'components/papers';

@import 'components/accessibility';
@import 'components/autocompletes';
@import 'components/avatars';
@import 'components/badges';
@import 'components/bottom-navigations';
@import 'components/buttons';
@import 'components/cards';
@import 'components/chips';
@import 'components/collapsers';
@import 'components/data-tables';
@import 'components/dialogs';
@import 'components/dividers';
@import 'components/drawers';
@import 'components/expansion-panels';
@import 'components/file-inputs';
@import 'components/icons';
@import 'components/inks';
@import 'components/layovers';
@import 'components/lists';
@import 'components/media';
@import 'components/menus';
@import 'components/navigation-drawers';
@import 'components/overlays';
@import 'components/pickers';
@import 'components/progress';
@import 'components/select-fields';
@import 'components/selection-controls';
@import 'components/sliders';
@import 'components/snackbars';
@import 'components/subheaders';
@import 'components/tabs';
@import 'components/text-fields';
@import 'components/toolbars';
@import 'components/tooltips';

/// Includes every component, transition, and typography including their
/// media queries if the `$md-media-included` variable is `true`. You can
/// modify any global variables before including this mixin to change the overall
/// theme.
///
/// @example scss - Example Usage SCSS
///   @import 'react-md';
///   @include react-md-everything;
///
/// @group base, themes
@mixin react-md-everything {
  @include react-md-typography;
  @include react-md-accessibility;
  @include react-md-grid;
  @include react-md-transitions;

  @include react-md-autocompletes;
  @include react-md-avatars;
  @include react-md-badges;
  @include react-md-bottom-navigations;
  @include react-md-buttons;
  @include react-md-cards;
  @include react-md-chips;
  @include react-md-collapsers;
  @include react-md-data-tables;
  @include react-md-dialogs;
  @include react-md-dividers;
  @include react-md-drawers;
  @include react-md-expansion-panels;
  @include react-md-file-inputs;
  @include react-md-inks;
  @include react-md-icons;
  @include react-md-layovers;
  @include react-md-lists;
  @include react-md-media;
  @include react-md-menus;
  @include react-md-navigation-drawers;
  @include react-md-overlays;
  @include react-md-papers;
  @include react-md-pickers;
  @include react-md-progress;
  @include react-md-select-fields;
  @include react-md-selection-controls;
  @include react-md-sliders;
  @include react-md-subheaders;
  @include react-md-snackbars;
  @include react-md-tabs;
  @include react-md-text-fields;
  @include react-md-toolbars;
  @include react-md-tooltips;

  @include react-md-helpers-everything;
  @include react-md-colors;
}

/// Updates the styles of every component with the new theme colors. If there
/// are components that do not change if the `$light-theme` variable is the same,
/// their updated styles will not be included. This is useful if you want to switch
/// between the light or dark theme, or even the entire theme colors while keeping
/// the base CSS the same between all themes.
///
/// In addition, if the theme colors do not switch, those styles will not be created.
/// So this allows the same colors between light and dark themes.
///
/// If you switch between the light and dark theme, you will need to give a `$html-class-name`
/// That will nest every component inside.
///
/// @example scss - Example Theme Change SCSS
///   @import 'react-md';
///   $md-primary-color: $md-deep-purple-500;
///   $md-secondary-color: $md-orange-a-400;
///
///   @include react-md-everything;
///
///   .blue-theme {
///     @include react-md-theme-everything(
///       $md-cyan-500,
///       $md-yellow-a-700,
///     );
///   }
///
/// @example scss - Example Dark Theme Change SCSS
///   @import 'react-md';
///   $md-primary-color: $md-deep-purple-500;
///   $md-secondary-color: $md-orange-a-400;
///
///   @include react-md-everything;
///
///   @include react-md-theme-everything(
///     $md-primary-color,
///     $md-secondary-color,
///     false,
///     dark-theme,
///     $md-error-color,
///     $md-linear-progress-swatch
///   );
///
/// @param {Color} primary-color - The primary color to use.
/// @param {Color} secondary-color - The secondary color to use.
/// @param {Boolean} light-theme [$md-light-theme] - Boolean if using the light theme.
/// @param {String} html-class-name [null] - The html className to nest every component
///     in. This should really be used if switching from the light or dark theme.
/// @param {Color} error-color [$md-error-color] - The error color to use.
/// @param {Number} progress-swatch [$md-linear-progress-swatch] - The color for the linear progress
///     swatch color.
/// @param {Number} primary-opacity [$md-primary-hover-opacity] - The opacity to apply to the primary color.
/// @param {Color} primary-background-text-color [$md-primary-background-text-color] - The text color for any text
///     that appears inside the `md-background--primary` class name.
/// @param {Number} secondary-opacity [$md-secondary-hover-opacity] - The opacity to apply to the secondary color.
/// @param {Color} secondary-background-text-color [$md-secondary-background-text-color] - The text color for any text
///     that appears inside the `md-background--secondary` class name.
/// @param {Color} data-table-contextual-fallback-color [$md-data-table-contextual-fallback-color] - An optional fallback
///     color for the data table's contextual header when the `$primary-color` is not material design color.
/// @param {Color} linear-progress-fallback-color [$md-linear-progress-fallback-color] - An optional fallback color for
///     the linear progress when the `$secondary-color` is not a material design color.
/// @param {Color} switch-ball-fallback-color [$md-switch-ball-fallback-color] - An optional color to use for the switch's ball thumb
///     when the `$secondary-color` is not a material design color.
/// @group base, themes
@mixin react-md-theme-everything(
  $primary-color,
  $secondary-color,
  $light-theme: $md-light-theme,
  $html-class-name: null,
  $error-color: $md-error-color,
  $progress-swatch: $md-linear-progress-swatch,
  $primary-opacity: $md-primary-hover-opacity,
  $primary-background-text-color: $md-primary-background-text-color,
  $secondary-opacity: $md-secondary-hover-opacity,
  $secondary-background-text-color: $md-secondary-background-text-color,
  $data-table-contextual-fallback-color: $md-data-table-contextual-fallback-color,
  $linear-progress-fallback-color: $md-linear-progress-fallback-color,
  $switch-ball-fallback-color: $md-switch-ball-fallback-color
) {
  @if $html-class-name != null {
    @include react-md-theme-typography($html-class-name, $light-theme);

    .#{$html-class-name} {
      @include react-md-theme-avatars($light-theme);
      @include react-md-theme-badges($light-theme);
      @include react-md-theme-buttons($primary-color, $secondary-color, $light-theme);
      @include react-md-theme-chips($light-theme);
      @include react-md-theme-data-tables($secondary-color, $light-theme, $md-data-table-include-table-card-headers, $data-table-contextual-fallback-color);
      @include react-md-theme-dividers($light-theme);
      @include react-md-theme-expansion-panels($light-theme);
      @include react-md-theme-icons($light-theme);
      @include react-md-theme-inks($light-theme);
      @include react-md-theme-lists($light-theme);
      @include react-md-theme-pickers($primary-color, $light-theme);
      @include react-md-theme-progress($secondary-color, $progress-swatch, $md-progress-include-linear, $linear-progress-fallback-color);
      @include react-md-theme-selection-controls($secondary-color, $light-theme, $switch-ball-fallback-color);
      @include react-md-theme-sliders($primary-color, $light-theme);
      @include react-md-theme-tabs($secondary-color);
      @include react-md-theme-text-fields($primary-color, $light-theme, $error-color);
      @include react-md-theme-toolbars($light-theme);

      @include react-md-theme-colors($primary-color, $secondary-color, $light-theme);
    }
  } @else {
    @include react-md-theme-avatars($light-theme);
    @include react-md-theme-badges($light-theme);
    @include react-md-theme-buttons($primary-color, $secondary-color, $light-theme);
    @include react-md-theme-chips($light-theme);
    @include react-md-theme-data-tables($secondary-color, $light-theme, $md-data-table-include-table-card-headers, $data-table-contextual-fallback-color);
    @include react-md-theme-dividers($light-theme);
    @include react-md-theme-expansion-panels($light-theme);
    @include react-md-theme-icons($light-theme);
    @include react-md-theme-inks($light-theme);
    @include react-md-theme-lists($light-theme);
    @include react-md-theme-pickers($primary-color, $light-theme);
    @include react-md-theme-progress($secondary-color, $progress-swatch, $md-progress-include-linear, $linear-progress-fallback-color);
    @include react-md-theme-selection-controls($secondary-color, $light-theme, $switch-ball-fallback-color);
    @include react-md-theme-sliders($primary-color, $light-theme);
    @include react-md-theme-tabs($secondary-color);
    @include react-md-theme-text-fields($primary-color, $light-theme, $error-color);
    @include react-md-theme-toolbars($light-theme);

    @include react-md-theme-colors($primary-color, $secondary-color, $light-theme, $md-media-included, $primary-opacity, $primary-background-text-color, $secondary-opacity, $secondary-background-text-color);
  }

}
