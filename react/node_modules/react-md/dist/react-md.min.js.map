{"version":3,"file":"react-md.min.js","sources":["../node_modules/fbjs/lib/emptyFunction.js","../node_modules/object-assign/index.js","../node_modules/react-transition-group/node_modules/fbjs/lib/emptyFunction.js","../src/js/utils/getField.js","../src/js/utils/omit.js","../src/js/utils/Positioning/getTextWidth.js","../src/js/utils/themeColors.js","../src/js/utils/getCollapserStyles.js","../src/js/utils/closest.js","../src/js/utils/isFormPartRole.js","../src/js/utils/EventUtils/handleKeyboardAccessibility.js","../src/js/utils/StringUtils/getDisplayName.js","../src/js/utils/Positioning/getPagePosition.js","../src/js/utils/Positioning/calcPageOffset.js","../src/js/utils/EventUtils/isValidClick.js","../src/js/utils/EventUtils/touches.js","../src/js/utils/EventUtils/captureNextEvent.js","../src/js/utils/NumberUtils/calculateHypotenuse.js","../node_modules/react-motion/node_modules/fbjs/lib/emptyFunction.js","../src/js/FontIcons/getDeprecatedIcon.js","../src/js/utils/EventUtils/handleWindowClickListeners.js","../src/js/utils/getSelectedText.js","../src/js/utils/Positioning/getSelectedTextPosition.js","../src/js/utils/Positioning/getScroll.js","../src/js/utils/Positioning/getScreenSize.js","../src/js/utils/Positioning/viewport.js","../src/js/utils/Positioning/isOutOfBounds.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../src/js/utils/isValued.js","../src/js/utils/StringUtils/addSuffix.js","../src/js/utils/NumberUtils/isBetween.js","../src/js/Buttons/getBtnStyles.js","../src/js/utils/StringUtils/capitalizeFirst.js","../src/js/DataTables/findTable.js","../src/js/utils/EventUtils/isValidFocusKeypress.js","../src/js/DataTables/findFixedTo.js","../src/js/DataTables/withTableFixes.js","../src/js/utils/mapToListParts.js","../src/js/utils/toggleScroll.js","../src/js/Drawers/isType.js","../src/js/utils/bem.js","../src/js/NavigationDrawers/NavigationDrawer.js","../src/js/utils/dates/isValidDate.js","../src/js/utils/dates/addDay.js","../src/js/utils/dates/getLastDay.js","../src/js/utils/dates/getDaysInMonth.js","../src/js/utils/dates/addMonth.js","../src/js/utils/dates/addYear.js","../src/js/utils/dates/addDate.js","../src/js/utils/dates/isSameYear.js","../src/js/utils/dates/isSameMonth.js","../src/js/utils/dates/isSameDay.js","../src/js/utils/chunk.js","../src/js/utils/dates/stripTime.js","../src/js/utils/dates/toDayOfWeek.js","../src/js/utils/dates/isMonthBefore.js","../src/js/utils/DateUtils/formatTime.js","../src/js/utils/DateUtils/extractTimeParts.js","../src/js/utils/NumberUtils/calcTimeFromPoint.js","../src/js/utils/DateUtils/addHours.js","../src/js/utils/NumberUtils/minMaxLoop.js","../src/js/utils/NumberUtils/calculateValueDistance.js","../src/js/utils/NumberUtils/updateUnit.js","../src/js/Snackbars/isInvalidAnimate.js","../node_modules/react-swipeable-views/node_modules/fbjs/lib/emptyFunction.js","../src/js/Tooltips/Tooltipped.js","../node_modules/fbjs/lib/invariant.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/react-transition-group/node_modules/fbjs/lib/invariant.js","../node_modules/react-transition-group/node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-transition-group/node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/react-transition-group/node_modules/prop-types/index.js","../node_modules/chain-function/index.js","../node_modules/warning/browser.js","../node_modules/react-transition-group/utils/ChildMapping.js","../node_modules/react-transition-group/TransitionGroup.js","../node_modules/dom-helpers/class/hasClass.js","../node_modules/dom-helpers/class/addClass.js","../node_modules/dom-helpers/class/removeClass.js","../node_modules/dom-helpers/util/inDOM.js","../node_modules/dom-helpers/util/requestAnimationFrame.js","../node_modules/dom-helpers/transition/properties.js","../node_modules/react-transition-group/utils/PropTypes.js","../node_modules/react-transition-group/CSSTransitionGroupChild.js","../node_modules/react-transition-group/CSSTransitionGroup.js","../node_modules/classnames/index.js","../src/js/constants/keyCodes.js","../src/js/Helpers/HorizontalAnchors.js","../src/js/Helpers/VerticalAnchors.js","../src/js/Helpers/anchorShape.js","../src/js/Helpers/fixedToShape.js","../src/js/Helpers/Positions.js","../src/js/Helpers/positionShape.js","../node_modules/react-prop-types/lib/deprecated.js","../src/js/Helpers/AccessibleFakeButton.js","../src/js/constants/CSSTransitionGroupTick.js","../src/js/Inks/Ink.js","../src/js/Inks/InkContainer.js","../src/js/Inks/inkContextTypes.js","../src/js/Inks/injectInk.js","../src/js/Helpers/AccessibleFakeInkedButton.js","../node_modules/react-motion/lib/mapToZero.js","../node_modules/react-motion/lib/stripStyle.js","../node_modules/react-motion/lib/stepper.js","../node_modules/raf/index.js","../node_modules/performance-now/lib/performance-now.js","../node_modules/react-motion/lib/shouldStopAnimation.js","../node_modules/react-motion/node_modules/fbjs/lib/invariant.js","../node_modules/react-motion/node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-motion/node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/react-motion/node_modules/prop-types/index.js","../node_modules/react-motion/lib/Motion.js","../node_modules/react-motion/lib/StaggeredMotion.js","../node_modules/react-motion/lib/mergeDiff.js","../node_modules/react-motion/lib/TransitionMotion.js","../node_modules/react-motion/lib/presets.js","../node_modules/react-motion/lib/spring.js","../node_modules/react-motion/lib/reorderKeys.js","../node_modules/react-motion/lib/react-motion.js","../src/js/Helpers/Collapse.js","../src/js/Dividers/Divider.js","../src/js/FontIcons/FontIcon.js","../src/js/Lists/TileAddon.js","../src/js/Lists/ListItemText.js","../src/js/Subheaders/Subheader.js","../src/js/Lists/List.js","../node_modules/react-prop-types/lib/isRequiredForA11y.js","../src/js/Helpers/ResizeObserver.js","../src/js/Helpers/Layover.js","../src/js/Menus/Menu.js","../src/js/Lists/ListItem.js","../src/js/TextFields/FloatingLabel.js","../src/js/TextFields/Message.js","../src/js/TextFields/TextFieldMessage.js","../src/js/TextFields/PasswordButton.js","../src/js/TextFields/TextArea.js","../src/js/TextFields/InputField.js","../src/js/TextFields/TextFieldDivider.js","../src/js/TextFields/TextField.js","../src/js/Autocompletes/Autocomplete.js","../src/js/utils/fuzzyFilter.js","../src/js/utils/caseInsensitiveFilter.js","../src/js/utils/findIgnoreCase.js","../src/js/Avatars/Avatar.js","../src/js/Badges/Badge.js","../src/js/Helpers/Portal.js","../src/js/Papers/Paper.js","../src/js/BottomNavigations/BottomNav.js","../src/js/BottomNavigations/BottomNavigation.js","../src/js/Helpers/IconSeparator.js","../src/js/Tooltips/Tooltip.js","../src/js/Tooltips/TooltipContainer.js","../src/js/Tooltips/injectTooltip.js","../src/js/Buttons/Button.js","../src/js/Cards/contextTypes.js","../src/js/Cards/Card.js","../src/js/Cards/CardExpander.js","../src/js/Cards/CardActions.js","../src/js/Cards/CardTitleBlock.js","../src/js/Cards/CardTitle.js","../src/js/Cards/CardText.js","../src/js/Chips/Chip.js","../src/js/DataTables/contextTypes.js","../src/js/DataTables/DataTable.js","../src/js/DataTables/headerContextTypes.js","../src/js/DataTables/TableHeader.js","../src/js/DataTables/TableBody.js","../src/js/DataTables/rowContextTypes.js","../src/js/SelectionControls/SwitchThumb.js","../src/js/SelectionControls/SwitchTrack.js","../src/js/SelectionControls/SelectionControl.js","../src/js/DataTables/TableCheckbox.js","../src/js/DataTables/TableRow.js","../src/js/DataTables/TableColumn.js","../src/js/SelectFields/SelectFieldInput.js","../src/js/SelectFields/SelectFieldToggle.js","../src/js/SelectFields/SelectField.js","../src/js/DataTables/TableFooter.js","../src/js/DataTables/TablePagination.js","../src/js/Helpers/FocusContainer.js","../src/js/Dialogs/DialogTitle.js","../src/js/Dialogs/DialogFooter.js","../src/js/Dialogs/Dialog.js","../src/js/DataTables/EditDialog.js","../src/js/DataTables/EditDialogColumn.js","../src/js/DataTables/SelectFieldColumn.js","../src/js/Menus/DropdownMenu.js","../src/js/Menus/MenuButton.js","../src/js/DataTables/MenuButtonColumn.js","../src/js/DataTables/DropdownMenuColumn.js","../src/js/DataTables/TableCardHeader.js","../src/js/Dialogs/DialogContainer.js","../src/js/Drawers/Overlay.js","../src/js/Drawers/DrawerTypes.js","../src/js/Drawers/Drawer.js","../src/js/constants/media.js","../src/js/ExpansionPanels/PanelContent.js","../src/js/ExpansionPanels/ExpansionPanel.js","../src/js/ExpansionPanels/ExpansionList.js","../src/js/FileInputs/FileInput.js","../src/js/FileInputs/FileUpload.js","../src/js/Grids/Grid.js","../src/js/Grids/Cell.js","../src/js/Grids/GridList.js","../src/js/Lists/ListItemControl.js","../src/js/Media/Media.js","../src/js/Media/MediaOverlay.js","../src/js/Toolbars/ToolbarTitle.js","../src/js/Toolbars/Toolbar.js","../src/js/NavigationDrawers/JumpToContentLink.js","../src/js/NavigationDrawers/CloseButton.js","../src/js/NavigationDrawers/MiniListItem.js","../src/js/utils/DateUtils/DateTimeFormat.js","../src/js/Pickers/PickerControl.js","../src/js/Pickers/DatePickerHeader.js","../src/js/Pickers/CalendarDate.js","../src/js/Pickers/CalendarMonth.js","../src/js/Pickers/CalendarHeader.js","../src/js/Pickers/DatePickerCalendar.js","../src/js/Pickers/Year.js","../src/js/Pickers/YearPicker.js","../src/js/Pickers/DatePicker.js","../src/js/Pickers/DatePickerContainer.js","../src/js/Pickers/ClockTime.js","../src/js/Pickers/ClockHand.js","../src/js/Pickers/ClockFace.js","../src/js/Pickers/TimePeriods.js","../src/js/Pickers/TimePickerHeader.js","../src/js/Pickers/TimePicker.js","../src/js/Pickers/TimePickerContainer.js","../src/js/Progress/CircularProgress.js","../src/js/Progress/LinearProgress.js","../src/js/SelectionControls/SelectionControlGroup.js","../src/js/SelectionControls/Checkbox.js","../src/js/SelectionControls/Radio.js","../src/js/SelectionControls/Switch.js","../src/js/Sliders/SliderLabel.js","../src/js/Sliders/TrackFill.js","../src/js/Sliders/Thumb.js","../src/js/Sliders/ThumbMask.js","../src/js/Sliders/DiscreteValue.js","../src/js/Sliders/Track.js","../src/js/Sliders/Slider.js","../src/js/Snackbars/Snackbar.js","../src/js/Snackbars/SnackbarContainer.js","../src/js/SVGIcons/SVGIcon.js","../node_modules/core-js/library/modules/_global.js","../node_modules/core-js/library/modules/_core.js","../node_modules/core-js/library/modules/_a-function.js","../node_modules/core-js/library/modules/_ctx.js","../node_modules/core-js/library/modules/_is-object.js","../node_modules/core-js/library/modules/_an-object.js","../node_modules/core-js/library/modules/_fails.js","../node_modules/core-js/library/modules/_descriptors.js","../node_modules/core-js/library/modules/_dom-create.js","../node_modules/core-js/library/modules/_ie8-dom-define.js","../node_modules/core-js/library/modules/_to-primitive.js","../node_modules/core-js/library/modules/_object-dp.js","../node_modules/core-js/library/modules/_property-desc.js","../node_modules/core-js/library/modules/_hide.js","../node_modules/core-js/library/modules/_export.js","../node_modules/core-js/library/modules/_has.js","../node_modules/core-js/library/modules/_cof.js","../node_modules/core-js/library/modules/_iobject.js","../node_modules/core-js/library/modules/_defined.js","../node_modules/core-js/library/modules/_to-iobject.js","../node_modules/core-js/library/modules/_to-integer.js","../node_modules/core-js/library/modules/_to-length.js","../node_modules/core-js/library/modules/_to-index.js","../node_modules/core-js/library/modules/_shared.js","../node_modules/core-js/library/modules/_uid.js","../node_modules/core-js/library/modules/_shared-key.js","../node_modules/core-js/library/modules/_object-keys-internal.js","../node_modules/core-js/library/modules/_array-includes.js","../node_modules/core-js/library/modules/_enum-bug-keys.js","../node_modules/core-js/library/modules/_object-keys.js","../node_modules/core-js/library/modules/_object-gops.js","../node_modules/core-js/library/modules/_object-pie.js","../node_modules/core-js/library/modules/_to-object.js","../node_modules/core-js/library/modules/_object-assign.js","../node_modules/core-js/library/modules/es6.object.assign.js","../node_modules/core-js/library/fn/object/assign.js","../node_modules/babel-runtime/core-js/object/assign.js","../node_modules/babel-runtime/helpers/extends.js","../node_modules/babel-runtime/helpers/objectWithoutProperties.js","../node_modules/core-js/library/modules/_object-gpo.js","../node_modules/core-js/library/modules/_object-sap.js","../node_modules/core-js/library/modules/es6.object.get-prototype-of.js","../node_modules/core-js/library/fn/object/get-prototype-of.js","../node_modules/babel-runtime/core-js/object/get-prototype-of.js","../node_modules/babel-runtime/helpers/classCallCheck.js","../node_modules/core-js/library/modules/es6.object.define-property.js","../node_modules/core-js/library/fn/object/define-property.js","../node_modules/babel-runtime/core-js/object/define-property.js","../node_modules/babel-runtime/helpers/createClass.js","../node_modules/core-js/library/modules/_string-at.js","../node_modules/core-js/library/modules/_redefine.js","../node_modules/core-js/library/modules/_object-dps.js","../node_modules/core-js/library/modules/_html.js","../node_modules/core-js/library/modules/_object-create.js","../node_modules/core-js/library/modules/_wks.js","../node_modules/core-js/library/modules/_set-to-string-tag.js","../node_modules/core-js/library/modules/_iter-create.js","../node_modules/core-js/library/modules/_iter-define.js","../node_modules/core-js/library/modules/es6.string.iterator.js","../node_modules/core-js/library/modules/_iter-step.js","../node_modules/core-js/library/modules/es6.array.iterator.js","../node_modules/core-js/library/modules/web.dom.iterable.js","../node_modules/core-js/library/modules/_wks-ext.js","../node_modules/core-js/library/fn/symbol/iterator.js","../node_modules/babel-runtime/core-js/symbol/iterator.js","../node_modules/core-js/library/modules/_meta.js","../node_modules/core-js/library/modules/_wks-define.js","../node_modules/core-js/library/modules/_keyof.js","../node_modules/core-js/library/modules/_enum-keys.js","../node_modules/core-js/library/modules/_is-array.js","../node_modules/core-js/library/modules/_object-gopn.js","../node_modules/core-js/library/modules/_object-gopn-ext.js","../node_modules/core-js/library/modules/_object-gopd.js","../node_modules/core-js/library/modules/es6.symbol.js","../node_modules/core-js/library/modules/es7.symbol.async-iterator.js","../node_modules/core-js/library/modules/es7.symbol.observable.js","../node_modules/core-js/library/fn/symbol/index.js","../node_modules/babel-runtime/core-js/symbol.js","../node_modules/babel-runtime/helpers/typeof.js","../node_modules/babel-runtime/helpers/possibleConstructorReturn.js","../node_modules/core-js/library/modules/_set-proto.js","../node_modules/core-js/library/modules/es6.object.set-prototype-of.js","../node_modules/core-js/library/fn/object/set-prototype-of.js","../node_modules/babel-runtime/core-js/object/set-prototype-of.js","../node_modules/core-js/library/modules/es6.object.create.js","../node_modules/core-js/library/fn/object/create.js","../node_modules/babel-runtime/core-js/object/create.js","../node_modules/babel-runtime/helpers/inherits.js","../node_modules/react-swipeable-views/node_modules/fbjs/lib/invariant.js","../node_modules/react-swipeable-views/node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-swipeable-views/node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/react-swipeable-views/node_modules/prop-types/index.js","../node_modules/dom-helpers/events/on.js","../node_modules/dom-helpers/events/off.js","../node_modules/react-swipeable-views-core/lib/checkIndexBounds.js","../node_modules/react-swipeable-views-core/lib/constant.js","../node_modules/react-swipeable-views-core/lib/computeIndex.js","../node_modules/react-swipeable-views-core/lib/getDisplaySameSlide.js","../node_modules/react-swipeable-views-core/lib/mod.js","../node_modules/react-swipeable-views-core/lib/index.js","../node_modules/react-swipeable-views/lib/SwipeableViews.js","../node_modules/react-swipeable-views/lib/index.js","../src/js/Tabs/TabPanel.js","../src/js/Tabs/TabsContainer.js","../src/js/Tabs/TabIndicator.js","../src/js/Tabs/MenuTab.js","../src/js/Tabs/TabOverflowButton.js","../src/js/Tabs/Tabs.js","../src/js/Tabs/Tab.js","../src/js/Version.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/** @module utils/getField */\n\n/**\n * Gets the current field for a component that can the field\n * as either uncontrolled or controlled.\n *\n * @param {Object} props - the props object.\n * @param {Object} state = the state object.\n * @param {string=} field - the field to extract a value from. Defaults to 'value'.\n *\n * @return the field's value.\n */\nexport default function getField(props, state, field = 'value') {\n  return typeof props[field] !== 'undefined' ? props[field] : state[field];\n}\n","/** @module utils/omit */\n\n/**\n * This should hopefully be very similar to lodash's omit function. It will\n * take an object and return a new object without any of the given keys.\n *\n * @param {Object} obj - The object to omit keys from.\n * @param {Array.<String>} keys - a list of keys to remove.\n */\nexport default function omit(obj, keys) {\n  if (!obj) {\n    return {};\n  } else if (!keys || !keys.length) {\n    return obj;\n  }\n\n  return Object.keys(obj).filter(key => keys.indexOf(key) === -1).reduce((newProps, key) => {\n    newProps[key] = obj[key];\n\n    return newProps;\n  }, {});\n}\n","/** @module utils/Positioning/getTextWidth */\n\nlet cachedCanvas;\n\n/**\n * A utility function to measure the width (in px) of any text. It will require a canvas\n * and an element to use to determine the current fonts to apply since different fonts will\n * have different widths.\n *\n * This isn't fully accurate since some browsers handle the calculations a bit differently so\n * they are off by a 0-3px\n *\n * @param {String} text - The text to measure the width\n * @param {HTMLElement} el - The element to use to determine the current font for the text.\n * @param {HTMLElement=} canvas - An optional canvas to use for doing the calculations. If this\n *    is omitted, it will just use the locally created canvas to do the calculations.\n * @return {number} this will either return null if there is a problem calculating the width or\n *    the length (in px) of the text.\n */\nexport default function getTextWidth(text, el, canvas) {\n  if (!el) {\n    return null;\n  }\n\n  if (!canvas) {\n    if (!cachedCanvas) {\n      cachedCanvas = document.createElement('canvas');\n    }\n\n    canvas = cachedCanvas;\n  }\n\n  const context = canvas.getContext('2d');\n  if (!context) { // context doesn't exist in testing without complicated mocks\n    return null;\n  }\n\n  const styles = window.getComputedStyle(el);\n  let font = styles.font;\n  // Some browsers do not actually supply the font style since they are on an older version of CSSProperties,\n  // so the font string needs to be made manually.\n  if (!font) {\n    // font-style font-variant font-weight font-size/line-height font-family\n    const sizing = `${styles.fontSize} / ${styles.lineHeight} ${styles.fontFamily}`;\n    font = `${styles.fontStyle} ${styles.fontVariant} ${styles.fontWeight} ${sizing}`;\n  }\n\n  context.font = font;\n  return context.measureText(text).width;\n}\n","/** @module utils/themeColors */\nimport cn from 'classnames';\n\n/**\n * This is a utility function to apply the different text colors as a class name.\n *\n * @param {Object} options - The options to use to figure out which styles to apply.\n * @param {boolean?} options.text - Boolean if the base text color should attempt to be\n *    applied. This will only be applied if all the other states are not true.\n * @param {boolean?} options.disabled - Boolean if the text should be disabled.\n * @param {boolean?} options.error - Boolean if the error color should attempt to be applied.\n *    This will only be applied if the disabled state is false.\n * @param {boolean?} options.primary - Boolean if the primary color should be applied. This\n *    will only be applied if all the other states are false.\n * @param {boolean?} options.secondary - Boolean if the secondary color should be applied.\n *    This will only be applied if all the other states are false.\n * @param {boolean?} options.inherit - Boolean if the color should be inherited by a parent.\n *    This will only be applied if the error and disabled states are false.\n * @return {String} the class name\n */\nexport default function themeColors({\n  themeText = true,\n  text = false,\n  background = false,\n  disabled = false,\n  error = false,\n  hint = false,\n  primary = false,\n  secondary = false,\n  inherit = false,\n  ink = false,\n  card = false,\n  hover = false,\n} = {}, className) {\n  let colors = '';\n  if (themeText) {\n    if (disabled) {\n      colors = 'md-text--disabled';\n    } else if (error) {\n      colors = 'md-text--error';\n    } else if (inherit) {\n      colors = 'md-text--inherit';\n    } else {\n      colors = cn({\n        'md-text': text && !primary && !secondary && !hint,\n        'md-text--secondary': hint,\n        'md-text--theme-primary': !hint && primary,\n        'md-text--theme-secondary': !hint && secondary,\n        'md-ink--primary': ink && primary,\n        'md-ink--secondary': ink && secondary,\n      });\n    }\n  } else {\n    colors = cn({\n      'md-background': background && !primary && !secondary && !card,\n      'md-background--card': card,\n      'md-background--primary': primary,\n      'md-background--primary-hover': primary && hover,\n      'md-background--secondary': secondary,\n      'md-background--secondary-hover': secondary && hover,\n    });\n  }\n\n  return cn(colors, className);\n}\n","import cn from 'classnames';\n\n/**\n * A simple utility function to get the dynamic collapser styles.\n */\nexport default function getCollapserStyles({ flipped, suffix, suffixFlipped }, ...classNames) {\n  return cn('md-collapser', {\n    'md-collapser--flipped': flipped && (!suffixFlipped || !suffix),\n    [`md-collapser--${suffix}`]: suffix,\n    [`md-collapser--${suffix}-flipped`]: suffix && flipped && suffixFlipped,\n  }, ...classNames);\n}\n","/** @module utils/closest */\n\n/**\n * A _very_ primitive polyfill for the Element.closest function. If this is a browser that doesn't\n * support it (IE, Edge, etc), it will just keep searching the parent elements until the nodeName\n * matches the provided type.\n *\n * @param {Element} el - the html element to find a closest node type for\n * @param {String} type - the html element type to find.\n * @return {Element} the found element or null.\n */\nexport default function closest(el, type) {\n  if (typeof el.closest === 'function') {\n    return el.closest(type);\n  }\n\n  const nodeType = type.toUpperCase();\n  let node = el.parentElement;\n  while (node && node.parentElement) {\n    if (node.nodeName === nodeType) {\n      return node;\n    }\n\n    node = node.parentElement;\n  }\n\n  return null;\n}\n","/** @module utils/isFormPartRole */\n\n/**\n * A simple utility function to determine if an element has a role that should\n * be used as a form part. This is mostly used for changing the behavior of keyboard\n * events.\n *\n * A form part role is one of the following:\n * - checkbox\n * - radio\n * - listbox\n * - input\n *\n * @param {HTMLElement} el - the element to check.\n * @return {boolean} true if the element is considered an element part of a form.\n */\nexport default function isFormPartRole(el) {\n  if (!el) {\n    return false;\n  } else if (el.nodeName === 'INPUT') {\n    return true;\n  }\n\n  const role = el.getAttribute('role');\n  return role === 'checkbox' || role === 'radio' || role === 'listbox';\n}\n","/** @module utils/EventUtils/handleKeyboardAccessibility */\n\nimport { SPACE, ENTER } from '../../constants/keyCodes';\nimport closest from '../closest';\nimport isFormPartRole from '../isFormPartRole';\n\n/**\n * A utility function for adding keyboard accessibility to elements that are not a natively\n * clickable (div, span, etc). When the space or enter key is pressed while focusing the\n * element, different flows will happen.\n *\n * - space - The click event will be triggered and the default page scrolling behavior of the\n *      spacebar will be prevented\n * - enter - If the element has a form role ('checkbox' or 'radio'), the click event will not\n *      be triggered. Instead, it will find out if the element is inside a form. If it is, it\n *      will emulate the default behavior of attempting to submit the form. If the element does\n *      not have a form role, the click event will be triggered.\n *\n * @param {Event} e - the keydown event\n * @param {function} onClick - the on click event to be triggered if space or enter was pressed\n * @param {boolean=true} listenToEnter - boolean if the enter key should be used to trigger the\n *      the click event. Even if this is true, the click event will not be triggered if the role\n *      is for a form role.\n * @param {boolean=true} listenToSpace - boolean if the space key should be used to trigger the\n *      click event.\n * @return {Boolean} true if the enter or space keys were pressed while their listener is also active.\n */\nexport default function handleKeyboardAccessibility(e, onClick, listenToEnter = true, listenToSpace = true) {\n  const key = e.which || e.keyCode;\n  const space = listenToSpace && key === SPACE;\n  const enter = key === ENTER;\n\n  const { tagName } = e.target;\n  // it is valid to press space in text fields, contenteditable, and buttons\n  if (space && !tagName.match(/input|textarea|button/i) && e.target.getAttribute('contenteditable') !== 'true') {\n    // Stop page scrolling\n    e.preventDefault();\n  }\n\n  if (enter && isFormPartRole(e.target)) {\n    const form = closest(e.target, 'form');\n    const submit = form ? form.querySelector('*[type=\"submit\"]') : null;\n    if (submit) {\n      submit.click();\n    }\n\n    return true;\n  }\n\n  if ((enter && listenToEnter) || space) {\n    onClick(e);\n\n    return true;\n  }\n\n  return false;\n}\n","/** @module utils/StringUtils/getDisplayName */\n\n/**\n * Gets the display name for a composed component.\n *\n * @param {function|Object} ComposedComponent - The composed component to use\n * @param {String} hoc - The higher order component's name to use.\n * @return {String} the new name of the component.\n */\nexport default function getDisplayName(ComposedComponent, hoc) {\n  const name = `${ComposedComponent.displayName || ComposedComponent.name || 'Component'}`;\n\n  return `with${hoc}(${name})`;\n}\n","/** @module utils/Positioning/getPagePosition */\n\n/**\n * Gets the current page position.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY\n * @param {String} direction - The direction that should be retrieved. This\n *    should be either 'x' or 'y'.\n * @return {number} the position of the direction on the page.\n */\nexport default function getPagePosition(direction) {\n  const scroll = `scroll${direction === 'x' ? 'Left' : 'Top'}`;\n  if (typeof window.pageXOffset !== 'undefined') {\n    return window[`page${direction.toUpperCase()}Offset`];\n  } else if ((document.compatMode || '') === 'CSS1Compat') {\n    return document.documentElement[scroll];\n  } else {\n    return document.body[scroll];\n  }\n}\n","/** @module utils/Positioning/calcPageOffset */\nimport getPagePosition from './getPagePosition';\n\n/**\n * Calculates the page offset of an element. If the element\n * is false-ish, an empty object will be returned.\n *\n * This is really only used for calculating an ink position.\n *\n * @param {Node} el - An html node to find a page offset for.\n * @return {Object} an object with a left and top attribute for the page\n *    offset.\n */\nexport default function calcPageOffset(el) {\n  if (!el) {\n    return { left: null, right: null };\n  }\n\n  const rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + getPagePosition('x'),\n    top: rect.top + getPagePosition('y'),\n  };\n}\n","/** @module utils/EventUtils/isValidClick */\nimport { LEFT_MOUSE } from '../../constants/keyCodes';\n\n/**\n * Checks if an event is a valid click event by ignoring\n * any clisk that are not the left mouse button and not\n * clicks that involve the shift key.\n *\n * @param {Object} e - the event to check\n * @return {Boolean} true if the event is valid.\n */\nexport default function isValidClick(e) {\n  return e.button === LEFT_MOUSE\n    && !e.shiftKey;\n}\n","// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\nlet supportsPassive;\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get() {\n      supportsPassive = true;\n    },\n  });\n  window.addEventListener('test', null, opts);\n} catch (e) {\n  supportsPassive = false;\n}\n\n/**\n * A helper function for manually setting touch events on elements with the passive\n * option (when it is supported).\n *\n * @param {boolean} add - Boolean if the event listener should be added or removed.\n * @param {HTMLElement} el - The element to add the listener to.\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\n * @param {function} callback - The event listener callback function.\n * @param {Object=} options - any additional options to apply.\n */\nexport function setTouchEvent(add, el, eventType, callback, options) {\n  return el[`${add ? 'add' : 'remove'}EventListener`](\n    `touch${eventType}`,\n    callback,\n    supportsPassive ? { passive: true, ...options } : false\n  );\n}\n\n/**\n * A helper function for manually adding touch events on elements with the passive\n * option (when it is supported).\n *\n * @param {HTMLElement} el - The element to add the listener to.\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\n * @param {function} callback - The event listener callback function.\n * @param {Object=} options - any additional options to apply.\n */\nexport function addTouchEvent(el, type, callback, options) {\n  return setTouchEvent(true, el, type, callback, options);\n}\n\n/**\n * A helper function for manually removing touch events on elements with the passive\n * option (when it is supported).\n *\n * @param {HTMLElement} el - The element to add the listener to.\n * @param {String} type - the event type to set. This should be 'start', 'move', or 'end'\n * @param {function} callback - The event listener callback function.\n * @param {Object=} options - any additional options to apply.\n */\nexport function removeTouchEvent(el, type, callback, options) {\n  return setTouchEvent(false, el, type, callback, options);\n}\n","/** @module utils/EventUtils/captureNextEvent */\n\n/**\n * This function will capture the next event and stop propagation during the\n * bubbling cycle of events. This is really only useful if you want to stop\n * the default behavior of chained events.\n *\n * @param {String} type - The event type to capture.\n * @param {Object|func=} target - Either the DOM node to target, a callback function\n *      to call once the event has been captured, or undefined. If this is undefined,\n *      the event will be captured on the window.\n * @param {func=} callback - An optional callback function to call once the event\n *      has been captured.\n */\nexport default function captureNextEvent(type, target, callback) {\n  const el = typeof target !== 'function' && target ? target : window;\n  const cb = typeof target === 'function' ? target : callback;\n\n  const capture = e => {\n    e.stopPropagation();\n    if (cb) {\n      cb(e);\n    }\n\n    el.removeEventListener(type, capture, true);\n  };\n\n  el.addEventListener(type, capture, true);\n}\n","/** @module utils/NumberUtils/calculateHypotenuse */\n\n/**\n * Calculates the hypotenuse using the x and y coordinates given.\n *\n * @param {number} a the x coordinate\n * @param {number} b the y coordinate\n * @return {number} the hypotenuse length for the given x and y coordinates.\n */\nexport default function calculateHypotenuse(a, b) {\n  return Math.sqrt((a * a) + (b * b));\n}\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","import React from 'react';\nimport FontIcon from '../FontIcons/FontIcon';\n\nexport default function getDeprecatedIcon(className, children, icon) {\n  if (className || children) {\n    return <FontIcon iconClassName={className}>{children}</FontIcon>;\n  }\n\n  return icon;\n}\n","/** @module utils/EventUtils/handleWindowClickListeners */\nlet mobileSafari;\n\n/**\n * Since mobile safari doesn't delegate click events to the window (it only does touch events),\n * this utility function will hack a fix to allow the delegation by updaging the body's cursor\n * to be a pointer.\n *\n * Hopefully this can be removed one day....\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile\n * @param {function} cb - the callback function to use for a window click event.\n * @param {boolean} enabled - boolean if the click event is enabled.\n */\nexport default function handleWindowClickListeners(cb, enabled = false) {\n  if (typeof mobileSafari === 'undefined' && typeof window !== 'undefined') {\n    const ua = window.navigator.userAgent;\n    const iOS = ua.match(/iP(ad|hone)/i);\n    const webkit = ua.match(/WebKit/i);\n    mobileSafari = iOS && webkit && !ua.match(/CriOS/i);\n\n    if (mobileSafari) {\n      document.body.style.cursor = 'pointer';\n    }\n  }\n\n  const listener = window[`${enabled ? 'add' : 'remove'}EventListener`];\n  listener('click', cb);\n}\n","/** @module utils/getSelectedText */\n\n/**\n * A utility function that gets the current selected text in the document. I think\n * that all the browsers I support have `window.getSelection`, but it falls back to\n * support others.\n *\n * @return {String} the current selection on the page\n */\nexport default function getSelectedText() {\n  if (typeof window.getSelection !== 'undefined') {\n    return window.getSelection().toString();\n  } else if (typeof document.selection !== 'undefined' && document.selection.type === 'Text') {\n    return document.selection.createRange().text;\n  }\n\n  return '';\n}\n","/** @module utils/Positoning/getSelectedTextPosition */\nimport getSelectedText from '../getSelectedText';\nimport getTextWidth from './getTextWidth';\n\nconst ZERO_WIDTH_CHARACTER = '\\u200b';\n\n/**\n * A utility function to attempt to get the current highlighted text position.\n *\n * When a context menu is opened, this function attempts to find the bounding client rect\n * for the highlighted text. However, if the text is in the text field, some weird stuff\n * happens and it is unable to get it correctly.\n */\nexport default function getSelectedTextPosition(e) {\n  let height;\n  const { target, clientX, clientY } = e;\n  const text = getSelectedText();\n  const width = Math.round(getTextWidth(text, target) || 0);\n  if (!text || target.classList.contains('md-text-field')) {\n    height = parseInt(window.getComputedStyle(target).fontSize, 10);\n    return {\n      width,\n      height,\n      left: clientX - width,\n      top: clientY,\n    };\n  }\n\n  // All browsers I am supporting have window.getSelection, but better safe than sorry\n  if (window.getSelection) {\n    const selection = window.getSelection();\n    if (selection.rangeCount) {\n      const range = selection.getRangeAt(0).cloneRange();\n      let rect = null;\n      if (range.getClientRects) {\n        const rects = range.getClientRects();\n        if (rects.length > 0) {\n          rect = rects[0];\n        }\n      }\n\n      if (!rect) {\n        const span = document.createElement('span');\n        span.appendChild(document.createTextNode(ZERO_WIDTH_CHARACTER));\n        range.insertNode(span);\n        rect = span.getBoundingClientRect();\n\n        const spanParent = span.parentNode;\n        spanParent.removeChild(span);\n        spanParent.normalize();\n      }\n\n      return rect;\n    }\n  }\n\n  return null;\n}\n","/** @module utils/Positioning/getScroll */\n\n/**\n * A utility function to just get an element's scroll x and y\n * values. This is really just needed because `window` uses\n * different attributes.\n *\n * @param {Object} el - The element to get a scroll value from.\n * @return {Object} an object containing the scrollX and scrollY of the element.\n */\nexport default function getScroll(el) {\n  if (typeof el.scrollX !== 'undefined' && typeof el.scrollY !== 'undefined') {\n    return { x: el.scrollX, y: el.scrollY };\n  } else if (typeof el.scrollLeft !== 'undefined' && typeof el.scrollTop !== 'undefined') {\n    return { x: el.scrollLeft, y: el.scrollTop };\n  }\n\n  return { x: 0, y: 0 };\n}\n","/** @module utils/Positioning/getScreenSize */\n\n/**\n * A utility function to get the height or width of the of the browser with\n * a fallback for older browsers.\n *\n * @param {String} position - the position to get the screen size for\n * @return {number} the screen size for the provided position.\n */\nexport default function getScreenSize(position) {\n  if (position !== 'Height' && position !== 'Width' && process.env.NODE_ENV !== 'production') {\n    throw new Error(\n      'The \\'getScreenSize\\' function requires either a position of \\'Height\\' or \\'Width\\' ' +\n      `but received \\`${position}\\``\n    );\n  }\n\n  return window[`inner${position}`] || document.documentElement[`client${position}`];\n}\n","/** @module utils/Positioning/viewport */\nimport getScreenSize from './getScreenSize';\n\n/**\n * Determines if an element is still in the viewport. If it is,\n * it will return a `true` boolean. If it is not, it will return\n * an object containing booleans for top, right, bottom, and left\n * where a `false` value will mean it is out of the viewport for that\n * position.\n *\n * @param {Object} el - The element to test.\n * @return {boolean|Object} the results.\n */\nexport default function viewport(el) {\n  if (!el) {\n    return {};\n  }\n\n  const rect = el.getBoundingClientRect();\n  const top = rect.top >= 0;\n  const right = rect.right <= getScreenSize('Width');\n  const bottom = rect.bottom <= getScreenSize('Height');\n  const left = rect.left >= 0;\n\n  return top && right && bottom && left || { top, right, bottom, left };\n}\n","/** @module utils/Positioning/isOutOfBounds */\n\nimport getScreenSize from './getScreenSize';\n\nfunction isOutHorizontally(fixedTo, child, threshold) {\n  const { left: fixedLeft, right: fixedRight } = fixedTo.getBoundingClientRect();\n  const { left: childLeft, right: childRight } = child.getBoundingClientRect();\n  const offset = child.offsetWidth * threshold;\n\n  const left = childLeft + offset;\n  const right = childRight - offset;\n\n  const screenEdge = childLeft === 0 || getScreenSize('Width') === childRight;\n  return fixedLeft > left || fixedRight < right || screenEdge;\n}\n\nfunction isOutVertically(fixedTo, child, toggle, threshold) {\n  const { top: fixedTop, bottom: fixedBottom } = fixedTo.getBoundingClientRect();\n  const { top: childTop, bottom: childBottom } = child.getBoundingClientRect();\n  const offset = toggle.offsetHeight * threshold;\n\n  const screenEdge = childTop === 0 || getScreenSize('Height') === childBottom;\n  return fixedTop > childTop + offset || fixedBottom < childTop - offset || screenEdge;\n}\n\n/**\n * Checks if the fixedTo object for the Layover component is considered\n * out of bounds relative to the container.\n *\n * @param {Object} fixedTo - The Layover's `fixedTo` prop.\n * @param {Object} child - The Layover's `children` prop as a DOM element.\n * @param {Object} toggle - The Layover's `toggle` prop as a DOM element.\n * @param {number} verticalThreshold - The vertical threshold multiplier to apply.\n * @param {number} horizontalThreshold - The horizontal threshold multiplier to apply.\n * @return {boolean} true if the Layover's `fixedTo` prop is considered out of bounds.\n */\nexport default function isOutOfBounds(fixedTo, child, toggle, verticalThreshold, horizontalThreshold) {\n  if (fixedTo === window) {\n    return false;\n  } else if (fixedTo.x || fixedTo.y) {\n    const { x, y } = fixedTo;\n    return (!!y && isOutVertically(y, child, toggle, verticalThreshold)) ||\n      (!!x && isOutHorizontally(x, child, horizontalThreshold));\n  }\n\n  return isOutVertically(fixedTo, child, toggle, verticalThreshold) ||\n    isOutHorizontally(fixedTo, child, horizontalThreshold);\n}\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map != 'undefined') {\r\n        return Map;\r\n    }\r\n\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    return (function () {\r\n        function anonymous() {\r\n            this.__entries__ = [];\r\n        }\r\n\r\n        var prototypeAccessors = { size: {} };\r\n\r\n        /**\r\n         * @returns {boolean}\r\n         */\r\n        prototypeAccessors.size.get = function () {\r\n            return this.__entries__.length;\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        anonymous.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n\r\n            return entry && entry[1];\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            } else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        anonymous.prototype.forEach = function (callback, ctx) {\r\n            if ( ctx === void 0 ) ctx = null;\r\n\r\n            for (var i = 0, list = this.__entries__; i < list.length; i += 1) {\r\n                var entry = list[i];\r\n\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n\r\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\r\n\r\n        return anonymous;\r\n    }());\r\n})();\r\n\r\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window != 'undefined' && typeof document != 'undefined' && window.document === document;\r\n\r\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        return requestAnimationFrame;\r\n    }\r\n\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\r\n\r\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nvar throttle = function (callback, delay) {\r\n    var leadingCall = false,\r\n        trailingCall = false,\r\n        lastCallTime = 0;\r\n\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n\r\n            callback();\r\n        }\r\n\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        } else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n\r\n        lastCallTime = timeStamp;\r\n    }\r\n\r\n    return proxy;\r\n};\r\n\r\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n\r\n// Detect whether running in IE 11 (facepalm).\r\nvar isIE11 = typeof navigator != 'undefined' && /Trident\\/.*rv:11/.test(navigator.userAgent);\r\n\r\n// MutationObserver should not be used if running in Internet Explorer 11 as it's\r\n// implementation is unreliable. Example: https://jsfiddle.net/x2r3jpuz/2/\r\n//\r\n// It's a real bummer that there is no other way to check for this issue but to\r\n// use the UA information.\r\nvar mutationObserverSupported = typeof MutationObserver != 'undefined' && !isIE11;\r\n\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = function() {\r\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\r\n    this.connected_ = false;\r\n\r\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\r\n    this.mutationEventsAdded_ = false;\r\n\r\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\r\n    this.mutationsObserver_ = null;\r\n\r\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\r\n    this.observers_ = [];\r\n\r\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n};\r\n\r\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.addObserver = function (observer) {\r\n    if (!~this.observers_.indexOf(observer)) {\r\n        this.observers_.push(observer);\r\n    }\r\n\r\n    // Add listeners if they haven't been added yet.\r\n    if (!this.connected_) {\r\n        this.connect_();\r\n    }\r\n};\r\n\r\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.removeObserver = function (observer) {\r\n    var observers = this.observers_;\r\n    var index = observers.indexOf(observer);\r\n\r\n    // Remove observer if it's present in registry.\r\n    if (~index) {\r\n        observers.splice(index, 1);\r\n    }\r\n\r\n    // Remove listeners if controller has no connected observers.\r\n    if (!observers.length && this.connected_) {\r\n        this.disconnect_();\r\n    }\r\n};\r\n\r\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.refresh = function () {\r\n    var changesDetected = this.updateObservers_();\r\n\r\n    // Continue running updates if changes have been detected as there might\r\n    // be future ones caused by CSS transitions.\r\n    if (changesDetected) {\r\n        this.refresh();\r\n    }\r\n};\r\n\r\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\r\nResizeObserverController.prototype.updateObservers_ = function () {\r\n    // Collect observers that have active observations.\r\n    var activeObservers = this.observers_.filter(function (observer) {\r\n        return observer.gatherActive(), observer.hasActive();\r\n    });\r\n\r\n    // Deliver notifications in a separate cycle in order to avoid any\r\n    // collisions between observers, e.g. when multiple instances of\r\n    // ResizeObserver are tracking the same element and the callback of one\r\n    // of them changes content dimensions of the observed target. Sometimes\r\n    // this may result in notifications being blocked for the rest of observers.\r\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n\r\n    return activeObservers.length > 0;\r\n};\r\n\r\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.connect_ = function () {\r\n    // Do nothing if running in a non-browser environment or if listeners\r\n    // have been already added.\r\n    if (!isBrowser || this.connected_) {\r\n        return;\r\n    }\r\n\r\n    // Subscription to the \"Transitionend\" event is used as a workaround for\r\n    // delayed transitions. This way it's possible to capture at least the\r\n    // final state of an element.\r\n    document.addEventListener('transitionend', this.onTransitionEnd_);\r\n\r\n    window.addEventListener('resize', this.refresh);\r\n\r\n    if (mutationObserverSupported) {\r\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n\r\n        this.mutationsObserver_.observe(document, {\r\n            attributes: true,\r\n            childList: true,\r\n            characterData: true,\r\n            subtree: true\r\n        });\r\n    } else {\r\n        document.addEventListener('DOMSubtreeModified', this.refresh);\r\n\r\n        this.mutationEventsAdded_ = true;\r\n    }\r\n\r\n    this.connected_ = true;\r\n};\r\n\r\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.disconnect_ = function () {\r\n    // Do nothing if running in a non-browser environment or if listeners\r\n    // have been already removed.\r\n    if (!isBrowser || !this.connected_) {\r\n        return;\r\n    }\r\n\r\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n    window.removeEventListener('resize', this.refresh);\r\n\r\n    if (this.mutationsObserver_) {\r\n        this.mutationsObserver_.disconnect();\r\n    }\r\n\r\n    if (this.mutationEventsAdded_) {\r\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n    }\r\n\r\n    this.mutationsObserver_ = null;\r\n    this.mutationEventsAdded_ = false;\r\n    this.connected_ = false;\r\n};\r\n\r\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\r\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\r\n        var propertyName = ref.propertyName;\r\n\r\n    // Detect whether transition may affect dimensions of an element.\r\n    var isReflowProperty = transitionKeys.some(function (key) {\r\n        return !!~propertyName.indexOf(key);\r\n    });\r\n\r\n    if (isReflowProperty) {\r\n        this.refresh();\r\n    }\r\n};\r\n\r\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\r\nResizeObserverController.getInstance = function () {\r\n    if (!this.instance_) {\r\n        this.instance_ = new ResizeObserverController();\r\n    }\r\n\r\n    return this.instance_;\r\n};\r\n\r\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\r\nResizeObserverController.instance_ = null;\r\n\r\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\r\n        var key = list[i];\r\n\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n\r\n    return target;\r\n});\r\n\r\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = Array.prototype.slice.call(arguments, 1);\r\n\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n\r\n    for (var i = 0, list = positions; i < list.length; i += 1) {\r\n        var position = list[i];\r\n\r\n        var value = styles['padding-' + position];\r\n\r\n        paddings[position] = toFloat(value);\r\n    }\r\n\r\n    return paddings;\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth;\r\n    var clientHeight = target.clientHeight;\r\n\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n\r\n    var styles = getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width),\r\n        height = toFloat(styles.height);\r\n\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement != 'undefined') {\r\n        return function (target) { return target instanceof SVGGraphicsElement; };\r\n    }\r\n\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return target instanceof SVGElement && typeof target.getBBox === 'function'; };\r\n})();\r\n\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === document.documentElement;\r\n}\r\n\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n\r\n    return getHTMLElementContentRect(target);\r\n}\r\n\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(ref) {\r\n    var x = ref.x;\r\n    var y = ref.y;\r\n    var width = ref.width;\r\n    var height = ref.height;\r\n\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly != 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n\r\n    return rect;\r\n}\r\n\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\r\n\r\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = function(target) {\r\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\r\n    this.broadcastWidth = 0;\r\n\r\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\r\n    this.broadcastHeight = 0;\r\n\r\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\r\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n\r\n    /**\r\n     * Reference to the observed element.\r\n     *\r\n     * @type {Element}\r\n     */\r\n    this.target = target;\r\n};\r\n\r\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\r\nResizeObservation.prototype.isActive = function () {\r\n    var rect = getContentRect(this.target);\r\n\r\n    this.contentRect_ = rect;\r\n\r\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\r\n};\r\n\r\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\r\nResizeObservation.prototype.broadcastRect = function () {\r\n    var rect = this.contentRect_;\r\n\r\n    this.broadcastWidth = rect.width;\r\n    this.broadcastHeight = rect.height;\r\n\r\n    return rect;\r\n};\r\n\r\nvar ResizeObserverEntry = function(target, rectInit) {\r\n    var contentRect = createReadOnlyRect(rectInit);\r\n\r\n    // According to the specification following properties are not writable\r\n    // and are also not enumerable in the native implementation.\r\n    //\r\n    // Property accessors are not being used as they'd require to define a\r\n    // private WeakMap storage which may cause memory leaks in browsers that\r\n    // don't support this type of collections.\r\n    defineConfigurable(this, { target: target, contentRect: contentRect });\r\n};\r\n\r\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\r\n    if (typeof callback !== 'function') {\r\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n    }\r\n\r\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\r\n    this.activeObservations_ = [];\r\n\r\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\r\n    this.observations_ = new MapShim();\r\n\r\n    /**\r\n     * Reference to the callback function.\r\n     *\r\n     * @private {ResizeObserverCallback}\r\n     */\r\n    this.callback_ = callback;\r\n\r\n    /**\r\n     * Reference to the associated ResizeObserverController.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    this.controller_ = controller;\r\n\r\n    /**\r\n     * Public ResizeObserver instance which will be passed to the callback\r\n     * function and used as a value of it's \"this\" binding.\r\n     *\r\n     * @private {ResizeObserver}\r\n     */\r\n    this.callbackCtx_ = callbackCtx;\r\n};\r\n\r\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.observe = function (target) {\r\n    if (!arguments.length) {\r\n        throw new TypeError('1 argument required, but only 0 present.');\r\n    }\r\n\r\n    // Do nothing if current environment doesn't have the Element interface.\r\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n        return;\r\n    }\r\n\r\n    if (!(target instanceof Element)) {\r\n        throw new TypeError('parameter 1 is not of type \"Element\".');\r\n    }\r\n\r\n    var observations = this.observations_;\r\n\r\n    // Do nothing if element is already being observed.\r\n    if (observations.has(target)) {\r\n        return;\r\n    }\r\n\r\n    observations.set(target, new ResizeObservation(target));\r\n\r\n    this.controller_.addObserver(this);\r\n\r\n    // Force the update of observations.\r\n    this.controller_.refresh();\r\n};\r\n\r\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.unobserve = function (target) {\r\n    if (!arguments.length) {\r\n        throw new TypeError('1 argument required, but only 0 present.');\r\n    }\r\n\r\n    // Do nothing if current environment doesn't have the Element interface.\r\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n        return;\r\n    }\r\n\r\n    if (!(target instanceof Element)) {\r\n        throw new TypeError('parameter 1 is not of type \"Element\".');\r\n    }\r\n\r\n    var observations = this.observations_;\r\n\r\n    // Do nothing if element is not being observed.\r\n    if (!observations.has(target)) {\r\n        return;\r\n    }\r\n\r\n    observations.delete(target);\r\n\r\n    if (!observations.size) {\r\n        this.controller_.removeObserver(this);\r\n    }\r\n};\r\n\r\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.disconnect = function () {\r\n    this.clearActive();\r\n    this.observations_.clear();\r\n    this.controller_.removeObserver(this);\r\n};\r\n\r\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.gatherActive = function () {\r\n        var this$1 = this;\r\n\r\n    this.clearActive();\r\n\r\n    this.observations_.forEach(function (observation) {\r\n        if (observation.isActive()) {\r\n            this$1.activeObservations_.push(observation);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.broadcastActive = function () {\r\n    // Do nothing if observer doesn't have active observations.\r\n    if (!this.hasActive()) {\r\n        return;\r\n    }\r\n\r\n    var ctx = this.callbackCtx_;\r\n\r\n    // Create ResizeObserverEntry instance for every active observation.\r\n    var entries = this.activeObservations_.map(function (observation) {\r\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n    });\r\n\r\n    this.callback_.call(ctx, entries, ctx);\r\n    this.clearActive();\r\n};\r\n\r\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\r\nResizeObserverSPI.prototype.clearActive = function () {\r\n    this.activeObservations_.splice(0);\r\n};\r\n\r\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\r\nResizeObserverSPI.prototype.hasActive = function () {\r\n    return this.activeObservations_.length > 0;\r\n};\r\n\r\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap != 'undefined' ? new WeakMap() : new MapShim();\r\n\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver$1 = function(callback) {\r\n    if (!(this instanceof ResizeObserver$1)) {\r\n        throw new TypeError('Cannot call a class as a function');\r\n    }\r\n\r\n    if (!arguments.length) {\r\n        throw new TypeError('1 argument required, but only 0 present.');\r\n    }\r\n\r\n    var controller = ResizeObserverController.getInstance();\r\n    var observer = new ResizeObserverSPI(callback, controller, this);\r\n\r\n    observers.set(this, observer);\r\n};\r\n\r\n// Expose public methods of ResizeObserver.\r\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\r\n    ResizeObserver$1.prototype[method] = function () {\r\n        return (ref = observers.get(this))[method].apply(ref, arguments);\r\n        var ref;\r\n    };\r\n});\r\n\r\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof ResizeObserver != 'undefined') {\r\n        // eslint-disable-next-line no-undef\r\n        return ResizeObserver;\r\n    }\r\n\r\n    return ResizeObserver$1;\r\n})();\r\n\r\nexport default index;\r\n","/** @module utils/isValied */\n\n/**\n * A really simple utility function to check if an input's value is considered \"valued\".\n *\n * @param {string|number} v - the value to check\n * @return {boolean} true if the value is a number or a non-empty string.\n */\nexport default function isValued(v) {\n  return v === 0 || !!v;\n}\n","/** @module utils/StringUtils/addSuffix */\n\n/**\n * Optionally adds a suffix to a string if it does\n * not already contain that string.\n *\n * @param {String} str - The string to modify\n * @param {String} suffix - The suffix to add\n *\n * @return {String} the string with a suffix\n */\nexport default function addSuffix(str, suffix) {\n  if (!str || typeof str !== 'string') {\n    return str;\n  }\n\n  return str.indexOf(suffix) === -1\n    ? `${str.trim()} ${suffix}`\n    : str;\n}\n","/** @module utils/NumberUtils/isBetween */\n\n/**\n * Checks if a number is between a min and maximum (inclusive)\n *\n * @param {Number} num the number to check\n * @param {Number} min the minimum\n * @param {Number} max the maximum\n * @return {Boolean} true if the number is between the min and max (inclusive)\n */\nexport default function isBetween(num, min, max) {\n  return num >= min && num <= max;\n}\n","import cn from 'classnames';\nimport themeColors from '../utils/themeColors';\n\n/**\n * Since it can be helpful to apply button styles on other components, this is a utlity function\n * to apply those styles based on props.\n */\nexport default function getBtnStyles({\n  flat,\n  raised,\n  icon,\n  floating,\n  disabled,\n  primary,\n  secondary,\n  hover,\n  swapTheming,\n  pressed,\n  mini,\n  fixed,\n  fixedPosition,\n}, ...classNames) {\n  const flatStyles = flat || icon;\n  const raisedStyles = raised || floating;\n  const textTheming = (flatStyles && !swapTheming) || (raisedStyles && swapTheming);\n  const backgroundTheming = ((!disabled && raisedStyles && !swapTheming)\n    || (flatStyles && swapTheming))\n    && (primary || secondary);\n\n  return cn('md-btn', {\n    'md-btn--flat': flat || (disabled && raised),\n    'md-btn--raised': !disabled && raised,\n    'md-btn--icon': icon || floating,\n    'md-btn--floating': floating,\n    'md-btn--text': flat || raised,\n    'md-btn--hover': !disabled && hover,\n    'md-btn--raised-disabled': disabled && raised,\n    'md-btn--raised-pressed': !disabled && raisedStyles && pressed,\n    'md-btn--fixed': fixed,\n    [`md-btn--fixed-${fixedPosition}`]: floating && fixed,\n    'md-btn--floating-mini': floating && mini,\n    'md-btn--color-primary-active': !disabled && primary && hover && textTheming,\n    'md-btn--color-secondary-active': !disabled && secondary && hover && textTheming,\n    'md-pointer--hover': !disabled,\n    'md-paper md-paper--2': !disabled && floating,\n    'md-paper--4': !disabled && floating && pressed,\n  }, themeColors({\n    text: !icon && !floating && !backgroundTheming,\n    themeText: !backgroundTheming,\n    disabled,\n    primary,\n    secondary,\n    hover: true,\n    ink: true,\n  }), ...classNames);\n}\n","/** @module utils/StringUtils/capitlizeFirst */\n\n/**\n * Capitalizes the first letter of a string. If the string is falsish, it will be\n * returned as is. If the string is only one letter long, it will be capitalized;\n *\n * @param {String} str - The string to capitalize.\n * @return {String} the updated string or false-ish self.\n */\nexport default function capitalizeFirst(str) {\n  if (!str) {\n    return str;\n  } else if (str.length === 1) {\n    return str.toUpperCase();\n  }\n\n  return `${str.charAt(0).toUpperCase()}${str.substring(1, str.length)}`;\n}\n","/**\n * Attempts fo find the base table component from an element in the table.\n * This will either be the wrapper for responsive data tables, or the table element.\n *\n * @param {Object} el - The element to traverse from\n * @param {Object} the table or null.\n */\nexport default function findTable(el) {\n  let table;\n  let node = el;\n  while (node && node.parentNode) {\n    if (node.classList) {\n      if (node.classList.contains('md-data-table')) {\n        table = node;\n      } else if (node.classList.contains('md-data-table--responsive')) {\n        return node;\n      } else if (node.classList.contains('md-data-table__scroll-wrapper')) {\n        // fixed-wrapper then responsive\n        return node.parentNode.parentNode;\n      } else if (table) {\n        return table;\n      }\n    }\n\n    node = node.parentNode;\n  }\n\n  return null;\n}\n","/** @module utils/EventUtils/isValidFocusKeypress */\nimport { TAB } from '../../constants/keyCodes';\n\n/**\n * Checks if a keydown or keyup event's key was the TAB key or any additional valid\n * keys that were passed in.\n *\n * @param {Object} event - The event to check.\n * @param {Array.<number>=} additionalKeys - An optional array of additional key codes\n *    that are considered valid for a focus event.\n */\nexport default function isValidFocusKeypress(event, additionalKeys) {\n  const key = event.which || event.keyCode;\n  return key === TAB ||\n    (additionalKeys && additionalKeys.indexOf(key) !== -1);\n}\n","export default function findFixedTo(table) {\n  if (table && table.firstChild.firstChild.classList.contains('md-data-table__scroll-wrapper')) {\n    return {\n      x: table,\n      y: table.firstChild.firstChild,\n    };\n  }\n\n  return table;\n}\n","import React, { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport getField from '../utils/getField';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport findTable from './findTable';\nimport findFixedTo from './findFixedTo';\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\n\n/**\n * This is a utility HOC to fix the components that use the `Menu` component behind the scenes. This will\n * correctly add the `id` and `fixedTo` props if they are omitted from the child component's props.\n *\n * If the id prop is omitted, it will default to the `${rowId}-${cellIndex}-${suffix}` and when the\n * `fixedTo` prop is omitted, it will automatically set it to the responsive table wrapper so that\n * it will stay in viewport as expected.\n *\n * This component also attempts to find the `cellIndex` prop if it is not correctly cloned into the\n * component.\n *\n * @param {function|Class} ComposedComponent - the component to compose with the tooltip functionality.\n * @param {String} suffix - the id suffix to apply.\n * @return {Class} the ComposedComponent with some fixes applied.\n */\nexport default function withTableFixes(ComposedComponent, suffix) {\n  return class TableFixesComponent extends PureComponent {\n    static Positions = ComposedComponent.Positions;\n    static HorizontalAnchors = ComposedComponent.HorizontalAnchors;\n    static VerticalAnchors = ComposedComponent.VerticalAnchors;\n    static displayName = getDisplayName(ComposedComponent, 'TableFixes');\n    static propTypes = {\n      id: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      cellIndex: PropTypes.number,\n      fixedTo: fixedToShape,\n    };\n\n    static contextTypes = {\n      rowId: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }\n\n    state = { cellIndex: undefined };\n\n    componentDidMount() {\n      const { cellIndex, fixedTo, id } = this.props;\n      const isIndexed = !!id || cellIndex === 0 || !!cellIndex;\n      const isFixed = fixedTo === null || !!fixedTo;\n      if (isIndexed && isFixed) {\n        // all is good\n        return;\n      }\n\n      const column = findDOMNode(this);\n      const table = findTable(column);\n      this._fixedTo = findFixedTo(table);\n\n      // If a developer creates their own component to wrap the component that uses a menu, the cellIndex prop\n      // might not be defined if they don't pass ...props\n      if (!isIndexed) {\n        const columns = [].slice.call(column.parentNode.querySelectorAll('th,td'));\n        this.setState({ cellIndex: columns.indexOf(column) }); // eslint-disable-line react/no-did-mount-set-state\n      } else if (this._fixedTo) {\n        // need to apply the _fixedTo for the select field\n        this.forceUpdate();\n      }\n    }\n\n    _fixedTo = null;\n\n    render() {\n      const { rowId } = this.context;\n      const {\n        /* eslint-disable no-unused-vars */\n        id: propid,\n        fixedTo: propFixedTo,\n        cellIndex: propCellIndex,\n        /* eslint-enable no-unused-vars */\n        ...props\n      } = this.props;\n\n      let { id } = this.props;\n      const fixedTo = this._fixedTo === null || propFixedTo ? propFixedTo : this._fixedTo;\n      const cellIndex = getField(this.props, this.state, 'cellIndex');\n      if (!id) {\n        id = `${rowId}-${cellIndex}-${suffix}`;\n      }\n\n      return <ComposedComponent {...props} id={id} fixedTo={fixedTo} />;\n    }\n  };\n}\n","/** @module utils/mapToListParts */\n\nimport { createElement, isValidElement } from 'react';\nimport Divider from '../Dividers/Divider';\nimport Subheader from '../Subheaders/Subheader';\nimport ListItem from '../Lists/ListItem';\n\n/**\n * A utility function to convert any \"item\" into a valid React element that is used\n * within the `List` component.\n *\n * Use cases:\n * - is a valid React element -> item returned unmodified\n * - `number` or `string` -> `ListItem` with the item as the `primaryText`\n * - an `object` with a key `divider: true` -> a `Divider` component with the remaining\n *    keys applied as props.\n * - an `object` with a key `subheader: true` -> a `Subheader` component with the remianing\n *    keys applied as props. This one technically requires the `primaryText` key to be defined.\n * - an `object` -> all keys passed into the `ListItem` component.\n *\n * Examples:\n * ```js\n * mapToListParts('Hello') == <ListItem primaryText=\"Hello\" />\n * mapToListParts(100)     == <ListItem primaryText={100} />\n * mapToListParts({ primaryText: 'Item' }) == <ListItem primaryText=\"Item\" />\n * mapToListParts({ divider: true }) == <Divider />\n * mapToListParts({ subheader: true, primaryText: 'Subheader' }) == <Subheader primaryText=\"Subheader\" />\n * ```\n *\n * @param {string|number|Object} item - the item to convert\n * @param {number|string=} index - the current index in the array (if used in an array)\n * @return {Object} a React element\n */\nexport default function mapToListParts(item, index) {\n  if (typeof item === 'string' || typeof item === 'number') {\n    return createElement(ListItem, { key: item, primaryText: item });\n  } else if (isValidElement(item)) {\n    return item;\n  }\n\n  const { divider, subheader, nestedItems, ...remainingProps } = item;\n  let component;\n  if (divider) {\n    component = Divider;\n  } else if (subheader) {\n    component = Subheader;\n  } else {\n    component = ListItem;\n  }\n\n  const props = { ...remainingProps, key: item.key || index };\n  if (nestedItems) {\n    props.nestedItems = nestedItems.map(mapToListParts);\n  }\n\n  return createElement(component, props);\n}\n","/** @module utils/toggleScroll */\nimport getPagePosition from './Positioning/getPagePosition';\n\n/**\n * A utility function for toggling the overflow visibility on an element. This will either target\n * the given `selector`, or the `body` tag to set a `className`.\n *\n * If the `visible` param is `undefined`, the className will be toggled.\n * If the `visible` param is `true`, the className will be added.\n * If the `visible` param is `false`, the className will be removed.\n *\n *\n * > This depends on the `classList` attribute on elements.\n *\n * @param {bool=} visible - An optional boolean to determine how the `className` will be applied.\n * @param {string|Object=} selector - An optional query selector string to use to select an element.\n * @param {string=} className - The className to apply. Defaults to 'md-overflow-hidden'\n */\nexport default function toggleScroll(scrollable, selector, className = 'md-no-scroll') {\n  const queryable = !selector || typeof selector === 'string';\n  let el;\n  if (queryable) {\n    el = selector ? document.querySelector(selector) : document.querySelector('html');\n  } else {\n    el = selector;\n  }\n\n  if (!el) {\n    return;\n  }\n\n  if (typeof scrollable === 'undefined') {\n    scrollable = !el.classList.contains(className);\n  }\n\n  if (scrollable && !el.classList.contains(className)) {\n    el.style.top = `-${queryable ? getPagePosition('y') : el.scrollTop}px`;\n    el.classList.add(className);\n  } else if (!scrollable && el.classList.contains(className)) {\n    const scrollTop = Math.abs(parseInt(el.style.top, 10));\n    el.classList.remove(className);\n    el.style.top = null;\n\n    if (!selector) {\n      window.scrollTo(0, scrollTop);\n    } else {\n      el.scrollTop = scrollTop;\n    }\n  }\n}\n","import DrawerTypes from './DrawerTypes';\nconst {\n  FULL_HEIGHT,\n  CLIPPED,\n  FLOATING,\n  PERSISTENT,\n  PERSISTENT_MINI,\n  TEMPORARY,\n  TEMPORARY_MINI,\n} = DrawerTypes;\n\nexport function isTemporary(type) {\n  return [TEMPORARY, TEMPORARY_MINI].indexOf(type) !== -1;\n}\n\nexport function isPersistent(type) {\n  return [PERSISTENT, PERSISTENT_MINI].indexOf(type) !== -1;\n}\n\nexport function isPermanent(type) {\n  return [FULL_HEIGHT, CLIPPED, FLOATING].indexOf(type) !== -1;\n}\n\nexport function isMini(type) {\n  return [PERSISTENT_MINI, TEMPORARY_MINI].indexOf(type) !== -1;\n}\n","/** @module utils/bem */\nimport cn from 'classnames';\n\n/**\n * A utility function to apply BEM class names to an element.\n *\n * ### Examples:\n * ```js\n * bem('class') === 'class'\n * bem('block', 'element') === 'block__element'\n * bem('block', 'element', 'sub-element') === 'block__element__sub-element'\n * bem('block', { 'mod-1': true, 'mod-2': false }) === 'block block--mod-1'\n * bem('block', 'element', { 'mod-1': false, 'mod-2': true }) === 'block__element block__element--mod-2'\n * bem('block', 'element', {\n *   'mod-1': false,\n *   'mod-2': true,\n * }, 'other', 'class-names') === 'block__element block__element--mod-2 other class-names'\n * ```\n *\n * @param {...String} blocks - 1 to many blocks to use. These names will be joined\n *    with underscores.\n * @param {Object=} modifiers - Any conditional modifiers to apply to the blocks. Each\n *    key in this object will be applied as a `--suffix` to the blocks ONLY when\n *    their value is true-ish.\n * @param {...String} others - Any additional class names to apply.\n * @return {String} the bem-formatted className string.\n */\nexport default function bem(...args) {\n  const base = [];\n  let modifiers = null;\n  let remaining = -1;\n  args.some((arg, i) => {\n    if (arg) {\n      const type = typeof arg;\n      if (type === 'number' || type === 'string') {\n        base.push(arg);\n      } else if (type === 'object') {\n        modifiers = arg;\n        remaining = i + 1;\n      }\n    }\n    return modifiers;\n  });\n\n  const element = base.join('__');\n  if (modifiers) {\n    modifiers = Object.keys(modifiers).reduce((obj, key) => {\n      obj[`${element}--${key}`] = modifiers[key];\n      return obj;\n    }, {});\n  }\n  const classes = remaining > -1 ? args.slice(remaining) : null;\n  return cn(element, modifiers, classes).trim();\n}\n","import React, { PureComponent, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport Button from '../Buttons/Button';\nimport Drawer from '../Drawers/Drawer';\nimport List from '../Lists/List';\nimport Toolbar from '../Toolbars/Toolbar';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\n\nconst { DrawerTypes } = Drawer;\nimport { isTemporary, isPersistent, isPermanent, isMini } from '../Drawers/isType';\nimport JumpToContentLink from './JumpToContentLink';\nimport CloseButton from './CloseButton';\nimport MiniListItem from './MiniListItem';\n\nfunction getNonMiniType(type) {\n  const { PERSISTENT_MINI: pMini, TEMPORARY_MINI: tMini } = DrawerTypes;\n  if ([pMini, tMini].indexOf(type) === -1) {\n    return type;\n  }\n\n  return pMini === type ? DrawerTypes.PERSISTENT : DrawerTypes.TEMPORARY;\n}\n\nfunction toMiniListItem(item, index) {\n  if (isValidElement(item)) {\n    return item;\n  }\n\n  const { divider, subheader, key, ...itemProps } = item;\n  if (divider || subheader) {\n    return null;\n  }\n\n  return <MiniListItem key={key || index} {...itemProps} />;\n}\n\n/**\n * The `NavigationDrawer` is used when you want a full layout configuration. It is a combination\n * of the `Toolbar` component and the `Drawer` component. Any props that are not specifically\n * listed below will be provided to the `Drawer` component. So if there are props on the `Drawer`\n * that are not listed here, they will be passed along.\n *\n * The main benefit of using this component is that it will manage adding respective offset\n * classes automatically for you to the content and the drawer. It will also manage using\n * a mini drawer type for you.\n */\nexport default class NavigationDrawer extends PureComponent {\n  static DrawerType = { // deprecated\n    /* eslint-disable no-console */\n    _warned: false,\n    _msg: 'Invalid use of `NavigationDrawer.DrawerType.{{TYPE}}`. The `NavigationDrawer.DrawerType` ' +\n      'has been deprecated and will be removed in the next major release. Please use the ' +\n      '`NavigationDrawer.DrawerTypes.{{TYPE}}` instead.',\n\n    get FULL_HEIGHT() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'FULL_HEIGHT'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.FULL_HEIGHT;\n    },\n\n    get CLIPPED() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'CLIPPED'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.CLIPPED;\n    },\n\n    get FLOATING() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'FLOATING'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.FLOATING;\n    },\n\n    get PERSISTENT() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.PERSISTENT;\n    },\n\n    get PERSISTENT_MINI() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'PERSISTENT_MINI'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.PERSISTENT_MINI;\n    },\n\n    get TEMPORARY() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.TEMPORARY;\n    },\n\n    get TEMPORARY_MINI() {\n      if (!this._warned) {\n        console.error(this._msg.replace(/{{TYPE}}/g, 'TEMPORARY_MINI'));\n      }\n      this._warned = true;\n\n      return DrawerTypes.TEMPORARY_MINI;\n    },\n    /* eslint-enable no-console */\n  };\n\n  static DrawerTypes = DrawerTypes;\n\n  static propTypes = {\n    /**\n     * An optional id to provide to the entire div wrapper.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the drawer. This is generally a good idea to provide if\n     * there are any `navItems` defined.\n     *\n     * @see {@link #navItemsId}\n     * @see {@link #miniDrawerId}\n     */\n    drawerId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the navItems list. If this is omitted and the `drawerId` prop is\n     * defined, it will be defaulted to `${drawerId}-nav-items`.\n     *\n     * @see {@link #drawerId}\n     * @see {@link Drawer#navItemsId}\n     */\n    navItemsId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to apply to mini drawer that gets created when the `drawerType` is set to\n     * one of the mini types.\n     *\n     * @see {@link #drawerId}\n     * @see {@link #miniNavItemsId}\n     */\n    miniDrawerId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to apply to mini drawer's navigation list that gets created when the `drawerType`\n     * is set to one of the mini types.\n     *\n     * @see {@link #navItemsId}\n     * @see {@link #miniDrawerId}\n     */\n    miniNavItemsId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the main toolbar.\n     */\n    toolbarId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An id to give the main content. A hidden link is created in the main drawer's header that links to the main\n     * content. This is used for keyboard only users to jump the navigation and jump straight to the content.\n     *\n     * If you provide your own `drawerHeader`, it is suggested to include the link yourself.\n     */\n    contentId: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional style to apply to the surrounding container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the surrounding container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the main toolbar.\n     */\n    toolbarStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the toolbar.\n     */\n    toolbarClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the main toolbar's title.\n     */\n    toolbarTitleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the main toolbar's title.\n     */\n    toolbarTitleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the drawer.\n     */\n    drawerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the drawer.\n     */\n    drawerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `List` surrounding the `navItems`.\n     */\n    navStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `List` surrounding the `navItems`.\n     */\n    navClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the mini drawer that gets created when the `drawerType` is set\n     * to one of the mini types.\n     *\n     * @see {@link #miniDrawerClassName}\n     * @see {@link #miniNavStyle}\n     * @see {@link #miniNavClassName}\n     */\n    miniDrawerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the mini drawer that gets created when the `drawerType` is set\n     * to one of the mini types.\n     *\n     * @see {@link #miniDrawerStyle}\n     * @see {@link #miniNavStyle}\n     * @see {@link #miniNavClassName}\n     */\n    miniDrawerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the mini drawer's navigation list when the `drawerType` is set\n     * to one of the mini types.\n     *\n     * @see {@link #miniDrawerStyle}\n     * @see {@link #miniDrawerClassName}\n     * @see {@link #miniNavClassName}\n     */\n    miniNavStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the mini drawer's navigation list when the `drawerType` is set\n     * to one of the mini types.\n     *\n     * @see {@link #miniDrawerStyle}\n     * @see {@link #miniDrawerClassName}\n     * @see {@link #miniNavStyle}\n     */\n    miniNavClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the content. This is the container surrounding whatever\n     * `children` are passed in.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the content. This is the container surrounding whatever\n     * `children` are passed in.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the overlay.\n     */\n    overlayStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the overlay.\n     */\n    overlayClassName: PropTypes.string,\n\n    /**\n     * The children to display in the main content.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the `drawerHeader` component should be built if the `drawerHeader` prop is not\n     * passed in.\n     */\n    includeDrawerHeader: PropTypes.bool,\n\n    /**\n     * An optional header to display in the drawer. This will normally be the `Toolbar` component\n     * or any other type of header. You can either use this prop with the `CloseButton` component\n     * when displaying a persistent drawer, or use the `drawerTitle` and `drawerHeaderChildren` prop\n     * to build a toolbar.\n     */\n    drawerHeader: PropTypes.node,\n\n    /**\n     * An optional title to use for the drawer's header toolbar. If the `drawerHeader` prop is defined,\n     * this is invalid.\n     */\n    drawerTitle: invalidIf(PropTypes.node, 'drawerHeader'),\n\n    /**\n     * An optional zDepth to apply to the drawer. If this is omitted, the value will be set as follows:\n     * - floating || inline = 1\n     * - temporary = 5\n     * - all others = 1\n     *\n     * @see {@link Papers/Paper#zDepth}\n     */\n    drawerZDepth: PropTypes.number,\n\n    /**\n     * Any additional children to display after the `drawerHeader` and `navItems` list in the drawer.\n     */\n    drawerChildren: PropTypes.node,\n\n    /**\n     * Any additional children to display in the drawer's header `Toolbar`. If the `drawerHeader` prop is defined,\n     * this is invalid.\n     */\n    drawerHeaderChildren: invalidIf(PropTypes.node, 'drawerHeader'),\n\n    /**\n     * The position for the drawer to be displayed.\n     */\n    position: PropTypes.oneOf(['left', 'right']).isRequired,\n\n    /**\n     * An optional list of elements or props to use to build a navigational list in the drawer.\n     * When the item is an object of props, it will build a `ListItem` component unless a key of\n     * `divider` or `subheader` is set to true. It will then create the Divider or Subheader component\n     * with any other remaining keys.\n     */\n    navItems: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({\n        divider: PropTypes.bool,\n        subheader: PropTypes.bool,\n        primaryText: PropTypes.node,\n      }),\n    ])),\n\n    /**\n     * The drawer type to use for mobile devices.\n     */\n    mobileDrawerType: PropTypes.oneOf([\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * The drawer type to use for tablets.\n     */\n    tabletDrawerType: PropTypes.oneOf([\n      DrawerTypes.FULL_HEIGHT,\n      DrawerTypes.CLIPPED,\n      DrawerTypes.FLOATING,\n      DrawerTypes.PERSISTENT,\n      DrawerTypes.PERSISTENT_MINI,\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * The drawer type to use for desktop displays.\n     */\n    desktopDrawerType: PropTypes.oneOf([\n      DrawerTypes.FULL_HEIGHT,\n      DrawerTypes.CLIPPED,\n      DrawerTypes.FLOATING,\n      DrawerTypes.PERSISTENT,\n      DrawerTypes.PERSISTENT_MINI,\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * An optional drawer type to enforce on all screen sizes. If the drawer type is not\n     * `temporary`, you are required to define the `onMediaTypeChange` prop to handle switching\n     * to temporary when the media matches a mobile device.\n     * ```\n     */\n    drawerType: PropTypes.oneOf([\n      DrawerTypes.FULL_HEIGHT,\n      DrawerTypes.CLIPPED,\n      DrawerTypes.FLOATING,\n      DrawerTypes.PERSISTENT,\n      DrawerTypes.PERSISTENT_MINI,\n      DrawerTypes.TEMPORARY,\n      DrawerTypes.TEMPORARY_MINI,\n    ]),\n\n    /**\n     * The default media match for the drawer. This will be what is displayed on first render.\n     * The component will adjust itself to the current media after it has mounted, but this\n     * is mostly used for server side rendering.\n     */\n    defaultMedia: PropTypes.oneOf(['mobile', 'tablet', 'desktop']),\n\n    /**\n     * The min width to use for a mobile media query. This prop should match the `md-mobile-min-width`\n     * variable.\n     *\n     * The media query for a mobile device will be:\n     *\n     * ```js\n     * window.matchMedia(\n     *   `screen and (min-width: ${mobileMinWidth}px) and (max-width: ${tabletMinWidth - 1}px`\n     * ).matches;\n     * ```\n     */\n    mobileMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * The min width to use for a tablet media query. This prop should match the `md-tablet-min-width`\n     * variable.\n     *\n     * The media query for a tablet device will be:\n     *\n     * ```js\n     * window.matchMedia(\n     *   `screen and (min-width: ${tabletMinWidth}px) and (max-width: ${desktopWidth - 1}px`\n     * ).matches;\n     * ```\n     */\n    tabletMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * The min width to use for a desktop media query. This prop should match the `md-desktop-min-width`\n     * variable.\n     *\n     * The media query for a tablet device will be:\n     *\n     * ```js\n     * window.matchMedia(`screen and (min-width: ${tabletMinWidth}px)`).matches;\n     * ```\n     */\n    desktopMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when the type of the drawer changes because of the\n     * new media queries. The callback will include the newly selected drawer type\n     * and an object containing the media matches of `mobile`, `tablet`, and `desktop`.\n     *\n     * ```js\n     * this.props.onMediaTypeChange(NavigationDrawer.DrawerTypes.TEMPORARY, {\n     *   mobile: true,\n     *   tablet: false,\n     *   desktop: false,\n     * });\n     * ```\n     */\n    onMediaTypeChange: PropTypes.func,\n\n    /**\n     * Boolean if the temporary or persistent drawers are visible by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the temporary or persistent drawers are visible. If this is defined,\n     * it will make the component controlled and require the `onVisibilityChange` prop\n     * to be defined.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the visibility of the drawer changes. The callback\n     * will include the new visibility.\n     *\n     * ```js\n     * onVisibilityChange(false);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * A boolean if the mini drawer's list should be generated from the `navItems` prop. When building\n     * the list, it will extract the `leftIcon` or `leftAvatar` from the `navItem` and then create a\n     * mini `ListItem` containing only that icon or image. Any other event listeners will also be applied.\n     *\n     *\n     * @see {@link #miniDrawerHeader}\n     * @see {@link #miniDrawerChildren}\n     */\n    extractMini: PropTypes.bool,\n\n    /**\n     * An optional header to display in the mini drawer. This will be displayed above the optional\n     * mini nav list that get generated if the `extractMini` prop is `true` and the `miniDrawerChildren`.\n     *\n     * @see {@link #extractMini}\n     */\n    miniDrawerHeader: PropTypes.node,\n\n    /**\n     * Any additional children to display in the mini drawer. This will be displayed after the `miniDrawerHeader`\n     * and the optional mini nav list that gets generated if the `extractMini` prop is `true`.\n     *\n     * @see {@link #extractMini}\n     */\n    miniDrawerChildren: PropTypes.node,\n\n    /**\n     * Boolean if the drawer should automatically close after a nav item has been clicked for `temporary` drawers.\n     */\n    autoclose: PropTypes.bool,\n\n    /**\n     * An optional title to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\n     * may be defined, not both.\n     */\n    toolbarTitle: invalidIf(PropTypes.node, 'toolbarTitleMenu'),\n\n    /**\n     * An optional select field menu to display in the main toolbar. Either the `toolbarTitle` or the `toolbarTitleMenu`\n     * may be defined, not both.\n     */\n    toolbarTitleMenu: PropTypes.element,\n\n    /**\n     * The theme style for the main toolbar.\n     *\n     * @see {@link Toolbars/Toolbar}\n     */\n    toolbarThemeType: PropTypes.oneOf(['default', 'colored', 'themed']).isRequired,\n\n    /**\n     * Boolean if the toolbar's nav, actions, and title should share the same color.\n     */\n    toolbarSingleColor: PropTypes.bool,\n\n    /**\n     * A boolean if the toolbar should be prominent.\n     */\n    toolbarProminent: PropTypes.bool,\n\n    /**\n     * A boolean if the toolbar's title should be prominent.\n     */\n    toolbarProminentTitle: PropTypes.bool,\n\n    /**\n     * A list of elements or a single element to display to the right of the\n     * toolbar's nav, title, and children.\n     *\n     * @see {@link Toolbars/Toolbar#actions}\n     */\n    toolbarActions: Toolbar.propTypes.actions,\n\n    /**\n     * Any children to display in the toolbar. This will be displayed between the optional title and\n     * actions.\n     */\n    toolbarChildren: Toolbar.propTypes.children,\n\n    /**\n     * An optional zDepth to apply to the toolbar.\n     *\n     * @see {@link Toolbars/Toolbar#zDepth}\n     */\n    toolbarZDepth: PropTypes.number,\n\n    /**\n     * The component to render the content in.\n     */\n    contentComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * An optional footer display after the main content.\n     */\n    footer: PropTypes.node,\n\n    /**\n     * The icon to use to render the button that will toggle the visibility of the\n     * navigation drawer for `temporary` and `persistent` drawers. This is normally a\n     * hamburger menu.\n     */\n    temporaryIcon: PropTypes.element,\n\n    /**\n     * The icon to use to render the button that appears on a persistent drawer's open\n     * header. This is used to create the `CloseButton` for drawers. When a persistent\n     * drawer is closed, the `temporaryIcon` will be used to create a button to open the drawer.\n     *\n     * If the `drawerHeader` prop is defined, you will have to either include the `CloseButton`\n     * in your header manually, or create your own controlled button to close the drawer.\n     */\n    persistentIcon: PropTypes.element,\n\n    /**\n     * The transition name to use when the page's content changes. If you want to disable\n     * transitions, set both the `transitionEnterTimeout` and `transitionLeaveTimeout` props\n     * to a false-ish value. (`null`, `undefined`, or `0`).\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition enter timeout when the page's content changes. If you want to disable\n     * the enter transition, set this to a false-ish value (`null`, `undefined`, or `0`).\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * The transition leave timeout when the page's content changes. If you want to disable\n     * the leave transition, set this to a false-ish value (`null`, `undefined`, or `0`).\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * The transition duration for the drawer when sliding in and out of view.\n     */\n    drawerTransitionDuration: PropTypes.number.isRequired,\n\n    /**\n     * Any additional props to provide to the main content. This will be applied before any of the generated props,\n     * so this should not include `style`, `className`, or `component`.\n     */\n    contentProps: PropTypes.object,\n\n    /**\n     * The label to use for a keyboard accessibility link that jumps all the navigation and allows a user to focus\n     * the main content. This is created in the drawer's header.\n     */\n    jumpLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the drawer. The overlay that appears for temporary type drawers will still appear in the\n     * separate subtree.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the drawer into. The default is to render as\n     * the first child in the `body`.\n     *\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n     * since the `Portal` component will not be used.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the drawer should be rendered as the last child instead of the first child\n     * in the `renderNode` or `body`.\n     *\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n     * since the `Portal` component will not be used.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * Boolean if the `drawerType` should remain constant across all media. This is really only valid\n     * if the `drawerType` is one of the temporary types.\n     */\n    constantDrawerType: PropTypes.bool,\n\n    menuIconChildren: deprecated(PropTypes.node, 'Use `temporaryIcon` instead'),\n    menuIconClassName: deprecated(PropTypes.string, 'Use `temporaryIcon` instead'),\n    closeIconChildren: deprecated(PropTypes.node, 'Use `persistentIcon` instead'),\n    closeIconClassName: deprecated(PropTypes.string, 'Use `persistentIcon` instead'),\n    temporaryIconChildren: deprecated(PropTypes.node, 'Use the `temporaryIcon` instead'),\n    temporaryIconClassName: deprecated(PropTypes.string, 'Use the `temporaryIcon` instead'),\n    persistentIconChildren: deprecated(PropTypes.node, 'Use the `persistentIcon` instead'),\n    persistentIconClassName: deprecated(PropTypes.string, 'Use the `persistentIcon` prop instead'),\n    onDrawerChange: deprecated(PropTypes.func, 'Use `onVisibilityChange` or `onMediaTypeChange` instead'),\n    onVisibilityToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\n    contentTransitionName: deprecated(PropTypes.string, 'Use `transitionName` instead'),\n    contentTransitionEnterTimeout: deprecated(PropTypes.number, 'Use `transtionEnterTimeout` instead'),\n    contentTransitionLeaveTimeout: deprecated(PropTypes.number, 'Use `transtionLeaveTimeout` instead'),\n    initialDrawerType: deprecated(\n      PropTypes.oneOf(['mobile', 'tablet', 'desktop']),\n      'Use `defaultMedia` instead'\n    ),\n  };\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  static childContextTypes = {\n    closeIcon: PropTypes.element,\n    onCloseClick: PropTypes.func,\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    label: PropTypes.node.isRequired,\n    renderNode: PropTypes.object,\n  }\n\n  static defaultProps = {\n    autoclose: Drawer.defaultProps.autoclose,\n    contentId: 'main-content',\n    // Defaults to false since it keeps the state of the drawerType in sync and makes the Drawer\n    // controlled. On initial mount without any defaultMedia updates, it would always be considered\n    // temporary\n    constantDrawerType: false,\n    jumpLabel: 'Jump to content',\n    extractMini: true,\n    position: Drawer.defaultProps.position,\n    defaultMedia: Drawer.defaultProps.defaultMedia,\n    mobileDrawerType: Drawer.defaultProps.mobileType,\n    tabletDrawerType: Drawer.defaultProps.tabletType,\n    desktopDrawerType: Drawer.defaultProps.desktopType,\n    mobileMinWidth: Drawer.defaultProps.mobileMinWidth,\n    tabletMinWidth: Drawer.defaultProps.tabletMinWidth,\n    desktopMinWidth: Drawer.defaultProps.desktopMinWidth,\n    includeDrawerHeader: true,\n    contentComponent: 'main',\n    temporaryIcon: <FontIcon>menu</FontIcon>,\n    toolbarThemeType: 'colored',\n    persistentIcon: <FontIcon>arrow_back</FontIcon>,\n    transitionName: 'md-cross-fade',\n    transitionEnterTimeout: 300,\n    drawerTransitionDuration: Drawer.defaultProps.transitionDuration,\n  };\n\n  /**\n   * Determines the current media and returns an object containing matches for `mobile`, `tablet`, `desktop`,\n   * and the current drawer type. This expects a `props` object of the drawer.\n   *\n   * If this is used server side, it will default to only matching mobile.\n   *\n   * @param {Object=} props - The current drawer's prop shape to extract the mobile, tablet, and desktop type/min\n   *    widths. This defaults to the drawer's default props.\n   * @return {Object} an object containing the media matches and the current type to use for the drawer.\n   */\n  static getCurrentMedia(props = NavigationDrawer.defaultProps) {\n    const {\n      mobileDrawerType: mobileType,\n      tabletDrawerType: tabletType,\n      desktopDrawerType: desktopType,\n      constantDrawerType: constantType,\n      ...others\n    } = props;\n\n    return Drawer.getCurrentMedia({ mobileType, tabletType, desktopType, constantType, ...others });\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { defaultMedia, defaultVisible, initialDrawerType } = props;\n\n    this.state = {\n      mobile: initialDrawerType || defaultMedia === 'mobile',\n      tablet: initialDrawerType || defaultMedia === 'tablet',\n      desktop: initialDrawerType || defaultMedia === 'desktop',\n    };\n\n    if (typeof props.drawerType === 'undefined') {\n      this.state.drawerType = props[`${initialDrawerType || defaultMedia}DrawerType`];\n    }\n\n    const type = getField(props, this.state, 'drawerType');\n\n    if (typeof props.visible === 'undefined') {\n      // The logic for determining the visibility is handled by the created mini drawer\n      this.state.visible = isPermanent(type);\n      if (!this.state.visible && typeof defaultVisible !== 'undefined') {\n        this.state.visible = defaultVisible;\n      }\n    }\n  }\n\n  getChildContext() {\n    const {\n      persistentIcon,\n      contentId: id,\n      jumpLabel: label,\n\n      // deprecated\n      persistentIconChildren,\n      persistentIconClassName,\n      closeIconChildren,\n      closeIconClassName,\n    } = this.props;\n\n    return {\n      id,\n      label,\n      closeIcon: getDeprecatedIcon(\n        closeIconClassName || persistentIconClassName,\n        closeIconChildren || persistentIconChildren,\n        persistentIcon,\n      ),\n      onCloseClick: this._toggleVisibility,\n      renderNode: this.context.renderNode,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const visible = getField(this.props, this.state, 'visible');\n    const nVisible = getField(nextProps, this.state, 'visible');\n    if (visible !== nVisible) {\n      this._animate(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _animate = (props = this.props, state = this.state) => {\n    if (isTemporary(getField(props, state, 'drawerType'))) {\n      return;\n    }\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this.setState({ contentActive: false });\n    }, props.drawerTransitionDuration);\n\n    this.setState({ contentActive: true });\n  };\n\n  _toggleVisibility = (e) => {\n    const { onVisibilityToggle, onVisibilityChange, onDrawerChange } = this.props;\n    const visible = !getField(this.props, this.state, 'visible');\n    const callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\n    if (callback) {\n      callback(visible, e);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n      this._animate(this.props);\n    }\n  };\n\n  _handleVisibility = (visible) => {\n    const { onVisibilityToggle, onVisibilityChange, onDrawerChange } = this.props;\n    const callback = onVisibilityChange || onVisibilityToggle || onDrawerChange;\n    if (callback) {\n      callback(visible);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n      this._animate(this.props);\n    }\n  };\n\n  _handleTypeChange = (drawerType, mediaState) => {\n    const { onMediaTypeChange } = this.props;\n    let state = mediaState;\n    if (onMediaTypeChange) {\n      onMediaTypeChange(drawerType, mediaState);\n    }\n\n    if (typeof this.props.drawerType === 'undefined') {\n      state = { ...mediaState, drawerType };\n    }\n\n\n    this.setState(state);\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      toolbarStyle,\n      toolbarClassName,\n      drawerStyle,\n      drawerClassName,\n      contentStyle,\n      contentClassName,\n      contentComponent: Content,\n      miniDrawerStyle,\n      miniDrawerClassName,\n      miniNavStyle,\n      miniNavClassName,\n      miniDrawerId,\n      miniNavItemsId,\n      navItems,\n      children,\n      drawerId,\n      drawerTitle,\n      drawerZDepth,\n      drawerChildren,\n      drawerHeaderChildren,\n      drawerTransitionDuration,\n      toolbarId,\n      toolbarTitle,\n      toolbarTitleMenu,\n      toolbarTitleStyle,\n      toolbarTitleClassName,\n      toolbarActions,\n      toolbarProminent,\n      toolbarProminentTitle,\n      toolbarThemeType,\n      toolbarSingleColor,\n      toolbarChildren,\n      toolbarZDepth,\n      mobileDrawerType: mobileType,\n      tabletDrawerType: tabletType,\n      desktopDrawerType: desktopType,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      extractMini,\n      miniDrawerHeader,\n      miniDrawerChildren,\n      footer,\n      includeDrawerHeader,\n      contentId,\n      contentProps,\n      constantDrawerType,\n      temporaryIcon,\n\n      // deprecated\n      temporaryIconChildren,\n      temporaryIconClassName,\n      menuIconChildren,\n      menuIconClassName,\n      /* eslint-disable no-unused-vars */\n      drawerType: propDrawerType,\n      drawerHeader: propDrawerHeader,\n      renderNode: propRenderNode,\n      jumpLabel,\n      persistentIcon,\n\n      // deprecated\n      onDrawerChange,\n      closeIconChildren,\n      closeIconClassName,\n      persistentIconChildren,\n      persistentIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { drawerHeader } = this.props;\n    const { desktop, tablet, contentActive } = this.state;\n\n    const drawerType = getField(this.props, this.state, 'drawerType');\n    const visible = getField(this.props, this.state, 'visible');\n    const renderNode = getField(this.props, this.context, 'renderNode');\n    const mini = isMini(drawerType);\n    const temporary = isTemporary(drawerType);\n    const persistent = isPersistent(drawerType);\n    const clipped = drawerType === DrawerTypes.CLIPPED;\n    const floating = drawerType === DrawerTypes.FLOATING;\n\n    const offset = (desktop || tablet ? !temporary && visible : visible);\n    const toolbarRelative = cn({\n      'md-toolbar-relative': !toolbarProminent && !toolbarProminentTitle,\n      'md-toolbar-relative--prominent': toolbarProminent || toolbarProminentTitle,\n    });\n\n    let nav;\n    if (temporary || persistent) {\n      nav = (\n        <Button\n          key=\"nav\"\n          onClick={this._toggleVisibility}\n          disabled={persistent && visible}\n          icon\n          iconEl={getDeprecatedIcon(\n            menuIconClassName || temporaryIconClassName,\n            menuIconChildren || temporaryIconChildren,\n            temporaryIcon\n          )}\n        />\n      );\n    }\n\n    let closeButton;\n    if (persistent) {\n      closeButton = <CloseButton />;\n    }\n\n    if (!drawerHeader && includeDrawerHeader) {\n      drawerHeader = (\n        <Toolbar\n          key=\"drawer-header\"\n          title={drawerTitle}\n          actions={visible && nav ? closeButton : null}\n          className={cn('md-divider-border md-divider-border--bottom', {\n            [toolbarRelative]: clipped || floating,\n          })}\n        >\n          {drawerHeaderChildren}\n          <JumpToContentLink />\n        </Toolbar>\n      );\n    }\n    let miniDrawer;\n    if (mini) {\n      let miniList;\n      if (extractMini) {\n        miniList = (\n          <List\n            id={miniNavItemsId}\n            key=\"mini-nav-items\"\n            style={miniNavStyle}\n            className={cn(miniNavClassName, toolbarRelative)}\n          >\n            {navItems.map(toMiniListItem)}\n          </List>\n        );\n      }\n\n      miniDrawer = (\n        <Drawer\n          id={miniDrawerId}\n          key=\"mini-drawer\"\n          type={drawerType}\n          renderNode={renderNode}\n          aria-hidden={visible}\n          style={miniDrawerStyle}\n          className={miniDrawerClassName}\n        >\n          {miniDrawerHeader}\n          {miniList}\n          {miniDrawerChildren}\n        </Drawer>\n      );\n    }\n\n    const desktopOffset = !clipped && !floating && offset;\n\n    return (\n      <div id={id} style={style} className={className}>\n        <Toolbar\n          id={toolbarId}\n          colored={toolbarThemeType === 'colored'}\n          themed={toolbarThemeType === 'themed'}\n          singleColor={toolbarSingleColor}\n          style={toolbarStyle}\n          className={cn({\n            'md-toolbar--over-drawer': clipped || floating || (mini && !visible),\n          }, toolbarClassName)}\n          title={toolbarTitle}\n          titleMenu={toolbarTitleMenu}\n          prominent={toolbarProminent}\n          prominentTitle={toolbarProminentTitle}\n          titleStyle={toolbarTitleStyle}\n          titleClassName={cn({\n            'md-title--drawer-active': contentActive,\n            'md-transition--deceleration': offset && visible,\n            'md-transition--acceleration': offset && !visible,\n            'md-title--permanent-offset': desktopOffset && isPermanent(drawerType),\n            'md-title--persistent-offset': desktopOffset && persistent,\n          }, toolbarTitleClassName)}\n          nav={nav}\n          actions={toolbarActions}\n          fixed\n          zDepth={toolbarZDepth}\n        >\n          {toolbarChildren}\n        </Toolbar>\n        {miniDrawer}\n        <Drawer\n          {...props}\n          id={drawerId}\n          constantType={constantDrawerType}\n          transitionDuration={drawerTransitionDuration}\n          header={drawerHeader}\n          style={drawerStyle}\n          className={drawerClassName}\n          navItems={navItems}\n          renderNode={renderNode}\n          mobileType={mobileType}\n          tabletType={tabletType}\n          desktopType={desktopType}\n          type={getNonMiniType(drawerType)}\n          visible={visible}\n          zDepth={drawerZDepth}\n          onVisibilityChange={this._handleVisibility}\n          onMediaTypeChange={this._handleTypeChange}\n        >\n          {drawerChildren}\n        </Drawer>\n        <CSSTransitionGroup\n          {...contentProps}\n          id={contentId}\n          component={Content}\n          transitionName={transitionName}\n          transitionEnter={!!transitionEnterTimeout}\n          transitionEnterTimeout={transitionEnterTimeout}\n          transitionLeave={!!transitionLeaveTimeout}\n          transitionLeaveTimeout={transitionLeaveTimeout}\n          tabIndex={-1}\n          style={contentStyle}\n          className={cn('md-navigation-drawer-content', {\n            'md-navigation-drawer-content--active': contentActive,\n            'md-navigation-drawer-content--inactive': !visible,\n            'md-navigation-drawer-content--prominent-offset': toolbarProminent || toolbarProminentTitle,\n            'md-transition--deceleration': visible,\n            'md-transition--acceleration': !visible,\n            'md-drawer-relative': offset,\n            'md-drawer-relative--mini': mini && (!visible || temporary),\n          }, toolbarRelative, contentClassName)}\n        >\n          {children}\n        </CSSTransitionGroup>\n        {footer}\n      </div>\n    );\n  }\n}\n","/**\n * Checks if a variable provided is defined and a correctly formatted date.\n *\n * Examples:\n * - isValidDate(null) -> false\n * - isValidDate('') -> false\n * - isValidDate(new Date('23--33')) - false (malformed date)\n * - isValidDate(new Date()) -> true\n *\n * @param d - Any value that should be checked if it is a valid date\n * @return {boolean} true if it is a valid date.\n */\nexport default function isValidDate(d) {\n  // just checking if getTime is a function is ridiculously quicker than instanceof Date\n  // and _seems_ safe enough\n  return !!d && typeof d.getTime === 'function' && d.getTime() === d.getTime();\n}\n","import isValidDate from './isValidDate';\n\n/**\n * Adds the specified number of days to a provided date. If the date\n * is null, an invalid formatted date, or not a Date instance, null\n * will be returned instead.\n *\n * @param {Date} date - The date to update\n * @param {number} amount - The number of days to add. This can be positive\n *    or negative.\n * @return {Date} a new date with the number of days added or null.\n */\nexport default function addDay(date, amount) {\n  if (!isValidDate(date)) {\n    return null;\n  }\n\n  const d = new Date(date);\n  d.setDate(d.getDate() + amount);\n  return d;\n}\n","import isValidDate from './isValidDate';\n\n/**\n * Gets the last day in a month as a new Date.\n *\n * @param {Date} date - The date to get the last date in a month for\n * @return {Date} the last day in the month as a date object or null.\n */\nexport default function getLastDay(date) {\n  if (!isValidDate(date)) {\n    return null;\n  }\n\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n","import getLastDay from './getLastDay';\n\n/**\n * Gets the number of days in a month for the provided date.\n *\n * @param {Date} date - The date to get the number of days for\n * @return {number} the number of days in the month or -1 if it is false-ish\n *    or an invalid date object.\n */\nexport default function getDaysInMonth(date) {\n  const day = getLastDay(date);\n  return day === null ? -1 : day.getDate();\n}\n","import isValidDate from './isValidDate';\nimport getDaysInMonth from './getDaysInMonth';\n\n\n/**\n * Adds the specified number of months to a provided date. If the date\n * is null, an invalid formatted date, or not a Date instance, null\n * will be returned instead.\n *\n * When a new month is returned, it will make sure that the date matches\n * the date in the old month if possible, if the new month does not have\n * include the new date, the `newMonthDate` will be used instead.\n *\n * @param {Date} date - The date to update\n * @param {number} amount - The number of months to add. This can be positive\n *    or negative.\n * @param {number=1} newMonthDate - An optional date to set in the new month\n *    if the new month does not have the old date.\n * @return {Date} a new date with the number of days added or null.\n */\nexport default function addMonth(date, amount, newMonthDate) {\n  if (!isValidDate(date)) {\n    return null;\n  } else if (amount === 0) {\n    return new Date(date);\n  }\n\n  if (!newMonthDate) { // 0 is invalid for this case\n    newMonthDate = date.getDate();\n  }\n\n  const d = new Date(date);\n  d.setDate(1); // reset to first day to prevent month overflows\n  d.setMonth(d.getMonth() + amount);\n\n  if (newMonthDate !== 1 && newMonthDate <= getDaysInMonth(d)) {\n    // set the date back to the correct day if it still exists within the month\n    d.setDate(newMonthDate);\n  }\n\n  return d;\n}\n","import isValidDate from './isValidDate';\n\n/**\n * Adds the specified number of years to a provided date. If the date\n * is null, an invalid formatted date, or not a Date instance, null\n * will be returned instead.\n *\n * @param {Date} date - The date to update\n * @param {number} amount - The number of years to add. This can be positive\n *    or negative.\n * @return {Date} a new date with the number of years added or null.\n */\nexport default function addYear(date, amount) {\n  if (!isValidDate(date)) {\n    return null;\n  }\n\n  const d = new Date(date);\n  d.setFullYear(d.getFullYear() + amount);\n\n  return d;\n}\n","import addDay from './addDay';\nimport addMonth from './addMonth';\nimport addYear from './addYear';\n\n/**\n * Adds a given amount to a date.\n *\n * @param {Date} date - The date to add\n * @param {number} amount - The amount to add\n * @param {string} part - The date part to add to. ['D', 'M', 'Y']\n * @param {number=1} newMonthDate - An optional date to set in the new month\n *    if the new month does not have the old date. This only applies to month\n *    addition.\n * @return a new Date with the part added or the date if the part is not valid.\n */\nexport default function addDate(date, amount, part, newMonthDate) {\n  switch (part) {\n    case 'D':\n      return addDay(date, amount);\n    case 'M':\n      return addMonth(date, amount, newMonthDate);\n    case 'Y':\n      return addYear(date, amount);\n    default:\n      return date;\n  }\n}\n","import isValidDate from './isValidDate';\n\n/**\n * Checks if two dates are part of the same year.\n *\n * @param {Date} d1 - The first date to compare.\n * @param {Date} d2 - The second date to compare.\n * @param {boolean=false} bothNullValue - boolean for what should be returned if\n *  both values are null.\n * @return {boolean} true if both the dates are defined and part of the same year or\n *  if both values are null it will return the `bothNullValue`.\n */\nexport default function isSameYear(d1, d2, bothNullValue = false) {\n  if (!d1 && !d2) {\n    return bothNullValue;\n  } else if (!isValidDate(d1) || !isValidDate(d2)) {\n    return false;\n  }\n\n  return d1.getFullYear() === d2.getFullYear();\n}\n","import isSameYear from './isSameYear';\n\n/**\n * Checks if two dates are part of the same month. This will also\n * make sure the dates are part of the same year.\n *\n * @param {Date} d1 - The first date to compare.\n * @param {Date} d2 - The second date to compare.\n * @param {boolean=false} bothNullValue - boolean for what should be returned if\n *  both values are null.\n * @return {boolean} true if both the dates are defined and part of the same year and month\n *  or if both values are null it will return the `bothNullValue`\n */\nexport default function isSameMonth(d1, d2, bothNullValue = false) {\n  if (!d1 && !d2) {\n    return bothNullValue;\n  }\n\n  return isSameYear(d1, d2, bothNullValue) && d1.getMonth() === d2.getMonth();\n}\n","import isSameMonth from './isSameMonth';\n\n/**\n * Checks if two dates are part of the same date. This will also\n * make sure the dates are part of the same year and month.\n *\n * @param {Date} d1 - The first date to compare.\n * @param {Date} d2 - The second date to compare.\n * @param {boolean=false} bothNullValue - boolean for what should be returned if\n *  both values are null.\n * @return {boolean} true if both the dates are defined and part of the same year, month, and day\n *  or if both values are null it will return the `bothNullValue`.\n */\nexport default function isSameDay(d1, d2, bothNullValue = false) {\n  if (!d1 && !d2) {\n    return bothNullValue;\n  }\n\n  return isSameMonth(d1, d2, bothNullValue) && d1.getDate() === d2.getDate();\n}\n","/** @module utils/omit */\n\n/**\n * This should hopefully be very similar to lodash's chunk function. It will\n * take an array and split it into chunks of the given size. Any remainder will\n * be in the last chunk.\n *\n * @param {Array} arr - the array to split into chunks\n * @param {integer} size - the desired length of each chunk\n * @return {Array} - the chunked array\n */\nexport default function chunk(arr, size) {\n  if (!arr) {\n    return [];\n  }\n  return arr.reduce((chunks, item, index) => (\n    index % size === 0\n      ? [...chunks, arr.slice(index, index + size)]\n      : chunks\n  ), []);\n}\n","import isValidDate from './isValidDate';\n\n/**\n * Removes all the time parts (hours, minutes, seconds, milliseconds) from a date.\n * The hour of the stripped time is set to 1 by default to help with cross-browser\n * date implementations and how hour 0 sometimes is the previous day.\n *\n * @param {Date} date the date to strip\n * @param {number=0} hours - the fake hours to set for the stripped time date.\n * @return a new Date with the time stripped.\n */\nexport default function stripTime(date, hours = 0) {\n  if (!isValidDate(date)) {\n    return null;\n  }\n\n  const d = new Date(date);\n  d.setHours(hours, 0, 0, 0);\n\n  return d;\n}\n","import isValidDate from './isValidDate';\n\n/**\n * Takes in a date and returns a new date at the specified day of week.\n *\n * Examples:\n * // to Sunday\n * - toDayOfWeek(new Date(2018, 0, 1), 0) == new Date(2017, 11, 31)\n *\n * // to Monday\n * - toDayOfWeek(new Date(2018, 0, 1), 1) == new Date(2018, 0, 1)\n *\n * @param {Date} date - The date to convert to a day of week\n * @param {number=0} dow - The day of the week to convert to\n * @return {Date} the new date set at the day of week or null if the\n *    date is invalid or false-ish.\n */\nexport default function toDayOfWeek(date, dow = 0) {\n  if (!isValidDate(date)) {\n    return null;\n  }\n\n  const d = new Date(date);\n  const day = date.getDay();\n  const diff = (d.getDate() - day) + dow;\n  return new Date(d.setDate(diff));\n}\n","import isValidDate from './isValidDate';\n\n/**\n * Checks if a date is the month before another date without time\n *\n * @param {Date} date the date to check if it is before the other\n * @param {Date} toCompare the date to compare to\n * @return true if the date is before the other date's first day of month.\n */\nexport default function isMonthBefore(date, toCompare) {\n  if (!isValidDate(date) || !isValidDate(toCompare)) {\n    return false;\n  }\n\n  const d1 = new Date(date.getFullYear(), date.getMonth(), 1);\n  const d2 = new Date(toCompare.getFullYear(), toCompare.getMonth() - 1, 1);\n  return d1 > d2;\n}\n","/** @module utils/DateUtils/formatTime */\n\n/**\n * Formats a date as a time string using the DateTimeFormat function and locales.\n *\n * @param {function} DateTimeFormat the DateTimeFormat function to use.\n * @param {string|string[]} locales the locales to use.\n * @param {Boolean} showSeconds boolean if seconds should be formatted\n * @param {Date} time the time to format into a string.\n * @return a string of the formatted time.\n */\nexport default function formatTime(DateTimeFormat, locales, showSeconds, time) {\n  let format;\n  if (showSeconds === true) {\n    format = { hour: 'numeric', minute: '2-digit', second: '2-digit' };\n  } else {\n    format = { hour: 'numeric', minute: '2-digit' };\n  }\n\n  return new DateTimeFormat(locales, format).format(time);\n}\n","/** @module utils/DateUtils/extractTimeParts */\nimport formatTime from './formatTime';\n\n/**\n * Extracts the hours, minutes, and optional time period from\n * a date time.\n *\n * @param {function} DateTimeFormat the DateTimeFormat function to use.\n * @param {string|string[]} locales the locales to use.\n * @param {Boolean} showSeconds boolean if seconds should be extracted\n * @param {Date} time the time to extract from.\n * @return {Object} an object of { hours, minutes, timePeriod }\n */\nexport default function extractTimeParts(DateTimeFormat, locales, showSeconds, time) {\n  let hours;\n  let minutes;\n  let seconds;\n  let minuteSeparator;\n  let secondSeparator;\n  let remaining;\n  const formatted = formatTime(DateTimeFormat, locales, showSeconds, time);\n  // IE does not like lookaheads or splitting on [^0-9]\n  // it will include the non-printable characters..\n\n  if (showSeconds === true) {\n    [hours, minutes, seconds] = formatted.match(/[0-9]+/g);\n    [minuteSeparator, secondSeparator, ...remaining] = formatted.match(/[ ,.:A-z]+/g);\n  } else {\n    [hours, minutes] = formatted.match(/[0-9]+/g);\n    [minuteSeparator, ...remaining] = formatted.match(/[ ,.:A-z]+/g);\n  }\n\n  let timePeriod;\n  if (remaining && remaining.length) {\n    timePeriod = remaining.join('').trim();\n  }\n\n  if (showSeconds === true) {\n    return {\n      hours,\n      minutes: minuteSeparator + minutes,\n      seconds: secondSeparator + seconds,\n      timePeriod,\n    };\n  }\n\n  return {\n    hours,\n    minutes: minuteSeparator + minutes,\n    timePeriod,\n  };\n}\n\n","/** @module utils/NumberUtils/calcTimeFromPoint */\n\nfunction isPointInCircle(cx, cy, r, x, y) {\n  const distance = Math.pow(cx - x, 2) + Math.pow(cy - y, 2);\n  return distance <= Math.pow(r, 2);\n}\n\nfunction toDegrees(radians) {\n  return radians * (180 / Math.PI);\n}\n\n/**\n * Takes a point from a mouse or touch event and a center point of a circle to determine\n * what the new time should be.\n *\n * If the point.y < center.y, the point is in the top half of the circle.\n * If the point.x < center.x, the point is in the left half of the circle.\n *\n * @param {Object} point - The mouse or touch event's point that contains an x and y coordinate.\n * @param {Object} center - The center point for the circle that contains an x and y coordinate.\n * @param {Number} innerRadius - An inner radius for clocks that have 24 hour times. This is\n *    a circle that contains hours 12-23.\n * @param {Boolean} minutes - Boolena if the current time to be calculated is minutes instead of\n *    hours.\n * @param {Boolean} hour12 - Boolean if the clock is a 12 hour clock.\n * @return {Number} the new time.\n */\nexport default function calcTimeFromPoint(point, center, innerRadius, minutes, hour12) {\n  const x = point.x - center.x;\n  const y = point.y - center.y;\n  const degrees = toDegrees(Math.atan2(y, x));\n  const sectors = minutes ? 60 : 12;\n  const sectorSize = 360 / sectors;\n  let time = Math.round(degrees / sectorSize);\n\n  // Since the css transform has 0π at π/2 place, we need to offset the\n  // time to that location.\n  time += (minutes ? 15 : 3);\n\n  // If time is still negative, it is in the top half of the circle\n  if (time < 0) {\n    time += sectors;\n  }\n\n\n  // Finally, if it is a 24 hour clock, need to check if the point is actually\n  // selecting hours 13 - 24 (0).\n  if (!minutes && !hour12) {\n    const isInCircle = isPointInCircle(0, 0, innerRadius, x, y);\n\n    if ((time === 0 && !isInCircle) || (time !== 0 && isInCircle)) {\n      time += 12;\n    }\n  }\n\n  return time;\n}\n","/** @module utils/DateUtils/addHours */\n\n/**\n * Adds hours to a date.\n *\n * @param {Date} time the time to increment\n * @param {number} hours the number of hours to increment by.\n * @return a new Date with the new hours set.\n */\nexport default function addHours(time, hours) {\n  const t = new Date(time.getTime());\n  t.setHours(t.getHours() + hours);\n  return t;\n}\n","/** @module utils/NumberUtils/minMaxLoop */\n\n/**\n * Keeps a number within the min and max values. When the number becomes less\n * than the min, it will loop around and be the max value. When the number is\n * greater than the max, it will loop around and be the min value.\n *\n * @param {Number} current - the current number\n * @param {Number} min - the minimum number allowed\n * @param {Number} max - the maximum number allowed\n * @param {Boolean} increment - boolean if the value should be incremented or decremented by\n *    1.\n * @return {Number} the next number\n */\nexport default function minMaxLoop(current, min, max, increment = true) {\n  let next = current + (increment ? 1 : -1);\n  if (max < next) {\n    next = min;\n  } else if (next < min) {\n    next = max;\n  }\n\n  return next;\n}\n","/** @module utils/NumberUtils/calculateValueDistance */\n\n/**\n * This calculates the distance from a screen x location to a position in some element\n * by comparing the width of the element and the element's page position to the screen\n * x position.\n *\n * If the distance is not _normalized_ the distance will be updated to be a percentage\n * of the element's total width.\n *\n * @param {Number} x - the screen x location.\n * @param {Number} width - the element's width\n * @param {Number} left - the element's page x position.\n * @param {Boolean} normalize - boolean if the distance should be a percentage.\n *\n * @return {Number} the distance from the element's left position to the page x\n *    location.\n */\nfunction calculateDistance(x, width, left, normalize) {\n  const distance = Math.min(\n    width,\n    Math.max(0, x - left)\n  );\n\n  return normalize ? distance : distance / width * 100;\n}\n\n/**\n * This calculates the new value and distance for a slider. It will compare the page x\n * location of a touch or mouse event to the slider's track page x position. If the\n * final value and distance should be _normalized_, they will be updated to be rounded\n * with the scale and steps in mind.\n *\n * The distance will always be contained within a percentage of 0 - 100 while the\n * value will be contained within the min and max values.\n *\n * @param {Number} x - the page x location of the touch or mouse event.\n * @param {Number} width - the slider's width\n * @param {Number} left - the slider's left position in the page.\n * @param {Number} scale - the total number values included in the slider.\n * @param {Number} step - the amount to increment by.\n * @param {Number} min - the min value for the slider.\n * @param {Number} max - the max value for the slider.\n * @param {Boolean} normalize - boolean if the vaue and distance should be _normalized_.\n *\n * @return {Object} an object with the value and distance.\n */\nexport default function calculateValueDistance(x, width, left, scale, step, min, max, normalize) {\n  let value;\n  let distance = calculateDistance(x, width, left, normalize);\n  if (normalize) {\n    value = Math.round(distance / (width / scale));\n    if (step < 1) {\n      const decimals = String(step).split('.')[1];\n      const corrector = typeof decimals !== 'undefined' && decimals.length > 0\n        ? Math.pow(10, decimals.length)\n        : 1;\n\n      const modded = (value * corrector) % (step * corrector);\n      if (modded !== 0 && modded >= step / 2) {\n        value += (step - modded);\n      } else if (modded !== 0) {\n        value -= modded;\n      }\n    }\n\n    distance = value / scale * 100;\n    value = (value * step) + min;\n  } else {\n    value = min + step * Math.round(distance / 100 * scale);\n  }\n\n  return {\n    distance: Math.max(0, Math.min(100, distance)),\n    value: Math.max(min, Math.min(max, value)),\n  };\n}\n","/** @module utils/NumberUtils/updateUnit */\n\n/**\n * Takes in a css unit (px, rem, em, etc) or a number and applies a function to the\n * number part of the unit.\n *\n * If the unit was a number to start with and a `toUnit` is given, the number will\n * be given the `toUnit`. Otherwise the number will be returned.\n *\n * If the unit was a string, the original units will be applied back to the updated\n * unit's value.\n *\n * @param {number|String} unit - the unit to apply a function to.\n * @param {function} fn - the function to apply to the number.\n * @param {String=} toUnit - an optional unit to cast the updated unit to.\n *\n * @return {String|number} the updated unit.\n */\nexport default function updateUnit(unit, fn, toUnit) {\n  const updated = fn(parseInt(unit, 10));\n\n  if (typeof unit === 'number') {\n    return toUnit\n      ? `${updated}${toUnit}`\n      : updated;\n  }\n\n  return `${updated}${unit.replace(/[0-9]/g, '')}`;\n}\n","const gcc = 'getComposedComponent';\n\n/**\n * Just checks if the fab is actually a ref to the FAB Button.\n */\nexport default function isInvalidAnimate(fab) {\n  return typeof fab[gcc] !== 'function' ||\n    typeof fab[gcc]()[gcc] !== 'function' ||\n    typeof fab[gcc]()[gcc]()._animateForSnackbar !== 'function';\n}\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TooltipContainer from './TooltipContainer';\n\n\n/**\n * Adds a tooltip for a component/element given as the only child.\n *\n * The component should render its children, or the tooltip will not be shown.\n * Also the component should be positioned by `className` or `style`\n * (CSS property `position` should have value `relative`, `absolute` or `fixed`),\n * or the tooltip can appear incorrectly.\n * Use `setPosition={true}` to automatically add `position: 'relative'` to the `style` of the wrapped component.\n *\n * Besides of `children` and `setPosition` all props set for `Tooltipped` component are passed through\n * to `TooltipContainer` that is added as a child of the wrapped component and controls the tooltip.\n *\n * ```js\n * <Tooltipped\n *   label=\"Tooltip for text\"\n *   position=\"left\"\n *   delay={1000}\n * >\n *   <span style={{position: 'absolute', top: '10px', left: '70%'}}>\n *     Some text\n *     <div>Another line of text</div>\n *   </span>\n * </Tooltipped>\n * ```\n *\n * ```js\n * <Tooltipped\n *   setPosition={true}\n *   label=\"Avatar's tooltip\"\n *   position=\"top\"\n * >\n *   <span style={{marginLeft: '30px'}}>\n *       <Avatar random>T</Avatar>\n *   </span>\n * </Tooltipped>\n * ```\n */\nexport default function Tooltipped({ children, setPosition, ...props }) {\n  let target = React.Children.only(children);\n  const targetProps = target.props;\n\n  if (props.label) {\n    let clonedProps = targetProps;\n    if (setPosition) {\n      clonedProps = {\n        ...clonedProps,\n        style: { ...clonedProps.style, position: 'relative' },\n      };\n    }\n\n    target = React.cloneElement(target, clonedProps, [\n      targetProps.children,\n      <TooltipContainer key=\"tooltipContainer\" {...props} />,\n    ]);\n  }\n\n  return target;\n}\n\nTooltipped.displayName = 'Tooltipped';\n\nTooltipped.propTypes = {\n  /**\n   * A component/element the tooltip should be linked to.\n   */\n  children: PropTypes.element.isRequired,\n  /**\n   * Tooltip's content.\n   */\n  label: PropTypes.node,\n  /**\n   * Whether `position: relative` should be added to the `style` property of the wrapped component.\n   */\n  setPosition: PropTypes.bool,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","\r\nmodule.exports = function chain(){\r\n  var len = arguments.length\r\n  var args = [];\r\n\r\n  for (var i = 0; i < len; i++)\r\n    args[i] = arguments[i]\r\n\r\n  args = args.filter(function(fn){ return fn != null })\r\n\r\n  if (args.length === 0) return undefined\r\n  if (args.length === 1) return args[0]\r\n\r\n  return args.reduce(function(current, next){\r\n    return function chainedFunction() {\r\n      current.apply(this, arguments);\r\n      next.apply(this, arguments);\r\n    };\r\n  })\r\n}\r\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","'use strict';\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\n\nvar _react = require('react');\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\nfunction getChildMapping(children) {\n  if (!children) {\n    return children;\n  }\n  var result = {};\n  _react.Children.map(children, function (child) {\n    return child;\n  }).forEach(function (child) {\n    result[child.key] = child;\n  });\n  return result;\n}\n\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    if (next.hasOwnProperty(key)) {\n      return next[key];\n    }\n\n    return prev[key];\n  }\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  var nextKeysPending = {};\n\n  var pendingKeys = [];\n  for (var prevKey in prev) {\n    if (next.hasOwnProperty(prevKey)) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i = void 0;\n  var childMapping = {};\n  for (var nextKey in next) {\n    if (nextKeysPending.hasOwnProperty(nextKey)) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n    childMapping[nextKey] = getValueForKey(nextKey);\n  }\n\n  // Finally, add the keys which didn't appear before any key in `next`\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _chainFunction = require('chain-function');\n\nvar _chainFunction2 = _interopRequireDefault(_chainFunction);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _ChildMapping = require('./utils/ChildMapping');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  component: _propTypes2.default.any,\n  childFactory: _propTypes2.default.func,\n  children: _propTypes2.default.node\n};\n\nvar defaultProps = {\n  component: 'span',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n\nvar TransitionGroup = function (_React$Component) {\n  _inherits(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    _classCallCheck(this, TransitionGroup);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.performAppear = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillAppear) {\n        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));\n      } else {\n        _this._handleDoneAppearing(key, component);\n      }\n    };\n\n    _this._handleDoneAppearing = function (key, component) {\n      if (component.componentDidAppear) {\n        component.componentDidAppear();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully appeared. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performEnter = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillEnter) {\n        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));\n      } else {\n        _this._handleDoneEntering(key, component);\n      }\n    };\n\n    _this._handleDoneEntering = function (key, component) {\n      if (component.componentDidEnter) {\n        component.componentDidEnter();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully entered. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performLeave = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillLeave) {\n        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));\n      } else {\n        // Note that this is somewhat dangerous b/c it calls setState()\n        // again, effectively mutating the component before all the work\n        // is done.\n        _this._handleDoneLeaving(key, component);\n      }\n    };\n\n    _this._handleDoneLeaving = function (key, component) {\n      if (component.componentDidLeave) {\n        component.componentDidLeave();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n        // This entered again before it fully left. Add it again.\n        _this.keysToEnter.push(key);\n      } else {\n        _this.setState(function (state) {\n          var newChildren = _extends({}, state.children);\n          delete newChildren[key];\n          return { children: newChildren };\n        });\n      }\n    };\n\n    _this.childRefs = Object.create(null);\n\n    _this.state = {\n      children: (0, _ChildMapping.getChildMapping)(props.children)\n    };\n    return _this;\n  }\n\n  TransitionGroup.prototype.componentWillMount = function componentWillMount() {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  };\n\n  TransitionGroup.prototype.componentDidMount = function componentDidMount() {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key, this.childRefs[key]);\n      }\n    }\n  };\n\n  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)\n    });\n\n    for (var key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (var _key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);\n      if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {\n        this.keysToLeave.push(_key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  };\n\n  TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {\n    var _this2 = this;\n\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(function (key) {\n      return _this2.performEnter(key, _this2.childRefs[key]);\n    });\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(function (key) {\n      return _this2.performLeave(key, _this2.childRefs[key]);\n    });\n  };\n\n  TransitionGroup.prototype.render = function render() {\n    var _this3 = this;\n\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n\n    var _loop = function _loop(key) {\n      var child = _this3.state.children[key];\n      if (child) {\n        var isCallbackRef = typeof child.ref !== 'string';\n        var factoryChild = _this3.props.childFactory(child);\n        var ref = function ref(r) {\n          _this3.childRefs[key] = r;\n        };\n\n        process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(isCallbackRef, 'string refs are not supported on children of TransitionGroup and will be ignored. ' + 'Please use a callback ref instead: https://facebook.github.io/react/docs/refs-and-the-dom.html#the-ref-callback-attribute') : void 0;\n\n        // Always chaining the refs leads to problems when the childFactory\n        // wraps the child. The child ref callback gets called twice with the\n        // wrapper and the child. So we only need to chain the ref if the\n        // factoryChild is not different from child.\n        if (factoryChild === child && isCallbackRef) {\n          ref = (0, _chainFunction2.default)(child.ref, ref);\n        }\n\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(_react2.default.cloneElement(factoryChild, {\n          key: key,\n          ref: ref\n        }));\n      }\n    };\n\n    for (var key in this.state.children) {\n      _loop(key);\n    }\n\n    // Do not forward TransitionGroup props to primitive DOM nodes\n    var props = _extends({}, this.props);\n    delete props.transitionLeave;\n    delete props.transitionName;\n    delete props.transitionAppear;\n    delete props.transitionEnter;\n    delete props.childFactory;\n    delete props.transitionLeaveTimeout;\n    delete props.transitionEnterTimeout;\n    delete props.transitionAppearTimeout;\n    delete props.component;\n\n    return _react2.default.createElement(this.props.component, props, childrenToRender);\n  };\n\n  return TransitionGroup;\n}(_react2.default.Component);\n\nTransitionGroup.displayName = 'TransitionGroup';\n\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTransitionGroup.defaultProps = defaultProps;\n\nexports.default = TransitionGroup;\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + element.className + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\nvar _hasClass = require('./hasClass');\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element)) element.className = element.className + ' ' + className;\n}\nmodule.exports = exports['default'];","'use strict';\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = require('./inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar vendors = ['', 'webkit', 'moz', 'o', 'ms'];\nvar cancel = 'clearTimeout';\nvar raf = fallback;\nvar compatRaf = void 0;\n\nvar getKey = function getKey(vendor, k) {\n  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';\n};\n\nif (_inDOM2.default) {\n  vendors.some(function (vendor) {\n    var rafKey = getKey(vendor, 'request');\n\n    if (rafKey in window) {\n      cancel = getKey(vendor, 'cancel');\n      return raf = function raf(cb) {\n        return window[rafKey](cb);\n      };\n    }\n  });\n}\n\n/* https://github.com/component/raf */\nvar prev = new Date().getTime();\nfunction fallback(fn) {\n  var curr = new Date().getTime(),\n      ms = Math.max(0, 16 - (curr - prev)),\n      req = setTimeout(fn, ms);\n\n  prev = curr;\n  return req;\n}\n\ncompatRaf = function compatRaf(cb) {\n  return raf(cb);\n};\ncompatRaf.cancel = function (id) {\n  window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);\n};\nexports.default = compatRaf;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;\n\nvar _inDOM = require('../util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar transform = 'transform';\nvar prefix = void 0,\n    transitionEnd = void 0,\n    animationEnd = void 0;\nvar transitionProperty = void 0,\n    transitionDuration = void 0,\n    transitionTiming = void 0,\n    transitionDelay = void 0;\nvar animationName = void 0,\n    animationDuration = void 0,\n    animationTiming = void 0,\n    animationDelay = void 0;\n\nif (_inDOM2.default) {\n  var _getTransitionPropert = getTransitionProperties();\n\n  prefix = _getTransitionPropert.prefix;\n  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;\n  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;\n\n\n  exports.transform = transform = prefix + '-' + transform;\n  exports.transitionProperty = transitionProperty = prefix + '-transition-property';\n  exports.transitionDuration = transitionDuration = prefix + '-transition-duration';\n  exports.transitionDelay = transitionDelay = prefix + '-transition-delay';\n  exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';\n\n  exports.animationName = animationName = prefix + '-animation-name';\n  exports.animationDuration = animationDuration = prefix + '-animation-duration';\n  exports.animationTiming = animationTiming = prefix + '-animation-delay';\n  exports.animationDelay = animationDelay = prefix + '-animation-timing-function';\n}\n\nexports.transform = transform;\nexports.transitionProperty = transitionProperty;\nexports.transitionTiming = transitionTiming;\nexports.transitionDelay = transitionDelay;\nexports.transitionDuration = transitionDuration;\nexports.transitionEnd = transitionEnd;\nexports.animationName = animationName;\nexports.animationDuration = animationDuration;\nexports.animationTiming = animationTiming;\nexports.animationDelay = animationDelay;\nexports.animationEnd = animationEnd;\nexports.default = {\n  transform: transform,\n  end: transitionEnd,\n  property: transitionProperty,\n  timing: transitionTiming,\n  delay: transitionDelay,\n  duration: transitionDuration\n};\n\n\nfunction getTransitionProperties() {\n  var style = document.createElement('div').style;\n\n  var vendorMap = {\n    O: function O(e) {\n      return 'o' + e.toLowerCase();\n    },\n    Moz: function Moz(e) {\n      return e.toLowerCase();\n    },\n    Webkit: function Webkit(e) {\n      return 'webkit' + e;\n    },\n    ms: function ms(e) {\n      return 'MS' + e;\n    }\n  };\n\n  var vendors = Object.keys(vendorMap);\n\n  var transitionEnd = void 0,\n      animationEnd = void 0;\n  var prefix = '';\n\n  for (var i = 0; i < vendors.length; i++) {\n    var vendor = vendors[i];\n\n    if (vendor + 'TransitionProperty' in style) {\n      prefix = '-' + vendor.toLowerCase();\n      transitionEnd = vendorMap[vendor]('TransitionEnd');\n      animationEnd = vendorMap[vendor]('AnimationEnd');\n      break;\n    }\n  }\n\n  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';\n\n  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';\n\n  style = null;\n\n  return { animationEnd: animationEnd, transitionEnd: transitionEnd, prefix: prefix };\n}","'use strict';\n\nexports.__esModule = true;\nexports.nameShape = undefined;\nexports.transitionTimeout = transitionTimeout;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction transitionTimeout(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + ' wasn\\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');\n\n        // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n        return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n      }\n    }\n\n    return null;\n  };\n}\n\nvar nameShape = exports.nameShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  leave: _propTypes2.default.string,\n  active: _propTypes2.default.string\n}), _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  enterActive: _propTypes2.default.string,\n  leave: _propTypes2.default.string,\n  leaveActive: _propTypes2.default.string,\n  appear: _propTypes2.default.string,\n  appearActive: _propTypes2.default.string\n})]);","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _addClass = require('dom-helpers/class/addClass');\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = require('dom-helpers/class/removeClass');\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nvar _requestAnimationFrame = require('dom-helpers/util/requestAnimationFrame');\n\nvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\nvar _properties = require('dom-helpers/transition/properties');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar events = [];\nif (_properties.transitionEnd) events.push(_properties.transitionEnd);\nif (_properties.animationEnd) events.push(_properties.animationEnd);\n\nfunction addEndListener(node, listener) {\n  if (events.length) {\n    events.forEach(function (e) {\n      return node.addEventListener(e, listener, false);\n    });\n  } else {\n    setTimeout(listener, 0);\n  }\n\n  return function () {\n    if (!events.length) return;\n    events.forEach(function (e) {\n      return node.removeEventListener(e, listener, false);\n    });\n  };\n}\n\nvar propTypes = {\n  children: _propTypes2.default.node,\n  name: _PropTypes.nameShape.isRequired,\n\n  // Once we require timeouts to be specified, we can remove the\n  // boolean flags (appear etc.) and just accept a number\n  // or a bool for the timeout flags (appearTimeout etc.)\n  appear: _propTypes2.default.bool,\n  enter: _propTypes2.default.bool,\n  leave: _propTypes2.default.bool,\n  appearTimeout: _propTypes2.default.number,\n  enterTimeout: _propTypes2.default.number,\n  leaveTimeout: _propTypes2.default.number\n};\n\nvar CSSTransitionGroupChild = function (_React$Component) {\n  _inherits(CSSTransitionGroupChild, _React$Component);\n\n  function CSSTransitionGroupChild() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransitionGroupChild);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.componentWillAppear = function (done) {\n      if (_this.props.appear) {\n        _this.transition('appear', done, _this.props.appearTimeout);\n      } else {\n        done();\n      }\n    }, _this.componentWillEnter = function (done) {\n      if (_this.props.enter) {\n        _this.transition('enter', done, _this.props.enterTimeout);\n      } else {\n        done();\n      }\n    }, _this.componentWillLeave = function (done) {\n      if (_this.props.leave) {\n        _this.transition('leave', done, _this.props.leaveTimeout);\n      } else {\n        done();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  CSSTransitionGroupChild.prototype.componentWillMount = function componentWillMount() {\n    this.classNameAndNodeQueue = [];\n    this.transitionTimeouts = [];\n  };\n\n  CSSTransitionGroupChild.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unmounted = true;\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.transitionTimeouts.forEach(function (timeout) {\n      clearTimeout(timeout);\n    });\n\n    this.classNameAndNodeQueue.length = 0;\n  };\n\n  CSSTransitionGroupChild.prototype.transition = function transition(animationType, finishCallback, timeout) {\n    var node = (0, _reactDom.findDOMNode)(this);\n\n    if (!node) {\n      if (finishCallback) {\n        finishCallback();\n      }\n      return;\n    }\n\n    var className = this.props.name[animationType] || this.props.name + '-' + animationType;\n    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';\n    var timer = null;\n    var removeListeners = void 0;\n\n    (0, _addClass2.default)(node, className);\n\n    // Need to do this to actually trigger a transition.\n    this.queueClassAndNode(activeClassName, node);\n\n    // Clean-up the animation after the specified delay\n    var finish = function finish(e) {\n      if (e && e.target !== node) {\n        return;\n      }\n\n      clearTimeout(timer);\n      if (removeListeners) removeListeners();\n\n      (0, _removeClass2.default)(node, className);\n      (0, _removeClass2.default)(node, activeClassName);\n\n      if (removeListeners) removeListeners();\n\n      // Usually this optional callback is used for informing an owner of\n      // a leave animation and telling it to remove the child.\n      if (finishCallback) {\n        finishCallback();\n      }\n    };\n\n    if (timeout) {\n      timer = setTimeout(finish, timeout);\n      this.transitionTimeouts.push(timer);\n    } else if (_properties.transitionEnd) {\n      removeListeners = addEndListener(node, finish);\n    }\n  };\n\n  CSSTransitionGroupChild.prototype.queueClassAndNode = function queueClassAndNode(className, node) {\n    var _this2 = this;\n\n    this.classNameAndNodeQueue.push({\n      className: className,\n      node: node\n    });\n\n    if (!this.rafHandle) {\n      this.rafHandle = (0, _requestAnimationFrame2.default)(function () {\n        return _this2.flushClassNameAndNodeQueue();\n      });\n    }\n  };\n\n  CSSTransitionGroupChild.prototype.flushClassNameAndNodeQueue = function flushClassNameAndNodeQueue() {\n    if (!this.unmounted) {\n      this.classNameAndNodeQueue.forEach(function (obj) {\n        // This is for to force a repaint,\n        // which is necessary in order to transition styles when adding a class name.\n        /* eslint-disable no-unused-expressions */\n        obj.node.scrollTop;\n        /* eslint-enable no-unused-expressions */\n        (0, _addClass2.default)(obj.node, obj.className);\n      });\n    }\n    this.classNameAndNodeQueue.length = 0;\n    this.rafHandle = null;\n  };\n\n  CSSTransitionGroupChild.prototype.render = function render() {\n    var props = _extends({}, this.props);\n    delete props.name;\n    delete props.appear;\n    delete props.enter;\n    delete props.leave;\n    delete props.appearTimeout;\n    delete props.enterTimeout;\n    delete props.leaveTimeout;\n    delete props.children;\n    return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), props);\n  };\n\n  return CSSTransitionGroupChild;\n}(_react2.default.Component);\n\nCSSTransitionGroupChild.displayName = 'CSSTransitionGroupChild';\n\n\nCSSTransitionGroupChild.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\n\nexports.default = CSSTransitionGroupChild;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _TransitionGroup = require('./TransitionGroup');\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nvar _CSSTransitionGroupChild = require('./CSSTransitionGroupChild');\n\nvar _CSSTransitionGroupChild2 = _interopRequireDefault(_CSSTransitionGroupChild);\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  transitionName: _PropTypes.nameShape.isRequired,\n\n  transitionAppear: _propTypes2.default.bool,\n  transitionEnter: _propTypes2.default.bool,\n  transitionLeave: _propTypes2.default.bool,\n  transitionAppearTimeout: (0, _PropTypes.transitionTimeout)('Appear'),\n  transitionEnterTimeout: (0, _PropTypes.transitionTimeout)('Enter'),\n  transitionLeaveTimeout: (0, _PropTypes.transitionTimeout)('Leave')\n};\n\nvar defaultProps = {\n  transitionAppear: false,\n  transitionEnter: true,\n  transitionLeave: true\n};\n\nvar CSSTransitionGroup = function (_React$Component) {\n  _inherits(CSSTransitionGroup, _React$Component);\n\n  function CSSTransitionGroup() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransitionGroup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._wrapChild = function (child) {\n      return _react2.default.createElement(_CSSTransitionGroupChild2.default, {\n        name: _this.props.transitionName,\n        appear: _this.props.transitionAppear,\n        enter: _this.props.transitionEnter,\n        leave: _this.props.transitionLeave,\n        appearTimeout: _this.props.transitionAppearTimeout,\n        enterTimeout: _this.props.transitionEnterTimeout,\n        leaveTimeout: _this.props.transitionLeaveTimeout\n      }, child);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // We need to provide this childFactory so that\n  // ReactCSSTransitionGroupChild can receive updates to name, enter, and\n  // leave while it is leaving.\n\n\n  CSSTransitionGroup.prototype.render = function render() {\n    return _react2.default.createElement(_TransitionGroup2.default, _extends({}, this.props, { childFactory: this._wrapChild }));\n  };\n\n  return CSSTransitionGroup;\n}(_react2.default.Component);\n\nCSSTransitionGroup.displayName = 'CSSTransitionGroup';\n\n\nCSSTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nCSSTransitionGroup.defaultProps = defaultProps;\n\nexports.default = CSSTransitionGroup;\nmodule.exports = exports['default'];","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export const LEFT_MOUSE = 0;\nexport const RIGHT_MOUSE = 2;\n\nexport const TAB = 9;\nexport const ENTER = 13;\nexport const ESC = 27;\nexport const SPACE = 32;\nexport const PAGE_UP = 33;\nexport const PAGE_DOWN = 34;\nexport const END = 35;\nexport const HOME = 36;\nexport const LEFT = 37;\nexport const UP = 38;\nexport const RIGHT = 39;\nexport const DOWN = 40;\n\nexport const ZERO = 48;\nexport const NINE = 57;\nexport const KEYPAD_ZERO = 96;\nexport const KEYPAD_NINE = 105;\n","/** @module Helpers/HorizontalAnchors */\n\n/**\n * An enum for all the different types of horizontal anchors on a layover.\n *\n * @readonly\n * @enum {string}\n */\nconst HorizontalAnchors = {\n  /**\n   * Positions the layover to the outside left on the toggle component\n   * so that it does not overlap.\n   */\n  LEFT: 'left',\n\n  /**\n   * Positions the layover to the inner left of the toggle component so\n   * that it will overlap.\n   */\n  INNER_LEFT: 'inner left',\n\n  /**\n   * Positions the layover so that it overlaps the toggle component\n   * by positioning itself in the cetner of the toggle component's width.\n   */\n  CENTER: 'center',\n\n  /**\n   * Positions the layover to the outside right on the toggle component\n   * so that it does not overlap.\n   */\n  RIGHT: 'right',\n\n  /**\n   * Positions the layover to the outside right on the toggle component\n   * so that it will overlap.\n   */\n  INNER_RIGHT: 'inner right',\n};\n\nexport default HorizontalAnchors;\n","/** @module Helpers/VerticalAnchors */\n\n/**\n * An enum for all the different types of horizontal anchors on a layover.\n *\n * @readonly\n * @enum {string}\n */\nconst VerticalAnchors = {\n  /**\n   * Positions the layover to be placed over the toggle component so that\n   * it will never overlay the toggle component.\n   */\n  TOP: 'top',\n\n  /**\n   * Positions the layover so that it will be centered over the toggle component\n   * based on the layover's height.\n   */\n  CENTER: 'center',\n\n  /**\n   * Positions the layover so that it will overlap the toggle component by\n   * fixing to the top of the toggle.\n   */\n  OVERLAP: 'overlap',\n\n  /**\n   * Positions the layover to be placed below the toggle component so that\n   * it will never overlay the toggle component.\n   */\n  BOTTOM: 'bottom',\n};\n\nexport default VerticalAnchors;\n","import PropTypes from 'prop-types';\nimport HorizontalAnchors from './HorizontalAnchors';\nimport VerticalAnchors from './VerticalAnchors';\n\nexport default PropTypes.shape({\n  x: PropTypes.oneOf([\n    HorizontalAnchors.LEFT,\n    HorizontalAnchors.INNER_LEFT,\n    HorizontalAnchors.CENTER,\n    HorizontalAnchors.RIGHT,\n    HorizontalAnchors.INNER_RIGHT,\n  ]).isRequired,\n  y: PropTypes.oneOf([\n    VerticalAnchors.TOP,\n    VerticalAnchors.CENTER,\n    VerticalAnchors.OVERLAP,\n    VerticalAnchors.BOTTOM,\n  ]).isRequired,\n});\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([\n  PropTypes.object,\n  PropTypes.shape({\n    x: PropTypes.object,\n    y: PropTypes.object,\n  }),\n]);\n","/** @module Helpers/Positions */\n\n/**\n * An enum for all the animation positions for a layover appearing.\n *\n * @readonly\n * @enum {string}\n */\nconst Positions = {\n  /**\n   * The layover will appear by transitioning from the top left and expand\n   * down right.\n   */\n  TOP_LEFT: 'tl',\n\n  /**\n   * The layover will appear by transitioning from the top right and expand\n   * down left.\n   */\n  TOP_RIGHT: 'tr',\n\n  /**\n   * The layover will appear by transitioning from the bottom left and expand\n   * top right.\n   */\n  BOTTOM_LEFT: 'bl',\n\n  /**\n   * The layover will appear by transitioning from the bottom right and expand\n   * top left.\n   */\n  BOTTOM_RIGHT: 'br',\n\n  /**\n   * The layover will appear by just transitioning downwards from the bottom\n   * of the toggle component.\n   */\n  BELOW: 'below',\n};\n\nexport default Positions;\n","import PropTypes from 'prop-types';\nimport Positions from './Positions';\n\nexport default PropTypes.oneOfType([\n  PropTypes.oneOf([\n    Positions.TOP_LEFT,\n    Positions.TOP_RIGHT,\n    Positions.BOTTOM_LEFT,\n    Positions.BOTTOM_RIGHT,\n    Positions.BELOW,\n  ]),\n  PropTypes.string,\n]);\n","'use strict';\n\nexports.__esModule = true;\nexports.default = deprecated;\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar warned = {};\n\nfunction deprecated(validator, reason) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] != null) {\n      var messageKey = componentName + '.' + propName;\n\n      (0, _warning2.default)(warned[messageKey], 'The ' + location + ' `' + propFullNameSafe + '` of ' + ('`' + componentNameSafe + '` is deprecated. ' + reason + '.'));\n\n      warned[messageKey] = true;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n  };\n}\n\n/* eslint-disable no-underscore-dangle */\nfunction _resetWarned() {\n  warned = {};\n}\n\ndeprecated._resetWarned = _resetWarned;\n/* eslint-enable no-underscore-dangle */","import React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport { TAB } from '../constants/keyCodes';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\n\n/**\n * The `AccessibleFakeButton` is a generic component that can be used to render\n * a `div` or any other non `button` components as a button. This should not be\n * used often.\n *\n * The `AccessibleFakeButton` allows the user to tab focus the element, use the\n * space or enter key to trigger the `onClick` event, and toggles the `aria-pressed`\n * attribute.\n */\nexport default class AccessibleFakeButton extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional function to call only when the button has been focused with the tab key.\n     */\n    tabbedClassName: PropTypes.string,\n\n    /**\n     * Any children to display in the Accessible Fake Button.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional onClick function to call when the user clicks the\n     * button or presses space || enter.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional onKeyDown function to call.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional onBlur function to call.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * An optional onKeyUp function to call.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the element is focused with the tab key.\n     */\n    onTabFocus: PropTypes.func,\n\n    /**\n     * The component to render the Fake button as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * Boolean if the default outline should be removed the when the fake button has been focused.\n     *\n     * @see {@link #tabbedClassName}\n     */\n    noFocusOutline: PropTypes.bool,\n\n    /**\n     * The tab index to use for the Fake button so it is keyboard focusable.\n     */\n    tabIndex: PropTypes.number,\n\n    /**\n     * Boolean if the Button is disabled. This will prevent tab focus.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * The role for the accessible fake button. It is recommended to keep it\n     * the default of `button` unless you are rendering it as an `a` tag.\n     */\n    role: PropTypes.string,\n\n    /**\n     * The ink when coming from the AccessibleFakeInkedButton\n     * @access private\n     */\n    ink: PropTypes.node,\n\n    /**\n     * Boolean if the spacebar should be used to trigger the click event. This _should_ be `true`\n     * is almost all cases.\n     */\n    listenToSpace: PropTypes.bool,\n\n    /**\n     * Boolean if the enter key should be used to trigger the click event. This _should_ be `true`\n     * in most cases. By default, the param will be ignored if the `role` attribute is for a `checkbox`\n     * or `radio`. When it is a checkbox or radio, it will attempt to submit the form on the enter\n     * keypress instead like the native elements.\n     */\n    listenToEnter: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'div',\n    tabIndex: 0,\n    role: 'button',\n    noFocusOutline: true,\n    listenToEnter: true,\n    listenToSpace: true,\n  };\n\n  state = { pressed: false, tabFocused: false };\n\n  /**\n   * Focuses the button.\n   */\n  focus = () => {\n    if (this._node) {\n      this._node.focus();\n    }\n  };\n\n  /**\n   * Blurs the button.\n   */\n  blur = () => {\n    if (this._node) {\n      this._node.blur();\n    }\n  };\n\n  _setNode = (node) => {\n    if (node) {\n      this._node = findDOMNode(node);\n    }\n  };\n\n  _handleClick = (e) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this._node.focus();\n    this.setState({ pressed: !this.state.pressed });\n  };\n\n  _handleKeyDown = (e) => {\n    const { disabled, onKeyDown, listenToEnter, listenToSpace } = this.props;\n    if (disabled) {\n      return;\n    }\n\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    handleKeyboardAccessibility(e, this._handleClick, listenToEnter, listenToSpace);\n  };\n\n  _handleKeyUp = (e) => {\n    const { onKeyUp, onTabFocus } = this.props;\n    if (onKeyUp) {\n      onKeyUp(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      if (onTabFocus) {\n        onTabFocus(e);\n      }\n\n      this.setState({ tabFocused: true });\n    }\n  };\n\n  _handleBlur = (e) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    if (this.state.tabFocused) {\n      this.setState({ tabFocused: false });\n    }\n  };\n\n  render() {\n    const {\n      component: Component,\n      children,\n      className,\n      tabbedClassName,\n      disabled,\n      tabIndex,\n      ink,\n      noFocusOutline,\n      /* eslint-disable no-unused-vars */\n      onBlur,\n      onClick,\n      onKeyUp,\n      onKeyDown,\n      onTabFocus,\n      listenToEnter,\n      listenToSpace,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let childElements = children;\n    if (ink) {\n      childElements = Children.toArray(children);\n      childElements.unshift(ink);\n    }\n\n    return (\n      <Component\n        {...props}\n        ref={this._setNode}\n        className={cn('md-fake-btn', {\n          'md-pointer--hover': !disabled,\n          'md-fake-btn--no-outline': noFocusOutline,\n          [tabbedClassName]: tabbedClassName && this.state.tabFocused,\n        }, className)}\n        disabled={disabled}\n        tabIndex={disabled ? null : tabIndex}\n        onBlur={this._handleBlur}\n        onClick={this._handleClick}\n        onKeyUp={this._handleKeyUp}\n        onKeyDown={this._handleKeyDown}\n        aria-pressed={this.state.pressed}\n      >\n        {childElements}\n      </Component>\n    );\n  }\n}\n","// This will need to keep in sync with the `ReactCSSTransitionGroupChild` `TICK` const.\n// https://github.com/facebook/react/blob/master/src/addons/transitions/ReactCSSTransitionGroupChild.js#L22\n\nexport default 17;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\n\nexport default class Ink extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    aborted: PropTypes.bool,\n    onRemove: PropTypes.func,\n    left: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    transitionOverlap: PropTypes.number.isRequired,\n    transitionEnterTimeout: PropTypes.number.isRequired,\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n    pulse: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: false,\n      expanded: false,\n      pulsing: false,\n      leaving: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.props.aborted && nextProps.aborted) {\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n      }\n\n      if (this._abort) {\n        this._abort();\n      }\n\n      this.setState({ active: false, expanding: false, pulsing: false, leaving: false });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  componentWillEnter(cb) {\n    if (this.props.aborted) {\n      cb();\n      return;\n    }\n\n    const { transitionOverlap, transitionEnterTimeout } = this.props;\n    this._abort = cb;\n\n    this._timeout = setTimeout(() => {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n        this._abort = null;\n\n        cb();\n      }, transitionEnterTimeout - transitionOverlap);\n\n      this.setState({ expanded: true });\n    }, TICK);\n\n    this.setState({ active: true });\n  }\n\n  componentDidEnter() {\n    if (this.props.pulse) {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        this.setState({ pulsing: true });\n      }, this.props.transitionEnterTimeout);\n    }\n  }\n\n  componentWillLeave(cb) {\n    if (this.props.aborted) {\n      cb();\n      return;\n    }\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._abort = cb;\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n\n      cb();\n    }, this.props.transitionLeaveTimeout);\n\n\n    this.setState({ pulsing: false, leaving: true });\n  }\n\n  componentDidLeave() {\n    if (!this.props.aborted && this.props.onRemove) {\n      this.props.onRemove();\n    }\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      left,\n      top,\n      size,\n    } = this.props;\n    const { active, expanded, pulsing, leaving } = this.state;\n\n    return (\n      <span\n        style={Object.assign({}, style, {\n          left,\n          top,\n          height: size,\n          width: size,\n        })}\n        className={cn('md-ink', {\n          'md-ink--active': active,\n          'md-ink--expanded': expanded,\n          'md-ink--pulsing': pulsing,\n          'md-ink--leaving': leaving,\n        }, className)}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\nimport cn from 'classnames';\n\nimport { ENTER, SPACE } from '../constants/keyCodes';\nimport isFormPartRole from '../utils/isFormPartRole';\nimport calcPageOffset from '../utils/Positioning/calcPageOffset';\nimport isValidClick from '../utils/EventUtils/isValidClick';\nimport { setTouchEvent, addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport calculateHypotenuse from '../utils/NumberUtils/calculateHypotenuse';\n\nimport Ink from './Ink';\n\n\n/**\n * The `InkContainer` is used for holding the list of inks that get created by touch,\n * click, or keyboard focus.\n *\n * If the container element has the `type=\"submit\"` attribute, the ink will also be\n * triggered when the user presses enter anywhere in the form.\n */\nexport default class InkContainer extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    inkStyle: PropTypes.object,\n    inkClassName: PropTypes.string,\n    waitForInkTransition: PropTypes.bool,\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'mouse', 'touch'])),\n    transitionOverlap: PropTypes.number.isRequired,\n    transitionEnterTimeout: PropTypes.number.isRequired,\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n    pulse: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    transitionOverlap: 150,\n    transitionEnterTimeout: 450,\n    transitionLeaveTimeout: 300,\n  };\n\n  state = { inks: [] };\n\n  componentWillReceiveProps(nextProps) {\n    const { disabledInteractions: di } = this.props;\n    const { disabledInteractions: ndi } = nextProps;\n    if (di === ndi || !this._container) {\n      return;\n    }\n\n    const mouseDisabledDiff = this._isListenerDisabledDiff('mouse', di, ndi);\n    const touchDisabledDiff = this._isListenerDisabledDiff('touch', di, ndi);\n    const keyboardDisabledDiff = this._isListenerDisabledDiff('keyboard', di, ndi);\n    this._initOrRemoveEvents(nextProps, keyboardDisabledDiff, mouseDisabledDiff, touchDisabledDiff);\n  }\n\n  componentWillUnmount() {\n    if (this._removeTimeout) {\n      clearTimeout(this._removeTimeout);\n    }\n\n    if (this._container) {\n      this._initOrRemoveEvents({ disabledInteractions: ['keyboard', 'mouse', 'touch'] });\n      this._getKeyboardContainer().removeEventListener('blur', this._handleBlur);\n    }\n  }\n\n\n  /**\n   * Creates an ink from pageX and pageY coordinates. These values should either come\n   * from the `changedTouches` or just the base event (if clicked). These coordinates\n   * are used to position the ink correctly in the container from touch/click point.\n   * If either value is undefined, an ink will be created from the center of the\n   * container.\n   *\n   * It will also automatically remove the ink.\n   *\n   * @param {number} pageX - The page x coordinate of the click or touch event.\n   * @param {number} pageY - The page y coordinate of the click or touch event.\n   */\n  createInk = (pageX, pageY) => {\n    this._createInk(pageX, pageY);\n    this._removeTimeout = setTimeout(() => {\n      this._removeTimeout = null;\n      this._removeInk();\n    }, this.props.transitionOverlap);\n  };\n\n  /**\n   * Focuses the main element.\n   */\n  focus = () => {\n    this._getKeyboardContainer().focus();\n  };\n\n  _isListenerDisabledDiff(interaction, disabledInteractions, nextDisabledInteractions) {\n    const i = disabledInteractions.indexOf(interaction);\n    const ni = nextDisabledInteractions.indexOf(interaction);\n\n    return (i < 0 && ni >= 0) || (i >= 0 && ni < 0);\n  }\n\n  _isListenerDisabled(interaction, disabledInteractions) {\n    return disabledInteractions && disabledInteractions.indexOf(interaction) !== -1;\n  }\n\n  /**\n   * Creates an ink from pageX and pageY coordinates. These values should either come\n   * from the `changedTouches` or just the base event (if clicked). These coordinates\n   * are used to position the ink correctly in the container from touch/click point.\n   * If either value is undefined, an ink will be created from the center of the\n   * container.\n   *\n   * @param {number} pageX - The page x coordinate of the click or touch event.\n   * @param {number} pageY - The page y coordinate of the click or touch event.\n   */\n  _createInk = (pageX, pageY) => {\n    const { offsetWidth, offsetHeight } = this._inkContainer;\n\n    let x;\n    let y;\n    if (typeof pageX !== 'undefined' && typeof pageY !== 'undefined') {\n      const pageOffset = calcPageOffset(this._inkContainer);\n\n      x = pageX - pageOffset.left;\n      y = pageY - pageOffset.top;\n    } else {\n      x = offsetWidth / 2;\n      y = offsetHeight / 2;\n    }\n\n    const r = Math.max(\n      calculateHypotenuse(x, y),\n      calculateHypotenuse(offsetWidth - x, y),\n      calculateHypotenuse(offsetWidth - x, offsetHeight - y),\n      calculateHypotenuse(x, offsetHeight - y)\n    );\n\n    const ink = {\n      left: x - r,\n      top: y - r,\n      size: r * 2,\n      key: Date.now(),\n    };\n\n    const inks = this.state.inks.slice();\n    inks.push(ink);\n    this.setState({ inks });\n  };\n\n  /**\n   * Removes an ink from the container.\n   */\n  _removeInk = () => {\n    const inks = this.state.inks.slice();\n    inks.pop();\n\n    this.setState({ inks });\n  };\n\n  /**\n   * Gets the container for any keyboard events. This will almost always be the main element,\n   * but text fields will need to be the input itself.\n   */\n  _getKeyboardContainer = () => {\n    if (this._container.classList.contains('md-text-field-container')) {\n      return this._container.querySelector('.md-text-field');\n    }\n\n    return this._container;\n  };\n\n  /**\n   * Sets the ink container and the main container from the ref callback. When the component\n   * is mounting, the keyboard, mouse, and keyboard events will be initialized.\n   */\n  _setContainers = (group) => {\n    if (group !== null) {\n      this._inkContainer = findDOMNode(group);\n      this._container = this._inkContainer.parentElement;\n\n      if (this._container) {\n        this._initOrRemoveEvents(this.props);\n      }\n    }\n  };\n\n  /**\n   * This function will either add or remove the event listeners for creating inks.\n   *\n   * @param {Object} props - The current props to use for figuring out if the events should\n   *    be added or removed.\n   * @param {bool=} keyboardDiff - Boolean if there was a difference between the current props and either\n   *    the previous or next props for the keyboard interactions being disabled.\n   * @param {bool=} mouseDiff - Boolean if there was a difference between the current props and either\n   *    the previous or next props for the mouse interactions being disabled.\n   * @param {bool=} touchDiff - Boolean if there was a difference between the current props and either\n   *    the previous or next props for the touch interactions being disabled.\n   */\n  _initOrRemoveEvents = (props, keyboardDiff = true, mouseDiff = true, touchDiff = true) => {\n    const mouseDisabled = this._isListenerDisabled('mouse', props.disabledInteractions);\n    const touchDisabled = this._isListenerDisabled('touch', props.disabledInteractions);\n    const keyboardDisabled = this._isListenerDisabled('keyboard', props.disabledInteractions);\n\n    if (keyboardDiff) {\n      const fn = `${keyboardDisabled ? 'remove' : 'add'}EventListener`;\n      this._getKeyboardContainer()[fn]('focus', this._handleFocus);\n      this._getKeyboardContainer()[fn]('keydown', this._handleKeyDown);\n\n      if (this._container.getAttribute('type') === 'submit') {\n        window[fn]('submit', this._handleSubmit);\n      }\n\n      if (mouseDiff) {\n        this._container[`${!mouseDisabled ? 'add' : 'remove'}EventListener`]('mousedown', this._stopPropagationToFocus);\n      }\n\n      if (touchDiff) {\n        setTouchEvent(!touchDisabled, this._container, 'start', this._stopPropagationToFocus);\n      }\n    }\n\n    if (mouseDiff) {\n      const fn = `${mouseDisabled ? 'remove' : 'add'}EventListener`;\n      this._container[fn]('mousedown', this._handleMouseDown);\n      this._container[fn]('mouseup', this._handleMouseUp);\n    }\n\n    if (touchDiff) {\n      setTouchEvent(!touchDisabled, this._container, 'start', this._handleTouchStart);\n      setTouchEvent(!touchDisabled, this._container, 'end', this._handleTouchEnd);\n    }\n  };\n\n  _maybeDelayClick = () => {\n    if (!this.props.waitForInkTransition) {\n      return;\n    }\n\n    captureNextEvent('click', this._container);\n  };\n\n  _handleRemove = () => {\n    if (this._clicked && this.props.waitForInkTransition) {\n      // For some reason if the click event will make the ink unmount, it will no longer\n      // have a debug id in the TransitionGroup and it displays a warning. Adding a 1ms timeout\n      // fixes that issue... It only happens on an actual click instead of an enter click.\n      setTimeout(() => {\n        this._container.click();\n      }, 1);\n    }\n\n    this._clicked = false;\n  };\n\n  _handleKeyDown = (e) => {\n    const key = e.which || e.keyCode;\n    const enter = key === ENTER;\n    const space = key === SPACE;\n    // Don't trigger ink when enter key is pressed and the target has an input inside of it (SelectField)\n    if (space || (enter && !isFormPartRole(e.target) && !e.target.querySelector('input'))) {\n      this._clicked = true;\n      this.createInk();\n      this._maybeDelayClick();\n    }\n  };\n\n  _handleFocus = () => {\n    if (this._clicked) {\n      return;\n    }\n\n    this._createInk();\n    this._getKeyboardContainer().addEventListener('blur', this._handleBlur);\n  };\n\n  _handleBlur = () => {\n    this._getKeyboardContainer().removeEventListener('blur', this._handleBlur);\n    this._removeInk();\n  };\n\n  _handleMouseDown = (e) => {\n    this._clicked = true;\n    if (!isValidClick(e) || this._skipNextMouse) {\n      this._skipNextMouse = false;\n      return;\n    }\n\n    this._mouseLeave = false;\n    this._container.addEventListener('mouseleave', this._handleMouseLeave);\n    this._createInk(e.pageX, e.pageY);\n  };\n\n  _handleMouseLeave = () => {\n    this._container.removeEventListener('mouseleave', this._handleMouseLeave);\n    this._mouseLeave = true;\n    this._removeInk();\n  };\n\n  _handleMouseUp = () => {\n    if (this._mouseLeave) {\n      return;\n    }\n\n    this._maybeDelayClick();\n    this._container.removeEventListener('mouseleave', this._handleMouseLeave);\n    this._removeInk();\n  };\n\n  _handleTouchStart = (e) => {\n    this._aborted = false;\n    this._clicked = true;\n    this._skipNextMouse = true;\n    addTouchEvent(window, 'move', this._handleTouchMove);\n\n    const { pageX, pageY } = e.changedTouches[0];\n    this._createInk(pageX, pageY);\n  };\n\n  _handleTouchMove = () => {\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    const lastInk = this.state.inks[this.state.inks.length - 1];\n    if (!lastInk || Date.now() > (lastInk.key + 200)) {\n      this._aborted = false;\n      return;\n    }\n\n    const inks = this.state.inks.slice();\n    const index = inks.length - 1;\n\n    const abortedInk = Object.assign({}, lastInk, { aborted: true });\n    inks.splice(index, 1, abortedInk);\n\n    this._aborted = true;\n    this.setState({ inks }, this._removeInk);\n  };\n\n  _handleTouchEnd = () => {\n    this._skipNextMouse = true;\n\n    if (this._aborted) {\n      return;\n    } else {\n      removeTouchEvent(window, 'move', this._handleTouchMove);\n    }\n\n    this._removeInk();\n  };\n\n  /**\n   * If a form was submitted that contains the container of the ink and the current focus element\n   * is not the container, trigger an ink effect.\n   *\n   * The current focus check is added so that two inks are not created.\n   */\n  _handleSubmit = (e) => {\n    if (document.activeElement === this._container || !e.target.contains(this._container)) {\n      return;\n    }\n\n    this._maybeDelayClick();\n    this.createInk();\n  };\n\n  _stopPropagationToFocus = (e) => {\n    switch (e.type) {\n      case 'touchstart':\n        addTouchEvent(window, 'end', this._stopPropagationToFocus, { capture: true });\n        break;\n      case 'touchend':\n        removeTouchEvent(window, 'end', this._stopPropagationToFocus, { capture: true });\n        break;\n      case 'mousedown':\n        window.addEventListener('mouseup', this._stopPropagationToFocus, true);\n        break;\n      case 'mouseup':\n        window.removeEventListener('mouseup', this._stopPropagationToFocus, true);\n        break;\n      default:\n    }\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      inkStyle,\n      inkClassName,\n      transitionOverlap,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      pulse,\n    } = this.props;\n    const inks = this.state.inks.map(props => (\n      <Ink\n        {...props}\n        pulse={pulse}\n        style={inkStyle}\n        className={inkClassName}\n        onRemove={this._handleRemove}\n        transitionOverlap={transitionOverlap}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n      />\n    ));\n\n    return (\n      <TransitionGroup\n        component=\"div\"\n        style={style}\n        className={cn('md-ink-container', className)}\n        ref={this._setContainers}\n      >\n        {inks}\n      </TransitionGroup>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport default {\n  inkDisabled: PropTypes.bool,\n  inkDisabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'mouse', 'touch'])),\n};\n","import React, { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport getField from '../utils/getField';\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\n\nimport InkContainer from './InkContainer';\nimport inkContextTypes from './inkContextTypes';\n\n/**\n * Takes any component and injects an ink container for having the Material Design Ink effect.\n *\n * The default triggers for an ink are:\n * - mouse down event\n * - touch start event\n * - keyboard focus\n * - form submit\n *\n * The form submit ink will only be triggered if the `ComposedComponent` has the attribute\n * `type=\"submit\"`, the `ComposedComponent` is in a form, and the user hits the `enter` key\n * while not actively focusing the `ComposedComponent`.\n *\n * ```js\n * @param {function} ComposedComponent - The React Component to inject an `ink` prop into.\n * @return {function} a new React class rendering the `ComposedComponent` and adding an\n *    `ink` pop.\n * ```\n */\nexport default ComposedComponent => class InkedComponent extends PureComponent {\n  static displayName = getDisplayName(ComposedComponent, 'Ink');\n  static propTypes = {\n    /**\n     * An optional style to apply to each ink that gets generated.\n     */\n    inkStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to each ink that gets generated.\n     */\n    inkClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the ink's container.\n     */\n    inkContainerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the ink's container.\n     */\n    inkContainerClassName: PropTypes.string,\n\n    /**\n     * Boolean if the composed component or the ink is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if only the ink is disabled for the composed component.\n     */\n    inkDisabled: PropTypes.bool,\n\n    /**\n     * The time (in ms) that the enter and leave transitions for the ink should overlap.\n     * This really just allows for a more _fluid_ looking ink when something is quickly\n     * touched or clicked by having it fade out while growing.\n     */\n    inkTransitionOverlap: PropTypes.number.isRequired,\n\n    /**\n     * The transition time for the ink to be considered fully entered. This should really\n     * map up to whatever value you set for `$md-ink-enter-transition-time`.\n     */\n    inkTransitionEnterTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition time for the ink to be considered fully leaved (left?). This should really\n     * map up to whatever value you set for `$md-ink-leave-transition-time`.\n     */\n    inkTransitionLeaveTimeout: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `ComposedComponent`'s click event only after the ink has finished transitioning\n     * in and out. This is really only to get a more _fluid_ looking click event when clicking on\n     * the `ComposedComponent` ends up taking it out of the view. (ex: Closing a Dialog).\n     */\n    waitForInkTransition: PropTypes.bool,\n\n    /**\n     * An optional array of interactions that can be disabled for the ink. This is a *very* limited\n     * use case where `Switches` needed the ink disabled only when using a mouse.\n     */\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'mouse', 'touch'])),\n\n    /**\n     * Boolean if the ink should do a pulse animation while focused. This was enabled by default in\n     * previous versions.\n     */\n    pulse: PropTypes.bool,\n\n    /**\n     * When using inked components in a `TransitionGroup`, the ref callback is not actually invoked.\n     * This is a little _hack_ to get it to work by not using `ref`, but this name.\n     */\n    __SUPER_SECRET_REF__: PropTypes.func,\n  };\n\n  static defaultProps = {\n    inkTransitionOverlap: 150,\n    inkTransitionEnterTimeout: 450,\n    inkTransitionLeaveTimeout: 300,\n  };\n\n  static contextTypes = inkContextTypes;\n\n  componentDidMount() {\n    const { __SUPER_SECRET_REF__: ref } = this.props;\n    // Emulate the ref callback...\n    if (ref) {\n      ref(this);\n    }\n  }\n\n  componentWillUnmount() {\n    const { __SUPER_SECRET_REF__: ref } = this.props;\n    // Emulate the ref callback...\n    if (ref) {\n      ref(null);\n    }\n  }\n\n  /**\n   * A publicly accessible way to manually create an ink. This can be used with the `refs`.\n   * The ink can either be created by using the `pageX` and `pageY` from a click/touch event\n   * or it will be created in the center of the `ComposedComponent`.\n   *\n   * ```js\n   * <SomeInkedComponent ref={inkHOC => inkHOC.createInk()} />\n   * ```\n   *\n   * @param {number=} pageX - An optional pageX of the click or touch event.\n   * @param {number=} pageY - An optional pageY of the click or touch event.\n   */\n  createInk = (pageX, pageY) => {\n    if (this._inkContainer && !this.props.disabled && !this.props.inkDisabled) {\n      this._inkContainer.createInk(pageX, pageY);\n    }\n  };\n\n  /**\n   * This will attempt to focus the composed component. If the component is disabled, nothing\n   * will happen. If the `disabled` and `inkDisabled` props are not set to `true`, an ink will\n   * also be created.\n   *\n   * ```js\n   * <SomeInkedComponent ref={inkHOC => inkHOC.focus()} />\n   * ```\n   */\n  focus = () => {\n    if (this.props.inkDisabled) {\n      const composed = findDOMNode(this._composed);\n      if (composed) {\n        composed.focus();\n      }\n    } else if (this._inkContainer) {\n      this._inkContainer.focus();\n    }\n  };\n\n  /**\n   * Gets the composed component as a ref. This is useful if you need to access the ref of the\n   * composed component instead of the `injectInk` HOC to use some publicly accessible methods.\n   *\n   * ```js\n   * <SomeInkedComponent\n   *   ref={inkHOC => {\n   *     inkHOC.getComposedComponent().focus();\n   *   }}\n   * />\n   * ```\n   */\n  getComposedComponent = () => this._composed;\n\n  _setInkRef= (inkContainer) => {\n    if (inkContainer) {\n      this._inkContainer = inkContainer;\n    }\n  };\n\n  _setComposedComponent = (component) => {\n    this._composed = component;\n  };\n\n  render() {\n    const {\n      inkTransitionOverlap: transitionOverlap,\n      inkTransitionEnterTimeout: transitionEnterTimeout,\n      inkTransitionLeaveTimeout: transitionLeaveTimeout,\n      inkStyle,\n      inkClassName,\n      inkContainerStyle,\n      inkContainerClassName,\n      waitForInkTransition,\n      disabledInteractions,\n      pulse,\n      inkDisabled: propInkDisabled, // eslint-disable-line no-unused-vars\n      __SUPER_SECRET_REF__, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    const inkDisabled = getField(this.props, this.context, 'inkDisabled');\n    const inkDisabledInteractions = typeof disabledInteractions !== 'undefined'\n      ? disabledInteractions\n      : this.context.inkDisabledInteractions;\n\n    if (!(props.disabled || inkDisabled)) {\n      props.ink = (\n        <InkContainer\n          ref={this._setInkRef}\n          key=\"ink-container\"\n          pulse={pulse}\n          style={inkContainerStyle}\n          className={inkContainerClassName}\n          inkStyle={inkStyle}\n          inkClassName={inkClassName}\n          disabledInteractions={inkDisabledInteractions}\n          transitionOverlap={transitionOverlap}\n          transitionEnterTimeout={transitionEnterTimeout}\n          transitionLeaveTimeout={transitionLeaveTimeout}\n          waitForInkTransition={waitForInkTransition}\n        />\n      );\n    }\n\n    props.ref = this._setComposedComponent;\n\n    return <ComposedComponent {...props} />;\n  }\n};\n","import AccessibleFakeButton from './AccessibleFakeButton';\nimport injectInk from '../Inks/injectInk';\n\nexport default injectInk(AccessibleFakeButton);\n","\n\n// currently used to initiate the velocity style object to 0\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = mapToZero;\n\nfunction mapToZero(obj) {\n  var ret = {};\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      ret[key] = 0;\n    }\n  }\n  return ret;\n}\n\nmodule.exports = exports['default'];","\n// turn {x: {val: 1, stiffness: 1, damping: 2}, y: 2} generated by\n// `{x: spring(1, {stiffness: 1, damping: 2}), y: 2}` into {x: 1, y: 2}\n\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = stripStyle;\n\nfunction stripStyle(style) {\n  var ret = {};\n  for (var key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n    ret[key] = typeof style[key] === 'number' ? style[key] : style[key].val;\n  }\n  return ret;\n}\n\nmodule.exports = exports['default'];","\n\n// stepper is used a lot. Saves allocation to return the same array wrapper.\n// This is fine and danger-free against mutations because the callsite\n// immediately destructures it and gets the numbers inside without passing the\n\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = stepper;\n\nvar reusedTuple = [0, 0];\n\nfunction stepper(secondPerFrame, x, v, destX, k, b, precision) {\n  // Spring stiffness, in kg / s^2\n\n  // for animations, destX is really spring length (spring at rest). initial\n  // position is considered as the stretched/compressed position of a spring\n  var Fspring = -k * (x - destX);\n\n  // Damping, in kg / s\n  var Fdamper = -b * v;\n\n  // usually we put mass here, but for animation purposes, specifying mass is a\n  // bit redundant. you could simply adjust k and b accordingly\n  // let a = (Fspring + Fdamper) / mass;\n  var a = Fspring + Fdamper;\n\n  var newV = v + a * secondPerFrame;\n  var newX = x + newV * secondPerFrame;\n\n  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {\n    reusedTuple[0] = destX;\n    reusedTuple[1] = 0;\n    return reusedTuple;\n  }\n\n  reusedTuple[0] = newX;\n  reusedTuple[1] = newV;\n  return reusedTuple;\n}\n\nmodule.exports = exports[\"default\"];\n// array reference around.","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function() {\n  root.requestAnimationFrame = raf\n  root.cancelAnimationFrame = caf\n}\n","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n","\n\n// usage assumption: currentStyle values have already been rendered but it says\n// nothing of whether currentStyle is stale (see unreadPropStyle)\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = shouldStopAnimation;\n\nfunction shouldStopAnimation(currentStyle, style, currentVelocity) {\n  for (var key in style) {\n    if (!Object.prototype.hasOwnProperty.call(style, key)) {\n      continue;\n    }\n\n    if (currentVelocity[key] !== 0) {\n      return false;\n    }\n\n    var styleValue = typeof style[key] === 'number' ? style[key] : style[key].val;\n    // stepper will have already taken care of rounding precision errors, so\n    // won't have such thing as 0.9999 !=== 1\n    if (currentStyle[key] !== styleValue) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports['default'];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\nvar Motion = (function (_React$Component) {\n  _inherits(Motion, _React$Component);\n\n  _createClass(Motion, null, [{\n    key: 'propTypes',\n    value: {\n      // TOOD: warn against putting a config in here\n      defaultStyle: _propTypes2['default'].objectOf(_propTypes2['default'].number),\n      style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired,\n      children: _propTypes2['default'].func.isRequired,\n      onRest: _propTypes2['default'].func\n    },\n    enumerable: true\n  }]);\n\n  function Motion(props) {\n    var _this = this;\n\n    _classCallCheck(this, Motion);\n\n    _React$Component.call(this, props);\n    this.wasAnimating = false;\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyle = null;\n\n    this.clearUnreadPropStyle = function (destStyle) {\n      var dirty = false;\n      var _state = _this.state;\n      var currentStyle = _state.currentStyle;\n      var currentVelocity = _state.currentVelocity;\n      var lastIdealStyle = _state.lastIdealStyle;\n      var lastIdealVelocity = _state.lastIdealVelocity;\n\n      for (var key in destStyle) {\n        if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {\n          continue;\n        }\n\n        var styleValue = destStyle[key];\n        if (typeof styleValue === 'number') {\n          if (!dirty) {\n            dirty = true;\n            currentStyle = _extends({}, currentStyle);\n            currentVelocity = _extends({}, currentVelocity);\n            lastIdealStyle = _extends({}, lastIdealStyle);\n            lastIdealVelocity = _extends({}, lastIdealVelocity);\n          }\n\n          currentStyle[key] = styleValue;\n          currentVelocity[key] = 0;\n          lastIdealStyle[key] = styleValue;\n          lastIdealVelocity[key] = 0;\n        }\n      }\n\n      if (dirty) {\n        _this.setState({ currentStyle: currentStyle, currentVelocity: currentVelocity, lastIdealStyle: lastIdealStyle, lastIdealVelocity: lastIdealVelocity });\n      }\n    };\n\n    this.startAnimationIfNecessary = function () {\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        // check if we need to animate in the first place\n        var propsStyle = _this.props.style;\n        if (_shouldStopAnimation2['default'](_this.state.currentStyle, propsStyle, _this.state.currentVelocity)) {\n          if (_this.wasAnimating && _this.props.onRest) {\n            _this.props.onRest();\n          }\n\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.wasAnimating = false;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        _this.wasAnimating = true;\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var newLastIdealStyle = {};\n        var newLastIdealVelocity = {};\n        var newCurrentStyle = {};\n        var newCurrentVelocity = {};\n\n        for (var key in propsStyle) {\n          if (!Object.prototype.hasOwnProperty.call(propsStyle, key)) {\n            continue;\n          }\n\n          var styleValue = propsStyle[key];\n          if (typeof styleValue === 'number') {\n            newCurrentStyle[key] = styleValue;\n            newCurrentVelocity[key] = 0;\n            newLastIdealStyle[key] = styleValue;\n            newLastIdealVelocity[key] = 0;\n          } else {\n            var newLastIdealStyleValue = _this.state.lastIdealStyle[key];\n            var newLastIdealVelocityValue = _this.state.lastIdealVelocity[key];\n            for (var i = 0; i < framesToCatchUp; i++) {\n              var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              newLastIdealStyleValue = _stepper[0];\n              newLastIdealVelocityValue = _stepper[1];\n            }\n\n            var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n            var nextIdealX = _stepper2[0];\n            var nextIdealV = _stepper2[1];\n\n            newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n            newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n            newLastIdealStyle[key] = newLastIdealStyleValue;\n            newLastIdealVelocity[key] = newLastIdealVelocityValue;\n          }\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyle: newCurrentStyle,\n          currentVelocity: newCurrentVelocity,\n          lastIdealStyle: newLastIdealStyle,\n          lastIdealVelocity: newLastIdealVelocity\n        });\n\n        _this.unreadPropStyle = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  Motion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyle = _props.defaultStyle;\n    var style = _props.style;\n\n    var currentStyle = defaultStyle || _stripStyle2['default'](style);\n    var currentVelocity = _mapToZero2['default'](currentStyle);\n    return {\n      currentStyle: currentStyle,\n      currentVelocity: currentVelocity,\n      lastIdealStyle: currentStyle,\n      lastIdealVelocity: currentVelocity\n    };\n  };\n\n  // it's possible that currentStyle's value is stale: if props is immediately\n  // changed from 0 to 400 to spring(0) again, the async currentStyle is still\n  // at 0 (didn't have time to tick and interpolate even once). If we naively\n  // compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n  // In reality currentStyle should be 400\n\n  Motion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  Motion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyle != null) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyle);\n    }\n\n    this.unreadPropStyle = props.style;\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  Motion.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  Motion.prototype.render = function render() {\n    var renderedChildren = this.props.children(this.state.currentStyle);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return Motion;\n})(_react2['default'].Component);\n\nexports['default'] = Motion;\nmodule.exports = exports['default'];\n\n// after checking for unreadPropStyle != null, we manually go set the\n// non-interpolating values (those that are a number, without a spring\n// config)","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\nfunction shouldStopAnimationAll(currentStyles, styles, currentVelocities) {\n  for (var i = 0; i < currentStyles.length; i++) {\n    if (!_shouldStopAnimation2['default'](currentStyles[i], styles[i], currentVelocities[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar StaggeredMotion = (function (_React$Component) {\n  _inherits(StaggeredMotion, _React$Component);\n\n  _createClass(StaggeredMotion, null, [{\n    key: 'propTypes',\n    value: {\n      // TOOD: warn against putting a config in here\n      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].objectOf(_propTypes2['default'].number)),\n      styles: _propTypes2['default'].func.isRequired,\n      children: _propTypes2['default'].func.isRequired\n    },\n    enumerable: true\n  }]);\n\n  function StaggeredMotion(props) {\n    var _this = this;\n\n    _classCallCheck(this, StaggeredMotion);\n\n    _React$Component.call(this, props);\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyles = null;\n\n    this.clearUnreadPropStyle = function (unreadPropStyles) {\n      var _state = _this.state;\n      var currentStyles = _state.currentStyles;\n      var currentVelocities = _state.currentVelocities;\n      var lastIdealStyles = _state.lastIdealStyles;\n      var lastIdealVelocities = _state.lastIdealVelocities;\n\n      var someDirty = false;\n      for (var i = 0; i < unreadPropStyles.length; i++) {\n        var unreadPropStyle = unreadPropStyles[i];\n        var dirty = false;\n\n        for (var key in unreadPropStyle) {\n          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\n            continue;\n          }\n\n          var styleValue = unreadPropStyle[key];\n          if (typeof styleValue === 'number') {\n            if (!dirty) {\n              dirty = true;\n              someDirty = true;\n              currentStyles[i] = _extends({}, currentStyles[i]);\n              currentVelocities[i] = _extends({}, currentVelocities[i]);\n              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);\n              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);\n            }\n            currentStyles[i][key] = styleValue;\n            currentVelocities[i][key] = 0;\n            lastIdealStyles[i][key] = styleValue;\n            lastIdealVelocities[i][key] = 0;\n          }\n        }\n      }\n\n      if (someDirty) {\n        _this.setState({ currentStyles: currentStyles, currentVelocities: currentVelocities, lastIdealStyles: lastIdealStyles, lastIdealVelocities: lastIdealVelocities });\n      }\n    };\n\n    this.startAnimationIfNecessary = function () {\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        var destStyles = _this.props.styles(_this.state.lastIdealStyles);\n\n        // check if we need to animate in the first place\n        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities)) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var newLastIdealStyles = [];\n        var newLastIdealVelocities = [];\n        var newCurrentStyles = [];\n        var newCurrentVelocities = [];\n\n        for (var i = 0; i < destStyles.length; i++) {\n          var destStyle = destStyles[i];\n          var newCurrentStyle = {};\n          var newCurrentVelocity = {};\n          var newLastIdealStyle = {};\n          var newLastIdealVelocity = {};\n\n          for (var key in destStyle) {\n            if (!Object.prototype.hasOwnProperty.call(destStyle, key)) {\n              continue;\n            }\n\n            var styleValue = destStyle[key];\n            if (typeof styleValue === 'number') {\n              newCurrentStyle[key] = styleValue;\n              newCurrentVelocity[key] = 0;\n              newLastIdealStyle[key] = styleValue;\n              newLastIdealVelocity[key] = 0;\n            } else {\n              var newLastIdealStyleValue = _this.state.lastIdealStyles[i][key];\n              var newLastIdealVelocityValue = _this.state.lastIdealVelocities[i][key];\n              for (var j = 0; j < framesToCatchUp; j++) {\n                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n                newLastIdealStyleValue = _stepper[0];\n                newLastIdealVelocityValue = _stepper[1];\n              }\n\n              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              var nextIdealX = _stepper2[0];\n              var nextIdealV = _stepper2[1];\n\n              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n              newLastIdealStyle[key] = newLastIdealStyleValue;\n              newLastIdealVelocity[key] = newLastIdealVelocityValue;\n            }\n          }\n\n          newCurrentStyles[i] = newCurrentStyle;\n          newCurrentVelocities[i] = newCurrentVelocity;\n          newLastIdealStyles[i] = newLastIdealStyle;\n          newLastIdealVelocities[i] = newLastIdealVelocity;\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyles: newCurrentStyles,\n          currentVelocities: newCurrentVelocities,\n          lastIdealStyles: newLastIdealStyles,\n          lastIdealVelocities: newLastIdealVelocities\n        });\n\n        _this.unreadPropStyles = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  StaggeredMotion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyles = _props.defaultStyles;\n    var styles = _props.styles;\n\n    var currentStyles = defaultStyles || styles().map(_stripStyle2['default']);\n    var currentVelocities = currentStyles.map(function (currentStyle) {\n      return _mapToZero2['default'](currentStyle);\n    });\n    return {\n      currentStyles: currentStyles,\n      currentVelocities: currentVelocities,\n      lastIdealStyles: currentStyles,\n      lastIdealVelocities: currentVelocities\n    };\n  };\n\n  StaggeredMotion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  StaggeredMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyles != null) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyles);\n    }\n\n    this.unreadPropStyles = props.styles(this.state.lastIdealStyles);\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  StaggeredMotion.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  StaggeredMotion.prototype.render = function render() {\n    var renderedChildren = this.props.children(this.state.currentStyles);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return StaggeredMotion;\n})(_react2['default'].Component);\n\nexports['default'] = StaggeredMotion;\nmodule.exports = exports['default'];\n\n// it's possible that currentStyle's value is stale: if props is immediately\n// changed from 0 to 400 to spring(0) again, the async currentStyle is still\n// at 0 (didn't have time to tick and interpolate even once). If we naively\n// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n// In reality currentStyle should be 400\n\n// after checking for unreadPropStyles != null, we manually go set the\n// non-interpolating values (those that are a number, without a spring\n// config)","\n\n// core keys merging algorithm. If previous render's keys are [a, b], and the\n// next render's [c, b, d], what's the final merged keys and ordering?\n\n// - c and a must both be before b\n// - b before d\n// - ordering between a and c ambiguous\n\n// this reduces to merging two partially ordered lists (e.g. lists where not\n// every item has a definite ordering, like comparing a and c above). For the\n// ambiguous ordering we deterministically choose to place the next render's\n// item after the previous'; so c after a\n\n// this is called a topological sorting. Except the existing algorithms don't\n// work well with js bc of the amount of allocation, and isn't optimized for our\n// current use-case bc the runtime is linear in terms of edges (see wiki for\n// meaning), which is huge when two lists have many common elements\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = mergeDiff;\n\nfunction mergeDiff(prev, next, onRemove) {\n  // bookkeeping for easier access of a key's index below. This is 2 allocations +\n  // potentially triggering chrome hash map mode for objs (so it might be faster\n\n  var prevKeyIndex = {};\n  for (var i = 0; i < prev.length; i++) {\n    prevKeyIndex[prev[i].key] = i;\n  }\n  var nextKeyIndex = {};\n  for (var i = 0; i < next.length; i++) {\n    nextKeyIndex[next[i].key] = i;\n  }\n\n  // first, an overly elaborate way of merging prev and next, eliminating\n  // duplicates (in terms of keys). If there's dupe, keep the item in next).\n  // This way of writing it saves allocations\n  var ret = [];\n  for (var i = 0; i < next.length; i++) {\n    ret[i] = next[i];\n  }\n  for (var i = 0; i < prev.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(nextKeyIndex, prev[i].key)) {\n      // this is called my TM's `mergeAndSync`, which calls willLeave. We don't\n      // merge in keys that the user desires to kill\n      var fill = onRemove(i, prev[i]);\n      if (fill != null) {\n        ret.push(fill);\n      }\n    }\n  }\n\n  // now all the items all present. Core sorting logic to have the right order\n  return ret.sort(function (a, b) {\n    var nextOrderA = nextKeyIndex[a.key];\n    var nextOrderB = nextKeyIndex[b.key];\n    var prevOrderA = prevKeyIndex[a.key];\n    var prevOrderB = prevKeyIndex[b.key];\n\n    if (nextOrderA != null && nextOrderB != null) {\n      // both keys in next\n      return nextKeyIndex[a.key] - nextKeyIndex[b.key];\n    } else if (prevOrderA != null && prevOrderB != null) {\n      // both keys in prev\n      return prevKeyIndex[a.key] - prevKeyIndex[b.key];\n    } else if (nextOrderA != null) {\n      // key a in next, key b in prev\n\n      // how to determine the order between a and b? We find a \"pivot\" (term\n      // abuse), a key present in both prev and next, that is sandwiched between\n      // a and b. In the context of our above example, if we're comparing a and\n      // d, b's (the only) pivot\n      for (var i = 0; i < next.length; i++) {\n        var pivot = next[i].key;\n        if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\n          continue;\n        }\n\n        if (nextOrderA < nextKeyIndex[pivot] && prevOrderB > prevKeyIndex[pivot]) {\n          return -1;\n        } else if (nextOrderA > nextKeyIndex[pivot] && prevOrderB < prevKeyIndex[pivot]) {\n          return 1;\n        }\n      }\n      // pluggable. default to: next bigger than prev\n      return 1;\n    }\n    // prevOrderA, nextOrderB\n    for (var i = 0; i < next.length; i++) {\n      var pivot = next[i].key;\n      if (!Object.prototype.hasOwnProperty.call(prevKeyIndex, pivot)) {\n        continue;\n      }\n      if (nextOrderB < nextKeyIndex[pivot] && prevOrderA > prevKeyIndex[pivot]) {\n        return 1;\n      } else if (nextOrderB > nextKeyIndex[pivot] && prevOrderA < prevKeyIndex[pivot]) {\n        return -1;\n      }\n    }\n    // pluggable. default to: next bigger than prev\n    return -1;\n  });\n}\n\nmodule.exports = exports['default'];\n// to loop through and find a key's index each time), but I no longer care","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _mapToZero = require('./mapToZero');\n\nvar _mapToZero2 = _interopRequireDefault(_mapToZero);\n\nvar _stripStyle = require('./stripStyle');\n\nvar _stripStyle2 = _interopRequireDefault(_stripStyle);\n\nvar _stepper3 = require('./stepper');\n\nvar _stepper4 = _interopRequireDefault(_stepper3);\n\nvar _mergeDiff = require('./mergeDiff');\n\nvar _mergeDiff2 = _interopRequireDefault(_mergeDiff);\n\nvar _performanceNow = require('performance-now');\n\nvar _performanceNow2 = _interopRequireDefault(_performanceNow);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _shouldStopAnimation = require('./shouldStopAnimation');\n\nvar _shouldStopAnimation2 = _interopRequireDefault(_shouldStopAnimation);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar msPerFrame = 1000 / 60;\n\n// the children function & (potential) styles function asks as param an\n// Array<TransitionPlainStyle>, where each TransitionPlainStyle is of the format\n// {key: string, data?: any, style: PlainStyle}. However, the way we keep\n// internal states doesn't contain such a data structure (check the state and\n// TransitionMotionState). So when children function and others ask for such\n// data we need to generate them on the fly by combining mergedPropsStyles and\n// currentStyles/lastIdealStyles\nfunction rehydrateStyles(mergedPropsStyles, unreadPropStyles, plainStyles) {\n  // Copy the value to a `const` so that Flow understands that the const won't\n  // change and will be non-nullable in the callback below.\n  var cUnreadPropStyles = unreadPropStyles;\n  if (cUnreadPropStyles == null) {\n    return mergedPropsStyles.map(function (mergedPropsStyle, i) {\n      return {\n        key: mergedPropsStyle.key,\n        data: mergedPropsStyle.data,\n        style: plainStyles[i]\n      };\n    });\n  }\n  return mergedPropsStyles.map(function (mergedPropsStyle, i) {\n    for (var j = 0; j < cUnreadPropStyles.length; j++) {\n      if (cUnreadPropStyles[j].key === mergedPropsStyle.key) {\n        return {\n          key: cUnreadPropStyles[j].key,\n          data: cUnreadPropStyles[j].data,\n          style: plainStyles[i]\n        };\n      }\n    }\n    return { key: mergedPropsStyle.key, data: mergedPropsStyle.data, style: plainStyles[i] };\n  });\n}\n\nfunction shouldStopAnimationAll(currentStyles, destStyles, currentVelocities, mergedPropsStyles) {\n  if (mergedPropsStyles.length !== destStyles.length) {\n    return false;\n  }\n\n  for (var i = 0; i < mergedPropsStyles.length; i++) {\n    if (mergedPropsStyles[i].key !== destStyles[i].key) {\n      return false;\n    }\n  }\n\n  // we have the invariant that mergedPropsStyles and\n  // currentStyles/currentVelocities/last* are synced in terms of cells, see\n  // mergeAndSync comment for more info\n  for (var i = 0; i < mergedPropsStyles.length; i++) {\n    if (!_shouldStopAnimation2['default'](currentStyles[i], destStyles[i].style, currentVelocities[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n// core key merging logic\n\n// things to do: say previously merged style is {a, b}, dest style (prop) is {b,\n// c}, previous current (interpolating) style is {a, b}\n// **invariant**: current[i] corresponds to merged[i] in terms of key\n\n// steps:\n// turn merged style into {a?, b, c}\n//    add c, value of c is destStyles.c\n//    maybe remove a, aka call willLeave(a), then merged is either {b, c} or {a, b, c}\n// turn current (interpolating) style from {a, b} into {a?, b, c}\n//    maybe remove a\n//    certainly add c, value of c is willEnter(c)\n// loop over merged and construct new current\n// dest doesn't change, that's owner's\nfunction mergeAndSync(willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldLastIdealStyles, oldLastIdealVelocities) {\n  var newMergedPropsStyles = _mergeDiff2['default'](oldMergedPropsStyles, destStyles, function (oldIndex, oldMergedPropsStyle) {\n    var leavingStyle = willLeave(oldMergedPropsStyle);\n    if (leavingStyle == null) {\n      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });\n      return null;\n    }\n    if (_shouldStopAnimation2['default'](oldCurrentStyles[oldIndex], leavingStyle, oldCurrentVelocities[oldIndex])) {\n      didLeave({ key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data });\n      return null;\n    }\n    return { key: oldMergedPropsStyle.key, data: oldMergedPropsStyle.data, style: leavingStyle };\n  });\n\n  var newCurrentStyles = [];\n  var newCurrentVelocities = [];\n  var newLastIdealStyles = [];\n  var newLastIdealVelocities = [];\n  for (var i = 0; i < newMergedPropsStyles.length; i++) {\n    var newMergedPropsStyleCell = newMergedPropsStyles[i];\n    var foundOldIndex = null;\n    for (var j = 0; j < oldMergedPropsStyles.length; j++) {\n      if (oldMergedPropsStyles[j].key === newMergedPropsStyleCell.key) {\n        foundOldIndex = j;\n        break;\n      }\n    }\n    // TODO: key search code\n    if (foundOldIndex == null) {\n      var plainStyle = willEnter(newMergedPropsStyleCell);\n      newCurrentStyles[i] = plainStyle;\n      newLastIdealStyles[i] = plainStyle;\n\n      var velocity = _mapToZero2['default'](newMergedPropsStyleCell.style);\n      newCurrentVelocities[i] = velocity;\n      newLastIdealVelocities[i] = velocity;\n    } else {\n      newCurrentStyles[i] = oldCurrentStyles[foundOldIndex];\n      newLastIdealStyles[i] = oldLastIdealStyles[foundOldIndex];\n      newCurrentVelocities[i] = oldCurrentVelocities[foundOldIndex];\n      newLastIdealVelocities[i] = oldLastIdealVelocities[foundOldIndex];\n    }\n  }\n\n  return [newMergedPropsStyles, newCurrentStyles, newCurrentVelocities, newLastIdealStyles, newLastIdealVelocities];\n}\n\nvar TransitionMotion = (function (_React$Component) {\n  _inherits(TransitionMotion, _React$Component);\n\n  _createClass(TransitionMotion, null, [{\n    key: 'propTypes',\n    value: {\n      defaultStyles: _propTypes2['default'].arrayOf(_propTypes2['default'].shape({\n        key: _propTypes2['default'].string.isRequired,\n        data: _propTypes2['default'].any,\n        style: _propTypes2['default'].objectOf(_propTypes2['default'].number).isRequired\n      })),\n      styles: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].arrayOf(_propTypes2['default'].shape({\n        key: _propTypes2['default'].string.isRequired,\n        data: _propTypes2['default'].any,\n        style: _propTypes2['default'].objectOf(_propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].object])).isRequired\n      }))]).isRequired,\n      children: _propTypes2['default'].func.isRequired,\n      willEnter: _propTypes2['default'].func,\n      willLeave: _propTypes2['default'].func,\n      didLeave: _propTypes2['default'].func\n    },\n    enumerable: true\n  }, {\n    key: 'defaultProps',\n    value: {\n      willEnter: function willEnter(styleThatEntered) {\n        return _stripStyle2['default'](styleThatEntered.style);\n      },\n      // recall: returning null makes the current unmounting TransitionStyle\n      // disappear immediately\n      willLeave: function willLeave() {\n        return null;\n      },\n      didLeave: function didLeave() {}\n    },\n    enumerable: true\n  }]);\n\n  function TransitionMotion(props) {\n    var _this = this;\n\n    _classCallCheck(this, TransitionMotion);\n\n    _React$Component.call(this, props);\n    this.unmounting = false;\n    this.animationID = null;\n    this.prevTime = 0;\n    this.accumulatedTime = 0;\n    this.unreadPropStyles = null;\n\n    this.clearUnreadPropStyle = function (unreadPropStyles) {\n      var _mergeAndSync = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, unreadPropStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);\n\n      var mergedPropsStyles = _mergeAndSync[0];\n      var currentStyles = _mergeAndSync[1];\n      var currentVelocities = _mergeAndSync[2];\n      var lastIdealStyles = _mergeAndSync[3];\n      var lastIdealVelocities = _mergeAndSync[4];\n\n      for (var i = 0; i < unreadPropStyles.length; i++) {\n        var unreadPropStyle = unreadPropStyles[i].style;\n        var dirty = false;\n\n        for (var key in unreadPropStyle) {\n          if (!Object.prototype.hasOwnProperty.call(unreadPropStyle, key)) {\n            continue;\n          }\n\n          var styleValue = unreadPropStyle[key];\n          if (typeof styleValue === 'number') {\n            if (!dirty) {\n              dirty = true;\n              currentStyles[i] = _extends({}, currentStyles[i]);\n              currentVelocities[i] = _extends({}, currentVelocities[i]);\n              lastIdealStyles[i] = _extends({}, lastIdealStyles[i]);\n              lastIdealVelocities[i] = _extends({}, lastIdealVelocities[i]);\n              mergedPropsStyles[i] = {\n                key: mergedPropsStyles[i].key,\n                data: mergedPropsStyles[i].data,\n                style: _extends({}, mergedPropsStyles[i].style)\n              };\n            }\n            currentStyles[i][key] = styleValue;\n            currentVelocities[i][key] = 0;\n            lastIdealStyles[i][key] = styleValue;\n            lastIdealVelocities[i][key] = 0;\n            mergedPropsStyles[i].style[key] = styleValue;\n          }\n        }\n      }\n\n      // unlike the other 2 components, we can't detect staleness and optionally\n      // opt out of setState here. each style object's data might contain new\n      // stuff we're not/cannot compare\n      _this.setState({\n        currentStyles: currentStyles,\n        currentVelocities: currentVelocities,\n        mergedPropsStyles: mergedPropsStyles,\n        lastIdealStyles: lastIdealStyles,\n        lastIdealVelocities: lastIdealVelocities\n      });\n    };\n\n    this.startAnimationIfNecessary = function () {\n      if (_this.unmounting) {\n        return;\n      }\n\n      // TODO: when config is {a: 10} and dest is {a: 10} do we raf once and\n      // call cb? No, otherwise accidental parent rerender causes cb trigger\n      _this.animationID = _raf2['default'](function (timestamp) {\n        // https://github.com/chenglou/react-motion/pull/420\n        // > if execution passes the conditional if (this.unmounting), then\n        // executes async defaultRaf and after that component unmounts and after\n        // that the callback of defaultRaf is called, then setState will be called\n        // on unmounted component.\n        if (_this.unmounting) {\n          return;\n        }\n\n        var propStyles = _this.props.styles;\n        var destStyles = typeof propStyles === 'function' ? propStyles(rehydrateStyles(_this.state.mergedPropsStyles, _this.unreadPropStyles, _this.state.lastIdealStyles)) : propStyles;\n\n        // check if we need to animate in the first place\n        if (shouldStopAnimationAll(_this.state.currentStyles, destStyles, _this.state.currentVelocities, _this.state.mergedPropsStyles)) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.accumulatedTime = 0;\n          return;\n        }\n\n        var currentTime = timestamp || _performanceNow2['default']();\n        var timeDelta = currentTime - _this.prevTime;\n        _this.prevTime = currentTime;\n        _this.accumulatedTime = _this.accumulatedTime + timeDelta;\n        // more than 10 frames? prolly switched browser tab. Restart\n        if (_this.accumulatedTime > msPerFrame * 10) {\n          _this.accumulatedTime = 0;\n        }\n\n        if (_this.accumulatedTime === 0) {\n          // no need to cancel animationID here; shouldn't have any in flight\n          _this.animationID = null;\n          _this.startAnimationIfNecessary();\n          return;\n        }\n\n        var currentFrameCompletion = (_this.accumulatedTime - Math.floor(_this.accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame;\n        var framesToCatchUp = Math.floor(_this.accumulatedTime / msPerFrame);\n\n        var _mergeAndSync2 = mergeAndSync(_this.props.willEnter, _this.props.willLeave, _this.props.didLeave, _this.state.mergedPropsStyles, destStyles, _this.state.currentStyles, _this.state.currentVelocities, _this.state.lastIdealStyles, _this.state.lastIdealVelocities);\n\n        var newMergedPropsStyles = _mergeAndSync2[0];\n        var newCurrentStyles = _mergeAndSync2[1];\n        var newCurrentVelocities = _mergeAndSync2[2];\n        var newLastIdealStyles = _mergeAndSync2[3];\n        var newLastIdealVelocities = _mergeAndSync2[4];\n\n        for (var i = 0; i < newMergedPropsStyles.length; i++) {\n          var newMergedPropsStyle = newMergedPropsStyles[i].style;\n          var newCurrentStyle = {};\n          var newCurrentVelocity = {};\n          var newLastIdealStyle = {};\n          var newLastIdealVelocity = {};\n\n          for (var key in newMergedPropsStyle) {\n            if (!Object.prototype.hasOwnProperty.call(newMergedPropsStyle, key)) {\n              continue;\n            }\n\n            var styleValue = newMergedPropsStyle[key];\n            if (typeof styleValue === 'number') {\n              newCurrentStyle[key] = styleValue;\n              newCurrentVelocity[key] = 0;\n              newLastIdealStyle[key] = styleValue;\n              newLastIdealVelocity[key] = 0;\n            } else {\n              var newLastIdealStyleValue = newLastIdealStyles[i][key];\n              var newLastIdealVelocityValue = newLastIdealVelocities[i][key];\n              for (var j = 0; j < framesToCatchUp; j++) {\n                var _stepper = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n                newLastIdealStyleValue = _stepper[0];\n                newLastIdealVelocityValue = _stepper[1];\n              }\n\n              var _stepper2 = _stepper4['default'](msPerFrame / 1000, newLastIdealStyleValue, newLastIdealVelocityValue, styleValue.val, styleValue.stiffness, styleValue.damping, styleValue.precision);\n\n              var nextIdealX = _stepper2[0];\n              var nextIdealV = _stepper2[1];\n\n              newCurrentStyle[key] = newLastIdealStyleValue + (nextIdealX - newLastIdealStyleValue) * currentFrameCompletion;\n              newCurrentVelocity[key] = newLastIdealVelocityValue + (nextIdealV - newLastIdealVelocityValue) * currentFrameCompletion;\n              newLastIdealStyle[key] = newLastIdealStyleValue;\n              newLastIdealVelocity[key] = newLastIdealVelocityValue;\n            }\n          }\n\n          newLastIdealStyles[i] = newLastIdealStyle;\n          newLastIdealVelocities[i] = newLastIdealVelocity;\n          newCurrentStyles[i] = newCurrentStyle;\n          newCurrentVelocities[i] = newCurrentVelocity;\n        }\n\n        _this.animationID = null;\n        // the amount we're looped over above\n        _this.accumulatedTime -= framesToCatchUp * msPerFrame;\n\n        _this.setState({\n          currentStyles: newCurrentStyles,\n          currentVelocities: newCurrentVelocities,\n          lastIdealStyles: newLastIdealStyles,\n          lastIdealVelocities: newLastIdealVelocities,\n          mergedPropsStyles: newMergedPropsStyles\n        });\n\n        _this.unreadPropStyles = null;\n\n        _this.startAnimationIfNecessary();\n      });\n    };\n\n    this.state = this.defaultState();\n  }\n\n  TransitionMotion.prototype.defaultState = function defaultState() {\n    var _props = this.props;\n    var defaultStyles = _props.defaultStyles;\n    var styles = _props.styles;\n    var willEnter = _props.willEnter;\n    var willLeave = _props.willLeave;\n    var didLeave = _props.didLeave;\n\n    var destStyles = typeof styles === 'function' ? styles(defaultStyles) : styles;\n\n    // this is special. for the first time around, we don't have a comparison\n    // between last (no last) and current merged props. we'll compute last so:\n    // say default is {a, b} and styles (dest style) is {b, c}, we'll\n    // fabricate last as {a, b}\n    var oldMergedPropsStyles = undefined;\n    if (defaultStyles == null) {\n      oldMergedPropsStyles = destStyles;\n    } else {\n      oldMergedPropsStyles = defaultStyles.map(function (defaultStyleCell) {\n        // TODO: key search code\n        for (var i = 0; i < destStyles.length; i++) {\n          if (destStyles[i].key === defaultStyleCell.key) {\n            return destStyles[i];\n          }\n        }\n        return defaultStyleCell;\n      });\n    }\n    var oldCurrentStyles = defaultStyles == null ? destStyles.map(function (s) {\n      return _stripStyle2['default'](s.style);\n    }) : defaultStyles.map(function (s) {\n      return _stripStyle2['default'](s.style);\n    });\n    var oldCurrentVelocities = defaultStyles == null ? destStyles.map(function (s) {\n      return _mapToZero2['default'](s.style);\n    }) : defaultStyles.map(function (s) {\n      return _mapToZero2['default'](s.style);\n    });\n\n    var _mergeAndSync3 = mergeAndSync(\n    // Because this is an old-style createReactClass component, Flow doesn't\n    // understand that the willEnter and willLeave props have default values\n    // and will always be present.\n    willEnter, willLeave, didLeave, oldMergedPropsStyles, destStyles, oldCurrentStyles, oldCurrentVelocities, oldCurrentStyles, // oldLastIdealStyles really\n    oldCurrentVelocities);\n\n    var mergedPropsStyles = _mergeAndSync3[0];\n    var currentStyles = _mergeAndSync3[1];\n    var currentVelocities = _mergeAndSync3[2];\n    var lastIdealStyles = _mergeAndSync3[3];\n    var lastIdealVelocities = _mergeAndSync3[4];\n    // oldLastIdealVelocities really\n\n    return {\n      currentStyles: currentStyles,\n      currentVelocities: currentVelocities,\n      lastIdealStyles: lastIdealStyles,\n      lastIdealVelocities: lastIdealVelocities,\n      mergedPropsStyles: mergedPropsStyles\n    };\n  };\n\n  // after checking for unreadPropStyles != null, we manually go set the\n  // non-interpolating values (those that are a number, without a spring\n  // config)\n\n  TransitionMotion.prototype.componentDidMount = function componentDidMount() {\n    this.prevTime = _performanceNow2['default']();\n    this.startAnimationIfNecessary();\n  };\n\n  TransitionMotion.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {\n    if (this.unreadPropStyles) {\n      // previous props haven't had the chance to be set yet; set them here\n      this.clearUnreadPropStyle(this.unreadPropStyles);\n    }\n\n    var styles = props.styles;\n    if (typeof styles === 'function') {\n      this.unreadPropStyles = styles(rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.lastIdealStyles));\n    } else {\n      this.unreadPropStyles = styles;\n    }\n\n    if (this.animationID == null) {\n      this.prevTime = _performanceNow2['default']();\n      this.startAnimationIfNecessary();\n    }\n  };\n\n  TransitionMotion.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unmounting = true;\n    if (this.animationID != null) {\n      _raf2['default'].cancel(this.animationID);\n      this.animationID = null;\n    }\n  };\n\n  TransitionMotion.prototype.render = function render() {\n    var hydratedStyles = rehydrateStyles(this.state.mergedPropsStyles, this.unreadPropStyles, this.state.currentStyles);\n    var renderedChildren = this.props.children(hydratedStyles);\n    return renderedChildren && _react2['default'].Children.only(renderedChildren);\n  };\n\n  return TransitionMotion;\n})(_react2['default'].Component);\n\nexports['default'] = TransitionMotion;\nmodule.exports = exports['default'];\n\n// list of styles, each containing interpolating values. Part of what's passed\n// to children function. Notice that this is\n// Array<ActualInterpolatingStyleObject>, without the wrapper that is {key: ...,\n// data: ... style: ActualInterpolatingStyleObject}. Only mergedPropsStyles\n// contains the key & data info (so that we only have a single source of truth\n// for these, and to save space). Check the comment for `rehydrateStyles` to\n// see how we regenerate the entirety of what's passed to children function\n\n// the array that keeps track of currently rendered stuff! Including stuff\n// that you've unmounted but that's still animating. This is where it lives\n\n// it's possible that currentStyle's value is stale: if props is immediately\n// changed from 0 to 400 to spring(0) again, the async currentStyle is still\n// at 0 (didn't have time to tick and interpolate even once). If we naively\n// compare currentStyle with destVal it'll be 0 === 0 (no animation, stop).\n// In reality currentStyle should be 400","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = {\n  noWobble: { stiffness: 170, damping: 26 }, // the default, if nothing provided\n  gentle: { stiffness: 120, damping: 14 },\n  wobbly: { stiffness: 180, damping: 12 },\n  stiff: { stiffness: 210, damping: 20 }\n};\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports['default'] = spring;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _presets = require('./presets');\n\nvar _presets2 = _interopRequireDefault(_presets);\n\nvar defaultConfig = _extends({}, _presets2['default'].noWobble, {\n  precision: 0.01\n});\n\nfunction spring(val, config) {\n  return _extends({}, defaultConfig, config, { val: val });\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = reorderKeys;\n\nvar hasWarned = false;\n\nfunction reorderKeys() {\n  if (process.env.NODE_ENV === 'development') {\n    if (!hasWarned) {\n      hasWarned = true;\n      console.error('`reorderKeys` has been removed, since it is no longer needed for TransitionMotion\\'s new styles array API.');\n    }\n  }\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }\n\nvar _Motion = require('./Motion');\n\nexports.Motion = _interopRequire(_Motion);\n\nvar _StaggeredMotion = require('./StaggeredMotion');\n\nexports.StaggeredMotion = _interopRequire(_StaggeredMotion);\n\nvar _TransitionMotion = require('./TransitionMotion');\n\nexports.TransitionMotion = _interopRequire(_TransitionMotion);\n\nvar _spring = require('./spring');\n\nexports.spring = _interopRequire(_spring);\n\nvar _presets = require('./presets');\n\nexports.presets = _interopRequire(_presets);\n\nvar _stripStyle = require('./stripStyle');\n\nexports.stripStyle = _interopRequire(_stripStyle);\n\n// deprecated, dummy warning function\n\nvar _reorderKeys = require('./reorderKeys');\n\nexports.reorderKeys = _interopRequire(_reorderKeys);","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { Motion, spring } from 'react-motion';\n\n/**\n * The `Collapse` component is used to animate a single child entering\n * or leaving. This uses the `react-motion` library to animate the height,\n * padding-top, and padding-bottom of an element when the `collapsed` prop\n * changes.\n */\nexport default class Collapse extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to merge with the `Motion` style.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional default style to merge with the `Motion` default style.\n     */\n    defaultStyle: PropTypes.object,\n\n    /**\n     * Boolean if the children are currently collapsed.\n     */\n    collapsed: PropTypes.bool.isRequired,\n\n    /**\n     * A single child to collapse or expand.\n     */\n    children: PropTypes.element.isRequired,\n\n    /**\n     * The spring config to use for the animation.\n     */\n    springConfig: PropTypes.object.isRequired,\n\n    /**\n     * Boolean if the single child entering or leaving should be animated.\n     */\n    animate: PropTypes.bool,\n\n    /**\n     * The min height to apply for the collapse div.\n     */\n    minHeight: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    animate: true,\n    springConfig: {\n      precision: 0.5,\n    },\n    minHeight: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (!props.collapsed) {\n      this.state = { initialOpen: true };\n    } else {\n      this.state = {\n        height: props.minHeight,\n        paddingTop: 0,\n        paddingBottom: 0,\n      };\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.initialOpen && nextProps.collapsed) {\n      this.setState({ initialOpen: false });\n    }\n  }\n\n  _spring(collapsed, initialOpen, value, config, min = 0) {\n    const nextValue = !collapsed ? Math.max(min, value) : min;\n    if (initialOpen && !collapsed) {\n      return nextValue;\n    }\n\n    return spring(nextValue, config);\n  }\n\n  _setHeight = (child) => {\n    if (this._child && typeof this._child.ref === 'function') {\n      this._child.ref(child);\n    }\n\n    let height = 0;\n    let paddingTop = 0;\n    let paddingBottom = 0;\n    if (child !== null) {\n      const node = findDOMNode(child);\n      const cs = window.getComputedStyle(node);\n      height = node.offsetHeight;\n      paddingTop = parseInt(cs.getPropertyValue('padding-top'), 10);\n      paddingBottom = parseInt(cs.getPropertyValue('padding-bottom'), 10);\n    }\n\n    height = Math.max(this.props.minHeight, height);\n\n    this.setState({ height, paddingTop, paddingBottom });\n  };\n\n  render() {\n    const { height, paddingTop, paddingBottom, initialOpen } = this.state;\n    const {\n      children,\n      collapsed,\n      defaultStyle,\n      style: motionStyle,\n      springConfig,\n      animate,\n      minHeight,\n    } = this.props;\n\n    if (!animate) {\n      return collapsed ? null : children;\n    }\n\n    return (\n      <Motion\n        style={{\n          ...motionStyle,\n          height: this._spring(collapsed, initialOpen, height, springConfig, minHeight),\n          paddingTop: this._spring(collapsed, initialOpen, paddingTop, springConfig),\n          paddingBottom: this._spring(collapsed, initialOpen, paddingBottom, springConfig),\n        }}\n        defaultStyle={{\n          ...defaultStyle,\n          height,\n          paddingTop,\n          paddingBottom,\n        }}\n      >\n        {style => {\n          if (collapsed && !style.height) {\n            return null;\n          }\n\n          const child = Children.only(children);\n          this._child = child;\n          let nextStyle = child.props.style;\n          if ((collapsed && (!minHeight || style.height !== minHeight)) || style.height !== height) {\n            nextStyle = {\n              ...child.props.style,\n              ...style,\n              overflow: 'hidden',\n            };\n          }\n          return cloneElement(child, {\n            ref: !collapsed ? this._setHeight : null,\n            style: nextStyle,\n          });\n        }}\n      </Motion>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The divider component will pass all other props such as style or\n * event listeners on to the component.\n */\nexport default class Divider extends PureComponent {\n  static propTypes = {\n    /*\n     * An optional style to apply to the divider.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the divider.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if this divider should be inset relative to it's container\n     * component. This means that if it is in a `List` with `Avatar`, it\n     * will start the divider  to the left of the main text in the list.\n     */\n    inset: PropTypes.bool,\n\n    /**\n     * Boolean if the divider should be vertical instead of horizontal.\n     */\n    vertical: PropTypes.bool,\n  };\n\n  render() {\n    const { className, inset, vertical, ...props } = this.props;\n\n    const Component = vertical ? 'div' : 'hr';\n\n    return (\n      <Component\n        {...props}\n        className={cn('md-divider', {\n          'md-divider--vertical': vertical,\n          'md-divider--inset': inset,\n        }, className)}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\nconst ICON_SIZE = 24;\n\n/**\n * The \\`FontIcon\\` component is used for rendering a font-icon library's\n * icon. The default is to use the `material-icons` library, but others\n * can be used as well.\n *\n * If you are using another font-icon library that does not always create\n * icons with a perfect 1:1 scale (such as font-awesome), it is recommended\n * to update the `.md-icon` styles to set the width and height to `$md-font-icon-size`.\n * However, this will prevent different sided icons.\n *\n * ```scss\n * .md-icon.fa {\n *   height: $md-font-icon-size;\n *   width: $md-font-icon-size;\n * }\n * ```\n */\nexport default class FontIcon extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `FontIcon`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The icon font library className to use to display the icon.\n     */\n    iconClassName: PropTypes.string.isRequired,\n\n    /**\n     * Boolean if the primary theme color should be applied.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the secondary theme color should be applied.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the icon is considered disabled and should inherit the\n     * disabled color.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the error color should be applied to the icon.\n     */\n    error: PropTypes.bool,\n\n    /**\n     * Boolean if the color of the icon should be inherited by parent elements.\n     */\n    inherit: PropTypes.bool,\n\n    /**\n     * Either a boolean that will enforce the 24x24 size of the font icon or a number of the size\n     * to enforce. This is useful when using other font icon libraries that do not have a consistent\n     * size.\n     */\n    forceSize: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n    ]),\n\n    /**\n     * Boolean if the `forceSize` prop should also force the `font-size` instead of only `width` and `height`.\n     */\n    forceFontSize: (props, propName, component, ...args) => {\n      let error = PropTypes.bool(props, propName, component, ...args);\n      if (!error && typeof props.forceSize === 'undefined' && props[propName]) {\n        error = new Error(\n          `You provided a \\`forceFontSize\\` prop to the ${component} component, without specifying the \\`forceSize\\` ` +\n          `prop. Either set the \\`forceSize\\` prop to a boolean or a number, or disable \\`${propName}\\`.`\n        );\n      }\n\n      return error;\n    },\n\n    /**\n     * Any children required to display the icon with the font library.\n     */\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    iconClassName: 'material-icons',\n  };\n\n  constructor(props) {\n    super();\n\n    this.state = { styles: this._mergeStyles(props) };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { style, forceSize, forceFontSize } = this.props;\n    if (style !== nextProps.style || forceSize !== nextProps.forceSize || forceFontSize !== nextProps.forceFontSize) {\n      this.setState({ styles: this._mergeStyles(nextProps) });\n    }\n  }\n\n  _mergeStyles = ({ style, forceSize, forceFontSize }) => {\n    let styles = style;\n    if (typeof forceSize === 'boolean') {\n      styles = {\n        height: ICON_SIZE,\n        width: ICON_SIZE,\n        fontSize: forceFontSize ? ICON_SIZE : undefined,\n        ...style,\n      };\n    } else if (typeof forceSize === 'number') {\n      styles = {\n        height: forceSize,\n        width: forceSize,\n        fontSize: forceFontSize ? forceSize : undefined,\n        ...style,\n      };\n    }\n\n    return styles;\n  };\n\n  render() {\n    const { styles } = this.state;\n    const {\n      iconClassName,\n      className,\n      children,\n      disabled,\n      primary,\n      secondary,\n      error,\n      inherit,\n      /* eslint-disable no-unused-vars */\n      style,\n      forceSize,\n      forceFontSize,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const classes = cn('md-icon', iconClassName, themeColors({\n      disabled,\n      error,\n      inherit,\n      primary,\n      secondary,\n    }), className);\n\n    return (\n      <i {...props} style={styles} className={classes}>\n        {children}\n      </i>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `TileAddon` component is used to render either a `FontIcon` or an `Avatar`\n * next to the `ListTileText` for a `ListItem`.\n */\nexport default class TileAddon extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    active: PropTypes.bool,\n    activeClassName: PropTypes.string,\n    icon: PropTypes.node,\n    avatar: PropTypes.node,\n  };\n\n  render() {\n    const { icon, avatar, active, activeClassName, style, className } = this.props;\n    if (!icon && !avatar) {\n      return null;\n    }\n\n    let avatarIcon = false;\n    if (avatar) {\n      const avatarChild = React.Children.only(avatar);\n      if (avatarChild.props.iconSized) {\n        avatarIcon = true;\n      }\n    }\n    return (\n      <div\n        style={style}\n        className={cn('md-tile-addon', {\n          'md-tile-addon--icon': icon || avatarIcon,\n          'md-tile-addon--avatar': avatar && !avatarIcon,\n          [activeClassName]: active,\n        }, className)}\n      >\n        {icon || avatar}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The `ListItemText` component is used to render the `primaryText` and an optional\n * `secondaryText` for a `ListItem`.\n */\nexport default class ListItemText extends PureComponent {\n  static propTypes = {\n    active: PropTypes.bool,\n    activeClassName: PropTypes.string,\n    disabled: PropTypes.bool,\n    primaryText: PropTypes.node.isRequired,\n    primaryTextStyle: PropTypes.object,\n    primaryTextClassName: PropTypes.string,\n    secondaryText: PropTypes.node,\n    secondaryTextStyle: PropTypes.object,\n    secondaryTextClassName: PropTypes.string,\n    className: PropTypes.string,\n    threeLines: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      active,\n      activeClassName,\n      disabled,\n      primaryText,\n      primaryTextStyle,\n      primaryTextClassName,\n      secondaryText,\n      secondaryTextStyle,\n      secondaryTextClassName,\n      className,\n      threeLines,\n      ...props\n    } = this.props;\n\n    let secondaryTextNode;\n    if (secondaryText) {\n      secondaryTextNode = (\n        <div\n          style={secondaryTextStyle}\n          className={cn('md-tile-text--secondary', {\n            'md-tile-text--three-lines': threeLines,\n          }, themeColors({ disabled, hint: !disabled }), secondaryTextClassName)}\n        >\n          {secondaryText}\n        </div>\n      );\n    }\n\n    return (\n      <div {...props} className={cn('md-tile-content', className)}>\n        <div\n          style={primaryTextStyle}\n          className={cn('md-tile-text--primary', {\n            [activeClassName]: !disabled && active,\n          }, themeColors({ disabled, text: !active }), primaryTextClassName)}\n        >\n          {primaryText}\n        </div>\n        {secondaryTextNode}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The `Subheader` component is generally used inside of lists or menus.\n */\nexport default class Subheader extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the subheader.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the subheader.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if the subheader should be styled with the primary color.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the subheader is inset in the list. This will add additional\n     * spacing to align the subheader.\n     */\n    inset: PropTypes.bool,\n\n    /**\n     * The primary text to use in the subheader.\n     */\n    primaryText: PropTypes.node.isRequired,\n\n    /**\n     * Any optional children to display after the `primaryText`. This prop is\n     * not recommended.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component to render the Subheader as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    component: 'li',\n  };\n\n  render() {\n    const {\n      component: Component,\n      inset,\n      primary,\n      primaryText,\n      className,\n      children,\n      ...props\n    } = this.props;\n\n    return (\n      <Component\n        {...props}\n        className={cn('md-subheader', {\n          'md-list-item--inset': inset,\n        }, themeColors({ primary, hint: !primary }), className)}\n      >\n        {primaryText}\n        {children}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport Subheader from '../Subheaders';\n\n/**\n * Lists present multiple line items vertically as a single continuous element.\n */\nexport default class List extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the list.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the list.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if this should be an ordered list (`<ol>`) component. Otherwise, it will\n     * be rendered as `<ul>`.\n     */\n    ordered: PropTypes.bool,\n\n    /**\n     * This *should* be a list of `ListItem`, `ListItemControl`, `Divider`, or\n     * `Subheader`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the list should appear horizontally instead of vertically.\n     */\n    inline: PropTypes.bool,\n    subheader: deprecated(PropTypes.string, 'Use the `Subheader` component as a child instead'),\n    primarySubheader: deprecated(PropTypes.bool, 'Use the `Subheader` component as a child instead'),\n  };\n\n  static childContextTypes = {\n    listLevel: PropTypes.number,\n    cascadingMenu: PropTypes.bool,\n    cascadingFixedTo: fixedToShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  static contextTypes = {\n    listLevel: PropTypes.number,\n    cascadingMenu: PropTypes.bool,\n    cascadingFixedTo: fixedToShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  state = {};\n\n  getChildContext() {\n    const { listLevel, ...context } = this.context;\n    const cascadingFixedTo = getField(this.state, this.context, 'cascadingFixedTo');\n    return {\n      ...context,\n      cascadingFixedTo,\n      listLevel: typeof listLevel === 'undefined'\n        ? 1\n        : listLevel + 1,\n    };\n  }\n\n  componentDidMount() {\n    if (this.context.cascadingMenu) {\n      const list = findDOMNode(this);\n      if (list.offsetHeight < list.scrollHeight) {\n        const cascadingFixedTo = { y: findDOMNode(this) };\n        this.setState({ cascadingFixedTo }); // eslint-disable-line react/no-did-mount-set-state\n      }\n    }\n  }\n\n  render() {\n    const {\n      className,\n      ordered,\n      children,\n      subheader,\n      inline,\n      primarySubheader,\n      ...props\n    } = this.props;\n    const { cascadingMenu, cascadingZDepth, listLevel } = this.context;\n\n    let subheaderEl;\n    if (subheader) {\n      subheaderEl = <Subheader key=\"subheader\" primaryText={subheader} primary={primarySubheader} />;\n    }\n\n    const Component = ordered ? 'ol' : 'ul';\n    return (\n      <Component\n        {...props}\n        className={cn('md-list', {\n          'md-list--inline': inline,\n          'md-list--menu-cascading': cascadingMenu,\n          [`md-paper md-paper--${cascadingZDepth}`]: cascadingZDepth && cascadingMenu && listLevel > 0,\n          [`md-list--nested-${listLevel}`]: listLevel && !cascadingMenu,\n        }, className)}\n      >\n        {subheaderEl}\n        {children}\n      </Component>\n    );\n  }\n}\n","'use strict';\n\nexports.__esModule = true;\nexports.default = isRequiredForA11y;\nfunction isRequiredForA11y(validator) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      return new Error('The ' + location + ' `' + propFullNameSafe + '` is required to make ' + ('`' + componentNameSafe + '` accessible for users of assistive ') + 'technologies such as screen readers.');\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n  };\n}","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport ResizeObserverAPI from 'resize-observer-polyfill';\n\n/**\n * The `ResizeObserver` component is a component hook for the\n * [ResizeObserver](http://rawgit.com/WICG/ResizeObserver/master/index.html)\n * using the [resize-observer-polyfill](https://github.com/que-etc/resize-observer-polyfill)\n * for browsers that don't support it yet.\n *\n * This component displays an empty `span` with `aria-hidden` to allow access to the DOM. By\n * default it will attempt to watch changes on its parent component, but it can be configured\n * to watch any element by using the `target` prop.\n */\nexport default class ResizeObserver extends PureComponent {\n  static propTypes = {\n    /**\n     * Boolean if the height should be watched for the resize target.\n     */\n    watchHeight: PropTypes.bool,\n\n    /**\n     * Boolean if the width should be watched for the resize target.\n     */\n    watchWidth: PropTypes.bool,\n\n    /**\n     * An optional target that should be used for detecting resize events. This can either\n     * be a HTMLDOMNode or a string to use with `document.getElementById` or `document.querySelector`.\n     *\n     * If this prop is not provided and not null, it will default to the parent node of this component.\n     * If the provided `target={null}`, the observer will not begin until the `target` is `undefined` or\n     * it has been correctly passed a target string or object.\n     */\n    target: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.string,\n    ]),\n\n    /**\n     * The component to be rendered as. This should normally just be the default `span`, but there are cases\n     * where the component should be switched to something else for valid html.\n     */\n    component: PropTypes.string,\n\n    /**\n     * A function to call when the height or width has been changed and that attribute is being watched.\n     * The callback will include the current height, width, scrollHeight and scrollWidth of the target.\n     *\n     * ```js\n     * onResize({\n     *   height: nextHeight,\n     *   width: nextWidth,\n     *   scrollHeight: nextScrollHeight,\n     *   scrollWidth: nextScrollWidth,\n     *   el: resizeTarget,\n     * });\n     * ```\n     */\n    onResize: PropTypes.func.isRequired,\n\n    /**\n     * An optional ref callback that will include the `target` or the parent node of the resize observer. Just\n     * like other refs, this will provide null when it unmounts.\n     *\n     * This is really only helpful if you'd like the DOM node for a parent Component without needing to use\n     * `ReactDOM.findDOMNode(this)`.\n     */\n    elRef: PropTypes.func,\n  };\n\n  static defaultProps = {\n    watchHeight: false,\n    watchWidth: false,\n    component: 'span',\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { target } = this.props;\n    const nextTarget = nextProps.target;\n    if (target === nextTarget) {\n      return;\n    } else if (nextTarget) {\n      if (this._target) {\n        this._observer.unobserve(this._target);\n      }\n      this._target = this._getTarget(this._container, nextTarget);\n      this._observer.observe(this._target);\n    }\n  }\n\n  _container = null;\n  _target = null;\n  _observer = null;\n  _height = null;\n  _width = null;\n  _scrollHeight = null;\n  _scrollWidth = null;\n\n  _getTarget(container, target) {\n    if (target === null || (target && typeof target !== 'string')) {\n      return target;\n    }\n\n    let t = null;\n    if (target) {\n      t = document.getElementById(target) || document.querySelector(target);\n    } else {\n      t = container.parentNode;\n    }\n\n    if (!t) {\n      throw new Error(\n        'An HTMLDOMNode is required as the `ResizeObserver`\\'s watch target but none were provided/found. ' +\n        `Please update the target prop to find a valid node since the provided target is invalid. \\`${target}\\`.`\n      );\n    }\n\n    return t;\n  }\n\n  _measure = (entries) => {\n    if (!this._observer || !this._target) {\n      return;\n    }\n\n    for (const entry of entries) {\n      if (!entry) {\n        return;\n      }\n\n      const { height, width } = entry.contentRect;\n      const { scrollHeight, scrollWidth } = entry.target;\n      if (this._isHeightChange(height, scrollHeight) || this._isWidthChange(width, scrollWidth)) {\n        this._height = height;\n        this._width = width;\n        this._scrollHeight = scrollHeight;\n        this._scrollWidth = scrollWidth;\n        this.props.onResize({ height, width, scrollHeight, scrollWidth, el: entry.target });\n      }\n    }\n  };\n\n  _isHeightChange = (height, scrollHeight) => this.props.watchHeight\n    && (height !== this._height || scrollHeight !== this._scrollHeight);\n  _isWidthChange = (width, scrollWidth) => this.props.watchWidth\n    && (width !== this._width || scrollWidth !== this._scrollWidth);\n\n  _handleRef = (container) => {\n    if (container) {\n      this._container = container;\n      this._target = this._getTarget(container, this.props.target);\n      this._observer = new ResizeObserverAPI(this._measure);\n\n      if (this._target) {\n        this._observer.observe(this._target);\n      }\n    } else {\n      if (this._observer) {\n        this._observer.disconnect();\n      }\n\n      this._container = null;\n      this._target = null;\n      this._observer = null;\n      this._height = null;\n      this._width = null;\n      this._scrollHeight = null;\n      this._scrollWidth = null;\n    }\n\n    if (this.props.elRef) {\n      this.props.elRef(this._target);\n    }\n  };\n\n  render() {\n    const { component: Component } = this.props;\n    return <Component ref={this._handleRef} aria-hidden />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\n\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport getSelectedTextPosition from '../utils/Positioning/getSelectedTextPosition';\nimport getScroll from '../utils/Positioning/getScroll';\nimport viewport from '../utils/Positioning/viewport';\nimport isOutOfBounds from '../utils/Positioning/isOutOfBounds';\nimport anchorShape from './anchorShape';\nimport fixedToShape from './fixedToShape';\nimport positionShape from './positionShape';\nimport HorizontalAnchors from './HorizontalAnchors';\nimport VerticalAnchors from './VerticalAnchors';\nimport Positions from './Positions';\nimport ResizeObserver from './ResizeObserver';\n\n/**\n * The Layover component is used to keep a component fixed to another component\n * while the page is scrolling or a container is scrolling. When the fixed component\n * is considered out of view, it will be closed.\n *\n * > NOTE: Don't look at source code. Plz.\n */\nexport default class Layover extends PureComponent {\n  static HorizontalAnchors = HorizontalAnchors;\n  static VerticalAnchors = VerticalAnchors;\n  static Positions = Positions;\n\n  static propTypes = {\n    /**\n     * A id to give the layover itself. This is generally recommended for accessibility. If the\n     * child does not have an id, the child will automatically be updated to be `${id}-layover`.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the layover.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the layover.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if the layover's child is currently visible.\n     */\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * This should either be a single element or two elements that the layover recalculates\n     * its fixed position when scrolling for horizontal and vertical.\n     *\n     * When it is a single element, it will recalculate for both horizontal and vertical\n     * scrolling. Otherwise, you can specify the element for horizontal scrolling and a\n     * separate element for vertical scrolling. If one is omitted, it will default to `window`.\n     *\n     * If the component is no longer considered to be in view after scrolling, the `onClose`\n     * prop will be called.\n     */\n    fixedTo: fixedToShape.isRequired,\n\n    /**\n     * The renderable item that causes the Layover to become visible. This _should_\n     * most likely be an `element` or `arrayOf(element)`, but anything is allowed.\n     */\n    toggle: PropTypes.node,\n\n    /**\n     * Since the `toggle` prop can be anything, I need a way to be able to find an\n     * element to base all the calculations on. This can either be a string that\n     * gets passed to `layover.querySelector`, a DOM Element, or a function that\n     * returns a DOM Element.\n     */\n    toggleQuery: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * A single child that should be fixed to the toggle element.\n     */\n    children: PropTypes.element.isRequired,\n\n    /**\n     * Boolean if the Layover should be displayed as a block instead of as an inline block.\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the `children` should be centered horizontally and vertically while keeping\n     * its height in mind as well. This is *only* valid if both the x and y `anchor` targets\n     * are `CENTER`.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the layover should gain the `md-full-width` class name.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the width of the children should be updated automatically to be the width\n     * of the toggle element.\n     */\n    sameWidth: PropTypes.bool,\n\n    /**\n     * The minimum value the `left` style can be for the child component. This is really just used\n     * to make sure it doesn't scroll off the left of the page. It can also be used to make\n     * full screen layovers on devices when when the `fillViewportWidth` prop is enabled.\n     *\n     * This can either be a number of pixels or a string for percentages. If this value is a string\n     * **it will always be used over the calculated values** so it is preferred to use a number.\n     *\n     * @see {@link #minRight}\n     * @see {@link #fillViewportWidth}\n     */\n    minLeft: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The minimum value the `right` style can be for the child component. This is really just used\n     * to make sure it doesn't scroll off the right of the page when the `fillViewportWidth` prop is\n     * enabled.\n     *\n     * This can either be a number of pixels or a string for percentages. If this value is a string\n     * **it will always be used over the calculated values** so it is preferred to use a number.\n     *\n     * @see {@link #minLeft}\n     * @see {@link #fillViewportWidth}\n     */\n    minRight: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The minimum value that can be used for the `bottom` prop when the `fillViewportHeight` prop is enabled.\n     * It is generally recommended to keep this value at `0` to keep it stretched to the bottom of the viewport\n     * or setting it to a small positive number to add some padding.\n     *\n     * This can either be a number of pixels or a string for percentages. If this value is a string\n     * **it will always be used over the calculated values** so it is preferred to use a number.\n     *\n     * @see {@link #fillViewportHeight}\n     */\n    minBottom: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the layover should make the child fill the entire viewport's width. This will just\n     * style the child element with:\n     *\n     * ```js\n     * childStyle = {\n     *   left: this.props.minLeft,\n     *   right: this.props.minRight,\n     * };\n     * ```\n     *\n     * If you add any additional constraints such as `width` or `max-width`, it will not span the entire viewport's\n     * width. This prop should generally really only be used on mobile devices. Using this prop along with\n     * `fillViewportHeight` for Autocompletes can create great Android mobile searches. See the `fillViewportHeight`\n     * for more information about why it is *only Android*.\n     *\n     * @see {@link #minLeft}\n     * @see {@link #minRight}\n     * @see {@link #fillViewportHeight}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the layover should fill the height of the viewport from the current calculated `top`. This will just\n     * style the child element with:\n     *\n     * ```js\n     * childStyle = {\n     *   top: currentCalculatedTop,\n     *   bottom: this.props.minBottom,\n     *   maxHeight: 'none',\n     * };\n     * ```\n     *\n     * This is *super* nice on Android devices since it will allow you to create nice toolbar search autocompletes\n     * in your app and the list of items will grow until it reaches the soft keyboard. It isn't as nice on iOS since\n     * iOS does not subtract the soft keyboard from the viewport's size so the list will still extend to the bottom\n     * of the page.\n     *\n     * @see {@link #minBottom}\n     * @see {@link #fillViewportWidth}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    /**\n     * A function used to hide the visibility of the children when the children are no longer\n     * visible or an element outside of the layover is clicked.\n     */\n    onClose: PropTypes.func.isRequired,\n\n    /**\n     * The component to render the Layover as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * The transition name to use for the children appearing/disappearing.\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition duration for the enter animation. The animation can be disabled by setting\n     * this value to 0.\n     */\n    transitionEnterTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition duration for the leave animation. The animation can be disabled by setting\n     * this value to 0.\n     */\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n\n    /**\n     * This is a threshold that is used to calculate if the `children` is still in\n     * view by applying this multiplier to the `children`'s width.\n     */\n    xThreshold: PropTypes.number.isRequired,\n\n    /**\n     * This is a threshold that is used to calculate if the `children` is still in\n     * view by applying this multiplier to the `toggle`'s height.\n     */\n    yThreshold: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `children` should be hidden when an element outside\n     * of the `Layout` component has been clicked.\n     */\n    closeOnOutsideClick: PropTypes.bool.isRequired,\n\n    /**\n     * This is how the children get \"anchored\" to the `toggle` element and how the\n     * auto-fix attempts will be made. Right now, the auto fixes will only be handled\n     * on viewport boundaries instead of `fixedTo` boundaries. It was too hard for\n     * first attempt.\n     *\n     * The general behavior will be that an equal-opposite of an anchor will be chosen\n     * when that direction is out of viewport. So for example, the children are out\n     * of viewport for the right of the screen, and the `anchor.x` value is\n     * `Layover.HorizontalPositions.RIGHT`, the children will be swapped to be the `LEFT`\n     * of the `toggle` component now.\n     *\n     * So a full list:\n     * - `LEFT` / `RIGHT`\n     * - `INNER_LEFT` / `INNER_RIGHT`\n     * - `TOP` / `BOTTOM`\n     *\n     * The `CENTER` and `OVERLAP` positions can not be automatically adjusted.\n     *\n     * > To be safe, you should use the enum values for the `x` and `y` values.\n     * @see {@link #VerticalAnchors}\n     * @see {@link #HorizontalAnchors}\n     */\n    anchor: anchorShape.isRequired,\n\n    /**\n     * This is how the children get \"anchored\" when the `animationPositions` is set to `Layover.Positions.BELOW`.\n     * Set this to `null` to continue using the base `anchor` prop instead of switching to this anchor.\n     *\n     * @see {@link #anchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the position that the children should animate from. It directly ties into\n     * the `$md-layover-child-positions` Sass variable.\n     */\n    animationPosition: positionShape.isRequired,\n\n    /**\n     * If you would like the layover to interact as a context menu, provide this prop. It will\n     * make the children appear relative to the context menu origin automatically.\n     *\n     * @see {@link #preventContextMenu}\n     */\n    onContextMenu: PropTypes.func,\n\n    /**\n     * Boolean if the default behavior of the context menu should be prevented when using the\n     * `onContextMenu` prop.\n     *\n     * @see {@link #onContextMenu}\n     */\n    preventContextMenu: PropTypes.bool,\n\n    /**\n     * Boolean if the layover should attempt to automatically adjust the position of the element to\n     * keep it within the viewport. If this value is set to `false`, the `onClose` prop will be called\n     * instead.\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the layover should attempt to automatically adjust the position of the element to\n     * keep it within the viewport. If this value is set to `false`, the `onClose` prop will be called\n     * instead.\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the layover should become \"simplified\". This basically disables all the logic for\n     * keeping the child within the viewport and allows you to manage all the positioning via CSS.\n     *\n     * When this is enabled, it updates the `Layover` to have `position: relative` while the child will\n     * have `position: absolute` which will allow for simple `top`, `right`, `bottom`, and/or `left` CSS\n     * to position as wanted.\n     *\n     * This is really only helpful in cases where the layover can't calculate things correctly due to\n     * being in fixed containers somewhere in the page or some other weird stuff. Hopefully this won't\n     * really need to be used much.\n     */\n    simplified: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    anchor: {\n      x: Layover.HorizontalAnchors.INNER_LEFT,\n      y: Layover.VerticalAnchors.OVERLAP,\n    },\n    belowAnchor: {\n      x: Layover.HorizontalAnchors.CENTER,\n      y: Layover.VerticalAnchors.BOTTOM,\n    },\n    animationPosition: Layover.Positions.BELOW,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n    component: 'div',\n    fixedTo: typeof window !== 'undefined' ? window : {},\n    toggleQuery: '.md-text-field-container,button,*[role=\"button\"],*[role=\"listbox\"]',\n    transitionName: 'md-layover',\n    transitionEnterTimeout: 200,\n    transitionLeaveTimeout: 200,\n    yThreshold: 0.38,\n    xThreshold: 0.38,\n    closeOnOutsideClick: true,\n    preventContextMenu: true,\n    simplified: false,\n    minLeft: 0,\n    minRight: 0,\n    minBottom: 0,\n    fillViewportWidth: false,\n    fillViewportHeight: false,\n  };\n\n  constructor(props) {\n    super();\n\n    const child = React.Children.only(props.children);\n    this.state = {\n      below: false,\n      right: false,\n      styles: child.props.style,\n    };\n\n    this._lastXFix = null;\n    this._lastYFix = null;\n    this._initialX = null;\n    this._initialY = null;\n    this._initialTop = null;\n    this._initialLeft = null;\n    this._child = null;\n    this._toggle = null;\n  }\n\n  componentDidMount() {\n    if (process.env.NODE_ENV === 'development') {\n      window.addEventListener('load', () => {\n        this._setContainer(this._container);\n      });\n    }\n\n    const { visible, fixedTo, sameWidth, centered, simplified } = this.props;\n    const anchor = this._getAnchor(this.props);\n    if (visible) {\n      handleWindowClickListeners(this._handleOutsideClick, true);\n\n      // Don't worry about any of the other logic for a \"simple\" layover\n      if (simplified) {\n        return;\n      }\n\n      const rect = this._contextRect || this._toggle.getBoundingClientRect();\n      if (this._dialog) {\n        this._manageFixedToListener(this._dialog, true);\n      } else if (!this._inFixed) {\n        this._manageFixedToListener(fixedTo, true);\n      }\n\n      this._init(fixedTo, anchor, sameWidth, centered, rect);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { fixedTo, visible, children, sameWidth, centered, simplified } = nextProps;\n    if (simplified) {\n      if (this.props.simplified !== simplified) {\n        this._reset();\n      }\n      return;\n    }\n\n    const anchor = this._getAnchor(nextProps);\n    const visibileDiff = visible !== this.props.visible;\n    const childStyle = React.Children.only(children).props.style;\n\n    if (visibileDiff) {\n      if (!visible) {\n        this._reset();\n      } else {\n        // Initialize the layover logic\n        const rect = this._contextRect || this._toggle.getBoundingClientRect();\n        if (this._dialog) {\n          this._manageFixedToListener(this._dialog, true);\n        } else if (!this._inFixed) {\n          this._manageFixedToListener(fixedTo, true);\n        }\n\n        this._init(fixedTo, anchor, sameWidth, centered, rect);\n      }\n    } else if (fixedTo !== this.props.fixedTo && visible) {\n      // swap the fixedTo listeners\n      this._manageFixedToListener(this.props.fixedTo, false);\n      this._manageFixedToListener(fixedTo, true);\n    } else if (childStyle !== React.Children.only(this.props.children).props.style) {\n      // Re-merge styles... This is only required if all the others fail since all the other\n      // logic always merges styles with the children styles\n      this.setState({ styles: { ...this.state.styles, ...childStyle } });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { visible, closeOnOutsideClick } = this.props;\n    const enabled = visible && closeOnOutsideClick;\n    const prevEnabled = prevProps.visible && prevProps.closeOnOutsideClick;\n    if (enabled !== prevEnabled) {\n      if (this._clickTimeout) {\n        clearTimeout(this._clickTimeout);\n        this._clickTimeout = null;\n      }\n\n      // This is really an arbitrary timeout time, but firefox needs to have a timeout\n      // so the context menu doesn't close automatically due to an \"outside click\" being\n      // triggered\n      this._clickTimeout = setTimeout(() => {\n        this._clickTimeout = null;\n        handleWindowClickListeners(this._handleOutsideClick, enabled);\n      }, enabled ? 300 : 0);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._clickTimeout) {\n      clearTimeout(this._clickTimeout);\n      this._clickTimeout = null;\n    }\n    handleWindowClickListeners(this._handleOutsideClick, false);\n\n    if (!this.props.simplified) {\n      this._manageFixedToListener(this.props.fixedTo, false);\n      this._manageWindowResizeListener(false);\n    }\n  }\n\n  _getAnchor({ anchor, belowAnchor, animationPosition }) {\n    return animationPosition === Layover.Positions.BELOW && belowAnchor || anchor;\n  }\n\n  _isCenteredDialog = () => this._dialog && this._dialog.classList.contains('md-dialog--centered');\n\n  _createStyles = (anchor, centered, child, rect) => {\n    const { x, y } = anchor;\n    const { offsetWidth, offsetHeight } = child;\n\n    let left;\n    let top;\n    if (x === HorizontalAnchors.CENTER) {\n      left = rect.left + (rect.width / 2) - (offsetWidth / 2);\n    } else if (x === HorizontalAnchors.INNER_RIGHT) {\n      left = rect.right - offsetWidth;\n    } else if (x === HorizontalAnchors.LEFT) {\n      left = rect.left - offsetWidth;\n    } else if (x === HorizontalAnchors.RIGHT) {\n      left = rect.right;\n    }\n\n    if (centered && x === HorizontalAnchors.CENTER && y === VerticalAnchors.CENTER) {\n      top = rect.top - (offsetHeight / 2) + (rect.height / 2);\n    } else if (y === VerticalAnchors.TOP) {\n      top = rect.top - offsetHeight;\n    } else if (y === VerticalAnchors.CENTER) {\n      top = rect.top + rect.height / 2;\n    } else if (y === VerticalAnchors.BOTTOM) {\n      top = rect.bottom;\n    }\n\n    if (this._isCenteredDialog()) {\n      const dialogRect = this._dialog.getBoundingClientRect();\n      left -= dialogRect.left;\n      top -= dialogRect.top;\n    }\n\n    const style = {};\n    if (top) {\n      style.top = top;\n    }\n\n    if (left) {\n      style.left = left;\n    }\n\n    return style;\n  };\n\n  /**\n   * Whew. Ok. So since the fixedTo prop can either be two elements or a single item,\n   * this utility function is used to add/remove the scrolling event listeners for\n   * this prop.\n   *\n   * When the fixedTo prop has a horizontal and/or vertical attribute, the `window`\n   * will be the fallback option. If both the horizontal and vertical attributes are\n   * defined, the `window` still needs to have a scroll listener to make sure it\n   * doesn't go off screen.\n   */\n  _manageFixedToListener = (fixedTo, add) => {\n    const listener = `${add ? 'add' : 'remove'}EventListener`;\n    if (fixedTo !== window && (fixedTo.x || fixedTo.y)) {\n      const { x, y } = fixedTo;\n      if (x) {\n        x[listener]('scroll', this._handleScroll);\n      } else {\n        window[listener]('scroll', this._handleScroll);\n      }\n\n      if (y) {\n        y[listener]('scroll', this._handleScroll);\n      } else if (!x) {\n        // Only add the window event listener once\n        window[listener]('scroll', this._handleScroll);\n      }\n\n      if (y && y !== window && x && x !== window) {\n        window[listener]('scroll', this._handleScroll);\n      }\n    } else {\n      fixedTo[listener]('scroll', this._handleScroll);\n\n      if (fixedTo !== window) {\n        window[listener]('scroll', this._handleScroll);\n      }\n    }\n  };\n\n  _manageWindowResizeListener = (enabled) => {\n    if (this._windowResizeTimeout) {\n      clearTimeout(this._windowResizeTimeout);\n      this._windowResizeTimeout = null;\n    }\n\n    if (enabled) {\n      // add a 2 second delay before watching resize events since Android soft keyboards trigger a resize event.\n      this._windowResizeTimeout = setTimeout(() => {\n        this._windowResizeTimeout = null;\n        window.addEventListener('resize', this._handleWindowResize);\n      }, 2000);\n    } else {\n      window.removeEventListener('resize', this._handleWindowResize);\n    }\n  };\n\n  /**\n   * This is just a simple utility function to merge the existing state styles,\n   * any new styles, and the children's styles (with most precedence).\n   */\n  _mergeStyles = (style) => {\n    const {\n      minLeft,\n      minRight,\n      minBottom,\n      fillViewportWidth,\n      fillViewportHeight,\n    } = this.props;\n    if (fillViewportWidth) {\n      style.left = minLeft;\n      style.right = minRight;\n    } else {\n      if (style.left) {\n        style.left = Math.max(minLeft, style.left);\n      }\n\n      if (style.right) {\n        style.right = Math.max(minRight, style.right);\n      }\n    }\n\n    if (fillViewportHeight) {\n      style.bottom = minBottom;\n      style.maxHeight = 'none';\n    } else {\n      // These styles are only created when filling the viewport height, so clear\n      // them out again\n      style.bottom = null;\n      style.maxHeight = null;\n    }\n\n    return {\n      ...this.state.styles,\n      ...style,\n      ...React.Children.only(this.props.children).props.style,\n    };\n  };\n\n  /**\n   * This initializes the popover with the default styles, and the initial bookkeeping\n   * variables to update while it is open.\n   */\n  _init = (fixedTo, anchor, sameWidth, centered, rect) => {\n    if (this._child) {\n      // The init function can be called again if the user quickly toggles the layover. If that\n      // is the case, we want the styles that were set after the _positionChild _attemptFix.\n      return;\n    }\n\n    const { height, width } = rect;\n    let { top, left, right } = rect;\n    let x;\n    let y;\n    if (this._dialog) {\n      const scroll = getScroll(this._dialog);\n      x = scroll.x;\n      y = scroll.y;\n\n      if (this._isCenteredDialog()) {\n        const dialogRect = this._dialog.getBoundingClientRect();\n        left -= dialogRect.left;\n        top -= dialogRect.top;\n        right -= dialogRect.right;\n      }\n    } else if (fixedTo !== window && (fixedTo.y || fixedTo.x)) {\n      x = getScroll(fixedTo.x || window).x;\n      y = getScroll(fixedTo.y || window).y;\n    } else {\n      const scroll = getScroll(fixedTo);\n      x = scroll.x;\n      y = scroll.y;\n    }\n\n    this._initialX = x;\n    this._initialY = y;\n    this._initialLeft = left;\n    this._initialTop = top;\n\n    if (anchor.x === HorizontalAnchors.INNER_RIGHT) {\n      this._initialLeft = left + width;\n    } else if (anchor.x === HorizontalAnchors.RIGHT) {\n      this._initialLeft = right;\n    }\n\n    if (!centered) {\n      this._lastYFix = anchor.y === VerticalAnchors.TOP ? 'bottom' : 'top';\n    } else {\n      // Centered is not fixable\n      this._lastYFix = null;\n    }\n    if (anchor.x === HorizontalAnchors.LEFT || anchor.x === HorizontalAnchors.INNER_LEFT) {\n      this._lastXFix = 'right';\n    } else if (anchor.x === HorizontalAnchors.RIGHT || anchor.x === HorizontalAnchors.INNER_RIGHT) {\n      this._lastXFix = 'left';\n    } else {\n      // Can't fix others\n      this._lastXFix = null;\n    }\n\n    if (anchor.y === VerticalAnchors.BOTTOM) {\n      this._initialTop = top + height;\n    }\n\n    if (fixedTo !== window && !fixedTo.y && !fixedTo.x) {\n      const scroll = getScroll(window);\n      this._initialWinX = scroll.x;\n      this._initialWinY = scroll.y;\n    }\n\n    const styles = this._mergeStyles({\n      left: this._initialLeft,\n      top: this._initialTop,\n      transformOrigin: undefined,\n      width: sameWidth ? width : undefined,\n    });\n\n    this.setState({ styles });\n  };\n\n  _reset = ({ fixedTo } = this.props) => {\n    // Reset all the bookkeeping variables for a fresh start on re-visible\n    this._lastXFix = null;\n    this._lastYFix = null;\n    this._initialX = null;\n    this._initialY = null;\n    this._initialTop = null;\n    this._initialLeft = null;\n\n    if (!this._inFixed) {\n      if (this._dialog) {\n        this._manageFixedToListener(this._dialog, false);\n      }\n\n      this._manageFixedToListener(fixedTo, false);\n    }\n  };\n\n  _setContainer = (container) => {\n    this._container = findDOMNode(container);\n    this._toggle = null;\n    if (!this._container) {\n      return;\n    }\n\n    const { toggleQuery, onContextMenu } = this.props;\n    if (typeof toggleQuery === 'function') {\n      this._toggle = toggleQuery();\n    } else if (typeof toggleQuery === 'string') {\n      this._toggle = this._container.querySelector(toggleQuery);\n    } else {\n      this._toggle = toggleQuery;\n    }\n\n    if (!this._toggle && !onContextMenu && process.env.NODE_ENV !== 'production') {\n      const error = new Error(\n        'Unable to find a toggle component with the provided `toggleQuery` and `toggle` element. \\n' +\n        `\\`toggleQuery\\`: \\`${toggleQuery}\\``\n      );\n      error.toggleQuery = toggleQuery;\n      error.toggle = this.props.toggle;\n\n      throw error;\n    }\n\n    let node = this._container;\n    while (node) {\n      const fixed = window.getComputedStyle(node).position === 'fixed';\n      if (fixed && node.className.match(/md-dialog--(full-page|centered)/)) {\n        this._dialog = node;\n        return;\n      } else if (fixed && !node.classList.contains('md-layover-child')) {\n        this._inFixed = true;\n        return;\n      }\n\n      node = node.offsetParent;\n    }\n  };\n\n  /**\n   * Attempts to fix the child by setting it's location ONLY for the entire\n   * page viewport. I didn't bother attempting to fix it for additional fixedTo\n   * stuff.\n   */\n  _initialFix = () => {\n    // Need to make a clone that disables any transitions to calculate positioning stuff\n    const clone = this._child.cloneNode(true);\n    clone.style.webkitTransform = 'none';\n    clone.style.transfrom = 'none';\n    clone.style.webkitTransition = 'none';\n    clone.style.transition = 'none';\n\n    this._child.parentNode.appendChild(clone);\n    const vp = viewport(clone);\n    const { offsetHeight: childHeight, offsetWidth: childWidth } = clone;\n    this._child.parentNode.removeChild(clone);\n\n    if (vp === true || !this._toggle || !this._child) {\n      return;\n    }\n\n    const { x, y } = this._getAnchor(this.props);\n    let toggleHeight;\n    let toggleWidth;\n    if (this._contextRect) {\n      toggleHeight = this._contextRect.height;\n      toggleWidth = this._contextRect.width;\n    } else {\n      toggleHeight = this._toggle.offsetHeight;\n      toggleWidth = this._toggle.offsetWidth;\n    }\n\n    let addToTop = 0;\n    let addToLeft = 0;\n\n    // Android devices will never get this far because they consider the keyboard as part\n    // of the viewport, iOS will and cause it to be a giant negative number. *sigh*\n    // Prevent any additional vertical positioning for iOS\n    if (!this.props.fillViewportHeight && (!vp.top || !vp.bottom)) {\n      const multiplier = vp.top ? -1 : 1;\n      if (!vp.bottom && y === VerticalAnchors.OVERLAP) {\n        addToTop += toggleHeight;\n      } else if (y === VerticalAnchors.TOP || y === VerticalAnchors.BOTTOM) {\n        addToTop += (multiplier * toggleHeight);\n      }\n\n      addToTop += (multiplier * childHeight);\n\n      this._lastYFix = vp.top ? 'bottom' : 'top';\n    }\n\n    if (!this.props.fillViewportWidth && x !== HorizontalAnchors.CENTER && (!vp.left || !vp.right)) {\n      if (!vp.left && x === HorizontalAnchors.LEFT) {\n        addToLeft += toggleWidth + childWidth;\n        this._lastXFix = 'left';\n      } else if (!vp.left && x === HorizontalAnchors.INNER_LEFT) {\n        addToLeft += toggleWidth;\n        this._lastXFix = 'left';\n      } else if (!vp.right && x === HorizontalAnchors.RIGHT) {\n        addToLeft -= (toggleWidth + childWidth);\n        this._lastXFix = 'right';\n      } else if (!vp.right && x === HorizontalAnchors.INNER_RIGHT) {\n        addToLeft -= toggleWidth;\n        this._lastXFix = 'right';\n      }\n    }\n\n    if (addToTop !== 0 || addToLeft !== 0) {\n      this._initialTop += addToTop;\n      this._initialLeft += addToLeft;\n\n      this.setState({ styles: this._mergeStyles({ top: this._initialTop, left: this._initialLeft }) });\n    }\n  };\n\n  /**\n   * When the child is initially mounted, it will update the styles for centering\n   * the element (if enabled) and then attempt to fix any viewport issues.\n   */\n  _fixateChild = (child) => {\n    this._child = findDOMNode(child);\n\n    if (this._child !== null) {\n      this._childComponent = React.Children.only(this.props.children);\n\n      // If child also has a ref callback, simulate the same thing\n      if (typeof this._childComponent.ref === 'function') {\n        this._childComponent.ref(child);\n      }\n\n      if (this.props.simplified || !this._child || (!this._toggle && !this._contextRect)) {\n        return;\n      }\n\n      if (this._dialog && this._dialog.classList.contains('md-dialog--centered')) {\n        return;\n      }\n\n      this._manageWindowResizeListener(true);\n      this._positionChild();\n    } else if (this._childComponent && typeof this._childComponent.ref === 'function') {\n      this._childComponent.ref(child);\n    }\n  };\n\n  _positionChild = () => {\n    const { centered } = this.props;\n    const anchor = this._getAnchor(this.props);\n    const rect = this._contextRect || this._toggle.getBoundingClientRect();\n    this._height = rect.height;\n    this._width = rect.width;\n    const styles = this._createStyles(anchor, centered, this._child, rect);\n    if (styles.top || styles.left) {\n      this._initialLeft = styles.left || this._initialLeft;\n      this._initialTop = styles.top || this._initialTop;\n      this.setState({ styles: this._mergeStyles(styles) }, this._initialFix);\n    } else {\n      this._initialFix();\n    }\n  };\n\n  _handleResize = () => {\n    if (this.props.visible) {\n      this._positionChild();\n    }\n  };\n\n  _handleScroll = (e) => {\n    if (!this.props.repositionOnScroll) {\n      this._manageFixedToListener(this.props.fixedTo, false);\n      this.props.onClose(e);\n    }\n\n    if (!this._ticking) {\n      requestAnimationFrame(() => this._handleTick(e));\n    }\n\n    this._ticking = true;\n  };\n\n  /**\n   * This is the meat of the stuff. Do lots of viewport / container checks to make sure\n   * the element should still be visible. If it is still visible, it will update its\n   * x and y position for the new scroll position.\n   */\n  _handleTick = (e) => {\n    const { fixedTo, xThreshold, yThreshold } = this.props;\n    const vp = viewport(this._child);\n    if (vp !== true && vp.left && vp.right) {\n      const fixed = !this._contextRect && this._attemptFix(vp);\n      if (!fixed) {\n        this.props.onClose(e);\n        this._ticking = false;\n      }\n\n      return;\n    } else if (\n      isOutOfBounds(fixedTo, this._child, this._toggle, yThreshold, xThreshold)\n    ) {\n      this.props.onClose(e);\n      this._ticking = false;\n      return;\n    }\n\n    let x;\n    let y;\n    if (this._dialog) {\n      const scroll = getScroll(this._dialog);\n      x = scroll.x;\n      y = scroll.y;\n    } else if (fixedTo !== window && (fixedTo.x || fixedTo.y)) {\n      x = getScroll(fixedTo.x || window).x;\n      y = getScroll(fixedTo.y || window).y;\n    } else {\n      const scroll = getScroll(fixedTo);\n      x = scroll.x;\n      y = scroll.y;\n    }\n\n    let winX;\n    let winY;\n    // When using the additional fixedTo stuff, need to also keep track of the entire\n    // window's scrolling..\n    if (fixedTo !== window && !fixedTo.x && !fixedTo.y) {\n      const scroll = getScroll(window);\n      winX = scroll.x;\n      winY = scroll.y;\n    }\n\n    const { styles } = this.state;\n    let { left, top } = styles;\n    if (this._initialX !== x) {\n      left = (this._initialX - x) + this._initialLeft;\n    }\n\n    if (winX && this._initialWinX !== winX) {\n      left = (this._initialWinX - winX) + this._initialX;\n    }\n\n    if (this._initialY !== y) {\n      top = (this._initialY - y) + this._initialTop;\n    }\n\n    if (winY && this._initialWinY !== winY) {\n      top = (this._initialWinY - winY) + this._initialTop + (this._initialY - y);\n    }\n\n    if (styles.top !== top || styles.left !== left) {\n      this.setState({ styles: this._mergeStyles({ left, top }) }, () => {\n        this._ticking = false;\n      });\n    } else {\n      this._ticking = false;\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (\n      (this._contextRect && this._child && !this._child.contains(e.target)) ||\n      (this._container && !this._container.contains(e.target))\n    ) {\n      this.props.onClose(e);\n    }\n  };\n\n  _handleWindowResize = (e) => {\n    const { onClose, repositionOnResize } = this.props;\n    if (repositionOnResize) {\n      this._handleResize();\n    } else {\n      onClose(e);\n      this._manageWindowResizeListener(false);\n    }\n  };\n\n  /**\n   * Attempts to fix a viewport problem by swapping the positioning. This only does\n   * vertical switching right now.\n   *\n   * @param {Object} vp - The result of the viewport function\n   * @return {boolean} true if the fix was able to be done and successful.\n   */\n  _attemptFix = (vp) => {\n    const { x, y } = this._getAnchor(this.props);\n    const centered = x === HorizontalAnchors.CENTER && y === VerticalAnchors.CENTER && this.props.centered;\n    if (centered || (this._lastYFix === 'top' && !vp.top) || (this._lastYFix === 'bottom' && !vp.bottom)) {\n      return false;\n    }\n\n    const toggleTop = this._toggle.getBoundingClientRect().top;\n    const { offsetHeight: toggleHeight } = this._toggle;\n    const { offsetHeight: childHeight } = this._child;\n\n    // Can;t fix if the child can't fit on the page based on the toggle's position\n    if (toggleTop + toggleHeight + childHeight > window.innerHeight) {\n      return false;\n    }\n\n    const { top } = this._child.getBoundingClientRect();\n    let newTop = this._initialTop;\n    let addToTop = childHeight * (vp.top ? -1 : 1);\n    if (y === VerticalAnchors.OVERLAP) {\n      addToTop += ((vp.top ? 1 : -1) * toggleHeight);\n    } else if (y === VerticalAnchors.TOP || y === VerticalAnchors.BOTTOM) {\n      addToTop += ((this._lastYFix === 'top' ? -1 : 1) * toggleHeight);\n    }\n\n    if (addToTop !== 0) {\n      newTop = top + addToTop;\n      this._lastYFix = vp.top ? 'bottom' : 'top';\n    }\n\n    if (newTop !== this._initialTop) {\n      this._initialTop = newTop;\n      const { fixedTo } = this.props;\n      let scrollEl = fixedTo;\n      if (fixedTo !== window && (fixedTo.y || fixedTo.x)) {\n        scrollEl = fixedTo.y || window;\n      }\n\n      this._initialY = getScroll(scrollEl).y;\n\n      this.setState({ styles: this._mergeStyles({ top: this._initialTop }) }, () => {\n        this._ticking = false;\n      });\n      return true;\n    }\n\n    return false;\n  };\n\n  _handleContextMenu = (e) => {\n    const anchor = this._getAnchor(this.props);\n    const { onContextMenu, preventContextMenu, fixedTo, sameWidth, centered, visible } = this.props;\n    if (!onContextMenu) {\n      return;\n    }\n\n    this._contextRect = getSelectedTextPosition(e);\n    if (preventContextMenu && (!this._child || !this._child.contains(e.target))) {\n      e.preventDefault();\n    }\n\n    onContextMenu(e);\n    if (visible) {\n      this._init(fixedTo, anchor, sameWidth, centered, this._contextRect);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      block,\n      toggle,\n      visible,\n      children,\n      fullWidth,\n      animationPosition,\n      simplified,\n      fillViewportWidth,\n      fillViewportHeight,\n      /* eslint-disable no-unused-vars */\n      anchor,\n      belowAnchor,\n      onClose,\n      repositionOnScroll,\n      repositionOnResize,\n      sameWidth,\n      centered,\n      fixedTo,\n      toggleQuery,\n      yThreshold,\n      xThreshold,\n      onContextMenu,\n      preventContextMenu,\n      closeOnOutsideClick,\n      minLeft,\n      minRight,\n      minBottom,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let child;\n    let childId;\n    if (visible) {\n      child = React.Children.only(children);\n      if (child.props.id) {\n        childId = child.props.id;\n      } else if (props.id) {\n        childId = `${props.id}-layover`;\n      }\n\n      child = React.cloneElement(children, {\n        ref: this._fixateChild,\n        id: childId,\n        style: simplified ? child.props.style : this.state.styles,\n        className: cn(`md-layover-child md-layover-child--${animationPosition}`, {\n          'md-layover-child--simplified': simplified,\n        }, child.props.className),\n      });\n    }\n\n    let observer = null;\n    if (!simplified && (!fillViewportWidth && !fillViewportHeight)) {\n      observer = (\n        <ResizeObserver\n          watchWidth={!fillViewportWidth}\n          watchHeight={!fillViewportHeight}\n          target={this._child}\n          onResize={this._handleResize}\n        />\n      );\n    }\n\n    return (\n      <CSSTransitionGroup\n        {...props}\n        className={cn('md-layover', {\n          'md-layover--simplified': simplified,\n          'md-inline-block': !block && !fullWidth,\n          'md-full-width': fullWidth,\n        }, className)}\n        ref={this._setContainer}\n        aria-haspopup\n        aria-owns={childId}\n        aria-expanded={visible}\n        transitionEnter={props.transitionEnterTimeout !== 0}\n        transitionLeave={props.transitionLeaveTimeout !== 0}\n        onContextMenu={this._handleContextMenu}\n      >\n        {observer}\n        {toggle}\n        {child}\n      </CSSTransitionGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getField from '../utils/getField';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Layover from '../Helpers/Layover';\nimport List from '../Lists/List';\n\n/**\n * The `Menu` controlled component is used to display a list of children in the `List`\n * component once the `visible` prop is true.\n */\nexport default class Menu extends PureComponent {\n  static HorizontalAnchors = Layover.HorizontalAnchors;\n  static VerticalAnchors = Layover.VerticalAnchors;\n  static Positions = {\n    // Can't do ...Layover.Positions since it triggers the get for CONTEXT\n    TOP_LEFT: Layover.Positions.TOP_LEFT,\n    TOP_RIGHT: Layover.Positions.TOP_RIGHT,\n    BOTTOM_LEFT: Layover.Positions.BOTTOM_LEFT,\n    BOTTOM_RIGHT: Layover.Positions.BOTTOM_RIGHT,\n    BELOW: Layover.Positions.BELOW,\n    _warned: false,\n    get CONTEXT() {\n      if (!this._warned) {\n        /* eslint-disable no-console */\n        console.error(\n          'The `Menu.Positions.CONTEXT` position has been deprecated and will be removed ' +\n          'in the next major release. To make the `Menu` behave as a context menu, provide ' +\n          'the `onContextMenu` prop instead.'\n        );\n        /* eslint-enable no-console */\n      }\n\n      this._warned = true;\n      return 'context';\n    },\n  };\n\n  static propTypes = {\n    /**\n     * An id to provide to the menu's container. This is required for accessibility as it generates\n     * the `aria-` attributes for dynamic content.\n     *\n     * @see {@link #listId}\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional id to provide to the menu's list. If this prop is omitted, the list's id will be\n     * `\\`${id}-list\\``\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the main container for the menu.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the main container for the menu.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the list once the menu has opened.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the list once the menu has opened.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * The component to render the main container as.\n     *\n     * @see {@link Helpers/Layover#component}\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n\n    /**\n     * This is how the menu's `List` gets anchored to the `toggle` element.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the optional anchor to use when the `position` is set to `Menu.Positions.BELOW`.\n     * Set this to `null` to use the default `anchor` prop.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the animation position for the list that appears.\n     *\n     * @see {@link Helpers/Layover#animationPosition}\n     */\n    position: positionShape,\n\n    /**\n     * This is the component/element that should toggle the menu open.\n     *\n     * @see {@link Helpers/Layover#toggle}\n     */\n    toggle: PropTypes.node,\n\n    /**\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * Any additional props that should be applied to the list in the menu. This is really used\n     * when additional `aria-` tags need to be applied.\n     */\n    listProps: PropTypes.object,\n\n    /**\n     * Boolean if the menu's list should appear horizontally instead of vertically.\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\n     */\n    listZDepth: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\n     * `$md-menu-desktop-max-height` values.\n     *\n     * @see [md-menu-mobile-max-height](/components/menus?tab=2#variable-md-menu-mobile-max-height)\n     * @see [md-menu-desktop-max-height](/components/menus?tab=2#variable-md-menu-desktop-max-height)\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list is visible.\n     */\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * Any children to render in the menu's list. This _should_ normally be `ListItem`, or\n     * `ListItemControl`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional function to call when en element in the menu has been clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when a key is pressed anywhere in the menu.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * A function to call to close the menu. This is used for closing on outside clicks,\n     * closing when a list item has been clicked, or the user presses escape.\n     */\n    onClose: PropTypes.func.isRequired,\n\n    /**\n     * Boolean if the menu should be cascading. This means that the menu will pop the additional\n     * `nestedItems` on any `ListItem` to be appear either to the right or left of the visible list.\n     */\n    cascading: PropTypes.bool,\n\n    /**\n     * This is how the cascading lists get anchored to the list item.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    cascadingAnchor: Layover.propTypes.anchor,\n\n    /**\n     * This is the z-depth the list should gain for a cascading menu. This only gets applied on\n     * items that are more than 1 level deep.\n     */\n    cascadingZDepth: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `md-full-width` class name should get applied to the menu's container.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should be displayed as a block instead of as an inline block.\n     *\n     * @see {@link #fullWidth}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#centered}\n     */\n    centered: Layover.propTypes.centered,\n\n    /**\n     * @see {@link Helpers/Layover#sameWidth}\n     */\n    sameWidth: Layover.propTypes.sameWidth,\n\n    /**\n     * If you would like the menu to interact as a context menu, provide this prop.\n     *\n     * @see {@link Helpers/Layover#onContextMenu}\n     */\n    onContextMenu: Layover.propTypes.onContextMenu,\n\n    /**\n     * Boolean if the default behavior of the context menu should be prevented when using the\n     * `onContextMenu` prop.\n     *\n     * @see {@link Helpers/Layover#preventContextMenu}\n     */\n    preventContextMenu: Layover.propTypes.preventContextMenu,\n\n    /**\n     * @see {@link Helpers/Layover#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#toggleQuery}\n     */\n    toggleQuery: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional transition name to use for the list appearing/disappearing.\n     *\n     * @see {@link Helpers/Layover#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplified: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    close: deprecated(PropTypes.func, 'Use `onClose` instead'),\n    autoclose: deprecated(PropTypes.bool, 'The menus will always autoclose as according to the specs'),\n    contained: deprecated(PropTypes.bool, 'Use `sameWidth` instead'),\n    limitHeight: deprecated(PropTypes.bool, 'The menus will always be limited in height as according to the specs'),\n    expanderIconClassName: deprecated(\n      PropTypes.node,\n      'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\n      'expander icon'\n    ),\n    expanderIconChildren: deprecated(\n      PropTypes.node,\n      'The expander for cascading menus will now just be a simple rotate of the existing `ListItem` ' +\n      'expander icon'\n    ),\n  };\n\n  static defaultProps = {\n    anchor: {\n      x: Layover.HorizontalAnchors.INNER_RIGHT,\n      y: Layover.VerticalAnchors.OVERLAP,\n    },\n    cascadingAnchor: {\n      x: Layover.HorizontalAnchors.RIGHT,\n      y: Layover.VerticalAnchors.OVERLAP,\n    },\n    position: Layover.Positions.TOP_RIGHT,\n    fixedTo: typeof window !== 'undefined' ? window : {},\n    listZDepth: 2,\n    listHeightRestricted: true,\n    cascadingZDepth: 3,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n    simplified: true,\n  };\n\n  static contextTypes = {\n    listLevel: PropTypes.number,\n    cascadingId: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    cascadingMenu: PropTypes.bool,\n    cascadingAnchor: anchorShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  static childContextTypes = {\n    listLevel: PropTypes.number,\n    cascadingId: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    cascadingMenu: PropTypes.bool,\n    cascadingFixedTo: fixedToShape,\n    cascadingAnchor: anchorShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  getChildContext() {\n    const { cascading, id, fixedTo, cascadingAnchor } = this.props;\n    const listLevel = this.context.listLevel || 0;\n    const cascadingMenu = typeof cascading !== 'undefined' ? cascading : this.context.cascadingMenu;\n    const cascadingZDepth = getField(this.context, this.props, 'cascadingZDepth');\n    const cascadingFixedTo = typeof fixedTo !== 'undefined' ? fixedTo : this.context.cascadingFixedTo;\n\n    return {\n      listLevel,\n      cascadingId: `${id}-level-${listLevel + 1}`,\n      cascadingMenu,\n      cascadingAnchor,\n      cascadingZDepth,\n      cascadingFixedTo,\n    };\n  }\n\n  componentDidMount() {\n    this._container = findDOMNode(this);\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _handleClose = (e) => {\n    const { close, onClose } = this.props;\n    if (close || onClose) {\n      (close || onClose)(e);\n    }\n  };\n\n  /**\n   * Checks if a provided event target or HTML Element is considered a menu click target.\n   * This normally is just a ListItem.\n   */\n  _isCloseTarget(target) {\n    return target.classList.contains('md-list-item')\n      && !target.classList.contains('md-list-item--nested-container');\n  }\n\n  /**\n   * Checks if a provided event target or HTML Element is something that should shortcut/break\n   * out of the click event loop because it **should not** close menus when clicked.\n   */\n  _isIgnoreTarget(target) {\n    return target.getAttribute('disabled') !== null\n      || target.classList.contains('md-list-control');\n  }\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    let node = e.target;\n    while (this._container && this._container.contains(node)) {\n      if (this._isIgnoreTarget(node)) {\n        return;\n      } else if (this._isCloseTarget(node)) {\n        e.persist();\n        // set a timeout so item click events still trigger, and then close\n        this._timeout = setTimeout(() => {\n          this._timeout = null;\n          this._handleClose(e);\n        }, TICK);\n\n        return;\n      }\n\n      node = node.parentNode;\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    handleKeyboardAccessibility(e, this._handleClick, true, true);\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      listStyle,\n      listClassName,\n      visible,\n      children,\n      listProps,\n      listZDepth,\n      listInline,\n      listHeightRestricted,\n      cascading,\n      sameWidth,\n      simplified,\n      contained, // deprecated\n      isOpen, // deprecated\n      /* eslint-disable no-unused-vars */\n      fixedTo: propFixedTo,\n      listId: propListId,\n      cascadingAnchor,\n      cascadingZDepth,\n      onClose,\n      position: propPosition,\n\n      // deprecated\n      close,\n      autoclose,\n      limitHeight,\n      expanderIconChildren,\n      expanderIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { listId, position } = this.props;\n    if (!listId) {\n      listId = `${id}-list`;\n    }\n\n    // can't have a simplified menu for cascading and context menus\n    const simple = !cascading && !props.onContextMenu && position !== 'context' && simplified;\n    if (position === 'context') {\n      position = Menu.Positions.BELOW;\n    }\n\n    const below = position === Menu.Positions.BELOW;\n    const fixedTo = typeof propFixedTo !== 'undefined' ? propFixedTo : this.context.cascadingFixedTo;\n    const listVisible = typeof isOpen !== 'undefined' ? isOpen : visible;\n    return (\n      <Layover\n        {...props}\n        id={id}\n        className={cn('md-menu-container', {\n          'md-menu-container--menu-below': simplified && below,\n        }, className)}\n        simplified={simple}\n        sameWidth={contained || sameWidth}\n        fixedTo={fixedTo}\n        onClick={this._handleClick}\n        onKeyDown={this._handleKeyDown}\n        onClose={this._handleClose}\n        animationPosition={position}\n        visible={listVisible}\n        aria-haspopup\n        aria-expanded={listVisible}\n        aria-owns={listId}\n      >\n        <List\n          {...listProps}\n          id={listId}\n          key=\"menu-list\"\n          style={listStyle}\n          className={cn('md-list--menu', {\n            'md-list--menu-restricted': listHeightRestricted,\n            'md-list--menu-contained': simplified && (sameWidth || contained),\n            [`md-list--menu-${position}`]: simplified,\n            [`md-paper md-paper--${listZDepth}`]: listZDepth,\n          }, listClassName)}\n          inline={listInline}\n        >\n          {children}\n        </List>\n      </Layover>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport themeColors from '../utils/themeColors';\nimport getCollapserStyles from '../utils/getCollapserStyles';\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport { TAB } from '../constants/keyCodes';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport Collapse from '../Helpers/Collapse';\nimport Divider from '../Dividers/Divider';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TileAddon from './TileAddon';\nimport ListItemText from './ListItemText';\nimport List from './List';\nimport Menu from '../Menus/Menu';\n\n/**\n * The `ListItem` component is used for rendering a `li` tag with text and optional\n * icons/avatars.\n */\nexport default class ListItem extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the `li` tag.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `li` tag.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `.md-list-tile`.\n     *\n     * @see {@link #component}\n     */\n    tileStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `.md-list-tile`.\n     *\n     * @see {@link #component}\n     */\n    tileClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the div that surrounds the `primaryText` and `secondaryText`\n     * nodes.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the div that surrounds the `primaryText` and `secondaryText`\n     * nodes.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the element that is rendered before content node.\n     */\n    leftNodeStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the element that is rendered before content node.\n     */\n    leftNodeClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the element that is rendered after content node.\n     */\n    rightNodeStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the element that is rendered after content node.\n     */\n    rightNodeClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the div surrounding the `primaryText`.\n     */\n    primaryTextStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the div surrounding the `primaryText`.\n     */\n    primaryTextClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the div surrounding the `secondaryText`.\n     */\n    secondaryTextStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the div surrounding the `secondaryText`.\n     */\n    secondaryTextClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the nested `List` that gets created when using `nestedItems`.\n     */\n    nestedListStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the nested `List` that gets created when using `nestedItems`.\n     */\n    nestedListClassName: PropTypes.string,\n\n    /**\n     * Boolean if the nested `List` in a cascading menu should be restricted.\n     */\n    nestedListHeightRestricted: PropTypes.bool,\n\n    /**\n     * Any additional children to display in the `.md-list-tile`. If you use this prop,\n     * you will most likely need to override the `height` for the `.md-list-tile--icon`,\n     * `.md-list-tile--avatar`, `.md-list-tile--two-lines`, and/or `.md-list-tile--three-lines`\n     * to get it to display correctly unless the children are positioned `absolute`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the `ListItem` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional tab index for the `.md-list-tile`. If omitted, it will default to the\n     * `AccessibleFakeButton`'s `tabIndex` default prop value.\n     */\n    tabIndex: PropTypes.number,\n\n    /**\n     * The primary text to display. This will only be rendered as a single line. Any overflown\n     * text will be converted to ellipsis.\n     */\n    primaryText: PropTypes.node.isRequired,\n\n    /**\n     * An optional secondary text to display below the `primaryText`. This can be an additional\n     * one or two lines. Like the `primaryText`, and overflown text will be converted to ellipsis.\n     *\n     * You must set the `threeLines` prop to `true` if you want this to be displayed as two lines.\n     */\n    secondaryText: PropTypes.node,\n\n    /**\n     * An optional `FontIcon` to display to the left of the text.\n     */\n    leftIcon: PropTypes.node,\n\n    /**\n     * An optional `Avatar` to display to the left of the text. If you have a mixed `List` of\n     * `FontIcon` and `Avatar`, it is recommended to set the `iconSized` prop on the `Avatar` to\n     * `true` so that the `Avatar` will be scaled down to the `FontIcon` size.\n     */\n    leftAvatar: PropTypes.node,\n\n    /**\n     * An optional `FontIcon` to display to the right of the text.\n     */\n    rightIcon: PropTypes.node,\n\n    /**\n     * An optional `Avatar` to display to the right of the text. If you have a mixed `List` of\n     * `FontIcon` and `Avatar`, it is recommended to set the `iconSized` prop on the `Avatar` to\n     * `true` so that the `Avatar` will be scaled down to the `FontIcon` size.\n     */\n    rightAvatar: PropTypes.node,\n\n    /**\n     * Boolean if the list item should be inset as if there is a `leftIcon` or a `leftAvatar`.\n     * This is used for some lists where only a parent contains the icon.\n     */\n    inset: PropTypes.bool,\n\n    /**\n     * Boolean if the `secondaryText` should span two lines instead of one. This will include\n     * three lines of text in total when including the `primaryText`.\n     */\n    threeLines: PropTypes.bool,\n\n    /**\n     * The component to render the `.md-list-tile` as. This is mostly useful if you\n     * want to use the `ListItem` for navigation and working with the `react-router`'s `Link`\n     * component.\n     *\n     * This prop is **not** the top-most element of the `ListItem` component. To change the\n     * top-most element, see the `itemComponent` prop.\n     *\n     * @see {@link #itemComponent}\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * The component to render the top-most element of the `ListItem` component. This is the\n     * `.md-list-item` and defaults to the `<li>` element.\n     *\n     * @see {@link #component}\n     * @see {@link #itemProps}\n     */\n    itemComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * An optional ref callback to get reference to the top-most element of the `ListItem` component.\n     * Just like other refs, this will provide null when it unmounts.\n     */\n    itemRef: PropTypes.func,\n\n    /**\n     * An optional list of `ListItem`, `ListItemControl`, `Divider`, or `Subheader` components\n     * to render in a nested list. This will inject an expander icon to the right of the text\n     * in the `.md-list-tile` that rotates 180 degrees when open.\n     *\n     * The nested items will be visible once the user clicks on the `ListItem`.\n     *\n     * @see {@link #visible}\n     */\n    nestedItems: PropTypes.arrayOf(PropTypes.node),\n\n    /**\n     * An optional parameter determining whether `nestedItems` should be placed before or after `ListItemText`\n     */\n    prependNested: PropTypes.bool,\n\n    /**\n     * Boolean if the `nestedItems` are visible by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the `nestedItems` are visible. This will make the `nestedItems` controlled\n     * and require the `onClick` function to be defined.\n     *\n     * @see {@link #defaultVisible}\n     */\n    visible: controlled(PropTypes.bool, 'onClick', 'defaultVisible'),\n\n    /**\n     * An icon to use for the expander icon when there are nested items.\n     */\n    expanderIcon: PropTypes.element,\n\n    /**\n     * Boolean if the expander icon should appear as the left icon instead of the right.\n     */\n    expanderLeft: PropTypes.bool,\n\n    /**\n     * An optional function to call when the `.md-list-tile` is clicked. This is required if the\n     * `visible` prop is defined.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `mouseover` event.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `mouseleave` event.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `touchstart` event.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `touchend` event.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `keydown` event.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `keyup` event.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * Boolean if the `ListItem` is currently active. This will apply the `activeClassName` prop\n     * to the `leftIcon`, `rightIcon`, and the `primaryText`.\n     */\n    active: PropTypes.bool,\n\n    /**\n     * The className to apply to the `leftIcon`, `rightIcon`, and `primaryText` when the `active`\n     * prop is `true`.\n     */\n    activeClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the top-most element of the `ListItem` component (`.md-list-item`)\n     * when the `active` prop is `true`.\n     */\n    activeBoxStyle: PropTypes.object,\n\n    /**\n     * The className to apply to the top-most element of the `ListItem` component (`.md-list-item`)\n     * when the `active` prop is `true`.\n     */\n    activeBoxClassName: PropTypes.string,\n\n    /**\n     * Boolean if the nested items should animate when they appear or disappear.\n     */\n    animateNestedItems: PropTypes.bool,\n\n    /**\n     * Boolean if the children should be rendered outside auf the AccessibleFakeButton component.\n     */\n    renderChildrenOutside: PropTypes.bool,\n\n    /**\n     * Defines the number of items in the list. This is only required when all items in the\n     * list are not present in the DOM.\n     *\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize\n     */\n    'aria-setsize': PropTypes.number,\n\n    /**\n     * Defines the items position in the list. This is only required when all items in the list\n     * are not present in the DOM. The custom validation just requires this prop if the `aria-setsize`\n     * prop is defined as a helpful reminder.\n     *\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset\n     */\n    'aria-posinset': (props, propName, ...args) => {\n      let validator = PropTypes.number;\n      if (typeof props['aria-setsize'] !== 'undefined') {\n        validator = validator.isRequired;\n      }\n\n      return validator(props, propName, ...args);\n    },\n\n    /**\n     * Any additional props you would like to supply to the surrounding `<li>` tag for the `ListItem`.\n     * By default, all props will be provided to the inner `AccessibleFakeButton`. If the `passPropsToItem`\n     * prop is enabled, the remaining props will be provided to the `<li>` tag instead and this prop\n     * is probably useless.\n     */\n    itemProps: PropTypes.object,\n\n    /**\n     * Any additional props you would like to add to the inner `AccessibleFakeButton`. By default, all the\n     * remaining props will be provided to the `AccessibleFakeButton`, so this prop is probably useless.\n     * Enabling the `passPropsToItem` prop will change the default behavior so that the remaining props\n     * are provided to the surrounding `<li>` node instead and this prop becomes useful.\n     */\n    tileProps: PropTypes.object,\n\n    /**\n     * All the remaining props should be passed to the surrounding `<li>` node instead of the `AccessibleFakeButton`.\n     *\n     * > NOTE: This will most likely become the default in the next *major* release. Migration warnings will be added\n     * if that is the case.\n     */\n    passPropsToItem: PropTypes.bool,\n    expanderIconChildren: deprecated(PropTypes.node, 'Use `expanderIcon` instead'),\n    expanderIconClassName: deprecated(PropTypes.string, 'Use `expanderIcon` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n  };\n\n  static defaultProps = {\n    animateNestedItems: true,\n    activeClassName: 'md-text--theme-primary',\n    component: 'div',\n    itemComponent: 'li',\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\n    renderChildrenOutside: false,\n  };\n\n  static contextTypes = {\n    cascadingId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    cascadingMenu: PropTypes.bool,\n    cascadingAnchor: anchorShape,\n    cascadingFixedTo: fixedToShape,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { active: false };\n\n    if (typeof props.isOpen === 'undefined' && typeof props.visible === 'undefined') {\n      const defined = v => typeof v !== 'undefined';\n      const { initiallyOpen, defaultOpen, defaultVisible } = this.props;\n      let visible = defined(initiallyOpen) ? initiallyOpen : defaultVisible;\n      visible = defined(defaultOpen) ? defaultOpen : visible;\n      visible = !!visible;\n\n      this.state.visible = visible;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.active) {\n      window.removeEventListener('click', this._handleOutsideClick);\n    }\n\n    if (this._touchTimeout) {\n      clearTimeout(this._touchTimeout);\n    }\n  }\n\n  /**\n   * A utility function to focus the `AccessibleFakeInkedButton` in the `ListItem` and also\n   * inject an ink to indicate focus.\n   */\n  focus = () => {\n    if (this._tile) {\n      this._tile.focus();\n    }\n  };\n\n  /**\n   * A utility function to blur the `AccessibleFakeInkedButton` in the `ListItem`.\n   */\n  blur = () => {\n    if (this._tile) {\n      this._tile.blur();\n    }\n  };\n\n  _setTile = (tile) => {\n    if (tile) {\n      this._tile = tile;\n      this._tileNode = findDOMNode(tile);\n    }\n  };\n\n  _setContainer = (container) => {\n    const { itemRef } = this.props;\n    if (container) {\n      this._container = findDOMNode(container);\n    }\n    if (itemRef) {\n      itemRef(container ? this._container : null);\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (this._container && !this._container.contains(e.target)) {\n      window.removeEventListener('click', this._handleOutsideClick);\n      this.setState({ active: false });\n    }\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (typeof this.state.visible !== 'undefined') {\n      this.setState({ visible: !this.state.visible });\n    }\n  };\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    this._touched = true;\n\n    this.setState({ active: true, touchedAt: Date.now() });\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    const time = Date.now() - this.state.touchedAt;\n    this._touchTimeout = setTimeout(() => {\n      this._touchTimeout = null;\n\n      this.setState({ active: false });\n    }, time > 450 ? 0 : 450 - time);\n  };\n\n  _handleKeyUp = (e) => {\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.addEventListener('click', this._handleOutsideClick);\n      this.setState({ active: true });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.removeEventListener('click', this._handleOutsideClick);\n      this.setState({ active: false });\n    }\n  };\n\n  _renderChildrenIfInside() {\n    const { children, renderChildrenOutside } = this.props;\n\n    return !renderChildrenOutside ? children : null;\n  }\n\n  _renderChildrenIfOutside() {\n    const { children, renderChildrenOutside } = this.props;\n\n    if (renderChildrenOutside) {\n      return (\n        <div className=\"md-list-item--flex\">\n          <Divider vertical className=\"md-list-item--divider-vertical\" />\n          <div className=\"md-list-item--children-inline\">\n            {children}\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      tileStyle,\n      tileClassName,\n      contentStyle,\n      contentClassName,\n      leftNodeStyle,\n      leftNodeClassName,\n      rightNodeStyle,\n      rightNodeClassName,\n      primaryTextStyle,\n      primaryTextClassName,\n      secondaryTextStyle,\n      secondaryTextClassName,\n      nestedListStyle,\n      nestedListClassName,\n      nestedListHeightRestricted,\n      disabled,\n      leftIcon,\n      leftAvatar,\n      inset,\n      rightIcon,\n      rightAvatar,\n      primaryText,\n      secondaryText,\n      threeLines,\n      nestedItems,\n      prependNested,\n      active,\n      activeClassName,\n      activeBoxStyle,\n      activeBoxClassName,\n      animateNestedItems,\n      expanderIcon,\n      expanderLeft,\n      component,\n      itemComponent: ItemComponent,\n      itemProps,\n      tileProps,\n      passPropsToItem,\n      'aria-setsize': ariaSize,\n      'aria-posinset': ariaPos,\n      renderChildrenOutside,\n\n      // deprecated\n      isOpen,\n      expanderIconChildren,\n      expanderIconClassName,\n      /* eslint-disable no-unused-vars */\n      visible: propVisible,\n      defaultVisible,\n      itemRef,\n\n      // deprecated\n      defaultOpen,\n      initiallyOpen,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { cascadingId, cascadingMenu, cascadingAnchor, cascadingFixedTo } = this.context;\n    let visible = getField(this.props, this.state, 'visible');\n    if (typeof isOpen !== 'undefined') {\n      visible = isOpen;\n    }\n\n    let leftNode = (\n      <TileAddon\n        key=\"left-addon\"\n        style={leftNodeStyle}\n        className={leftNodeClassName}\n        active={active}\n        activeClassName={activeClassName}\n        icon={leftIcon}\n        avatar={leftAvatar}\n      />\n    );\n\n    let rightNode = (\n      <TileAddon\n        key=\"right-addon\"\n        style={rightNodeStyle}\n        className={rightNodeClassName}\n        active={active}\n        activeClassName={activeClassName}\n        icon={rightIcon}\n        avatar={rightAvatar}\n      />\n    );\n\n    let nestedList;\n    if (nestedItems) {\n      if (!cascadingMenu) {\n        nestedList = (\n          <Collapse collapsed={!visible} animate={animateNestedItems}>\n            <List style={nestedListStyle} className={nestedListClassName}>{nestedItems}</List>\n          </Collapse>\n        );\n      }\n\n      const icon = React.Children.only(getDeprecatedIcon(expanderIconClassName, expanderIconChildren, expanderIcon));\n      const collapser = (\n        <TileAddon\n          key=\"expander-addon\"\n          icon={React.cloneElement(icon, {\n            className: getCollapserStyles({ flipped: visible }, icon.props.className),\n          })}\n          avatar={null}\n        />\n      );\n\n      if (expanderLeft) {\n        if (!leftIcon && !leftAvatar) {\n          leftNode = collapser;\n        }\n      } else if (!rightIcon && !rightAvatar) {\n        rightNode = collapser;\n      }\n    }\n\n    const icond = !!leftIcon || !!rightIcon || !!nestedItems;\n    const avatard = !!leftAvatar || !!rightAvatar;\n\n    const tile = (\n      <AccessibleFakeInkedButton\n        {...tileProps}\n        {...(passPropsToItem ? undefined : props)}\n        component={component}\n        __SUPER_SECRET_REF__={this._setTile}\n        key=\"tile\"\n        onClick={this._handleClick}\n        onMouseOver={this._handleMouseOver}\n        onMouseLeave={this._handleMouseLeave}\n        onTouchStart={this._handleTouchStart}\n        onTouchEnd={this._handleTouchEnd}\n        onKeyDown={this._handleKeyDown}\n        onKeyUp={this._handleKeyUp}\n        disabled={disabled}\n        style={tileStyle}\n        className={cn('md-list-tile', {\n          'md-list-tile--active': this.state.active && !this._touched,\n          'md-list-tile--icon': !secondaryText && icond && !avatard,\n          'md-list-tile--avatar': !secondaryText && avatard,\n          'md-list-tile--two-lines': secondaryText && !threeLines,\n          'md-list-tile--three-lines': secondaryText && threeLines,\n          'md-list-item--inset': inset && !leftIcon && !leftAvatar,\n          'md-list-item--button-grow': renderChildrenOutside,\n        }, themeColors({ disabled, text: true }), tileClassName)}\n        aria-expanded={nestedList && !cascadingMenu ? visible : null}\n      >\n        {leftNode}\n        <ListItemText\n          active={active}\n          activeClassName={activeClassName}\n          disabled={disabled}\n          primaryText={primaryText}\n          secondaryText={secondaryText}\n          threeLines={threeLines}\n          style={contentStyle}\n          className={cn({\n            'md-tile-content--left-icon': leftIcon || expanderLeft && nestedItems,\n            'md-tile-content--left-avatar': leftAvatar,\n            'md-tile-content--right-padding': rightIcon || rightAvatar,\n          }, contentClassName)}\n          primaryTextStyle={primaryTextStyle}\n          primaryTextClassName={primaryTextClassName}\n          secondaryTextStyle={secondaryTextStyle}\n          secondaryTextClassName={secondaryTextClassName}\n        />\n        {rightNode}\n        {this._renderChildrenIfInside()}\n      </AccessibleFakeInkedButton>\n    );\n\n    const sharedProps = {\n      ...itemProps,\n      ...(passPropsToItem ? props : undefined),\n      style: Object.assign({}, style, active ? activeBoxStyle : null),\n      className: cn('md-list-item', {\n        'md-list-item--nested-container': nestedItems,\n        [activeBoxClassName]: activeBoxClassName && active,\n        'md-list-item--flex': renderChildrenOutside,\n      }, className),\n      'aria-setsize': ariaSize,\n      'aria-posinset': ariaPos,\n      ref: this._setContainer,\n    };\n    if (cascadingMenu && nestedItems) {\n      return (\n        <Menu\n          id={cascadingId}\n          visible={visible}\n          onClose={this._handleClick}\n          toggle={tile}\n          block\n          simplified={false}\n          anchor={cascadingAnchor}\n          belowAnchor={null}\n          position={Menu.Positions.BELOW}\n          component={ItemComponent}\n          listStyle={nestedListStyle}\n          listClassName={nestedListClassName}\n          listHeightRestricted={nestedListHeightRestricted}\n          {...sharedProps}\n          fixedTo={cascadingFixedTo}\n        >\n          {nestedItems}\n        </Menu>\n      );\n    }\n\n    return (\n      <ItemComponent {...sharedProps}>\n        {prependNested ? nestedList : null}\n        {tile}\n        {this._renderChildrenIfOutside()}\n        {prependNested ? null : nestedList}\n      </ItemComponent>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\nexport default class FloatingLabel extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    label: PropTypes.node,\n    floating: PropTypes.bool,\n    error: PropTypes.bool,\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    iconOffset: PropTypes.bool,\n    customSize: PropTypes.string,\n    htmlFor: PropTypes.string,\n  };\n\n  render() {\n    const {\n      label,\n      htmlFor,\n      className,\n      floating,\n      active,\n      error,\n      disabled,\n      iconOffset,\n      customSize,\n      ...props\n    } = this.props;\n\n    if (!label) {\n      return null;\n    }\n\n    return (\n      <label\n        {...props}\n        htmlFor={htmlFor}\n        className={cn('md-floating-label', {\n          'md-floating-label--inactive': !floating,\n          'md-floating-label--inactive-sized': !floating && !customSize,\n          [`md-floating-label--${customSize}`]: customSize,\n          [`md-floating-label--inactive-${customSize}`]: customSize && !floating,\n          'md-floating-label--floating': floating,\n          'md-floating-label--icon-offset': iconOffset,\n        }, themeColors({\n          disabled,\n          error,\n          hint: !active,\n          primary: active,\n        }, className))}\n      >\n        {label}\n      </label>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport default class Message extends PureComponent {\n  static propTypes = {\n    active: PropTypes.bool,\n    className: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  render() {\n    const { active, children, className } = this.props;\n\n    if (!children) {\n      return null;\n    }\n\n    return (\n      <div\n        aria-hidden={!active}\n        className={cn(\n          'md-text-field-message',\n          `md-text-field-message--${active ? '' : 'in'}active`,\n          className\n        )}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport Message from './Message';\n\nexport default class TextFieldMessage extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    error: PropTypes.bool,\n    helpText: PropTypes.node,\n    errorText: PropTypes.node,\n    active: PropTypes.bool,\n    helpOnFocus: PropTypes.bool,\n    maxLength: PropTypes.number,\n    currentLength: PropTypes.number,\n    leftIcon: PropTypes.bool,\n    rightIcon: PropTypes.bool,\n    block: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: (props.error && props.errorText) || props.helpText || props.errorText,\n      isMessageVisible: this._isMessageVisible(props),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const keys = ['active', 'error', 'helpOnFocus', 'helpText', 'errorText'];\n    if (this._anyChanges(keys, this.props, nextProps)) {\n      this.setState({\n        isMessageVisible: this._isMessageVisible(nextProps),\n        message: (nextProps.error && nextProps.errorText) || nextProps.helpText || nextProps.errorText,\n      });\n    }\n  }\n\n  _anyChanges(keys, p1, p2) {\n    let changed = false;\n    keys.some(key => {\n      if (p1[key] !== p2[key]) {\n        changed = true;\n      }\n\n      return changed;\n    });\n\n    return changed;\n  }\n\n  _isMessageVisible(props) {\n    const { error, errorText, helpText, helpOnFocus, active } = props;\n    if (error && errorText) {\n      return true;\n    }\n\n    return !!(helpText && (!helpOnFocus || active));\n  }\n\n  render() {\n    const {\n      maxLength,\n      error,\n      className,\n      errorText,\n      helpText,\n      currentLength,\n      leftIcon,\n      rightIcon,\n      block,\n      active,\n    } = this.props;\n    const { isMessageVisible, message } = this.state;\n\n    if (currentLength === 'undefined' || (!helpText && !errorText && !maxLength)) {\n      return null;\n    }\n\n    return (\n      <div\n        className={cn('md-text-field-message-container', {\n          'md-text-field-message-container--count-only': !message || !isMessageVisible,\n          'md-text-field-message-container--left-icon-offset': leftIcon,\n          'md-text-field-message-container--right-icon-offset': rightIcon,\n          'md-full-width': !block,\n        }, themeColors({ error, disabled: !error }), className)}\n      >\n        <Message key=\"message\" active={isMessageVisible}>{message}</Message>\n        <Message key=\"counter\" className=\"md-text-field-message--counter\" active={active}>\n          {maxLength ? `${currentLength} / ${maxLength}` : null}\n        </Message>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { TAB } from '../constants/keyCodes';\nimport themeColors from '../utils/themeColors';\n\nexport default class PasswordButton extends PureComponent {\n  static propTypes = {\n    active: PropTypes.bool,\n    passwordVisible: PropTypes.bool,\n    icon: PropTypes.element,\n    block: PropTypes.bool,\n    floating: PropTypes.bool,\n  };\n\n  state = { keyboardFocus: false };\n\n  _handleOutsideClick = (e) => {\n    if (this._button && !this._button.contains(e.target)) {\n      window.removeEventListener('click', this._handleOutsideClick);\n      this.setState({ keyboardFocus: false });\n    }\n  };\n\n  _handleBlur = () => {\n    if (this.state.keyboardFocus) {\n      this.setState({ keyboardFocus: false });\n    }\n  };\n\n  _handleKeyUp = (e) => {\n    const key = e.which || e.keyCode;\n    if (key === TAB) {\n      this.setState({ keyboardFocus: true });\n    }\n  };\n\n  render() {\n    const { keyboardFocus } = this.state;\n    const {\n      active,\n      passwordVisible,\n      block,\n      floating,\n      icon,\n      ...props\n    } = this.props;\n\n    return (\n      <button\n        {...props}\n        onBlur={this._handleBlur}\n        onKeyUp={this._handleKeyUp}\n        type=\"button\"\n        className={cn('md-text-field-inline-indicator md-password-btn md-pointer--hover', {\n          'md-password-btn--focus': keyboardFocus,\n          'md-password-btn--invisible': active && !passwordVisible,\n          'md-text-field-inline-indicator--floating': floating,\n          'md-text-field-inline-indicator--block': block,\n        }, themeColors({ disabled: !active, hint: active }))}\n      >\n        {icon}\n      </button>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport ResizeObserver from '../Helpers/ResizeObserver';\n\n/**\n * The `TextArea` component is used to allow a dynamic height for the\n * `textarea`. The height will keep on changing until the maxRows prop\n * is met or infinitely if it does not exist, or is 0.\n */\nexport default class TextArea extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    rows: PropTypes.number.isRequired,\n    maxRows: PropTypes.number,\n    onChange: PropTypes.func,\n    defaultValue: PropTypes.string,\n    floatingLabel: PropTypes.bool,\n    value: PropTypes.string,\n    block: PropTypes.bool,\n    label: PropTypes.node,\n  };\n\n  state = { height: null };\n\n  componentDidMount() {\n    this._rowHeight = this._calcRowHeight();\n    this._syncHeightWithMask();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.rows !== nextProps.rows) {\n      this._rowHeight = this._calcRowHeight(nextProps);\n    }\n\n    if (this.props.value !== nextProps.value || this.props.maxRows !== nextProps.maxRows) {\n      this._syncHeightWithMask(nextProps.value);\n    }\n  }\n\n  getField = () => this._field;\n\n  getValue = () => this._field.value;\n\n  focus = () => {\n    this._field.focus();\n  };\n\n  blur = () => {\n    this._field.blur();\n  };\n\n  _calcRowHeight = ({ rows } = this.props) => {\n    if (!this._field) {\n      return 19;\n    }\n\n    const height = this._field.style.height;\n    this._field.style.height = 'auto';\n    const rowHeight = this._field.offsetHeight / rows;\n    this._field.style.height = height;\n    return rowHeight;\n  };\n\n  _setMask = (mask) => {\n    this._mask = mask;\n  };\n\n  _setField = (field) => {\n    this._field = field;\n  };\n\n  _handleResize = () => {\n    this._rowHeight = this._calcRowHeight();\n    this._syncHeightWithMask();\n  };\n\n  _syncHeightWithMask = (value) => {\n    // The mask is always null in snapshot teseting\n    if (!this._mask) {\n      return;\n    }\n\n    if (value !== undefined) {\n      this._mask.value = value;\n    }\n\n    let height = this._mask.scrollHeight;\n    if (height === undefined) {\n      return;\n    }\n\n    const { rows, maxRows } = this.props;\n    if (maxRows && maxRows > 0) {\n      height = Math.min(height, this._rowHeight * maxRows);\n    }\n\n    height = Math.max(this._rowHeight * rows, height);\n    this.setState({ height });\n  };\n\n  _handleChange = (e) => {\n    this._syncHeightWithMask(e.target.value, e);\n\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  };\n\n  render() {\n    const { height } = this.state;\n\n    const {\n      style,\n      defaultValue,\n      value,\n      className,\n      label,\n      block,\n      /* eslint-disable no-unused-vars */\n      maxRows,\n      onChange,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    return (\n      <div\n        style={{ height: height && height + 5 }}\n        className={cn('md-text-field-multiline-container', {\n          'md-text-field--margin': !label && !block,\n          'md-text-field--floating-margin': label && !block,\n        })}\n      >\n        <ResizeObserver watchWidth onResize={this._handleResize} />\n        <textarea\n          ref={this._setMask}\n          className={cn(className, 'md-text-field--multiline-mask')}\n          readOnly\n          rows={props.rows}\n          tabIndex={-1}\n          style={style}\n          defaultValue={defaultValue}\n          aria-hidden\n          value={value}\n        />\n        <textarea\n          {...props}\n          ref={this._setField}\n          style={Object.assign({}, style, { height })}\n          className={className}\n          defaultValue={defaultValue}\n          value={value}\n          onChange={this._handleChange}\n        />\n      </div>\n    );\n  }\n}\n","import { PureComponent, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport TextArea from './TextArea';\n\n/**\n * This component either renders a base `input` tag or the `TextArea` component.\n */\nexport default class InputField extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    type: PropTypes.string,\n    placeholder: PropTypes.string,\n    block: PropTypes.bool,\n    disabled: PropTypes.bool,\n    rows: PropTypes.number,\n    maxRows: PropTypes.number,\n    label: PropTypes.node,\n    fullWidth: PropTypes.bool,\n    customSize: PropTypes.string,\n    passwordVisible: PropTypes.bool,\n    inlineIndicator: PropTypes.bool,\n  };\n\n  getField = () => { // eslint-disable-line arrow-body-style\n    return typeof this.props.rows === 'undefined'\n      ? this._field\n      : this._field.getField();\n  };\n\n  getValue = () => {\n    if (typeof this.props.rows === 'undefined') {\n      return this._field.value;\n    }\n\n    return this._field.getValue();\n  };\n\n  focus = () => {\n    this._field.focus();\n  };\n\n  blur = () => {\n    this._field.blur();\n  };\n\n  _setField = (field) => {\n    this._field = field;\n  };\n\n  render() {\n    const {\n      className,\n      rows,\n      label,\n      customSize,\n      fullWidth,\n      type,\n      passwordVisible,\n      block,\n      inlineIndicator,\n      maxRows,\n      ...props\n    } = this.props;\n\n    const multiline = typeof rows !== 'undefined';\n    const Component = multiline ? TextArea : 'input';\n    if (!multiline) {\n      props.type = passwordVisible ? 'text' : type;\n    } else {\n      props.label = label;\n      props.block = block;\n      props.maxRows = maxRows;\n    }\n\n    return createElement(Component, {\n      ...props,\n      rows,\n      ref: this._setField,\n      className: cn('md-text-field', {\n        'md-text-field--inline-indicator': inlineIndicator || (!multiline && type === 'password'),\n        'md-text-field--multiline': multiline,\n        'md-text-field--margin': !block && !multiline && !label,\n        'md-text-field--floating-margin': !block && !multiline && label,\n        [`md-text-field--${customSize}`]: customSize,\n        'md-full-width': fullWidth,\n      }, themeColors({ disabled: props.disabled, text: !props.disabled }, className)),\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Divider from '../Dividers/Divider';\n\nexport default class TextFieldDivider extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    active: PropTypes.bool,\n    error: PropTypes.bool,\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\n  };\n\n  render() {\n    const { active, error, lineDirection, className, ...props } = this.props;\n    return (\n      <Divider\n        {...props}\n        className={cn(`md-divider--text-field md-divider--expand-from-${lineDirection}`, {\n          'md-divider--text-field-expanded': active,\n          'md-divider--text-field-active': !error && active,\n          'md-divider--text-field-error': error,\n        }, className)}\n      />\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport isValued from '../utils/isValued';\nimport getField from '../utils/getField';\nimport getTextWidth from '../utils/Positioning/getTextWidth';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport minNumber from '../utils/PropTypes/minNumber';\nimport addSuffix from '../utils/StringUtils/addSuffix';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FloatingLabel from './FloatingLabel';\nimport TextFieldMessage from './TextFieldMessage';\nimport PasswordButton from './PasswordButton';\nimport InputField from './InputField';\nimport TextFieldDivider from './TextFieldDivider';\n\nconst DEFAULT_TEXT_FIELD_SIZE = 180;\n\nconst WILL_RECEIVE_KEYS = ['style', 'value', 'resize'];\nconst DID_UPDATE_KEYS = ['leftIcon', 'rightIcon', 'passwordIcon', 'inlineIndicator'];\n\n/**\n * The `TextField` component can either be a single line `input` field or a multiline\n * `textarea` field. `FontIcon`s, messages, and password indicators can also be added\n * to this field.\n *\n * The optional mouse and touch events will be added to the entire container while the\n * text specific events will be added to the `input` or `textarea` tags.\n */\nexport default class TextField extends PureComponent {\n  static propTypes = {\n    /**\n     * The id for a text field. This is required when using the `label` prop for accessibility,\n     * but normally a good idea to include one anyways.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional style to apply to the text field's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the text field's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `input` or `textarea` tag.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `input` or `textarea` tag.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * An optional value to apply to the text field. This will make the component\n     * controlled and require the `onChange` prop.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]), 'onChange'),\n\n    /**\n     * An optional default value for the text field.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n\n    /**\n     * Boolean if the text field should be displayed as a `block`. This is equivalent to\n     * the `full width` text field in the Material Design specs. This view will disable\n     * floating labels and remove the text divider from the component.\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the `block` text field should include padding to the left and right of\n     * the text field.\n     */\n    paddedBlock: PropTypes.bool,\n\n    /**\n     * Boolean if the text field is currently disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional label to display with the text field. This will convert the text field\n     * into a floating label text field. You can make it single line by only using the\n     * `placeholder` prop.\n     */\n    label: invalidIf(PropTypes.node, 'block'),\n\n    /**\n     * An optional placeholder text to display in the text field. If there is no `label` prop,\n     * the text field will be displayed as a single line text field. If there is a `label` prop,\n     * this will only be visible when there is no value and the user focused the text field.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * The type for the text field. This is one of the most import props for mobile accessibility\n     * as it will update the keyboard for the text type. This does not get applied on multiline\n     * text fields.\n     */\n    type: PropTypes.oneOf([\n      'text',\n      'number',\n      'email',\n      'search',\n      'tel',\n      'url',\n      'password',\n    ]).isRequired,\n\n    /**\n     * An optional function to call when the text field's container triggers the `click` event.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `doubleclick`\n     * event.\n     */\n    onDoubleClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `touchstart`\n     * event.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `touchmove`\n     * event.\n     */\n    onTouchMove: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `touchcancel`\n     * event.\n     */\n    onTouchCancel: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `touchend`\n     * event.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `mousedown`\n     * event.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `mouseup`\n     * event.\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `mouseover`\n     * event.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field's container triggers the `mouseleave`\n     * event.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional onChange function to call. If the `value` prop is defined, this is\n     * required.\n     *\n     * When the value changes in the text field, this will be called with the new text\n     * field's value and the change event.\n     *\n     * ```js\n     * onChange(e.target.value, e);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field is blurred.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field is focused.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional boolean if the `active` state of the text field can be externally\n     * modified as well. The text field is usually considered active when it gains focus.\n     *\n     * If this prop is set, it will check both the active prop and the active state to\n     * determine if one is true.\n     */\n    active: PropTypes.bool,\n\n    /**\n     * An optional boolean if the `error` state of the text field can be externally\n     * modified as well. The text field is usually considered errored when it is required\n     * and there is no value or the current length of the text field's value is greater\n     * than the `maxLength` prop.\n     *\n     * If this prop is set, it will check both the error prop and the error state to\n     * determine if one is true.\n     */\n    error: PropTypes.bool,\n\n    /**\n     * An optional boolean if the `floating` state of the text field's floating label can be\n     * externally modified as well. The floating state is true when the text field gains focus\n     * or there is a value in the text field.\n     *\n     * If this prop is set, it will check both the floating prop and the floating state to\n     * determine if one is true.\n     */\n    floating: PropTypes.bool,\n\n    /**\n     * Boolean if the text field is required. If the user blurs the text field while there is\n     * no value and it is required, the `error` state will be set to true.\n     */\n    required: PropTypes.bool,\n\n    /**\n     * The direction that the underline should appear from.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n\n    /**\n     * An optional icon to place to the left of the text field.\n     */\n    leftIcon: PropTypes.element,\n\n    /**\n     * Boolean if the left icon should be stateful. This means that the icon will\n     * gain the active or error colors with the text field.\n     */\n    leftIconStateful: PropTypes.bool,\n\n    /**\n     * An optional icon to place to the right of the text field.\n     */\n    rightIcon: PropTypes.element,\n\n    /**\n     * Boolean if the right icon should be stateful. This means that the icon will\n     * gain the active or error colors with the text field.\n     */\n    rightIconStateful: PropTypes.bool,\n\n    /**\n     * The icon to use for a password text field.\n     */\n    passwordIcon: PropTypes.element,\n\n    /**\n     * Boolean if the password is initially visible.\n     */\n    passwordInitiallyVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the text field should be displayed as full width.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * The number of rows for the `multiline` text field. This value must be greater than\n     * or equal to 1. When this value is set, the text field will be converted to a multiline\n     * field.\n     */\n    rows: minNumber(1, false),\n\n    /**\n     * The maximum number of rows for a `multiline` text field. If this value is\n     * `undefined`, `0`, or a number less than `0`, the multiline text field will\n     * infinitely expand.\n     */\n    maxRows: PropTypes.number,\n\n    /**\n     * An optional custom size to apply to the text field. This is used along with\n     * the `$md-text-field-custom-sizes` variable. It basically applies a className of\n     * `md-text-field--NAME`.\n     */\n    customSize: PropTypes.string,\n\n    /**\n     * An optional error text to display below the text field. This will only appear when\n     * the text field has the `error` state through the `error` prop, the current length\n     * of the text field's value is greater than the `maxLength` prop, or the field is\n     * required and the user blurs the text field with no value.\n     */\n    errorText: PropTypes.node,\n\n    /**\n     * An optional help text to display below the text field. This will always be visible\n     * unless the `helpOnFocus` prop is set to true. Otherwise it will appear on focus.\n     */\n    helpText: PropTypes.node,\n\n    /**\n     * Boolean if the help text should display on focus only.\n     */\n    helpOnFocus: PropTypes.bool,\n\n    /**\n     * An optional max length for the text field. This will insert a counter underneath the\n     * text field that appears on focus.\n     */\n    maxLength: PropTypes.number,\n\n    /**\n     * The ink when there is an injectInk above the text field. Used from the SelectField.\n     *\n     * @access private\n     */\n    ink: PropTypes.node,\n\n    /**\n     * An optional element to display inside of the `TextField` to the farthest right. This will\n     * position the indicator absolutely and add some additional padding to the `TextField`.\n     */\n    inlineIndicator: PropTypes.element,\n\n    /**\n     * This prop allows the text field to resize its width to stay between the min and max sizes provided. By\n     * default, the field will expand and collapse based on the amount of text provided. The collapsing can\n     * be disabled by providing `disableShrink` to the configuration object.\n     *\n     * If the `min` prop is not provided, it will default to `180` which is about the same size as a default\n     * text field.\n     */\n    resize: PropTypes.shape({\n      min: PropTypes.number,\n      max: PropTypes.number.isRequired,\n      disableShrink: PropTypes.bool,\n    }),\n\n    /**\n     * Boolean if the TextField is in a toolbar and acting as a title. This will apply additional styles to the\n     * text field to make it look like the toolbar's title.\n     */\n    toolbar: PropTypes.bool,\n\n    passwordIconChildren: deprecated(PropTypes.node, 'Use the `passwordIcon` prop instead'),\n    passwordIconClassName: deprecated(PropTypes.string, 'Use the `passwordIcon` prop instead'),\n    icon: deprecated(PropTypes.node, 'Use the `leftIcon` or `rightIcon` prop instead'),\n    floatingLabel: deprecated(\n      PropTypes.bool,\n      'The `label` prop is now always floating. To create a non-floating text field, only use the `placeholder` prop'\n    ),\n    adjustMinWidth: deprecated(PropTypes.bool, 'Manually add a min width style instead'),\n  };\n\n  static defaultProps = {\n    type: 'text',\n    lineDirection: 'left',\n    passwordIcon: <FontIcon>remove_red_eye</FontIcon>,\n    leftIconStateful: true,\n    rightIconStateful: true,\n    fullWidth: true,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const currentLength = this._getLength(typeof props.value !== 'undefined' ? props.value : props.defaultValue);\n\n    this._canvas = null;\n    let width = null;\n    if (typeof props.resize !== 'undefined') {\n      width = typeof props.resize.min === 'number' ? props.resize.min : DEFAULT_TEXT_FIELD_SIZE;\n    }\n\n    this.state = {\n      active: false,\n      error: props.maxLength ? props.maxLength < currentLength : false,\n      floating: isValued(props.defaultValue) || isValued(props.value),\n      passwordVisible: props.passwordInitiallyVisible,\n      currentLength,\n      styles: width ? { width, ...props.style } : props.style,\n    };\n  }\n\n  componentDidMount() {\n    const { value, defaultValue, resize, style } = this.props;\n    const v = typeof value !== 'undefined' ? value : defaultValue;\n    /* eslint-disable react/no-did-mount-set-state */\n    if (resize) { // always want to set width on mount\n      this.setState({ styles: { width: this._calcWidth(v, this.props), ...style } });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value, resize, style } = nextProps;\n    const nextState = {};\n    if (value !== this.props.value) {\n      nextState.error = this._isErrored(nextProps);\n      nextState.floating = this._focus || isValued(value);\n      nextState.currentLength = this._getLength(value);\n    }\n\n    if (WILL_RECEIVE_KEYS.some(key => this.props[key] !== nextProps[key])) {\n      if (!resize) {\n        nextState.styles = style;\n      } else {\n        const width = this._calcWidth(value, nextProps);\n        nextState.styles = { width, ...style };\n      }\n    }\n\n    this.setState(nextState);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { resize, value, style } = this.props;\n    if (resize && DID_UPDATE_KEYS.some(key => this.props[key] !== prevProps[key])) {\n      const width = this._calcWidth(value, this.props);\n      this.setState({ styles: { width, ...style } }); // eslint-disable-line react/no-did-update-set-state\n    }\n  }\n\n  /**\n   * A helper function for getting the specific `input` field or the `textarea` in the `TextField`.\n   * This is accessible if you use `refs`.\n   *\n   * Example:\n   *\n   * ```js\n   * <TextField ref={field => this._field = field;} label=\"Hello\" />;\n   *\n   * this._field.getField(); // `input` node\n   * ```\n   */\n  getField = () => this._field.getField();\n\n  /**\n   * A helper function for focusing the `input` field or the `textarea` in the `TextField`.\n   * This is accessibile if you use `refs`.\n   * Example:\n   *\n   * ```js\n   * <TextField ref={field => this._field = field;} label=\"Hello\" />;\n   *\n   * this._field.focus();\n   * ```\n   */\n  focus = () => {\n    this._field.focus();\n  };\n\n  /**\n   * Gets the current value from the text field. This is used when you have an uncontrolled\n   * text field and simply need the value from a ref callback.\n   *\n   * @return {String} the text field's value\n   */\n  get value() {\n    return this.getField().value;\n  }\n\n\n  /**\n   * A helper function for blurring the `input` field or the `textarea` in the `TextField`.\n   * This is accessible if you use `refs`.\n   * Example:\n   *\n   * ```js\n   * <TextField ref={field => this._field = field;} label=\"Hello\" />;\n   *\n   * this._field.blur();\n   * ```\n   */\n  blur() {\n    this._field.blur();\n  }\n\n  _cloneIcon(icon, active, error, disabled, stateful, block, dir) {\n    if (!icon) {\n      return icon;\n    }\n\n    try {\n      const iconEl = Children.only(icon);\n      return cloneElement(iconEl, {\n        key: iconEl.key || `icon-${dir}`,\n        disabled: stateful ? disabled : undefined,\n        primary: stateful ? !error && active : undefined,\n        error: stateful ? error : undefined,\n        className: cn('md-text-field-icon', {\n          'md-text-field-icon--positioned': !block,\n        }, iconEl.props.className),\n      });\n    } catch (e) {\n      return icon;\n    }\n  }\n\n  _getLength = (v) => {\n    if (isValued(v)) {\n      return String(v).length;\n    }\n\n    return 0;\n  };\n\n  _setContainer = (div) => {\n    this._container = div;\n  };\n\n  _setField = (field) => {\n    if (field !== null) {\n      this._field = field;\n    }\n  };\n\n  /**\n   * A small utility function for calculating an inline-icon's width keeping the SVG Icons\n   * in mind and any margin that gets applied for spacing.\n   */\n  _calcIconWidth = (icon) => {\n    const style = window.getComputedStyle(icon);\n\n    return icon.getBoundingClientRect().width\n      + parseInt(style.marginLeft, 10);\n  };\n\n  _calcWidth = (value, props = this.props) => {\n    let text = value;\n    // if it is a password, use the bullet unicode instead\n    if (props.type === 'password') {\n      text = Array.from(Array(value.length)).reduce(s => `${s}\\u2022`, '');\n    }\n\n    const field = this._field && this._field.getField();\n    if (!isValued(text) && field) {\n      text = field.value;\n    }\n\n    const min = getField(props.resize, { min: DEFAULT_TEXT_FIELD_SIZE }, 'min');\n    let width = getTextWidth(text, field);\n    if (width === null || !field) {\n      // some error happened, don't do other logic\n      return width || min;\n    }\n\n    const { max } = props.resize;\n\n    if (this._container) {\n      const indicator = this._container.querySelector('.md-text-field-inline-indicator');\n      if (indicator) {\n        width += indicator.getBoundingClientRect().width;\n      }\n\n      const iconContainer = this._container.querySelector('.md-text-field-icon-container');\n      if (iconContainer) {\n        // There is conditionally an icon before and after the text field, or only an icon before/after\n        // There is never a third icon if the indicator is defined\n        const [first, second, third] = iconContainer.children;\n        if (first.classList.contains('md-icon')) {\n          width += first.getBoundingClientRect().width;\n          width += parseInt(window.getComputedStyle(second).marginLeft, 10);\n\n          if (third) {\n            width += this._calcIconWidth(third);\n          }\n        } else if (second) {\n          width += this._calcIconWidth(second);\n        }\n      }\n    }\n\n    return Math.ceil(Math.min(max, Math.max(min, width)));\n  };\n\n  _isErrored = ({ value, maxLength, required } = this.props) => {\n    let { error } = this.state;\n    const currentLength = this._getLength(value);\n    if (required && error) {\n      error = !isValued(value);\n    }\n\n    if (maxLength) {\n      error = error || currentLength > maxLength;\n    }\n\n    return error;\n  };\n\n  _handleContainerClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (!this.props.disabled) {\n      this.focus();\n    }\n  };\n\n  _handleBlur = (e) => {\n    this._focus = false;\n    const { required, maxLength, onBlur } = this.props;\n    if (onBlur) {\n      onBlur(e);\n    }\n\n    const { value } = e.target;\n    const state = {\n      active: false,\n      error: (required && !isValued(value)) || (maxLength && String(value).length > maxLength),\n    };\n\n    if (!this.props.block) {\n      state.floating = isValued(value);\n    }\n\n    this.setState(state);\n  };\n\n  _handleFocus = (e) => {\n    this._focus = true;\n    const { onFocus, block } = this.props;\n    if (onFocus) {\n      onFocus(e);\n    }\n\n    const state = { active: true };\n    if (!block) {\n      state.floating = true;\n    }\n\n    this.setState(state);\n  };\n\n  _handleChange = (e) => {\n    const { onChange, maxLength, required, resize } = this.props;\n    const { value } = e.target;\n    if (onChange) {\n      onChange(e.target.value, e);\n    }\n\n    const currentLength = value.length;\n    let state;\n    if (typeof maxLength !== 'undefined') {\n      state = { currentLength, error: currentLength > maxLength };\n    } else if (required && this.state.error) {\n      state = { error: !currentLength };\n    }\n\n    if (typeof this.props.value === 'undefined' && resize) {\n      const width = this._calcWidth(value);\n      if (!resize.disableShrink || !this.state.styles || width > this.state.styles.width) {\n        state = state || {};\n        state.styles = { ...this.state.styles, width };\n      }\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _togglePasswordField = () => {\n    this.setState({ passwordVisible: !this.state.passwordVisible }, this.focus);\n  };\n\n  render() {\n    const { currentLength, passwordVisible, styles } = this.state;\n    const {\n      id,\n      type,\n      className,\n      inputStyle,\n      inputClassName,\n      block,\n      fullWidth,\n      required,\n      customSize,\n      maxLength,\n      errorText,\n      helpText,\n      helpOnFocus,\n      disabled,\n      leftIconStateful,\n      rightIconStateful,\n      lineDirection,\n      paddedBlock,\n      onDoubleClick,\n      onTouchStart,\n      onTouchMove,\n      onTouchCancel,\n      onTouchEnd,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onMouseLeave,\n      ink,\n      inlineIndicator,\n      toolbar,\n      passwordIcon: propPasswordIcon,\n\n      // deprecated\n      icon,\n      passwordIconChildren,\n      passwordIconClassName,\n      /* eslint-disable no-unused-vars */\n      style,\n      label: propLabel,\n      placeholder: propPlaceholder,\n      error: propError,\n      active: propActive,\n      floating: propFloating,\n      leftIcon: propLeftIcon,\n      rightIcon: propRightIcon,\n      onClick,\n      onChange,\n      onBlur,\n      onFocus,\n      resize,\n\n      // deprecated\n      adjustMinWidth,\n      floatingLabel: propFloatingLabel,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let {\n      label,\n      placeholder,\n      error,\n      active,\n      floating,\n      leftIcon,\n      rightIcon,\n    } = this.props;\n    active = active || this.state.active;\n    error = error || this.state.error;\n    floating = floating || this.state.floating;\n\n    if (required) {\n      if (label) {\n        label = addSuffix(label, '*');\n      }\n\n      if (placeholder && !label) {\n        placeholder = addSuffix(placeholder, '*');\n      }\n    }\n\n    if (label && !floating) {\n      placeholder = null;\n    }\n\n    leftIcon = this._cloneIcon(icon || leftIcon, active, error, disabled, leftIconStateful, block, 'left');\n    const passwordIcon = getDeprecatedIcon(passwordIconClassName, passwordIconChildren, propPasswordIcon);\n    if (passwordIcon !== null && type === 'password' && !disabled) {\n      rightIcon = (\n        <PasswordButton\n          key=\"password-btn\"\n          onClick={this._togglePasswordField}\n          active={active}\n          passwordVisible={passwordVisible}\n          icon={passwordIcon}\n          block={block}\n          floating={!!label}\n        />\n      );\n    } else if (inlineIndicator) {\n      const el = Children.only(inlineIndicator);\n      rightIcon = cloneElement(inlineIndicator, {\n        key: 'icon-right',\n        className: cn('md-text-field-inline-indicator', {\n          'md-text-field-inline-indicator--floating': label,\n          'md-text-field-inline-indicator--block': block,\n        }, el.props.className),\n      });\n    } else {\n      rightIcon = this._cloneIcon(rightIcon, active, error, disabled, rightIconStateful, block, 'right');\n    }\n    const rightIconed = !!rightIcon && type !== 'password' && !inlineIndicator;\n\n    const floatingLabel = (\n      <FloatingLabel\n        key=\"label\"\n        label={label}\n        htmlFor={id}\n        active={active}\n        error={error}\n        floating={floating}\n        customSize={customSize}\n        disabled={disabled}\n        iconOffset={!!leftIcon}\n      />\n    );\n\n    const message = (\n      <TextFieldMessage\n        key=\"message\"\n        active={active}\n        error={error}\n        errorText={errorText}\n        helpText={helpText}\n        helpOnFocus={helpOnFocus}\n        block={block}\n        maxLength={maxLength}\n        leftIcon={!!leftIcon}\n        rightIcon={!!rightIcon}\n        currentLength={currentLength}\n      />\n    );\n\n    const field = (\n      <InputField\n        {...props}\n        required={required}\n        key=\"field\"\n        ref={this._setField}\n        id={id}\n        type={type}\n        label={label}\n        style={inputStyle}\n        className={cn({ 'md-text-field--toolbar': toolbar }, inputClassName)}\n        disabled={disabled}\n        customSize={customSize}\n        fullWidth={fullWidth}\n        passwordVisible={passwordVisible}\n        placeholder={placeholder}\n        block={block}\n        onFocus={this._handleFocus}\n        onBlur={this._handleBlur}\n        onChange={this._handleChange}\n        inlineIndicator={!!inlineIndicator}\n      />\n    );\n\n    let divider;\n    if (!block) {\n      divider = (\n        <TextFieldDivider\n          key=\"text-divider\"\n          active={active}\n          error={error}\n          lineDirection={lineDirection}\n        />\n      );\n    }\n\n    let children;\n    if (leftIcon || rightIconed) {\n      children = (\n        <div key=\"icon-divider\" className=\"md-text-field-icon-container\">\n          {leftIcon}\n          <div\n            key=\"divider-container\"\n            className={cn('md-text-field-divider-container', {\n              'md-text-field-divider-container--grow': fullWidth,\n            })}\n          >\n            {field}\n            {divider}\n          </div>\n          {rightIcon}\n        </div>\n      );\n    } else {\n      children = [leftIcon, field, divider, rightIcon];\n    }\n\n    children = [floatingLabel, children, message];\n\n    const multiline = typeof props.rows !== 'undefined';\n    return (\n      <div\n        style={styles}\n        className={cn('md-text-field-container', {\n          'md-inline-block': !fullWidth && !block,\n          'md-full-width': block || fullWidth,\n          'md-text-field-container--disabled': disabled,\n          'md-text-field-container--input': !multiline,\n          'md-text-field-container--input-block': block && !multiline,\n          'md-text-field-container--multiline': multiline,\n          'md-text-field-container--multiline-block': multiline && block,\n          'md-text-field-container--padded-block': block && paddedBlock,\n        }, className)}\n        onClick={this._handleContainerClick}\n        onDoubleClick={onDoubleClick}\n        onMouseOver={onMouseOver}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onTouchStart={onTouchStart}\n        onTouchEnd={onTouchEnd}\n        onTouchCancel={onTouchCancel}\n        onTouchMove={onTouchMove}\n        ref={this._setContainer}\n      >\n        {ink}\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\n\nimport getField from '../utils/getField';\nimport omit from '../utils/omit';\nimport findIgnoreCase from '../utils/findIgnoreCase';\nimport fuzzyFilter from '../utils/fuzzyFilter';\nimport caseInsensitiveFilter from '../utils/caseInsensitiveFilter';\nimport getTextWidth from '../utils/Positioning/getTextWidth';\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport controlled from '../utils/PropTypes/controlled';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport { UP, DOWN, TAB } from '../constants/keyCodes';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\n\nimport ListItem from '../Lists/ListItem';\nimport Menu from '../Menus/Menu';\nimport TextField from '../TextFields/TextField';\n\n/**\n * The `Autocomplete` component is useful for presenting real-time suggestions, completions,\n * or filtering.\n */\nexport default class Autocomplete extends PureComponent {\n  static HorizontalAnchors = Menu.HorizontalAnchors;\n  static VerticalAnchors = Menu.VerticalAnchors;\n  static Positions = Menu.Positions;\n  static fuzzyFilter = fuzzyFilter;\n  static caseInsensitiveFilter = caseInsensitiveFilter;\n  static findIgnoreCase = findIgnoreCase;\n  static propTypes = {\n    /**\n     * An id to give the autocomplete. Either this or the `menuId` is required for accessibility.\n     *\n     * @see {@link #menuId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * The menu id to provide to the autocomplete. Either this prop or the `id` prop is required. If\n     * this props is omitted, the menuId will become: `${id}-menu`\n     */\n    menuId: oneRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'id'),\n\n    /**\n     * An optional id to provide to the menu's list.\n     *\n     * @see {@link Menus/Menu#listId}\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the menu that contains the autocomplete.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the menu that contains the autocomplete.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the autocomplete's text field.\n     */\n    textFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the autocomplete's text field.\n     */\n    textFieldClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the autocomplete's text field input itself.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the autocomplete's input field itself.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * The optional style to apply to the opened menu List if the\n     * `Autocomplete` is not using `inline` suggestions.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * The optional className to apply to the opened menu List if the\n     * `Autocomplete` is not using `inline` suggestions.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the inline suggestion when using `inline` mode.\n     */\n    inlineSuggestionStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the inline suggestion when using `inline` mode.\n     */\n    inlineSuggestionClassName: PropTypes.string,\n\n    /**\n     * Boolean if the autocomplete is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * A label to display with the autocomplete.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional value to use for the text field. This will force this component\n     * to be controlled and require the `onChange` function.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]), 'onChange'),\n\n    /**\n     * The default value for the autocomplete's text field.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n\n    /**\n     * An object key to use to extract the text to be compared for filtering.\n     * This will only be applied if the given `data` prop is an array of objects.\n     */\n    dataLabel: PropTypes.string.isRequired,\n\n    /**\n     * An optional object key to use to extract the `value` of the given `data` prop.\n     * This is really only used with generating a unique react key. The unique react\n     * key with either be:\n     * - the datum if it is a string or number\n     * - the `key` attribute of the datum object\n     * - the `datum[dataValue]`\n     * - or the `datum[dataLabel]`\n     */\n    dataValue: PropTypes.string,\n\n    /**\n     * A single key or an array of keys to delete from your data object before passing\n     * to the `ListItem` component.\n     */\n    deleteKeys: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n\n    /**\n     * The data that will be used for autocomplete suggestions. This can either be\n     * an array of string, number, or object. If it is an array of objects, the key\n     * `dataLabel` is required.\n     *\n     * ```docgen\n     * PropTypes.arrayOf(PropTypes.oneOfType([\n     *   PropTypes.element,\n     *   PropTypes.string,\n     *   PropTypes.number,\n     *   PropTypes.shape({\n     *     [dataLabel]: PropTypes.oneOfType([\n     *       PropTypes.string,\n     *       PropTypes.number,\n     *       PropTypes.node,\n     *     ]).isRequired,\n     *   }),\n     * ])).isRequired\n     * ```\n     */\n    data: (props, propName, component, ...others) => {\n      const { dataLabel } = props;\n      return PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.shape({\n          [dataLabel]: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n            PropTypes.node,\n          ]).isRequired,\n        }),\n      ])).isRequired(props, propName, component, ...others);\n    },\n\n    /**\n     * An optional number representing the total number of results in the `data` prop.\n     * This should really only be used when the data is paginated. When this is set,\n     * each item in the suggestion menu will be updated with the `aria-setsize` and\n     * `aria-posinset`.\n     *\n     * @see {@link #offset}\n     */\n    total: invalidIf(PropTypes.number, 'inline'),\n\n    /**\n     * An optional number representing the data's offset if the results were paginated.\n     * This is used for accessibility with the `aria-posinset` attribute.\n     *\n     * @see {@link #total}\n     */\n    offset: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to use to filter the `data`. If you have a sexy backend\n     * using solr or some other search/indexer, it is recommended to set this prop to\n     * `null`.\n     */\n    filter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `Autocomplete`'s text field has a `keydown` event.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `Autocomplete`'s text field has a `mousedown` event.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `Autocomplete`'s text field value changes.\n     * The callback will be given the new value and the change event.\n     *\n     * `onChange(textFeldValue, event)`\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional function to call when the `Autocomplete`'s text field is focused.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when the entire `Autocomplete` component is blurred.\n     * This will be triggered when the window is clicked or when a user tabs away from\n     * the autocomplete.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * Boolean if this text field should be styled as a full width text field.\n     * Floating labels and the text field indicator will be removed automatically.\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the autocomplete should span the entire width.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the `Autocomplete` should display suggestions inline instead\n     * of in a `Menu`.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * The amount of padding to use between the current text and the inline suggestion text.\n     */\n    inlineSuggestionPadding: PropTypes.number.isRequired,\n\n    /**\n     * The function to call to find a suggestion for an inline autocomplete. This function\n     * expects to return a single result of a number or a string.\n     *\n     * ```js\n     * @param {Array<Object|String|Number>} data - The data prop to search.\n     * @param {String} value - The current value to use for searching.\n     * @param {String} dataLabel - The `dataLabel` prop to use if a datum is an object.\n     * @return {String|Number} the found suggestion or false-ish\n     * ```\n     */\n    findInlineSuggestion: PropTypes.func,\n\n    /**\n     * An optional function to call when an autocomplete suggestion is clicked either\n     * by using the mouse, the enter/space key, or touch. The match index and current\n     * `dataLabel` will be given back.\n     *\n     * `onAutocomplete(suggestion, suggestionIndex, matches);`\n     *\n     * @see {@link #autocompleteWithLabel}\n     */\n    onAutocomplete: PropTypes.func,\n\n    /**\n     * Boolean if the `onAutocomplete` should attempt send the `suggestion[dataLabel]` instead\n     * of `suggestion[dataValue]` when the data is an object.\n     *\n     * @see {@link #onAutocomplete}\n     */\n    autocompleteWithLabel: PropTypes.bool,\n\n    /**\n     * A boolean if the text field's value should be reset to the empty string when\n     * an item is auto-completed. This is useful if you do not want a fully controlled\n     * component and the values are stored outside of the `TextField`. (like `Chips`).\n     */\n    clearOnAutocomplete: PropTypes.bool,\n\n    /**\n     * An optional function to call when the `Autocomplete` suggestion menu opens.\n     */\n    onMenuOpen: PropTypes.func,\n\n    /**\n     * An optional function to call when the `Autocomplete` suggestion menu closes.\n     */\n    onMenuClose: PropTypes.func,\n\n    /**\n     * This prop is used for disabling the browser's default autocomplete suggestions\n     * of previously typed values in the text field. By default, this is disabled.\n     */\n    autoComplete: PropTypes.oneOf(['on', 'off']),\n\n    /**\n     * Boolean if the `input` should be focused again after a suggestion was clicked.\n     *\n     * This is really only added for keyboard support and the fact that each of suggestions\n     * are focusable.\n     */\n    focusInputOnAutocomplete: PropTypes.bool,\n\n    /**\n     * This is how the menu's `List` gets anchored to the `toggle` element.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the animation position for the list that appears.\n     *\n     * @see {@link Helpers/Layover#animationPosition}\n     */\n    position: positionShape,\n\n    /**\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * Boolean if the menu's list should appear horizontally instead of vertically.\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\n     */\n    listZDepth: PropTypes.number,\n\n    /**\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\n     * `$md-menu-desktop-max-height` values.\n     *\n     * @see [md-menu-mobile-max-height](/components/menus?tab=2#variable-md-menu-mobile-max-height)\n     * @see [md-menu-desktop-max-height](/components/menus?tab=2#variable-md-menu-desktop-max-height)\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * An optional transition name to use for the list appearing/disappearing.\n     *\n     * @see {@link Helpers/Layover#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#centered}\n     */\n    centered: Menu.propTypes.centered,\n\n    /**\n     * @see {@link Helpers/Layover#sameWidth}\n     */\n    sameWidth: Menu.propTypes.sameWidth,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    /**\n     * @see {@link TextFields#toolbar}\n     */\n    toolbar: PropTypes.bool,\n\n    /**\n     * Boolean if the list of data should be shown on focus when no filter value has been\n     * provided.\n     */\n    showUnfilteredData: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    autocompleteWithLabel: false,\n    position: Menu.Positions.BELOW,\n    sameWidth: true,\n    offset: 0,\n    fullWidth: true,\n    defaultValue: '',\n    dataLabel: 'primaryText',\n    filter: Autocomplete.fuzzyFilter,\n    findInlineSuggestion: Autocomplete.findIgnoreCase,\n    autoComplete: 'off',\n    repositionOnScroll: true,\n    repositionOnResize: true,\n    showUnfilteredData: false,\n    inlineSuggestionPadding: 6,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const {\n      defaultValue,\n      data,\n      dataLabel,\n      filter,\n      showUnfilteredData,\n    } = props;\n\n    let matches = [];\n    if (defaultValue && filter) {\n      matches = filter(data, defaultValue, dataLabel);\n    } else if (!filter || showUnfilteredData) {\n      matches = data;\n    }\n\n    this.state = {\n      value: defaultValue,\n      matches,\n      visible: false,\n      matchIndex: -1,\n      manualFocus: false,\n      suggestion: '',\n      suggestionIndex: -1,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value: nextValue, data, filter, dataLabel } = nextProps;\n    const dataDiff = data !== this.props.data;\n    if (nextValue !== this.props.value || dataDiff) {\n      let { visible, matches } = this.state;\n      const value = getField(nextProps, this.state, 'value');\n\n      if (filter) {\n        matches = filter(data, value, dataLabel);\n      } else if (dataDiff) {\n        matches = data;\n      }\n\n      if (this.state.focus) {\n        visible = !!matches.length;\n      }\n\n      this.setState({ matches, visible });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.visible !== nextState.visible) {\n      const menuFn = nextProps[`onMenu${nextState.visible ? 'Open' : 'Close'}`];\n      if (menuFn) {\n        menuFn();\n      }\n    }\n  }\n\n  /**\n   * Gets the current value from the text field. This is used when you have an uncontrolled\n   * text field and simply need the value from a ref callback.\n   *\n   * @return {String} the text field's value\n   */\n  get value() {\n    return getField(this.props, this.state, 'value');\n  }\n\n  _close = (e) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    this.setState({ visible: false });\n  };\n\n  _handleChange = (value, event) => {\n    const {\n      onChange,\n      filter,\n      findInlineSuggestion,\n      data,\n      dataLabel,\n      inline,\n      showUnfilteredData,\n    } = this.props;\n\n    if (onChange) {\n      onChange(value, event);\n    }\n\n    if (inline) {\n      // If findInlineSuggestion does not exist, assume that `onChange` will handle it.\n      return findInlineSuggestion ? this._findInlineSuggestions(value) : null;\n    }\n\n    let { visible } = this.state;\n    const hasValidValue = value || showUnfilteredData;\n\n    let matches = hasValidValue || !filter ? data : [];\n    if (value && filter) {\n      matches = filter(data, value, dataLabel);\n    }\n\n    if (filter) {\n      visible = !!matches.length;\n    }\n\n    return this.setState({ matches, visible, value });\n  }\n\n  _handleFocus = (e) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    const { value } = e.target;\n    if (this.props.inline && value) {\n      if (this.props.findInlineSuggestion) {\n        this._findInlineSuggestions(value);\n      }\n\n      return;\n    }\n\n    const hasValidValue = !!value || this.props.showUnfilteredData;\n\n    this.setState({\n      matchIndex: -1,\n      visible: !this.state.manualFocus && hasValidValue && !!this.state.matches.length,\n      manualFocus: false,\n      focus: true,\n    });\n  };\n\n  _handleBlur = (e) => {\n    if (this.props.inline || !this.state.matches.length) {\n      if (this.props.onBlur) {\n        this.props.onBlur(e);\n      }\n    }\n\n    this.setState({ focus: false });\n  };\n\n  _handleInlineAutocomplete = () => {\n    const { suggestionIndex, matches } = this.state;\n    if (suggestionIndex === -1) {\n      return;\n    }\n\n    const {\n      data,\n      dataLabel,\n      dataValue,\n      autocompleteWithLabel: label,\n      onAutocomplete,\n    } = this.props;\n\n    let value = data[suggestionIndex];\n    if (onAutocomplete) {\n      let v = value;\n      if (typeof value === 'object') {\n        if (!label) {\n          v = value[dataValue];\n        } else {\n          v = value[dataLabel];\n        }\n      }\n\n      onAutocomplete(v, suggestionIndex, matches);\n    }\n\n    if (typeof value === 'object') {\n      value = value[dataLabel];\n    }\n\n    this.setState({\n      value,\n      suggestion: '',\n      suggestionIndex: -1,\n      tabbed: true,\n    });\n  };\n\n  _handleTextFieldKeyDown = (e) => {\n    const { inline, onKeyDown } = this.props;\n    const { suggestionIndex } = this.state;\n\n    const key = e.which || e.keyCode;\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    if (inline && key === TAB && suggestionIndex !== -1) { // Autocomplete the text field\n      e.preventDefault();\n      this._handleInlineAutocomplete();\n    }\n  };\n\n  _handleMenuKeyDown = (e) => {\n    const key = e.which || e.keyCode;\n    if (key === TAB) {\n      if (this.props.onBlur) {\n        this.props.onBlur(e);\n      }\n\n      this.setState({ visible: false });\n    } else if (key === UP || key === DOWN) {\n      this._focusSuggestion(key === UP, e);\n    }\n  };\n\n  /**\n   * Just check if the click target is in a list item.. if it is, autocomplete the text field\n   * with that item.\n   */\n  _handleClick = (e) => {\n    let target = e.target;\n    while (this._menu && this._menu.contains(target)) {\n      if (target.classList.contains('md-list-item')) {\n        let items = target.parentNode.querySelectorAll('.md-list-item');\n        items = Array.prototype.slice.call(items);\n\n        return this._handleItemClick(items.indexOf(target));\n      }\n\n      target = target.parentNode;\n    }\n\n    return null;\n  };\n\n  _handleItemClick = (index) => {\n    if (index === -1) { return; }\n\n    const { matches } = this.state;\n    const {\n      data,\n      dataLabel,\n      dataValue,\n      filter,\n      onAutocomplete,\n      clearOnAutocomplete,\n      focusInputOnAutocomplete,\n      autocompleteWithLabel: label,\n    } = this.props;\n\n    let value = matches.filter(m => !React.isValidElement(m))[index];\n    if (onAutocomplete) {\n      let v = value;\n      if (typeof v === 'object') {\n        if (!label) {\n          v = value[dataValue];\n        } else {\n          v = value[dataLabel];\n        }\n      }\n\n      onAutocomplete(v, index, matches);\n    }\n\n    if (typeof value === 'object') {\n      value = value[dataLabel];\n    }\n\n    value = clearOnAutocomplete ? '' : value;\n    let callback;\n    if (focusInputOnAutocomplete) {\n      callback = () => {\n        this._field.focus();\n      };\n    }\n\n    this.setState({\n      visible: false,\n      manualFocus: focusInputOnAutocomplete,\n      matches: filter ? filter(data, value, dataLabel) : matches,\n      value,\n    }, callback);\n  };\n\n  _focusSuggestion = (negative, e) => {\n    e.preventDefault();\n    const { matchIndex, matches } = this.state;\n    const l = matches.length;\n\n    let index;\n    if (negative && matchIndex === -1 || !negative && matchIndex >= l) {\n      return;\n    } else if (negative) {\n      index = matchIndex - 1;\n      if (index === -1) {\n        this._field.focus();\n      }\n    } else {\n      index = Math.min(l, matchIndex + 1);\n    }\n\n    if (index !== -1 && index !== matchIndex) {\n      const item = this._menu.querySelectorAll('.md-list-tile')[index];\n      if (item) {\n        item.focus();\n      }\n    }\n\n    this.setState({ matchIndex: index });\n  };\n\n  _findInlineSuggestions = (value) => {\n    const { data, dataLabel, findInlineSuggestion, inlineSuggestionPadding } = this.props;\n\n    let suggestion = findInlineSuggestion(data, value, dataLabel);\n    if (typeof suggestion === 'object') {\n      throw new Error(\n        '`findInlineSuggestion` should return a string or a number, but got an object.',\n        suggestion\n      );\n    }\n\n    let { suggestionStyle } = this.state;\n    let suggestionIndex = -1;\n    if (suggestion) {\n      // Find index of suggestion\n      data.some((datum, i) => {\n        const d = typeof dataum === 'object' ? datum[dataLabel] : datum;\n        if (d === suggestion) {\n          suggestionIndex = i;\n        }\n\n        return suggestionIndex !== -1;\n      });\n\n      // Strip already used letters\n      suggestion = suggestion.toString().substring(value.length, suggestion.length);\n\n      // Position the inline suggestion next to the text\n      let width = getTextWidth(value, this._field);\n      if (width !== null) {\n        width += inlineSuggestionPadding;\n      }\n\n      if (width !== null && (!suggestionStyle || suggestionStyle.left !== width)) {\n        suggestionStyle = { left: width };\n      }\n    }\n\n    this.setState({\n      value,\n      suggestion,\n      suggestionIndex,\n      suggestionStyle,\n      tabbed: false,\n      focus: true,\n    });\n  };\n\n  _mapToListItem = (match, i) => {\n    if (React.isValidElement(match)) { return match; }\n\n    const { dataLabel, dataValue, deleteKeys, total, offset, data } = this.props;\n    let props;\n    switch (typeof match) {\n      case 'string':\n      case 'number':\n        props = {\n          key: match,\n          primaryText: match,\n        };\n        break;\n      default:\n        if (deleteKeys) {\n          props = omit(match, typeof deleteKeys === 'string' ? [deleteKeys] : deleteKeys);\n        } else {\n          props = match;\n        }\n\n        props = {\n          ...props,\n          key: match.key || (dataValue && match[dataValue]) || match[dataLabel],\n          primaryText: match[dataLabel],\n        };\n    }\n\n    if (typeof total !== 'undefined' && data.length < total) {\n      props['aria-setsize'] = total;\n      props['aria-posinset'] = i + 1 + offset;\n    }\n\n    // Allows focus, but does not let tab focus. This is so up and down keys work.\n    return <ListItem tabIndex={-1} {...props} />;\n  };\n\n  /**\n   * The `mousedown` event is used instead of `click` because of the order\n   * of the `mousedown`, `focus`, and `click` events.\n   */\n  _toggleMenu = (e) => {\n    if (this.props.onMouseDown) {\n      this.props.onMouseDown(e);\n    }\n\n    if (!this.props.inline && this.state.matches.length && getField(this.props, this.state, 'value')) {\n      this.setState({ visible: !this.state.visible });\n    }\n  };\n\n  /**\n   * Allows touch devices to autocomplete the inline view by tapping:\n   * - the suggestion text\n   * - the text field IF there is a suggestion visible\n   */\n  _handleTouchStart = (e) => {\n    const { target } = e;\n    const { suggestion } = this.state;\n    if (target.classList.contains('md-autocomplete-suggestion') && suggestion) {\n      this._handleInlineAutocomplete();\n    }\n  };\n\n  _setField = (field) => {\n    if (field) {\n      this._field = field.getField();\n    }\n  };\n\n  _setMenu = (menu) => {\n    this._menu = findDOMNode(menu);\n  };\n\n  render() {\n    const { visible, matches, tabbed, focus, suggestionStyle } = this.state;\n    const {\n      fullWidth,\n      block,\n      style,\n      className,\n      listStyle,\n      listClassName,\n      textFieldStyle,\n      textFieldClassName,\n      inlineSuggestionStyle,\n      inlineSuggestionClassName,\n      menuId,\n      inline,\n      anchor,\n      belowAnchor,\n      position,\n      fixedTo,\n      listId,\n      listInline,\n      listZDepth,\n      listHeightRestricted,\n      xThreshold,\n      yThreshold,\n      closeOnOutsideClick,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      centered,\n      sameWidth,\n      repositionOnScroll,\n      repositionOnResize,\n      simplifiedMenu,\n      minLeft,\n      minRight,\n      minBottom,\n      fillViewportWidth,\n      fillViewportHeight,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      total,\n      offset,\n      filter,\n      data,\n      dataLabel,\n      dataValue,\n      deleteKeys,\n      defaultValue,\n      clearOnAutocomplete,\n      autocompleteWithLabel,\n      findInlineSuggestion,\n      inlineSuggestionPadding,\n      onAutocomplete,\n      onMenuOpen,\n      onMenuClose,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onMouseDown,\n      onChange,\n      showUnfilteredData,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    delete props.focusInputOnAutocomplete;\n\n    const value = getField(this.props, this.state, 'value');\n\n    const autocomplete = (\n      <TextField\n        {...props}\n        aria-autocomplete={inline ? 'inline' : 'list'}\n        style={textFieldStyle}\n        className={cn('md-autocomplete', textFieldClassName)}\n        key=\"autocomplete\"\n        ref={this._setField}\n        value={value}\n        onKeyDown={this._handleTextFieldKeyDown}\n        onMouseDown={this._toggleMenu}\n        onChange={this._handleChange}\n        onFocus={this._handleFocus}\n        onBlur={this._handleBlur}\n        fullWidth={fullWidth}\n        block={block}\n      />\n    );\n\n    if (inline) {\n      let suggestion;\n      if (focus && this.state.suggestion) {\n        suggestion = (\n          <span\n            key=\"suggestion\"\n            style={{ ...suggestionStyle, ...inlineSuggestionStyle }}\n            className={cn('md-autocomplete-suggestion', {\n              'md-autocomplete-suggestion--floating': props.label,\n              'md-autocomplete-suggestion--block': block,\n            }, inlineSuggestionClassName)}\n          >\n            {this.state.suggestion}\n          </span>\n        );\n      }\n\n      return (\n        <CSSTransitionGroup\n          component=\"div\"\n          style={style}\n          className={cn('md-menu-container md-autocomplete-container', className, {\n            'md-full-width': fullWidth || block,\n          })}\n          transitionName=\"opacity\"\n          transitionEnterTimeout={150}\n          transitionLeave={!tabbed}\n          transitionLeaveTimeout={150}\n          onTouchStart={this._handleTouchStart}\n        >\n          {autocomplete}\n          {suggestion}\n        </CSSTransitionGroup>\n      );\n    }\n\n    return (\n      <Menu\n        id={menuId || `${props.id}-menu`}\n        listId={listId}\n        ref={this._setMenu}\n        toggle={autocomplete}\n        visible={visible}\n        onClick={this._handleClick}\n        onClose={this._close}\n        onKeyDown={this._handleMenuKeyDown}\n        simplified={simplifiedMenu}\n        sameWidth={sameWidth}\n        centered={centered}\n        anchor={anchor}\n        belowAnchor={belowAnchor}\n        position={position}\n        fixedTo={fixedTo}\n        listInline={listInline}\n        listZDepth={listZDepth}\n        listHeightRestricted={listHeightRestricted}\n        xThreshold={xThreshold}\n        yThreshold={yThreshold}\n        closeOnOutsideClick={closeOnOutsideClick}\n        transitionName={transitionName}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n        fullWidth={fullWidth || block}\n        style={style}\n        className={cn('md-autocomplete-container', className)}\n        listStyle={listStyle}\n        listClassName={cn('md-autocomplete-list', listClassName)}\n        repositionOnScroll={repositionOnScroll}\n        repositionOnResize={repositionOnResize}\n        minLeft={minLeft}\n        minRight={minRight}\n        minBottom={minBottom}\n        fillViewportWidth={fillViewportWidth}\n        fillViewportHeight={fillViewportHeight}\n      >\n        {matches.map(this._mapToListItem)}\n      </Menu>\n    );\n  }\n}\n","/** @module utils/fuzzyFilter */\nimport React from 'react';\n\n/**\n * This function does a simple fuzzy search of some `needle` for every\n * item in a `haystack`. It will only include items that are:\n *  - not null or undefined\n *  - valid React Components\n *  - a number or string that contains each letter/number in order ignoring case\n *  - an object's `dataLabel` value that contains each letter/number in order ignoring case.\n *\n * Example:\n * ```js\n * const haystack = ['Apple', 'Banana', 'Orange'];\n * fuzzyFilter(haystack, 'An') // ['Banana', 'Orange'];\n * fuzzyFilter(haystack, 'ae') // ['Apple']\n * ```\n *\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search\n * @param {string} needle - the filter text to use.\n * @param {string=} dataLabel - the data label to use if the element is an object.\n *\n * @return {Array.<string|number|Object|function>} a filtered list.\n */\nexport default function fuzzyFilter(haystack, needle, dataLabel) {\n  // Create an amazing regex that matches the letters in order\n  // and escapes any strings that could be part of a regex.\n  const reg = new RegExp(\n    `${needle}`.split('')\n      .join('\\\\w*')\n      .replace(/(\\(|\\||\\)|\\\\(?!w\\*)|\\[|\\|-|\\.|\\^|\\+|\\$|\\?|^(?!w)\\*)/g, '\\\\$1')\n      // Couldn't get the matching of two '*' working, so replace them here..\n      .replace(/\\*\\*/g, '*\\\\*'),\n    'i'\n  );\n\n  return haystack.filter(hay => {\n    if (hay === null || typeof hay === 'undefined') {\n      return false;\n    } else if (React.isValidElement(hay)) {\n      return true;\n    }\n\n    let value;\n    switch (typeof hay) {\n      case 'string':\n      case 'number':\n        value = hay.toString();\n        break;\n      default:\n        value = hay[dataLabel];\n    }\n\n    return value && value.match(reg);\n  });\n}\n","/** @module utils/caseInsensitiveFilter */\nimport React from 'react';\n\n/**\n * This function does a simple ignore case search of some `filterText` for every\n * item in a `haystack`. It will only include items that are:\n *  - not null or undefined\n *  - valid React Components\n *  - a number or string that contains each letter/number in exact order ignoring case\n *  - an object's `dataLabel` value that contains each letter/number in exact order ignoring case.\n *\n * Example:\n *\n * ```js\n * const haystack = ['Apple', 'Banana', 'Orange'];\n * caseInsensitiveFilter(haystack, 'An') // ['Banana', 'Orange'];\n * caseInsensitiveFilter(haystack, 'ae') // []\n * ```\n *\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search\n * @param {string} filterText - the filter text to use.\n * @param {string=} dataLabel - the data label to use if the element is an object.\n *\n * @return {Array.<string|number|Object|function>} a filtered list.\n */\nexport default function caseInsensitiveFilter(haystack, filterText, dataLabel) {\n  const needle = filterText.toLowerCase();\n\n  return haystack.filter(hay => {\n    if (hay === null || typeof hay === 'undefined') {\n      return false;\n    } else if (React.isValidElement(hay)) {\n      return true;\n    }\n\n    let value;\n    switch (typeof hay) {\n      case 'string':\n      case 'number':\n        value = hay.toString();\n        break;\n      default:\n        value = hay[dataLabel];\n    }\n\n    return value && value.toLowerCase().indexOf(needle) !== -1;\n  });\n}\n","/** @module utils/findIgnoreCase */\nimport React from 'react';\n\n/**\n * This function finds the first item in a `haystack` that starts with every\n * letter of the `value` in order. It will ignore:\n *  - null or undefined\n *  - valid React components\n *\n * @param {Array.<string|number|Object|function>} haystack - the haystack to search.\n * @param {string} value - the current value to use.\n * @param {string=} dataLabel - the object key to use to extract the comparing value.\n *\n * @return {string} the found element or the empty string.\n */\nexport default function findIgnoreCase(haystack, value, dataLabel) {\n  const needle = value ? value.toLowerCase() : '';\n\n  if (!needle) { return needle; }\n\n  let suggestion = '';\n  haystack.some(hay => {\n    if (hay === null || typeof hay === 'undefined' || React.isValidElement(hay)) {\n      return false;\n    }\n\n    const hayStr = typeof hay === 'object' ? hay[dataLabel] : hay.toString();\n\n    if (hayStr.toLowerCase().indexOf(needle) === 0) {\n      suggestion = hayStr;\n    }\n\n    return suggestion;\n  });\n\n  return suggestion;\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport oneRequiredForA11yIf from '../utils/PropTypes/oneRequiredForA11yIf';\n\n/**\n * The avatar component is used to convert a `FontIcon`, an image, or\n * a letter into an avatar.\n *\n * Any other props given to the Avatar component such as event listeners\n * or styles will also be applied.\n */\nexport default class Avatar extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply to the avatar.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to either the `<img>` or `<div>` surrounding the content. The `<img>` tag\n     * will be used with the `src` prop is defined.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to either the `<img>` or `<div>` surrounding the content. The `<img>` tag\n     * will be used with the `src` prop is defined.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional image source to use for the avatar.\n     */\n    src: oneRequiredForA11yIf(PropTypes.string, 'role', 'alt'),\n\n    /**\n     * An optional image alt to use for the avatar if it is\n     * an image.\n     */\n    alt: PropTypes.string,\n\n    /**\n     * An optional `FontIcon` to convert into an avatar.\n     */\n    icon: PropTypes.node,\n\n    /**\n     * An optional letter to display in the avatar.\n     */\n    children: PropTypes.node,\n\n    /**\n     * A boolean if a random color should be applied to the avatar.\n     * This will be one of the `suffixes`.\n     */\n    random: PropTypes.bool,\n\n    /**\n     * A list of available suffixes to use when generating a random\n     * color for the avatar.\n     */\n    suffixes: PropTypes.arrayOf(PropTypes.string),\n\n    /**\n     * The suffix to use for a color. This can be any value but\n     * *should* be one of the available `suffixes`.\n     */\n    suffix: PropTypes.string,\n\n    /**\n     * Boolean if the `Avatar` should be sized to a `FontIcon` size. This\n     * will just set the width and height to the `$md-font-icon-size`.\n     */\n    iconSized: PropTypes.bool,\n\n    /**\n     * A role for the avatar's image. When the `src` prop is set, either a `role` of `presentation`\n     * or the `alt` prop must be defined for a11y.\n     */\n    role: PropTypes.oneOf(['presentation']),\n  };\n\n  static defaultProps = {\n    suffixes: [\n      'red',\n      'pink',\n      'purple',\n      'deep-purple',\n      'indigo',\n      'blue',\n      'light-blue',\n      'cyan',\n      'teal',\n      'green',\n      'light-green',\n      'lime',\n      'yellow',\n      'amber',\n      'orange',\n      'deep-orange',\n      'brown',\n      'grey',\n      'blue-grey',\n    ],\n  };\n\n  state = { color: null };\n\n  componentWillMount() {\n    if (this.props.random) {\n      this._setRandomColor();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.random && (this.props.src !== nextProps.src || this.props.icon !== nextProps.icon)) {\n      this._setRandomColor();\n    } else if (this.props.random && !nextProps.random) {\n      this.setState({ color: null });\n    }\n  }\n\n  _setRandomColor = () => {\n    const { suffixes } = this.props;\n\n    const i = (Math.floor(Math.random() * (suffixes.length - 1)) + 1);\n    this.setState({ color: suffixes[i] });\n  };\n\n  _getColor(suffix, suffixes, color) {\n    if (suffix) {\n      return `md-avatar--${suffix}`;\n    } else if (!!suffixes && !color) {\n      return 'md-avatar--default';\n    }\n\n    return `md-avatar--${color}`;\n  }\n\n  render() {\n    const {\n      className,\n      contentStyle,\n      contentClassName,\n      src,\n      alt,\n      icon,\n      children,\n      suffix,\n      suffixes,\n      iconSized,\n      role,\n      random, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    let content;\n    if (src) {\n      content = (\n        <img\n          src={src}\n          alt={alt}\n          role={role}\n          style={contentStyle}\n          className={cn('md-avatar-img', contentClassName)}\n        />\n      );\n    } else {\n      content = (\n        <div\n          style={contentStyle}\n          className={cn('md-avatar-content', contentClassName)}\n        >\n          {icon || children}\n        </div>\n      );\n    }\n    return (\n      <div\n        {...props}\n        className={cn('md-inline-block md-avatar', this._getColor(suffix, suffixes, this.state.color), {\n          'md-avatar--icon-sized': iconSized,\n        }, className)}\n      >\n        {content}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The main use case of the `Badge` component is for notifications. It can\n * however also place any content floating to whatever children are supplied.\n */\nexport default class Badge extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the badge's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the badge's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the badge.\n     */\n    badgeStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the badge.\n     */\n    badgeClassName: PropTypes.string,\n\n    /**\n     * The id to give the badge's content. This is required to help with the\n     * `aria-describedby` attribute that should be applied to one of the children.\n     *\n     * If there is only one child that is a valid React element, the `aria-describedby`\n     * will automatically be cloned into that child (so make sure your component passes\n     * that prop correctly).\n     *\n     * If there is only one child, but it is a string or number, the badge's container\n     * will be updated to include the `aria-describedby`.\n     *\n     * If there is more than child, you are required to add it to a child yourself.\n     */\n    badgeId: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * The content to display with the badge's content. The size of this\n     * element is determinate of the location of the content. You might have\n     * to update the positioning yourself.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * The component to render the badge as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * The content to display in the badge. If the content is a number or a number string,\n     * the number will be normalized if `normalizeContent` is enabled.\n     */\n    badgeContent: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.node,\n    ]).isRequired,\n\n    /**\n     * This will basically update the display value of the content to only be 2 digits. If\n     * a number is greater than 99, 99+ will be displayed instead. This is really just to\n     * keep the count inside the circular bubble.\n     */\n    max: PropTypes.number,\n\n    /**\n     * Boolean if the primary color background should get applied to the badge's content.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the secondary color background should get applied to the badge's content.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the default styles should be applied.\n     */\n    default: PropTypes.bool,\n\n    /**\n     * Boolean if the badge's content should appear in a circular container. If this is\n     * undefined, the content will be in a circular container if the badgeContent is a number.\n     */\n    circular: PropTypes.bool,\n\n    /**\n     * Boolean if the badge's notification should be invisible when the count is 0.\n     */\n    invisibleOnZero: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    max: 99,\n    component: 'div',\n  };\n\n  constructor(props) {\n    super(props);\n\n    const single = this._isSingleChild(props);\n    this.state = {\n      single,\n      element: single && isValidElement(props.children),\n      count: this._normalizeCount(props),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { badgeContent, max, children } = this.props;\n    let nextState;\n    if (badgeContent !== nextProps.badgeContent || max !== nextProps.max) {\n      nextState = { count: this._normalizeCount(nextProps) };\n    }\n\n    if (children !== nextProps.children) {\n      nextState = nextState || {};\n      nextState.single = this._isSingleChild(nextProps);\n      nextState.element = nextState.single && isValidElement(nextProps.children);\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  }\n\n  _isSingleChild({ children }) {\n    return Children.count(children) === 1;\n  }\n\n  _normalizeCount({ badgeContent, max }) {\n    let count;\n    if (max) {\n      const n = parseInt(badgeContent, 10);\n      if (!Number.isNaN(n) && n.toString() === badgeContent.toString()) {\n        count = n > max ? `${max}+` : n;\n      }\n    }\n\n    return count;\n  }\n\n  render() {\n    const { count, single, element } = this.state;\n    const {\n      className,\n      badgeStyle,\n      badgeClassName,\n      badgeContent,\n      component: Component,\n      children,\n      primary,\n      secondary,\n      default: defaultTheme,\n      circular,\n      badgeId,\n      invisibleOnZero,\n      max, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    const useCircular = typeof circular !== 'undefined' ? circular : typeof count !== 'undefined';\n    let content = children;\n    if (single && element) {\n      const c = Children.only(content);\n      if (!c.props['aria-describedby']) {\n        content = cloneElement(c, { 'aria-describedby': badgeId });\n      }\n    } else if (single && !element && !props['aria-describedby']) {\n      props['aria-describedby'] = badgeId;\n    }\n\n    const badge = (\n      <span\n        id={badgeId}\n        key=\"badge\"\n        role=\"status\"\n        style={badgeStyle}\n        className={cn('md-badge', {\n          'md-badge--circular': useCircular,\n          'md-badge--default': defaultTheme,\n        }, themeColors({\n          primary,\n          secondary,\n          text: useCircular,\n          themeText: !primary && !secondary,\n        }, badgeClassName))}\n      >\n        {count || badgeContent}\n      </span>\n    );\n\n    return (\n      <Component\n        {...props}\n        className={cn('md-badge-container md-inline-block', className)}\n      >\n        {content}\n        {invisibleOnZero && count === 0 ? null : badge}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  createPortal,\n  unmountComponentAtNode as unmount,\n  unstable_renderSubtreeIntoContainer as render,\n} from 'react-dom';\n\nconst isReact16 = typeof createPortal === 'function';\n\n/**\n * Creates a \"Portal\" for the children to be rendered in. Basically it will render the\n * children only when the `visible` prop is `true`. When it is visible, a new `component`\n * will be rendered as the first child in the body with the children inside.\n *\n * Unlike all the other components, `style` will not be applied for the `Portal`.\n */\nexport default class Portal extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply to the newly created `component` when visible.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if the children are visible.\n     */\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * The children to render when visible.\n     */\n    children: PropTypes.element,\n\n    /**\n     * The component to render as. This should be a valid DOM element.\n     */\n    component: PropTypes.string.isRequired,\n\n    /**\n     * An optional function to call when the portal is opened.\n     */\n    onOpen: PropTypes.func,\n\n    /**\n     * An optional function to call when the portal is closed\n     */\n    onClose: PropTypes.func,\n\n    /**\n     * An optional DOM Node to render the portal into. The default is to render as\n     * the first child in the `body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the portal should render the children as the last child of the `renderNode`\n     * or `body` instead of the first.\n     */\n    lastChild: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'span',\n  };\n\n  componentDidMount() {\n    if (this.props.visible) {\n      this._renderPortal(this.props);\n\n      if (isReact16) {\n        // Need to update after the renderPortal created the DOM element.\n        this.forceUpdate();\n      }\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { visible, onOpen } = nextProps;\n    if (this.props.visible === visible) {\n      if (visible && !isReact16) {\n        // Need to just re-render the subtree\n        this._renderPortal(nextProps);\n      }\n\n      return;\n    }\n\n    if (visible) {\n      if (onOpen) {\n        onOpen();\n      }\n\n      this._renderPortal(nextProps);\n    } else {\n      this._removePortal();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.visible && this.props.onClose) {\n      this.props.onClose();\n    }\n    this._removePortal();\n  }\n\n  _container = null;\n  _portal = null;\n\n  _applyStyles = (props) => {\n    if (props.className) {\n      this._container.className = props.className;\n    }\n  };\n\n  _renderPortal = (props) => {\n    if (!this._container) {\n      this._container = document.createElement(props.component);\n\n      this._applyStyles(props);\n      const node = (props.renderNode || document.body);\n      if (props.lastChild) {\n        node.appendChild(this._container);\n      } else {\n        node.insertBefore(this._container, node.firstChild);\n      }\n    } else {\n      this._applyStyles(props);\n    }\n\n    if (!isReact16) {\n      this._portal = render(this, props.children, this._container);\n    }\n  };\n\n  _removePortal = () => {\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n\n    if (this._container) {\n      if (!isReact16) {\n        unmount(this._container);\n      }\n\n      (this.props.renderNode || document.body).removeChild(this._container);\n    }\n\n    this._portal = null;\n    this._container = null;\n  };\n\n  render() {\n    const { component: Component, className, children, visible } = this.props;\n\n    // When doing server side rendering, actually render the component as a direct child of its parent.\n    // Once it has been rendered and working client side, it will be removed correctly.\n    if (typeof window === 'undefined' && visible) {\n      return <Component className={className}>{children}</Component>;\n    } else if (isReact16 && visible && this._container && typeof window !== 'undefined') {\n      return createPortal(children, this._container);\n    }\n\n    return null;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport between from '../utils/PropTypes/between';\n\n/**\n * The `Paper` component is a simple wrapper that adds box-shadow.\n *\n * You can also use the SCSS mixin instead of paper.\n *\n * ```scss\n * @include md-box-shadow(5);\n * ```\n */\nexport default class Paper extends PureComponent {\n  static propTypes = {\n    /**\n     * The component to render the paper as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The depth of the paper. This should be a number between 0 - 5. If\n     * the depth is 0, it will raise to a depth of 3 on hover.\n     */\n    zDepth: between(PropTypes.number.isRequired, 0, 5),\n\n    /**\n     * Any children to display in the paper.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the paper should raise to the `zDepth` of `3` on hover when the initial\n     * `zDepth` is `0`.\n     */\n    raiseOnHover: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    zDepth: 1,\n    component: 'div',\n  };\n\n  render() {\n    const { component: Component, zDepth, className, raiseOnHover, ...props } = this.props;\n\n    return (\n      <Component\n        {...props}\n        className={cn(`md-paper md-paper--${zDepth}`, {\n          'md-paper--0-hover': zDepth === 0 && raiseOnHover,\n        }, className)}\n      />\n    );\n  }\n}\n","import React, { PureComponent, Children, isValidElement, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons';\n\n/**\n * The `BottomNav` component is used for rendering the navigation tab/link in the `BottomNavigation`\n * component.\n */\nexport default class BottomNav extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]),\n    active: PropTypes.bool,\n    fixed: PropTypes.bool,\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    label: PropTypes.node.isRequired,\n    colored: PropTypes.bool,\n    iconChildren: PropTypes.node,\n    iconClassName: PropTypes.string,\n    onClick: PropTypes.func,\n    onNavChange: PropTypes.func,\n    role: PropTypes.string,\n    animate: PropTypes.bool,\n    icon: PropTypes.element,\n  };\n\n  static defaultProps = {\n    component: 'a',\n    role: null,\n  };\n\n  _handleClick = (e) => {\n    const { onClick, onNavChange, index } = this.props;\n    if (onClick) {\n      onClick(index, e);\n    }\n\n    if (onNavChange) {\n      onNavChange(index, e);\n    }\n  };\n\n  render() {\n    const {\n      active,\n      fixed,\n      className,\n      colored,\n      animate,\n\n      // deprecated\n      iconClassName,\n      iconChildren,\n      /* eslint-disable no-unused-vars */\n      index,\n      icon: propIcon,\n      label: propLabel,\n      onClick,\n      onNavChange,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { label, icon } = this.props;\n    const labelClassName = cn('md-bottom-nav-label', { 'md-bottom-nav-label--shifting-inactive': !active && !fixed });\n    if (Children.count(label) === 1 && isValidElement(label)) {\n      const labelEl = Children.only(label);\n      label = cloneElement(label, {\n        className: cn(labelClassName, labelEl.props.className),\n      });\n    } else {\n      label = <div className={labelClassName}>{label}</div>;\n    }\n\n    if (!icon && (iconClassName || iconChildren)) {\n      // Deprecated\n      icon = <FontIcon iconClassName={iconClassName} inherit>{iconChildren}</FontIcon>;\n    } else if (icon) {\n      icon = React.cloneElement(icon, { inherit: true });\n    }\n\n    return (\n      <AccessibleFakeInkedButton\n        {...props}\n        onClick={this._handleClick}\n        className={cn('md-bottom-nav', {\n          'md-bottom-nav--active': active,\n          'md-bottom-nav--fixed': fixed,\n          'md-bottom-nav--shifting': !fixed,\n          'md-bottom-nav--shifting-active': !fixed && active,\n          'md-bottom-nav--shifting-inactive': !fixed && !active,\n        }, themeColors({ primary: !colored && active, text: !active && !colored }, className))}\n      >\n        {icon}\n        <Collapse collapsed={!fixed && !active} animate={animate}>\n          {label}\n        </Collapse>\n      </AccessibleFakeInkedButton>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport Portal from '../Helpers/Portal';\nimport Paper from '../Papers/Paper';\nimport BottomNav from './BottomNav';\n\n/**\n * The `BottomNavigation` component is an alternative to the `NavigationDrawer` for handling navigation\n * only on mobile devices.\n */\nexport default class BottomNavigation extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A list of objects to generate a bottom navigation link. There must be at least 3 and no more\n     * than 5 links. A link gets rendered as the `AccessibleFakeButton` component, so any additional\n     * props in the link's shape will be passed along.\n     *\n     * ```docgen\n     * PropTypes.arrayOf(PropTypes.shape({\n     *   label: PropTypes.node.isRequired,\n     *   icon: PropTypes.element,\n     *   component: PropTypes.oneOfType([\n     *      PropTypes.func,\n     *      PropTypes.string,\n     *   ]),\n     * }).isRequired\n     * ```\n     */\n    links: (props, propName, component, ...args) => {\n      const links = props[propName] || props.actions;\n      const len = links.length;\n\n      if (len < 3) {\n        return new Error(\n          `Only ${len} \\`${propName}\\` were given to the ${component}. At least 3 are required.`\n        );\n      } else if (len > 5) {\n        return new Error(\n          `${len} \\`${propName}\\` were given to the ${component}. No more than 5 may be given.`\n        );\n      }\n\n      return PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.node.isRequired,\n        icon: PropTypes.element,\n        iconChildren: deprecated(PropTypes.node, 'Use `icon` instead'),\n        iconClassName: deprecated(PropTypes.string, 'Use `icon` instead'),\n        component: PropTypes.oneOfType([\n          PropTypes.func,\n          PropTypes.string,\n          PropTypes.object,\n        ]),\n      })).isRequired(props, propName, component, ...args);\n    },\n\n    /**\n     * Boolean if the bottom navigation should be colored with the primary color or whatever color\n     * was a result of the `react-md-theme-bottom-navigations-colored` mixin.\n     */\n    colored: PropTypes.bool,\n\n    /**\n     * Boolean if the bottom navigation should dynamically appear based on scrolling. When the user\n     * scrolls the `dynamicThreshold` amount, this component will either disappear (scrolling down)\n     * or appear (scrolling up).\n     */\n    dynamic: PropTypes.bool,\n\n    /**\n     * The distance a user must scroll before the bottom navigation appears or disappears when it is `dynamic`.\n     */\n    dynamicThreshold: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when a link has been clicked. The callback will\n     * include the new active index and the click event.\n     *\n     * ```js\n     * onNavChange(newActiveIndex, event);\n     * ```\n     */\n    onNavChange: PropTypes.func,\n\n    /**\n     * An optional active index to use. This will make the component controlled and require the\n     * `onNavChange` prop to be defined.\n     */\n    activeIndex: controlled(PropTypes.number, 'onNavChange', 'defaultActiveIndex'),\n\n    /**\n     * The index for the link that is active by default.\n     */\n    defaultActiveIndex: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the bottom navigation is visible by default. This *should* probably always\n     * be true.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * The component to render the bottom navigation as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the bottom navigation.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * Since the `BottomNavigation` component uses the `Portal` component, you can pass an optional\n     * HTML Node to render in.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the bottom navigation should render as the last child in the `renderNode` or `body`\n     * instead of as the first.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * The transition duration for the dynamic bottom navigation to appear or disappear. This should\n     * match the `$md-bottom-navigation-transition-time` variable.\n     */\n    transitionDuration: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when the visibility of the bottom navigation changes. The callback\n     * will include the new visibility.\n     *\n     * ```js\n     * onVisibilityChange(!visible);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * Boolean if the label on a shifting navigation should animate in and out.\n     */\n    animate: PropTypes.bool,\n\n    onChange: deprecated(PropTypes.func, 'Use `onNavChange` instead'),\n    initiallyVisible: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initialActiveIndex: deprecated(PropTypes.number, 'Use `defaultActiveIndex` instead'),\n    containerStyle: deprecated(PropTypes.object, 'Use `style` instead'),\n    containerClassName: deprecated(PropTypes.string, 'Use `className` instead'),\n    transitionName: deprecated(PropTypes.string, 'There is no CSSTransitionGroup used anymore'),\n    transitionEnterTimeout: deprecated(PropTypes.number, 'Use `transitionDuration` instead'),\n    transitionLeaveTimeout: deprecated(PropTypes.number, 'Use `transitionDuration` instead'),\n    actions: deprecated(PropTypes.array, 'Use `links` instead'),\n  };\n\n  static defaultProps = {\n    animate: true,\n    defaultActiveIndex: 0,\n    component: 'footer',\n    defaultVisible: true,\n    transitionDuration: 300,\n    portal: false,\n    dynamicThreshold: 5,\n  };\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const visible = typeof props.initiallyVisible === 'boolean' ? props.initiallyVisible : props.defaultVisible;\n    this.state = {\n      visible,\n      portalVisible: visible,\n    };\n\n    if (typeof props.activeIndex === 'undefined') {\n      this.state.activeIndex = props.defaultActiveIndex;\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.dynamic) {\n      this._addTouchEvents();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { dynamic } = nextProps;\n    if (this.props.dynamic === dynamic) {\n      return;\n    }\n\n    if (dynamic) {\n      this._addTouchEvents();\n    } else {\n      this._removeTouchEvents();\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.visible !== nextState.visible && nextProps.onVisibilityChange) {\n      nextProps.onVisibilityChange(nextState.visible);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.dynamic) {\n      this._removeTouchEvents();\n    }\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _addTouchEvents = () => {\n    addTouchEvent(window, 'start', this._handleTouchStart);\n    addTouchEvent(window, 'move', this._handleTouchMove);\n    addTouchEvent(window, 'end', this._handleTouchEnd);\n  };\n\n  _removeTouchEvents = () => {\n    removeTouchEvent(window, 'start', this._handleTouchStart);\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\n  };\n\n  _animateIn = () => {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n      this.setState({ visible: true });\n    }, 17);\n\n    this.setState({ portalVisible: true });\n  };\n\n  _animateOut = () => {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n      this.setState({ portalVisible: false });\n    }, this.props.transitionDuration);\n\n    this.setState({ visible: false });\n  };\n\n  _handleTouchStart = (e) => {\n    const { pageY } = e.changedTouches[0];\n\n    this._pageY = pageY;\n    this._scrolling = true;\n  };\n\n  _handleTouchMove = (e) => {\n    const { visible } = this.state;\n    if (!this._scrolling) {\n      return;\n    }\n\n    const touchY = e.changedTouches[0].pageY;\n    const { dynamicThreshold } = this.props;\n    const passedThreshold = Math.abs(this._pageY - touchY) >= dynamicThreshold;\n    if (this._pageY > touchY && visible && passedThreshold) {\n      this._pageY = touchY;\n      this._animateOut();\n    } else if (this._pageY < touchY && !visible && passedThreshold) {\n      this._pageY = touchY;\n      this._animateIn();\n    }\n  };\n\n  _handleTouchEnd = () => {\n    this._scrolling = false;\n  };\n\n  _handleNavChange = (index, e) => {\n    if (this.props.onNavChange || this.props.onChange) {\n      (this.props.onNavChange || this.props.onChange)(index, e);\n    }\n\n    if (typeof this.props.activeIndex === 'undefined') {\n      this.setState({ activeIndex: index });\n    }\n  };\n\n  render() {\n    const { visible, portalVisible } = this.state;\n    const {\n      className,\n      actions,\n      colored,\n      dynamic,\n      lastChild,\n      animate,\n      portal,\n      /* eslint-disable no-unused-vars */\n      links: propLinks,\n      activeIndex: propActiveIndex,\n      renderNode: propRenderNode,\n      onNavChange,\n      onVisibilityChange,\n      defaultVisible,\n      defaultActiveIndex,\n      dynamicThreshold,\n      transitionDuration,\n\n      // deprecated\n      onChange,\n      initiallyVisible,\n      containerStyle,\n      containerClassName,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { links } = this.props;\n    if (actions) {\n      links = actions;\n    }\n\n    const fixed = links.length === 3;\n    const activeIndex = getField(this.props, this.state, 'activeIndex');\n    const renderNode = getField(this.props, this.context, 'renderNode');\n    const navigation = (\n      <Paper\n        {...props}\n        key=\"navigation\"\n        className={cn('md-bottom-navigation', {\n          'md-background--card': !colored,\n          'md-background--primary': colored,\n          'md-bottom-navigation--dynamic': dynamic,\n          'md-bottom-navigation--dynamic-inactive': dynamic && !visible,\n        }, className)}\n        role=\"navigation\"\n      >\n        {links.map((action, index) => (\n          <BottomNav\n            {...action}\n            animate={animate}\n            key={action.key || index}\n            index={index}\n            onNavChange={this._handleNavChange}\n            active={activeIndex === index}\n            colored={colored}\n            fixed={fixed}\n          />\n        ))}\n      </Paper>\n    );\n\n    if (!portal) {\n      return portalVisible ? navigation : null;\n    }\n\n    return (\n      <Portal renderNode={renderNode} visible={portalVisible} lastChild={lastChild}>\n        {navigation}\n      </Portal>\n    );\n  }\n}\n","import React, { PureComponent, cloneElement, isValidElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `IconSeparator` component is a simple helper component to render some text and\n * an icon with some space between them while centering the text. The icon can either\n * come before or after the text.\n */\nexport default class IconSeparator extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the label.\n     */\n    labelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the label.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * The label to display.\n     */\n    label: PropTypes.node.isRequired,\n\n    /**\n     * The icon to display.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the icon should appear before or after the text\n     */\n    iconBefore: PropTypes.bool,\n\n    /**\n     * The component to be rendered as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    component: 'div',\n  };\n\n  render() {\n    const {\n      className,\n      labelStyle,\n      labelClassName,\n      component,\n      label,\n      iconBefore,\n      children,\n      ...props\n    } = this.props;\n\n    let text;\n    if (isValidElement(label)) {\n      const labelProps = Children.only(label).props;\n      text = cloneElement(label, {\n        className: cn('md-icon-text', labelClassName, labelProps.className),\n        style: { ...labelStyle, ...labelProps.style },\n      });\n    } else {\n      text = <span style={labelStyle} className={cn('md-icon-text', labelClassName)}>{label}</span>;\n    }\n\n    const Component = component;\n\n    return (\n      <Component {...props} className={cn('md-icon-separator', className)}>\n        {iconBefore && children}\n        {text}\n        {!iconBefore && children}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\n\nexport default class Tooltip extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    position: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n    children: PropTypes.node.isRequired,\n    enterTimeout: PropTypes.number,\n    leaveTimeout: PropTypes.number,\n  };\n\n  static defaultProps = {\n    position: 'bottom',\n    enterTimeout: 150,\n    leaveTimeout: 150,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      entering: false,\n      leaving: false,\n      active: false,\n      visible: false,\n    };\n\n    this._timeout = null;\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  componentWillEnter(cb) {\n    this._timeout = setTimeout(() => {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        cb();\n      }, this.props.enterTimeout);\n      this.setState({ active: true });\n    }, TICK);\n\n    this.setState({ entering: true });\n  }\n\n  componentDidEnter() {\n    this.setState({ entering: false, active: false, visible: true });\n  }\n\n  componentWillLeave(cb) {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        cb();\n      }, this.props.leaveTimeout);\n\n      this.setState({ active: true, visible: false });\n    }, TICK);\n\n    this.setState({ leaving: true });\n  }\n\n  render() {\n    const { active, entering, leaving, visible } = this.state;\n    const { style, className, children, position } = this.props;\n\n    const direction = position === 'top' || position === 'bottom' ? 'horizontal' : 'vertical';\n    return (\n      <span\n        style={style}\n        className={cn(`md-tooltip md-tooltip--${position} md-tooltip--${direction}`, {\n          'md-tooltip--active': active,\n          'md-tooltip--enter': entering,\n          'md-tooltip--enter-active': entering && active,\n          'md-tooltip--leave': leaving,\n          'md-tooltip--leave-active': leaving && active,\n          [`md-tooltip--${position}-active`]: visible || (entering && active),\n        }, className)}\n      >\n        {children}\n      </span>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport TransitionGroup from 'react-transition-group/TransitionGroup';\nimport cn from 'classnames';\n\nimport { TAB } from '../constants/keyCodes';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport Tooltip from './Tooltip';\n\n\nfunction getContainer(tooltip) {\n  return tooltip.parentNode;\n}\n\nexport default class TooltipContainer extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    tooltipStyle: PropTypes.object,\n    tooltipClassName: PropTypes.string,\n    label: PropTypes.node.isRequired,\n    position: Tooltip.propTypes.position,\n    delay: PropTypes.number,\n    enterTimeout: Tooltip.propTypes.enterTimeout,\n    leaveTimeout: Tooltip.propTypes.leaveTimeout,\n    /**\n     * A function that returns a DOM element that will be used as the tooltip's container.\n     * A ref to the tooltip's DOM element will be passed into the function.\n     */\n    container: PropTypes.func,\n    /**\n     * A component/element the tooltip should be linked to,\n     * or a function that returns such a component/element.\n     * A ref to the tooltip's container will be passed into the function.\n     *\n     * By default the tooltip's container will be used as the target.\n     */\n    target: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n    ]),\n  };\n\n  static defaultProps = {\n    container: getContainer,\n    delay: 0,\n  };\n\n  state = { visible: false };\n\n  componentDidMount() {\n    this._setTarget();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.target !== prevProps.target) {\n      this._setTarget();\n    }\n  }\n\n  componentWillUnmount() {\n    this._unlinkTarget();\n    this._target = null;\n\n    if (this._delayedTimeout) {\n      clearTimeout(this._delayedTimeout);\n    }\n  }\n\n  _delayedTimeout = null;\n\n  _unlinkTarget = () => {\n    const target = this._target;\n    if (target) {\n      removeTouchEvent(target, 'start', this._showTooltip);\n      removeTouchEvent(target, 'end', this._hideTooltip);\n      target.removeEventListener('mouseover', this._showTooltip);\n      target.removeEventListener('mouseleave', this._hideTooltip);\n      target.removeEventListener('keyup', this._handleKeyUp);\n      target.removeEventListener('blur', this._hideTooltip);\n    }\n  };\n\n  _setTarget = () => {\n    const container = this._container;\n    let { target } = this.props;\n\n    this._unlinkTarget();\n\n    if (typeof target === 'function') {\n      target = target(container, this);\n    }\n    target = target ? findDOMNode(target) : container;\n    this._target = target || null;\n\n    if (target) {\n      addTouchEvent(target, 'start', this._showTooltip);\n      addTouchEvent(target, 'end', this._hideTooltip);\n      target.addEventListener('mouseover', this._showTooltip);\n      target.addEventListener('mouseleave', this._hideTooltip);\n      target.addEventListener('keyup', this._handleKeyUp);\n      target.addEventListener('blur', this._hideTooltip);\n    }\n  };\n\n  _setContainers = (span) => {\n    if (span) {\n      this._container = this.props.container(span.parentNode, this);\n    }\n  };\n\n  _stopContextMenu = (e) => {\n    e.preventDefault();\n    window.removeEventListener('contextmenu', this._stopContextMenu, true);\n    captureNextEvent('click');\n    this.setState({ visible: true });\n  };\n\n  _showTooltip = (e) => {\n    if (e.type === 'mouseover' && this._touched) {\n      return;\n    }\n\n    if (e.type === 'touchstart') {\n      this._touched = true;\n\n      window.addEventListener('contextmenu', this._stopContextMenu, true);\n      return;\n    }\n\n\n    const { delay } = this.props;\n    if (this._delayedTimeout) {\n      clearTimeout(this._delayedTimeout);\n    }\n\n    if (delay) {\n      this._delayedTimeout = setTimeout(() => {\n        this._delayedTimeout = null;\n\n        this.setState({ visible: true });\n      }, delay);\n    } else {\n      this.setState({ visible: true });\n    }\n  };\n\n  _hideTooltip = (e) => {\n    if (this._delayedTimeout) {\n      clearTimeout(this._delayedTimeout);\n    }\n\n    if (e.type === 'mouseover' && this._touched) {\n      return;\n    }\n\n    this.setState({ visible: false });\n  };\n\n  _handleKeyUp = (e) => {\n    if ((e.which || e.keyCode) === TAB) {\n      this._showTooltip(e);\n    }\n  };\n\n  render() {\n    const { visible } = this.state;\n    const {\n      style,\n      className,\n      tooltipStyle,\n      tooltipClassName,\n      label,\n      position,\n      enterTimeout,\n      leaveTimeout,\n    } = this.props;\n\n    const tooltip = (\n      <Tooltip\n        key=\"tooltip\"\n        style={tooltipStyle}\n        className={tooltipClassName}\n        position={position}\n        enterTimeout={enterTimeout}\n        leaveTimeout={leaveTimeout}\n      >\n        {label}\n      </Tooltip>\n    );\n\n    return (\n      <TransitionGroup\n        style={style}\n        className={cn('md-tooltip-container', className)}\n        component=\"div\"\n      >\n        <span ref={this._setContainers} aria-hidden />\n        {visible ? tooltip : null}\n      </TransitionGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport getDisplayName from '../utils/StringUtils/getDisplayName';\nimport TooltipContainer from './TooltipContainer';\n\n\n/**\n * Takes any component and injects a tooltip container as a prop. The tooltip container\n * will add event listeners for touch, mouse, and keyboard events so that a tooltip will appear\n * in the ComposedComponent.\n *\n * If the `tooltipLabel` prop is omitted, the tooltip and event listeners will not\n * be included.\n *\n * ```js\n * @param {function} ComposedComponent the component to compose with the tooltip functionality.\n * @return {function} the ComposedComponent with a tooltip.\n * ```\n */\nexport default ComposedComponent => class TooltipedComponent extends PureComponent {\n  static displayName = getDisplayName(ComposedComponent, 'Tooltip');\n  static propTypes = {\n    /**\n     * An optional style to apply to the tooltip container.\n     */\n    tooltipContainerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the tooltip container.\n     */\n    tooltipContainerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the tooltip itself.\n     */\n    tooltipStyle: PropTypes.object,\n\n    /**\n     * An optional className to the tooltip itself.\n     */\n    tooltipClassName: PropTypes.string,\n\n    /**\n     * The tooltip to display. If omitted, the `tooltip` prop will not be injected.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * The amount of delay before the tooltip will appear on hover, touch, or keyboard focus.\n     */\n    tooltipDelay: TooltipContainer.propTypes.delay,\n\n    /**\n     * The position that the tooltip should appear related to the composed component.\n     */\n    tooltipPosition: TooltipContainer.propTypes.position,\n\n    /**\n     * The transition time for the tooltip appearing.\n     */\n    tooltipTransitionEnterTimeout: TooltipContainer.propTypes.enterTimeout,\n\n    /**\n     * The transition time for the tooltip disappearing.\n     */\n    tooltipTransitionLeaveTimeout: TooltipContainer.propTypes.leaveTimeout,\n  };\n\n  _composed = null;\n\n  /**\n   * Gets the composed component as a ref. This is useful if you need to access the ref of the\n   * composed component instead of the `injectTooltip` HOC to use some publicly accessible methods.\n   *\n   * ```js\n   * <SomeTooltippedComponent\n   *   ref={tooltipHOC => {\n   *     tooltipHOC.getComposedComponent().focus();\n   *   }}\n   * />\n   * ```\n   *\n   * > NOTE: This can be `null`, so make sure to do a null check before using.\n   */\n  getComposedComponent = () => this._composed;\n\n  _setComposedComponent = (component) => {\n    this._composed = component;\n  };\n\n  render() {\n    const {\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      tooltipStyle,\n      tooltipClassName,\n      tooltipContainerStyle,\n      tooltipContainerClassName,\n      tooltipTransitionEnterTimeout,\n      tooltipTransitionLeaveTimeout,\n      ...props\n    } = this.props;\n\n    if (tooltipLabel) {\n      props.tooltip = (\n        <TooltipContainer\n          key=\"tooltipContainer\"\n          label={tooltipLabel}\n          delay={tooltipDelay}\n          position={tooltipPosition}\n          enterTimeout={tooltipTransitionEnterTimeout}\n          leaveTimeout={tooltipTransitionLeaveTimeout}\n          style={tooltipContainerStyle}\n          className={tooltipContainerClassName}\n          tooltipStyle={tooltipStyle}\n          tooltipClassName={tooltipClassName}\n        />\n      );\n    }\n\n    props.ref = this._setComposedComponent;\n\n    return <ComposedComponent {...props} />;\n  }\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { TAB } from '../constants/keyCodes';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getBtnStyles from './getBtnStyles';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport FontIcon from '../FontIcons/FontIcon';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport injectInk from '../Inks/injectInk';\nimport injectTooltip from '../Tooltips/injectTooltip';\n\n/**\n * The `Button` component can either be a `FlatButton`, `RaisedButton`, `IconButton`, or a\n * `FloatingButton`.\n *\n * A `FlatButton` is a button with no depth on the screen that is ideally used in `Dialog`s\n * or `CardActions`. The text can be optionally styled with the `primary` or `secondary` colors.\n *\n * A `RaisedButton` is a button with some depth to help actions have more prominent in flat\n * layouts or layouts with varying content. The background can be styled by the light/dark theme,\n * or optionally the `primary` or `secondary` color.\n *\n * An `IconButton` is a button that just displays a `FontIcon` as the child in a circle.\n * The `FontIcon` can be optionally styled with the `primary` or `secondary` color.\n *\n * A `FloatingButton` is a special case. Woop\n */\nclass Button extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the button.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the button.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A boolean if the icon should appear before or after the text for a `FlatButton` or\n     * a `RaisedButton`.\n     */\n    iconBefore: PropTypes.bool,\n\n    /**\n     * Any children used to display the button. When the button type is `icon` or `floating`,\n     * this can be used to render the `FontIcon` instead of the `iconChildren` prop.\n     *\n     * When the button type is `raised` or `flat`, this will be the label or any other elements\n     * you'd like to display in the button. This can work hand-in-hand with the `iconClassName`\n     * and `iconChildren` to make a button with an icon and text.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An icon className to use in an optional `FontIcon` in any version of the button. This will\n     * be used with the `children` prop. If the `floating` or `icon` props are set to true, this or\n     * the children are required.\n     *\n     * @see {@link #iconEl}\n     */\n    iconClassName: PropTypes.string,\n\n    /**\n     * Any children to use to display an icon in the button.\n     *\n     * @see {@link #iconEl}\n     */\n    iconChildren: PropTypes.node,\n\n    /**\n     * An optional icon to display. This prop is recommended over the `iconClassName` and `iconChildren`\n     * props since it allows more control for you. There is also better SVG support since it won't wrap\n     * the SVG with the `FontIcon` element.\n     */\n    iconEl: PropTypes.element,\n\n    /**\n     * The type for the button. This is required when the `component` prop is not\n     * the 'a' tag, a `function`, or when the `href` prop is defined.\n     */\n    type: (props, propName, component, ...args) => {\n      const c = props.component;\n      let validator = PropTypes.oneOf(['button', 'submit', 'reset']);\n      if (!props.href && c !== 'a' && typeof c !== 'function') {\n        validator = validator.isRequired;\n      }\n\n      return validator(props, propName, component, ...args);\n    },\n\n    /**\n     * Boolean if the button should be styled with the primary color.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the button should be styled with the secondary color.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the button is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional href for the button. This will style the `a` tag as a button.\n     */\n    href: PropTypes.string,\n\n    /**\n     * An optional component to render the button as. This allows you to get all the styles and functionality\n     * of the Button, but as a custom React component.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n\n    /**\n     * An optional function to call when the `click` event is triggered.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchstart` event is triggered.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchend` event is triggered.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mousedown` event is triggered.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseup` event is triggered.\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keyup` event is triggered.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keydown` event is triggered.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseenter` event is triggered.\n     */\n    onMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseleave` event is triggered.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * Boolean if the `FloatingButton` should be fixed to the page. This prop can\n     * only be enabled if the `floating` prop is true.\n     */\n    fixed: invalidIf(PropTypes.bool, 'flat', 'raised', 'icon'),\n\n    /**\n     * The position that the `FloatingButton` should be fixed to the page. It will\n     * either be fixed to the top right, top left, bottom right, or bottom left of\n     * the page. This prop is only used if the `floating` prop and `fixed` prop are\n     * `true`.\n     */\n    fixedPosition: PropTypes.oneOf(['tr', 'tl', 'br', 'bl']).isRequired,\n\n    /**\n     * Boolean if the `FloatingButton` should be `mini`. This prop can only be used\n     * when the `floating` prop is true.\n     */\n    mini: invalidIf(PropTypes.bool, 'flat', 'raised', 'icon'),\n\n    /**\n     * Boolean if the `Button` should be styled as a `FlatButton`.\n     */\n    flat: PropTypes.bool,\n\n    /**\n     * Boolean if the `Button` should be styled as a `RaisedButton`.\n     */\n    raised: PropTypes.bool,\n\n    /**\n     * Boolean if the `Button` should be styled as a `IconButton`.\n     *\n     * @see {@link #svg}\n     */\n    icon: PropTypes.bool,\n\n    /**\n     * Boolean if the `Button` should be styled as a `FloatingButton`.\n     *\n     * @see {@link #svg}\n     */\n    floating: PropTypes.bool,\n\n    /**\n     * Boolean if the theming of `primary` or `secondary` should be swapped. By default,\n     * only flat and icon buttons can gain the theme colors as text color while the raised\n     * and floating buttons can gain the theme colors as background color.\n     *\n     * If this prop is enabled, the flat and icon buttons will gain the theme background colors\n     * while the raised and icon will gain the theme text colors instead.\n     *\n     * @see {@link #primary}\n     * @see {@link #secondary}\n     */\n    swapTheming: PropTypes.bool,\n\n    /**\n     * An optional label to use for the tooltip. This is normally only used for\n     * `IconButton`s or `FloatingButton`s, but can be used on `FlatButton`s and\n     * `RaisedButton`s if you wish. Knock yourself out!\n     *\n     * If this prop is omitted, no tooltip will be included.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * An optional delay before the tooltip appears on mouse over.\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position for the tooltip.\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * An ink from `injectInk`.\n     * @access private\n     */\n    ink: PropTypes.node,\n\n    /**\n     * A tooltip from `injectTooltip`\n     * @access private\n     */\n    tooltip: PropTypes.node,\n\n    /**\n     * Custom validator for verifying that only one type is defined and that\n     * at one type is defined.\n     */\n    _typeValidator: (props, propName, component) => {\n      const { flat, raised, icon, floating } = props;\n\n      const defined = [raised, flat, icon, floating].filter(d => d);\n      const len = defined.length;\n      if (len === 0) {\n        return new Error(\n          `A material design button type must be specified in the \\`${component}\\` but none were ` +\n          'given. Valid types are `flat`, `raised`, `icon`, or `floating`.'\n        );\n      } else if (len !== 1) {\n        return new Error(\n          `Only one material design button type may be specified in the \\`${component}\\` but \\`${len}\\` ` +\n          'were given. Select only one of `flat`, `raised`, `icon`, or `floating`.'\n        );\n      }\n\n      return null;\n    },\n\n    /**\n     * Either a boolean that will enforce the 24x24 size of the font icon or a number of the size\n     * to enforce. This is useful when using other font icon libraries that do not have a consistent\n     * size.\n     */\n    forceIconSize: FontIcon.propTypes.forceSize,\n\n    /**\n     * Boolean if the `forceIconSize` prop should also force the `font-size` instead of only `width` and `height`.\n     */\n    forceIconFontSize: PropTypes.bool,\n\n    /**\n     * Boolean if the child is an SVGIcon or FontIcon when using the `icon` or `floating` props. This is only needed\n     * until the next release when the `label` migration can be removed.\n     */\n    svg: PropTypes.bool,\n\n    label: deprecated(PropTypes.node, 'Use the `children` prop instead'),\n    noIcon: deprecated(\n      PropTypes.bool,\n      'This has been removed during the alpha release. Children will always attempt to be rendered outside of an ' +\n      'icon by default for flat and raised buttons'\n    ),\n  };\n\n  static defaultProps = {\n    type: 'button',\n    iconBefore: true,\n    fixedPosition: 'br',\n  };\n\n  state = {\n    pressed: false,\n    snackbar: false,\n    snackbarType: null,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.disabled && !nextProps.disabled && this.state.hover) {\n      this.setState({ hover: false });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (!this.state.pressed && nextState.pressed) {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n        if (this._attemptedBlur) {\n          this._attemptedBlur = false;\n\n          this.setState({ pressed: false });\n        }\n      }, 450);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    if (this._snackbarTimeout) {\n      clearTimeout(this._snackbarTimeout);\n    }\n\n    window.removeEventListener('click', this._blur);\n  }\n\n  _blur = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this._timeout) {\n      this._attemptedBlur = true;\n    } else {\n      this.setState({ pressed: false });\n    }\n  };\n\n  _handleMouseUp = (e) => {\n    if (this.props.onMouseUp) {\n      this.props.onMouseUp(e);\n    }\n\n    this._blur();\n  };\n\n  _handleMouseDown = (e) => {\n    if (this.props.onMouseDown) {\n      this.props.onMouseDown(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    this._blur();\n    captureNextEvent('mouseover');\n  };\n\n  _handleKeyUp = (e) => {\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(e);\n    }\n\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.addEventListener('click', this._blur);\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.removeEventListener('click', this._blur);\n      this.setState({ pressed: false });\n    }\n  };\n\n  _handleMouseEnter = (e) => {\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ hover: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ hover: false });\n    }\n  };\n\n  _animateForSnackbar = (multiline, leaveTimeout) => {\n    if (typeof leaveTimeout === 'number') {\n      this._snackbarTimeout = setTimeout(() => {\n        this._snackbarTimeout = setTimeout(() => {\n          this._snackbarTimeout = null;\n\n          this.setState({ snackbar: false });\n        }, leaveTimeout + 150);\n\n        this.setState({ snackbarType: null });\n      }, TICK);\n    } else {\n      this._snackbarTimeout = setTimeout(() => {\n        this._snackbarTimeout = null;\n\n        this.setState({ snackbar: true, snackbarType: multiline ? 'multiline-' : '' });\n      }, TICK);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      iconClassName,\n      iconChildren,\n      iconBefore,\n      href,\n      primary,\n      secondary,\n      flat,\n      raised,\n      floating,\n      mini,\n      fixed,\n      fixedPosition,\n      disabled,\n      component,\n      ink,\n      tooltip,\n      icon,\n      forceIconSize,\n      forceIconFontSize,\n      type,\n      children,\n      swapTheming,\n      svg,\n      iconEl: propIconEl, // eslint-disable-line no-unused-vars\n      label, // deprecated\n      ...props\n    } = this.props;\n    let { iconEl } = this.props;\n\n    if (!href) {\n      props.type = type;\n    }\n\n    const { pressed, hover, snackbar, snackbarType } = this.state;\n    const iconBtnType = icon || floating;\n\n    let visibleChildren;\n    if (!iconEl && !svg && (iconClassName || iconChildren || iconBtnType || (label && children))) {\n      let resolvedIconChildren = iconChildren;\n      if (typeof iconChildren === 'undefined') {\n        resolvedIconChildren = iconBtnType || label ? children : null;\n      }\n\n      iconEl = (\n        <FontIcon iconClassName={iconClassName} forceSize={forceIconSize} forceFontSize={forceIconFontSize} inherit>\n          {resolvedIconChildren}\n        </FontIcon>\n      );\n    } else if (iconEl || svg) {\n      const el = React.Children.only(iconEl || children);\n      iconEl = React.cloneElement(el, { inherit: !el.props.error });\n    }\n\n    if (!iconBtnType) {\n      visibleChildren = label || children;\n      if (iconEl) {\n        visibleChildren = <IconSeparator label={visibleChildren} iconBefore={iconBefore}>{iconEl}</IconSeparator>;\n      }\n    } else {\n      visibleChildren = iconEl;\n    }\n\n    const Component = component || (href ? 'a' : 'button');\n    return (\n      <Component\n        {...props}\n        disabled={disabled}\n        onTouchStart={this._handleTouchStart}\n        onTouchEnd={this._handleTouchEnd}\n        onMouseDown={this._handleMouseDown}\n        onMouseUp={this._handleMouseUp}\n        onKeyDown={this._handleKeyDown}\n        onKeyUp={this._handleKeyUp}\n        onMouseEnter={this._handleMouseEnter}\n        onMouseLeave={this._handleMouseLeave}\n        href={href}\n        className={getBtnStyles({\n          flat,\n          raised,\n          icon,\n          floating,\n          disabled,\n          primary,\n          secondary,\n          hover,\n          swapTheming,\n          pressed,\n          mini,\n          fixed,\n          fixedPosition,\n        }, {\n          'md-btn--tooltip': tooltip,\n          'md-btn--snackbar-floating': snackbar,\n          [`md-btn--snackbar-floating-${snackbarType}adjust`]: snackbar && snackbarType !== null,\n        }, 'md-inline-block', className)}\n      >\n        {ink}\n        {tooltip}\n        {visibleChildren}\n      </Component>\n    );\n  }\n}\n\nexport default injectInk(injectTooltip(Button));\n","import PropTypes from 'prop-types';\n\nexport default {\n  onExpandClick: PropTypes.func,\n  expanded: PropTypes.bool,\n  icon: PropTypes.element,\n  tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n  tooltipLabel: PropTypes.node,\n  tooltipDelay: PropTypes.number,\n};\n","import React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport getField from '../utils/getField';\nimport contextTypes from './contextTypes';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FontIcon from '../FontIcons/FontIcon';\nimport Paper from '../Papers/Paper';\nimport Collapse from '../Helpers/Collapse';\n\nexport default class Card extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the card.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Any Card parts that should be rendered.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the card is expanded by default when there is an expander\n     * component.\n     */\n    defaultExpanded: PropTypes.bool,\n\n    /**\n     * Boolean if the card should raise on hover when on a desktop display.\n     */\n    raise: PropTypes.bool,\n\n    /**\n     * Boolean if the card is currently expanded. This will require the `onExpanderClick` function\n     * to toggle the state. The card will become controlled if this is not `undefined`.\n     */\n    expanded: controlled(PropTypes.bool, 'onExpanderClick', 'defaultExpanded'),\n\n    /**\n     * An optional function to call when the expander is clicked.\n     */\n    onExpanderClick: PropTypes.func,\n\n    /**\n     * The icon to use for the expander button. It is recommended to use this prop over\n     * the `expaderIconChildren` and `expanderIconClassName` since it provides more control.\n     */\n    expanderIcon: PropTypes.element,\n\n    /**\n     * The tooltip position for the expander icon.\n     */\n    expanderTooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * The optional tooltip to display for the expander icon.\n     */\n    expanderTooltipLabel: PropTypes.node,\n\n    /**\n     * An optional delay before the tooltip appears for the expander icon on hover.\n     */\n    expanderTooltipDelay: PropTypes.number,\n\n    /**\n     * Boolean if the card contains a table. It will update the styling accordingly.\n     * When using the `DataTable` component, do not wrap it in a `CardText` component.\n     *\n     * ```js\n     * <Card tableCard={true}>\n     *   <CardTitle title=\"Example />\n     *   <DataTable>\n     *     ...\n     *   </DataTable>\n     * </Card>\n     * ```\n     */\n    tableCard: PropTypes.bool,\n\n    /**\n     * An optional function to call when the mouseover event is triggered.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when the mouseleave event is triggered.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the touchstart event is triggered.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * Boolean if the card expansion should be animated.\n     */\n    animate: PropTypes.bool,\n\n    expanderIconClassName: deprecated(PropTypes.string, 'Use `expanderIcon` instead'),\n    expanderIconChildren: deprecated(PropTypes.node, 'Use `expanderIcon` instead'),\n    initiallyExpanded: deprecated(PropTypes.bool, 'Use `defaultExpanded` instead'),\n    isExpanded: deprecated(PropTypes.bool, 'Use `expanded` instead'),\n    iconChildren: deprecated(PropTypes.node, 'Use the `expanderIconChildren` prop instead'),\n    iconClassName: deprecated(PropTypes.string, 'Use the `expanderIconClassName` prop instead'),\n  };\n\n  static defaultProps = {\n    animate: true,\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\n    expanderTooltipPosition: 'left',\n  };\n\n  static childContextTypes = contextTypes;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      zDepth: 1,\n      expanded: typeof props.initiallyExpanded !== 'undefined' ? props.initiallyExpanded : !!props.defaultExpanded,\n    };\n  }\n\n  getChildContext() {\n    const {\n      expanderTooltipLabel,\n      expanderTooltipDelay,\n      expanderTooltipPosition,\n      expanderIcon,\n\n      // deprecated\n      iconClassName,\n      iconChildren,\n      expanderIconClassName,\n      expanderIconChildren,\n    } = this.props;\n\n    const expanded = typeof this.props.isExpanded !== 'undefined'\n      ? this.props.isExpanded\n      : getField(this.props, this.state, 'expanded');\n\n    return {\n      expanded,\n      onExpandClick: this._handleExpandClick,\n      icon: getDeprecatedIcon(\n        iconChildren || expanderIconChildren,\n        iconClassName || expanderIconClassName,\n        expanderIcon\n      ),\n      tooltipLabel: expanderTooltipLabel,\n      tooltipDelay: expanderTooltipDelay,\n      tooltipPosition: expanderTooltipPosition,\n    };\n  }\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (this.props.raise && !this._touched) {\n      this.setState({ zDepth: 4 });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n\n    this._touched = false;\n    if (this.props.raise && this.state.zDepth !== 1) {\n      this.setState({ zDepth: 1 });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    this._touched = true;\n  };\n\n  _handleExpandClick = (e) => {\n    const { onExpanderClick } = this.props;\n    const expanded = !getField(this.props, this.state, 'expanded');\n    if (onExpanderClick) {\n      onExpanderClick(expanded, e);\n    }\n\n    if (typeof this.props.expanded === 'undefined') {\n      this.setState({ expanded });\n    }\n  };\n\n  render() {\n    const { zDepth } = this.state;\n    const {\n      className,\n      raise,\n      tableCard,\n      children,\n      animate,\n      /* eslint-disable no-unused-vars */\n      expanded: propExpanded,\n      onExpanderClick,\n      defaultExpanded,\n      expanderIcon,\n      expanderIconChildren,\n      expanderIconClassName,\n      expanderTooltipLabel,\n      expanderTooltipDelay,\n      expanderTooltipPosition,\n\n      // deprecated\n      iconChildren,\n      iconClassName,\n      isExpanded,\n      initiallyExpanded,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const expanded = typeof this.props.isExpanded !== 'undefined'\n      ? this.props.isExpanded\n      : getField(this.props, this.state, 'expanded');\n    let expanderIndex = -1;\n    const parts = Children.map(Children.toArray(children), (child, i) => {\n      if (!child || !child.props) {\n        return child;\n      } else if (expanderIndex < 0 && (child.props.isExpander || child.props.expander)) {\n        expanderIndex = i;\n      }\n\n      if (!child.props.expandable) {\n        return child;\n      }\n\n      const collapsed = expanderIndex === -1 || expanderIndex === i || !expanded;\n      return <Collapse collapsed={collapsed} animate={animate}>{child}</Collapse>;\n    });\n\n    return (\n      <Paper\n        {...props}\n        zDepth={zDepth}\n        className={cn('md-card', {\n          'md-card--raise': raise,\n          'md-card--table': tableCard,\n        }, 'md-background--card', className)}\n        onMouseOver={this._handleMouseOver}\n        onMouseLeave={this._handleMouseLeave}\n        onTouchStart={this._handleTouchStart}\n      >\n        {parts}\n      </Paper>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport contextTypes from './contextTypes';\nimport Button from '../Buttons/Button';\nimport getCollapserStyles from '../utils/getCollapserStyles';\n\n/**\n * The CardExpander component is just a simple `IconButton` that\n * gets generated through the `Card`'s `contextTypes`. Props are not used\n * at all.\n *\n * Any component below a component that has this component inject into it\n * and has the prop `expandable={true}` will be toggleable when this is clicked.\n *\n * You can manually inject the `CardExpander` component yourself if you want to\n * use a component that is not a `CardActions` or a `CardTitle`.\n */\nexport default class CardExpander extends Component {\n  static contextTypes = contextTypes;\n\n  render() {\n    const {\n      expanded,\n      onExpandClick,\n      icon,\n      tooltipPosition,\n      tooltipLabel,\n      tooltipDelay,\n    } = this.context;\n\n    return (\n      <Button\n        icon\n        className={getCollapserStyles({ flipped: expanded }, 'md-collapser--card')}\n        onClick={onExpandClick}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n        iconEl={icon}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport CardExpander from './CardExpander';\n\n/**\n * The `CardActions` component is used for adding actions on your card.\n * The actions should be `FlatButton`s or `IconButton`s.\n *\n * This component can act as a `CardExpander`.\n */\nexport default class CardActions extends Component {\n  static propTypes = {\n    /**\n     * Boolean if this component should act as an expander and inject the\n     * `CardExpander`.\n     */\n    expander: PropTypes.bool,\n\n    /**\n     * An optional className to apply to the actions container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An actions to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the actions should be centered.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the actions should be stacked.\n     */\n    stacked: PropTypes.bool,\n\n    isExpander: deprecated(PropTypes.bool, 'Use `expander` instead'),\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      isExpander,\n      expander,\n      centered,\n      stacked,\n      ...props\n    } = this.props;\n    return (\n      <section\n        {...props}\n        className={cn('md-dialog-footer--card', {\n          'md-dialog-footer--inline': !stacked,\n          'md-dialog-footer--stacked': stacked,\n          'md-dialog-footer--card-centered': centered,\n        }, className)}\n      >\n        {children}\n        {isExpander || expander && <CardExpander />}\n      </section>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\nexport default class CardTitleBlock extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    title: PropTypes.node.isRequired,\n    subtitle: PropTypes.node,\n    avatar: PropTypes.bool,\n  };\n\n  render() {\n    const { id, subtitle, avatar } = this.props;\n    let { title } = this.props;\n    title = (\n      <h2\n        id={id}\n        className={cn('md-card-title--title', {\n          'md-card-title--large': !avatar,\n        }, themeColors({ text: true }))}\n        tabIndex={id ? -1 : null}\n      >\n        {title}\n      </h2>\n    );\n\n    if (!subtitle) {\n      return title;\n    }\n\n    return (\n      <div\n        className={cn('md-card-title--title-block', {\n          'md-card-title--one-line': avatar,\n        })}\n      >\n        {title}\n        <h3 className={`md-card-title--title ${themeColors({ hint: true })}`}>{subtitle}</h3>\n      </div>\n    );\n  }\n}\n","import React, { Component, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport CardTitleBlock from './CardTitleBlock';\nimport CardExpander from './CardExpander';\n\n/**\n * The `CardTitle` component is used to render a title in a Card along\n * with an optional subtitle or avatar.\n */\nexport default class CardTitle extends Component {\n  static propTypes = {\n    /**\n     * An optional id to add to the `title`.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The title to display.\n     */\n    title: PropTypes.node.isRequired,\n\n    /**\n     * An optional subtitle to display.\n     */\n    subtitle: PropTypes.node,\n\n    /**\n     * Any additional children to display in the title block\n     * after the avatar, title, and subtitle.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional avatar to display before the title and subtitle.\n     */\n    avatar: PropTypes.element,\n\n    /**\n     * Boolean if the `CardTitle` component should inject a button\n     * for expanding all children below it.\n     */\n    expander: PropTypes.bool,\n\n    isExpander: deprecated(PropTypes.bool, 'Use `expander` instead'),\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      title,\n      subtitle,\n      expander,\n      isExpander,\n      children,\n      avatar: propAvatar, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    let { avatar } = this.props;\n    if (avatar) {\n      const { className: avatarClassName } = Children.only(avatar).props;\n      avatar = cloneElement(avatar, {\n        className: cn('md-avatar--card', avatarClassName),\n      });\n    }\n    return (\n      <div\n        {...props}\n        style={style}\n        className={cn('md-card-title', {\n          'md-card-title--primary': !avatar,\n        }, className)}\n      >\n        {avatar}\n        <CardTitleBlock id={id} title={title} subtitle={subtitle} avatar={!!avatar} />\n        {children}\n        {isExpander || expander && <CardExpander />}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `CardText` component is a simple wrapper for text or any content in a `Card`.\n * It really just adds correct padding and font color.\n */\nexport default class CardText extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The children to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component to render as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * Boolean if this component should be expandable when there is a `CardExpander`\n     * above it in the `Card`.\n     */\n    expandable: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'section',\n  };\n\n  render() {\n    const {\n      component: Component,\n      className,\n      expandable, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    return <Component {...props} className={cn('md-card-text', className)} />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport FontIcon from '../FontIcons/FontIcon';\n\nexport default class Chip extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the chip's label.\n     */\n    labelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the chip's label.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * Boolean if the `.md-chip-icon--rotate` style should be applied to the remove icon.\n     * The `.md-chip-icon--rotate` just rotates the icon 45 degrees.\n     */\n    rotateIcon: PropTypes.bool,\n\n    /**\n     * Any children used to display the remove icon when `removable`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The label to display on the chip.\n     */\n    label: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the chip is removable.\n     */\n    removable: PropTypes.bool,\n\n    /**\n     * An optional avatar to display on the chip.\n     */\n    avatar: PropTypes.element,\n\n    /**\n     * An optional function to call when the `click` event is triggered.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseenter` event is triggered.\n     */\n    onMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseleave` event is triggered.\n     */\n    onMouseLeave: PropTypes.func,\n\n    iconClassName: deprecated(PropTypes.string, 'Use the `children` prop as a single FontIcon or SVGIcon instead'),\n    remove: deprecated(PropTypes.func, 'Use `removable` and `onClick` instead'),\n    removeIconChildren: deprecated(PropTypes.node, 'Use `children` instead'),\n    removeIconClassName: deprecated(PropTypes.string, 'Use `children` prop as a single FontIcon or SVGIcon instead'),\n  };\n\n  static defaultProps = {\n    rotateIcon: true,\n    children: <FontIcon>add_circle</FontIcon>,\n  };\n\n  state = { hover: false };\n\n  _handleMouseEnter = (e) => {\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(e);\n    }\n\n    this.setState({ hover: true });\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    this.setState({ hover: false });\n  };\n\n  render() {\n    const { hover } = this.state;\n    const {\n      label,\n      className,\n      labelStyle,\n      labelClassName,\n      avatar,\n      children,\n      removable,\n      remove,\n      onClick,\n      rotateIcon,\n\n      /* eslint-disable no-unused-vars */\n      // deprecated\n      iconClassName,\n      removeIconChildren,\n      removeIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let icon;\n    if (removable || remove) {\n      const chipIconCN = cn('md-chip-icon', {\n        'md-chip-icon--rotate': rotateIcon,\n        'md-chip-text--hover': hover,\n      });\n\n      if (React.isValidElement(children)) {\n        icon = React.Children.only(children);\n        icon = React.cloneElement(icon, { className: cn(chipIconCN, icon.props.className) });\n      } else {\n        icon = (\n          <FontIcon className={chipIconCN} iconClassName={iconClassName}>\n            {children}\n          </FontIcon>\n        );\n      }\n    }\n\n    return (\n      <button\n        type=\"button\"\n        {...props}\n        className={cn('md-chip', {\n          'md-chip--avatar': avatar,\n          'md-chip--remove': removable,\n          'md-chip--hover': hover,\n        }, className)}\n        onClick={remove || onClick}\n        onMouseEnter={this._handleMouseEnter}\n        onMouseLeave={this._handleMouseLeave}\n      >\n        {avatar}\n        <span\n          style={labelStyle}\n          className={cn('md-chip-text', {\n            'md-chip-text--hover': hover,\n          }, labelClassName)}\n        >\n          {label}\n        </span>\n        {icon}\n      </button>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nexport default {\n  checkedIcon: PropTypes.element,\n  uncheckedIcon: PropTypes.element,\n  indeterminateIcon: PropTypes.element,\n  indeterminate: PropTypes.bool,\n  plain: PropTypes.bool,\n  selectableRows: PropTypes.bool.isRequired,\n  allSelected: PropTypes.bool.isRequired,\n  selectedRows: PropTypes.arrayOf(PropTypes.bool).isRequired,\n  createCheckbox: PropTypes.func.isRequired,\n  removeCheckbox: PropTypes.func.isRequired,\n  toggleSelectedRow: PropTypes.func.isRequired,\n  baseId: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  baseName: PropTypes.string,\n  checkboxHeaderLabel: PropTypes.string.isRequired,\n  checkboxLabelTemplate: PropTypes.string.isRequired,\n  fixedHeader: PropTypes.bool.isRequired,\n  fixedFooter: PropTypes.bool.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport requiredForA11yIfNot from '../utils/PropTypes/requiredForA11yIfNot';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport contextTypes from './contextTypes';\n\n/**\n * The `DataTable` component is used to manage the state of all rows.\n * This can either be a __plain__ table or a __data__ table.\n *\n * A __data__ table will include checkboxes on each row while a __plain__ table\n * will not.\n */\nexport default class DataTable extends PureComponent {\n  static propTypes = {\n    /**\n     * A base id to use for every checkbox or `EditDialogColumn` in the data table. This is\n     * required for a11y if the data table is not plain. It is recommended to always provide\n     * this prop if you are using any of the advanced table components to auto-generate unique\n     * ids for each element.\n     *\n     * @see {@link DataTables/EditDialogColumn}\n     * @see {@link DataTables/SelectFieldColumn}\n     * @see {@link DataTables/DropdownMenuColumn}\n     * @see {@link DataTables/MenuButtonColumn}\n     * @see {@link DataTables/TablePagination}\n     */\n    baseId: requiredForA11yIfNot(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'plain'),\n\n    /**\n     * Optional style to apply to the table. If the table is `responsive`, this will be applied to the surrounding `div`\n     * instead of the table itself. Use the `tableStyle` in this case.\n     *\n     * @see {@link #tableStyle}\n     * @see {@link #responsive}\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the table. If the table is `responsive`, this will be applied to the\n     * surrounding `div` instead of the table itself. Use the `tableClassName` in this case.\n     *\n     * @see {@link #tableClassName}\n     * @see {@link #responsive}\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\n     * `responsive`, use the `style` prop.\n     *\n     * @see {@link #style}\n     * @see {@link #responsive}\n     */\n    tableStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `table` itself when the `responsive` prop is enabled. If the table is not\n     * `responsive`, use the `className` prop.\n     *\n     * @see {@link #className}\n     * @see {@link #responsive}\n     */\n    tableClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the fixed table wrapper that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperClassName}\n     * @see {@link #fixedScrollWrapperStyle}\n     * @see {@link #fixedScrollWrapperClassName}\n     */\n    fixedWrapperStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the fixed table wrapper that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperStyle}\n     * @see {@link #fixedScrollWrapperStyle}\n     * @see {@link #fixedScrollWrapperClassName}\n     */\n    fixedWrapperClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the fixed table wrapper's scroll container that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperStyle}\n     * @see {@link #fixedWrapperClassName}\n     * @see {@link #fixedScrollWrapperStyle}\n     */\n    fixedScrollWrapperStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the fixed table wrapper's scroll container that appears when there is a fixed\n     * header or a fixed footer.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     * @see {@link #fixedWrapperStyle}\n     * @see {@link #fixedWrapperClassName}\n     * @see {@link #fixedScrollWrapperStyle}\n     */\n    fixedScrollWrapperClassName: PropTypes.string,\n\n    /**\n     * The table contents to display. This *should* be a list of `TableHeader` and `TableBody`\n     * components.\n     */\n    children: PropTypes.node.isRequired,\n\n    /**\n     * An optional array of booleans denoting if a row is selected.\n     * This is an associative array so the index must match the row\n     * number in the `TableBody` component.\n     */\n    defaultSelectedRows: PropTypes.arrayOf(PropTypes.bool).isRequired,\n\n    /**\n     * Boolean if the table is responsive. This will wrap the table in a container\n     * that allows scrolling to the right if overflow exists.\n     */\n    responsive: PropTypes.bool.isRequired,\n\n    /**\n     * Boolean if this table should not include the checkboxes on each row.\n     * This really means that the entire table is unselectable and you wish\n     * to display as a normal table.\n     */\n    plain: PropTypes.bool,\n\n    /**\n     * The checked checkbox icon to display when a row is selected. This really defaults\n     * to the `checkedCheckboxIcon` prop from the `SelectionControl`.\n     *\n     * @see {@link SelectionControls/SelectionControl#checkedCheckboxIcon}\n     */\n    checkedIcon: PropTypes.element,\n\n    /**\n     * The unchecked checkbox icon to display when a row is selected. This really defaults\n     * to the `uncheckedCheckboxIcon` prop from the `SelectionControl`.\n     *\n     * @see {@link SelectionControls/SelectionControl#uncheckedCheckboxIcon}\n     */\n    uncheckedIcon: PropTypes.element,\n\n    /**\n     * An optional function to call when a non-plain data table has a row toggled. The callback\n     * will include:\n     * - the row id\n     * - boolean if the row is now checked\n     * - the total count of rows selected\n     * - the change event\n     *\n     * All rows will be toggled on or off when the row id is 0 and a `thead` exists in the table.\n     */\n    onRowToggle: invalidIf(PropTypes.func, 'plain'),\n\n    /**\n     * Boolean if the `DataTable` should inject checkboxes at the start of each row.\n     */\n    selectableRows: PropTypes.bool,\n\n    /**\n     * Boolean if the checkboxes in the table should also include an _indeterminate_ state.\n     * It will use the `indeterminateIconChildren` and `indeterminateIconClassName` when at least\n     * 1 row has been checked, but not all rows.\n     */\n    indeterminate: PropTypes.bool,\n\n    /**\n     * An optional icon to display when the selected state is indeterminate.\n     *\n     * @see {@link #indeterminate}\n     */\n    indeterminateIcon: PropTypes.element,\n\n    /**\n     * This is the aria-label to apply to the checkbox in the table's header. This\n     * is just used for accessibility since the checkboxes have no visible label.\n     */\n    checkboxHeaderLabel: PropTypes.string.isRequired,\n\n    /**\n     * This is the aria-label to apply to a checkbox in the table's body. This can either\n     * be a constant string that will replace `{{row}}` with the current row index, or\n     * a function that takes the row index and returns a string.\n     *\n     * ```js\n     * checkboxLabelTemplate={rowIndex => `Toggle row ${row}`}\n     * ```\n     */\n    checkboxLabelTemplate: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Boolean if the table should include a fixed header. This will allow the `TableHeader` component\n     * to stay fixed to the top of the table while the `TableBody` scrolls horizontally.\n     *\n     * @see {@link #fixedFooter}\n     * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\n     */\n    fixedHeader: PropTypes.bool,\n\n    /**\n     * Boolean if the table should include a fixed footer. This will allow the `TableFooter` component\n     * to stay fixed to the bottom of the table while the `TableBody` scrolls horizontally.\n     *\n     * @see {@link #fixedHeader}\n     * @see [react-md-make-fixed-table](/components/data-tables?tab=2#mixin-react-md-make-fixed-table)\n     */\n    fixedFooter: PropTypes.bool,\n\n    /**\n     * Either a boolean or a shape of booleans for if a divider should appear at the top or bottom of the table\n     * when there is a fixed header/footer. By default, this will automatically create dividers.\n     *\n     * @see {@link #fixedHeader}\n     * @see {@link #fixedFooter}\n     */\n    fixedDividers: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.shape({\n        header: PropTypes.bool,\n        footer: PropTypes.bool,\n      }),\n    ]),\n\n    /**\n     * An optional height to set for a table with a fixed header and/or a fixed footer. It is recommended to use\n     * the related `react-md-make-fixed-table` mixin instead.\n     *\n     * @see {@link #headerHeight}\n     * @see {@link #footerHeight}\n     */\n    fixedHeight: PropTypes.number,\n\n    /**\n     * An optional width to set for a table with a fixed header and/or a fixed footer. It is recommended to use\n     * the related `react-md-make-fixed-table` mixin instead.\n     */\n    fixedWidth: PropTypes.number,\n\n    /**\n     * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\n     * variable.\n     *\n     * @see [md-data-table-header-height](/components/data-tables?tab=2#variable-md-data-table-header-height)\n     * @see {@link #fixedHeight}\n     */\n    headerHeight: PropTypes.number.isRequired,\n\n    /**\n     * This is the height of the table's header columns. This should be equal to the `md-data-table-header-height`\n     * variable.\n     *\n     * @see [md-data-table-column-height](/components/data-tables?tab=2#variable-md-data-table-column-height)\n     * @see {@link #fixedHeight}\n     */\n    footerHeight: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `<table>` element should always span the entire width of its container.\n     */\n    fullWidth: PropTypes.bool,\n\n    indeterminateIconChildren: deprecated(PropTypes.node, 'Use the `indeterminateIcon` prop instead'),\n    indeterminateIconClassName: deprecated(PropTypes.string, 'Use the `indeterminateIcon` prop instead'),\n    checkedIconClassName: deprecated(PropTypes.string, 'Use the `checkedIcon` prop instead'),\n    checkedIconChildren: deprecated(PropTypes.node, 'Use the `checkedIcon` prop instead'),\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedIcon` prop instead'),\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedIcon` prop instead'),\n  };\n\n  static defaultProps = {\n    indeterminateIcon: <FontIcon>indeterminate_check_box</FontIcon>,\n    defaultSelectedRows: [],\n    responsive: true,\n    selectableRows: true,\n    checkboxHeaderLabel: 'Toggle All Rows',\n    checkboxLabelTemplate: 'Toggle row {{row}}',\n    fixedHeader: false,\n    fixedFooter: false,\n    fixedDividers: true,\n    headerHeight: 56,\n    footerHeight: 48,\n    fullWidth: true,\n  };\n\n  static childContextTypes = contextTypes;\n\n  constructor(props) {\n    super();\n\n    const rows = props.defaultSelectedRows;\n    this.state = {\n      header: false,\n      indeterminate: props.indeterminate ? false : undefined,\n      allSelected: this._allSelected(rows),\n      selectedRows: rows,\n    };\n\n    this._removed = 0;\n    this._initial = true;\n  }\n\n  getChildContext() {\n    const {\n      checkedIcon,\n      uncheckedIcon,\n      indeterminateIcon,\n      plain,\n      baseId,\n      selectableRows,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n      fixedHeader,\n      fixedFooter,\n\n      // deprecated\n      checkedIconChildren,\n      checkedIconClassName,\n      uncheckedIconChildren,\n      uncheckedIconClassName,\n      indeterminateIconChildren,\n      indeterminateIconClassName,\n    } = this.props;\n\n    return {\n      checkedIcon: getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon),\n      uncheckedIcon: getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon),\n      indeterminateIcon: getDeprecatedIcon(indeterminateIconClassName, indeterminateIconChildren, indeterminateIcon),\n      indeterminate: this.state.indeterminate,\n      plain,\n      allSelected: this.state.allSelected,\n      selectedRows: this.state.selectedRows,\n      toggleSelectedRow: this._toggleSelectedRow,\n      createCheckbox: this._createCheckbox,\n      removeCheckbox: this._removeCheckbox,\n      baseId,\n      baseName: `${baseId}-control`,\n      selectableRows,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n      fixedHeader,\n      fixedFooter,\n    };\n  }\n\n  componentDidUpdate() {\n    this._removed = 0;\n    this._initial = false;\n  }\n\n  _allSelected(rows) {\n    let all = rows.length !== 0;\n    rows.some(checked => {\n      if (!checked) {\n        all = false;\n      }\n\n      return !all;\n    });\n\n    return all;\n  }\n\n  _setTable = (table) => {\n    this._table = table;\n  };\n\n  _createCheckbox = (index) => {\n    this.setState((state, props) => {\n      const selectedRows = state.selectedRows.slice();\n      // Only use the default selected rows prop on first mount. If other changes occur after,\n      // default to false.\n      const selected = this._initial && props.defaultSelectedRows[index] || false;\n      selectedRows.splice(index, 0, selected);\n      return { selectedRows, allSelected: this._allSelected(selectedRows) };\n    });\n  };\n\n  _removeCheckbox = (index) => {\n    this.setState((state) => {\n      // When multiple checkboxes are removed in a render cycle, they are removed in list order.\n      // So to keep the index correct while removing, need to keep subtract the provided index by\n      // the current number of removed elements. This value gets reset to 0 after a finished cycle.\n      const selectedRows = state.selectedRows.slice();\n\n      // This is really ugly. React 16 doesn't need to track all this while React 15 does\n      if (React.version && React.version.match(/^16\\./)) {\n        selectedRows.splice(index, 1);\n      } else {\n        selectedRows.splice(index - this._removed, 1);\n        this._removed += 1;\n      }\n      return { selectedRows, allSelected: this._allSelected(selectedRows) };\n    });\n  };\n\n  _toggleSelectedRow = (row, header, e) => {\n    let selectedRows;\n    let allSelected = this.state.allSelected;\n    let selectedCount = 0;\n    const i = this._table && this._table.querySelector('.md-table-header') ? row - 1 : row;\n    const { checked } = e.target;\n    if (header) {\n      selectedRows = this.state.selectedRows.map(() => checked);\n      allSelected = checked;\n      selectedCount = !checked ? 0 : selectedRows.length;\n    } else {\n      selectedRows = this.state.selectedRows.slice();\n      selectedRows[i] = !selectedRows[i];\n      selectedCount = selectedRows.filter(b => b).length;\n      allSelected = selectedCount === selectedRows.length;\n    }\n\n    if (this.props.onRowToggle) {\n      this.props.onRowToggle(row, checked, selectedCount, e);\n    }\n\n    const indeterminate = this.props.indeterminate && !allSelected && selectedCount > 0;\n\n    this.setState({ selectedRows, allSelected, indeterminate });\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      tableStyle,\n      tableClassName,\n      fixedWrapperStyle,\n      fixedWrapperClassName,\n      fixedScrollWrapperStyle,\n      fixedScrollWrapperClassName,\n      children,\n      plain,\n      responsive,\n      fixedHeader,\n      fixedFooter,\n      fixedDividers,\n      fixedHeight,\n      fixedWidth,\n      headerHeight,\n      footerHeight,\n      fullWidth,\n      /* eslint-disable no-unused-vars */\n      indeterminate,\n      indeterminateIcon,\n      checkedIcon,\n      uncheckedIcon,\n      defaultSelectedRows,\n      baseId,\n      onRowToggle,\n      selectableRows,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n\n      // deprecated\n      checkedIconChildren,\n      checkedIconClassName,\n      uncheckedIconChildren,\n      uncheckedIconClassName,\n      indeterminateIconChildren,\n      indeterminateIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const table = (\n      <table\n        {...props}\n        ref={this._setTable}\n        style={responsive ? tableStyle : style}\n        className={cn('md-data-table', {\n          'md-data-table--plain': plain,\n          'md-data-table--full-width': fullWidth,\n          [className]: !responsive && className,\n          [tableClassName]: responsive && tableClassName,\n        })}\n      >\n        {children}\n      </table>\n    );\n\n    if (!responsive) {\n      return table;\n    }\n\n    let content = table;\n    if (fixedHeader || fixedFooter) {\n      let height = fixedHeight;\n      if (fixedHeight) {\n        if (fixedHeader) {\n          height -= headerHeight;\n        }\n\n        if (fixedFooter) {\n          height -= footerHeight;\n        }\n      }\n\n      let borderTop = fixedHeader;\n      let borderBot = fixedFooter;\n      if (typeof fixedDividers === 'boolean') {\n        borderTop = borderTop && fixedDividers;\n        borderBot = borderBot && fixedDividers;\n      } else {\n        borderTop = borderTop && (typeof fixedDividers.header === 'undefined' || fixedDividers.header);\n        borderBot = borderBot && (typeof fixedDividers.footer === 'undefined' || fixedDividers.footer);\n      }\n\n      content = (\n        <div\n          style={fixedWrapperStyle}\n          className={cn('md-data-table__fixed-wrapper', {\n            'md-data-table__fixed-wrapper--header': fixedHeader,\n            'md-data-table__fixed-wrapper--footer': fixedFooter,\n          }, fixedWrapperClassName)}\n        >\n          <div\n            style={{ height, ...fixedScrollWrapperStyle }}\n            className={cn('md-data-table__scroll-wrapper', {\n              'md-divider-border': fixedDividers,\n              'md-divider-border--top': borderTop,\n              'md-divider-border--bottom': borderBot,\n            }, fixedScrollWrapperClassName)}\n          >\n            {table}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{ width: fixedWidth, ...style }}\n        className={cn('md-data-table--responsive', {\n          'md-data-table--fixed': fixedHeader || fixedFooter,\n        }, className)}\n      >\n        {content}\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport contextTypes from './contextTypes';\n\nexport default { ...contextTypes, header: PropTypes.bool };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport contextTypes from './contextTypes';\nimport headerContextTypes from './headerContextTypes';\n\n/**\n * A `thead` component to use in the `DataTable` component. This\n * will automatically update the header row to check if it is selected\n * and inject a function to toggle all rows selected if the row is\n * uncontrolled. It will also automatically attempt to set the `TableColumn`\n * components to be the header type.\n */\nexport default class TableHeader extends Component {\n  static contextTypes = contextTypes;\n  static childContextTypes = headerContextTypes;\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the table header\n     */\n    className: PropTypes.string,\n\n    /**\n     * This should be a single `TableRow` component. The `custom` validation will\n     * warn you if there are more than one children given or none at all.\n     */\n    children: (props, propName, component) => {\n      try {\n        React.Children.only(props.children);\n        return null;\n      } catch (e) {\n        const amt = props.children ? props.children.length : 0;\n        return new Error(\n          `There must only be one child in a '${component}', but ${amt} were given.`\n        );\n      }\n    },\n  };\n\n  getChildContext() {\n    return {\n      ...this.context,\n      header: true,\n    };\n  }\n\n  render() {\n    const { className, children, ...props } = this.props;\n    const { allSelected } = this.context;\n    const header = React.Children.only(children);\n    const selected = typeof header.props.selected === 'undefined'\n      ? allSelected\n      : header.props.selected;\n\n    const row = React.cloneElement(header, { selected });\n\n    return (\n      <thead {...props} className={cn('md-table-header', className)}>\n        {row}\n      </thead>\n    );\n  }\n}\n","import React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport contextTypes from './contextTypes';\n\n/**\n * The `TableBody` component is used for managing the state of all\n * `TableRow` inside of it.\n */\nexport default class TableBody extends Component {\n  static propTypes = {\n    /**\n     * An optional style to apply to the tbody.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the tbody.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A list or a single item of `TableRow` components to render.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]),\n  };\n\n  static contextTypes = contextTypes;\n\n  render() {\n    const { children, className, ...props } = this.props;\n    const { selectedRows } = this.context;\n\n    const rows = children ? Children.map(Children.toArray(children), (row, i) => {\n      const uncontrolled = typeof row.props.selected === 'undefined';\n      return React.cloneElement(row, {\n        selected: uncontrolled ? selectedRows[i] : row.props.selected,\n      });\n    }) : null;\n\n    return (\n      <tbody {...props} className={cn('md-table-body', className)}>\n        {rows}\n      </tbody>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport headerContextTypes from './headerContextTypes';\nimport omit from '../utils/omit';\n\nconst rowContextTypes = omit({\n  ...headerContextTypes,\n  rowId: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n}, ['baseId']);\n\nexport default rowContextTypes;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\n\nconst DISABLED_INTERACTIONS = ['mouse'];\n\n/**\n * This is the `Thumb` for the switch. The `ink` in the Thumb is only active on touch and keyboard\n * interactions, so the `AccessibleFakeInkButton` does not work for this case.\n *\n * This component really just is used for custom inkage.\n */\nexport default class SwitchThumb extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'touch', 'mouse'])),\n    'aria-label': oneRequiredForA11y(PropTypes.string, 'aria-labelledby'),\n    'aria-labelledby': PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  };\n\n  render() {\n    const { disabled, checked, className, disabledInteractions, ...props } = this.props;\n    return (\n      <AccessibleFakeInkedButton\n        {...props}\n        role=\"checkbox\"\n        aria-checked={checked}\n        disabled={disabled}\n        disabledInteractions={disabledInteractions || DISABLED_INTERACTIONS}\n        inkContainerClassName=\"md-ink-container--2x\"\n        className={cn('md-switch-thumb', {\n          'md-switch-thumb--disabled': disabled,\n          'md-switch-thumb--on': checked,\n          'md-switch-thumb--off': !checked,\n        }, className)}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport SwitchThumb from './SwitchThumb';\n\nexport default class SwitchTrack extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    inkDisabled: PropTypes.bool,\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'touch', 'mouse'])),\n    'aria-label': oneRequiredForA11y(PropTypes.string, 'aria-labelledby'),\n    'aria-labelledby': PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  };\n\n  render() {\n    const {\n      disabled,\n      checked,\n      className,\n      inkDisabled,\n      disabledInteractions,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      ...props\n    } = this.props;\n    return (\n      <div\n        {...props}\n        className={cn('md-switch-track', {\n          'md-pointer--hover': !disabled,\n          'md-switch-track--disabled': disabled,\n          'md-switch-track--on': checked,\n          'md-switch-track--off': !checked,\n        }, className)}\n      >\n        <SwitchThumb\n          disabled={disabled}\n          checked={checked}\n          onClick={props.onClick}\n          inkDisabled={inkDisabled}\n          disabledInteractions={disabledInteractions}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { SPACE } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport themeColors from '../utils/themeColors';\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport capitalizeFirst from '../utils/StringUtils/capitalizeFirst';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport FontIcon from '../FontIcons/FontIcon';\nimport SwitchTrack from './SwitchTrack';\n\n/**\n * Prevents a second warning from appearing when using the deprecated or a11y required\n * props by using the `__superSecretProp`.... So secret!\n */\nfunction preventDouble(validator) {\n  return function validate(props, propName, ...others) {\n    let err = validator(props, propName, ...others);\n    if (err && props.__superSecreteProp) {\n      err = null;\n    }\n\n    return err;\n  };\n}\n\n/**\n * The `SelectionControl` component is used to render any of the `Radio`, `Checkbox`, or `Switch`\n * selection control type. This component might eventually replace all three since they use this\n * anyways. I am not sure yet though.\n */\nexport default class SelectionControl extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to use with the selection control. This is used for accessibility and so that the label\n     * triggers the selection control toggle.\n     */\n    id: preventDouble(isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]))),\n\n    /**\n     * An optional label to apply to the checkbox when there is no visible label.\n     */\n    'aria-label': oneRequiredForA11y(PropTypes.string, 'label', 'aria-labelledby'),\n\n    /**\n     * An optional id that points to a label for the selection control when there is no visible label.\n     */\n    'aria-labelledby': PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id of an element that describes this selection control.\n     * In the case of a fieldset, this should be the id of the fieldset legend which ensures\n     * screen readers provides additional context about the selection control\n     */\n    'aria-describedby': PropTypes.string,\n\n    /**\n     * An optional style to apply to the selection control's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the selection control's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The type of selection control to render.\n     */\n    type: PropTypes.oneOf(['checkbox', 'radio', 'switch']).isRequired,\n\n    /**\n     * A label to display with the selection control. This is required for accessibility and triggering\n     * the toggle.\n     */\n    label: PropTypes.node,\n\n    /**\n     * Boolean if the label should appear before the checkbox/radio icon or switch.\n     */\n    labelBefore: PropTypes.bool,\n\n    /**\n     * A name to use for the `SelectionControl`. This is required for accessibility. If the `type`\n     * is a `checkbox` and it is part of a group, it is recommended to make this a string ending\n     * in `[]` so that the value can be found from `document.querySelector('input[name=\"someName[]\"]').value`.\n     */\n    name: preventDouble(isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]))),\n\n    /**\n     * Boolean if the `Radio` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * A function to call when the `SelectionControl` triggers the `change` event. The `onChange`\n     * callback will either include:\n     * - the currently changed radio's value\n     * - the next checked state for the `Switch` or `Checkbox`.\n     *\n     * as the first parameter followed by the change event.\n     *\n     * ```js\n     * // Radio\n     * onChange(changeEvent.target.value, changeEvent);\n     *\n     * // Checkbox or Switch\n     * onChange(changeEvent.target.checked, changeEvent);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keydown` event is triggered.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * The value for the `SelectionControl`. It is not required for `Checkbox` and `Switch`,\n     * but it is recommended.\n     */\n    value: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * A boolean if the `SelectionControl` is currently checked. This _really_ makes the `onChange`\n     * prop required, but since there are cases you might want to have the `onChange` listener on a\n     * `fieldset` or something above the component, it is never set to `required`. It will however\n     * prevent updates if there is no change listener.\n     */\n    checked: PropTypes.bool,\n\n    /**\n     * Boolean if the `Checkbox` or `Switch` are checked by default. This prop is invalid for a\n     * `Radio`.\n     */\n    defaultChecked: PropTypes.bool,\n\n    /**\n     * Boolean if the `SelectionControl` should be displayed inline instead of a block.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * The icon to use for a checked `checkbox` selection control.\n     */\n    checkedCheckboxIcon: PropTypes.element,\n\n    /**\n     * The icon to use for an unchecked `checkbox` selection control.\n     */\n    uncheckedCheckboxIcon: PropTypes.element,\n\n    /**\n     * The icon to use for a checked `radio` selection control.\n     */\n    checkedRadioIcon: PropTypes.element,\n\n    /**\n     * The icon to use for an unchecked `radio` selection control.\n     */\n    uncheckedRadioIcon: PropTypes.element,\n\n    /**\n     * An optional tooltip to render with the control. This is only used if you inject the\n     * tooltip manually yourself.\n     *\n     * `const TooltippedSelectionControl = injectTooltip(SelectionControl);`\n     */\n    tooltip: PropTypes.node,\n\n    /**\n     * Boolean if the ink should be disabled for radios or checkboxes.\n     *\n     * @see {@link Inks#inkDisabled}\n     */\n    inkDisabled: PropTypes.bool,\n\n    /**\n     * An optional list of ink interactions that should be disabled.\n     *\n     * @see {@link Inks#disabledInteractions}\n     */\n    disabledInteractions: PropTypes.arrayOf(PropTypes.oneOf(['keyboard', 'touch', 'mouse'])),\n\n    /**\n     * An optional tab index to apply to the selection control.\n     */\n    tabIndex: PropTypes.number,\n\n    checkedIcon: preventDouble(deprecated(\n      PropTypes.node,\n      'Use the `checkedCheckboxIconChildren` and `checkedCheckboxIconClassName`  or the ' +\n      '`checkedRadioIconChildren` and `checkedRadioIconClassName` props instead'\n    )),\n    uncheckedIcon: preventDouble(deprecated(\n      PropTypes.node,\n      'Use the `uncheckedCheckboxIconChildren` and `uncheckedCheckboxIconClassName`  or the ' +\n      '`uncheckedRadioIconChildren` and `uncheckedRadioIconClassName` props instead'\n    )),\n    checkedCheckboxIconChildren: deprecated(PropTypes.node, 'Use the `checkedCheckboxIcon` prop instead'),\n    checkedCheckboxIconClassName: deprecated(PropTypes.string, 'Use the `checkedCheckboxIcon` prop instead'),\n    uncheckedCheckboxIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedCheckboxIcon` prop instead'),\n    uncheckedCheckboxIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedCheckboxIcon` prop instead'),\n    checkedRadioIconChildren: deprecated(PropTypes.node, 'Use the `checkedRadioIcon` prop instead'),\n    checkedRadioIconClassName: deprecated(PropTypes.string, 'Use the `checkedRadioIcon` prop instead'),\n    uncheckedRadioIconChildren: deprecated(PropTypes.node, 'Use the `uncheckedRadioIcon` prop instead'),\n    uncheckedRadioIconClassName: deprecated(PropTypes.string, 'Use the `uncheckedRadioIcon` prop instead'),\n\n    /* maybe removed once upgrade again? */\n    __superSecreteProp: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    checkedCheckboxIcon: <FontIcon>check_box</FontIcon>,\n    uncheckedCheckboxIcon: <FontIcon>check_box_outline_blank</FontIcon>,\n    checkedRadioIcon: <FontIcon>radio_button_checked</FontIcon>,\n    uncheckedRadioIcon: <FontIcon>radio_button_unchecked</FontIcon>,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    if (typeof props.checked === 'undefined') {\n      this.state.checked = !!props.defaultChecked;\n    }\n  }\n\n  /**\n   * Gets the current checked value from the selection control. This is used when you have\n   * an uncontrolled selection control and simply need the checked state from a ref callback.\n   *\n   * @return {boolean} the checked state for the selection control.\\\n   */\n  get checked() {\n    return getField(this.props, this.state, 'checked');\n  }\n\n  _setInput = (input) => {\n    this._input = input;\n  };\n\n  _setControl = (control) => {\n    this._control = control;\n  };\n\n  _setContainer = (container) => {\n    this._container = container;\n  };\n\n  _getIcon = () => {\n    const { checkedIcon, uncheckedIcon, type } = this.props;\n    const checked = getField(this.props, this.state, 'checked');\n    if (checkedIcon || uncheckedIcon) {\n      return checked ? checkedIcon : uncheckedIcon;\n    }\n\n    const prefix = `${checked ? '' : 'un'}checked${capitalizeFirst(type)}Icon`;\n    const iconClassName = this.props[`${prefix}ClassName`];\n    const children = this.props[`${prefix}Children`];\n\n    if (iconClassName || children) {\n      return <FontIcon iconClassName={iconClassName} inherit>{children}</FontIcon>;\n    }\n\n    const icon = this.props[prefix];\n    return icon ? React.cloneElement(icon, { inherit: true }) : null;\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n    if (key === SPACE) {\n      this._input.click();\n    }\n  }\n\n  _handleChange = (e) => {\n    const { type, onChange } = this.props;\n    const checked = !getField(this.props, this.state, 'checked');\n    if (onChange) {\n      onChange(type === 'radio' ? e.target.value : checked, e);\n    }\n\n    if (typeof this.props.checked === 'undefined') {\n      this.setState({ checked });\n    }\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      inline,\n      type,\n      name,\n      value,\n      disabled,\n      labelBefore,\n      tabIndex,\n      inkDisabled,\n      disabledInteractions,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      /* eslint-disable no-unused-vars */\n      label: propLabel,\n      checked: propChildren,\n      onChange,\n      tooltip,\n      checkedCheckboxIcon,\n      uncheckedCheckboxIcon,\n      checkedRadioIcon,\n      uncheckedRadioIcon,\n      __superSecreteProp,\n\n      // deprecated\n      checkedIcon,\n      uncheckedIcon,\n      checkedRadioIconChildren,\n      checkedRadioIconClassName,\n      uncheckedRadioIconChildren,\n      uncheckedRadioIconClassName,\n      checkedCheckboxIconChildren,\n      checkedCheckboxIconClassName,\n      uncheckedCheckboxIconChildren,\n      uncheckedCheckboxIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const checked = getField(this.props, this.state, 'checked');\n    const isSwitch = type === 'switch';\n    const labelId = this.props.label && `${id}-label`;\n    const label = this.props.label && <span id={labelId}>{this.props.label}</span>;\n\n    let control;\n    if (isSwitch) {\n      control = (\n        <SwitchTrack\n          disabled={disabled}\n          checked={checked}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy || labelId}\n        />\n      );\n    } else {\n      control = (\n        <AccessibleFakeInkedButton\n          inkDisabled={inkDisabled}\n          disabledInteractions={disabledInteractions}\n          role={type}\n          className={cn('md-selection-control-toggle md-btn md-btn--icon', themeColors({\n            disabled,\n            hint: !checked,\n            secondary: checked,\n          }))}\n          aria-checked={checked}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy || labelId}\n          aria-describedby={ariaDescribedBy}\n          tabIndex={tabIndex}\n          disabled={disabled}\n        >\n          {tooltip}\n          {this._getIcon()}\n        </AccessibleFakeInkedButton>\n      );\n    }\n\n    return (\n      <div\n        {...props}\n        style={style}\n        className={cn('md-selection-control-container', {\n          'md-selection-control-container--inline': inline,\n          'md-switch-container': isSwitch,\n        }, className)}\n        onKeyDown={this._handleKeyDown}\n      >\n        <input\n          ref={this._setInput}\n          id={id}\n          type={isSwitch ? 'checkbox' : type}\n          checked={checked}\n          onChange={this._handleChange}\n          disabled={disabled}\n          className=\"md-selection-control-input\"\n          name={name}\n          value={value}\n          aria-hidden\n        />\n        <label\n          htmlFor={id}\n          className={cn('md-selection-control-label', {\n            'md-pointer--hover': !disabled,\n          }, themeColors({ disabled, text: !disabled }))}\n        >\n          {labelBefore && label}\n          {control}\n          {!labelBefore && label}\n        </label>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport SelectionControl from '../SelectionControls/SelectionControl';\n\nimport findTable from './findTable';\n\nexport default class TableCheckbox extends Component {\n  static propTypes = {\n    index: PropTypes.number,\n    checked: PropTypes.bool,\n  };\n\n  static contextTypes = {\n    rowId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    baseName: PropTypes.string.isRequired,\n    indeterminate: PropTypes.bool,\n    checkedIcon: PropTypes.element,\n    uncheckedIcon: PropTypes.element,\n    indeterminateIcon: PropTypes.element,\n    checkboxHeaderLabel: PropTypes.string.isRequired,\n    checkboxLabelTemplate: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n    createCheckbox: PropTypes.func.isRequired,\n    removeCheckbox: PropTypes.func.isRequired,\n    header: PropTypes.bool,\n    footer: PropTypes.bool,\n    fixedHeader: PropTypes.bool.isRequired,\n    fixedFooter: PropTypes.bool.isRequired,\n  };\n\n  _td = null;\n  _header = false;\n\n  _handleMount = (td) => {\n    if (td) {\n      const header = findTable(td).querySelector('thead');\n      const index = td.parentNode.rowIndex - (header ? 1 : 0);\n\n      if (td.parentNode.parentNode.tagName === 'TBODY') {\n        this.context.createCheckbox(index);\n      }\n      this._td = td;\n      this._header = header;\n    } else if (this._td) {\n      const index = this._td.parentNode.rowIndex;\n      this.context.removeCheckbox(index - (this._header ? 1 : 0));\n      this._td = null;\n      this._header = false;\n    }\n  };\n\n  render() {\n    const { checked, index, ...props } = this.props;\n    const {\n      checkedIcon,\n      uncheckedIcon,\n      indeterminateIcon,\n      indeterminate,\n      header,\n      footer,\n      rowId,\n      baseName,\n      checkboxHeaderLabel,\n      checkboxLabelTemplate,\n    } = this.context;\n\n    const Cell = header ? 'th' : 'td';\n    let label;\n    if (header) {\n      label = checkboxHeaderLabel;\n    } else if (typeof checkboxLabelTemplate === 'function') {\n      label = checkboxLabelTemplate(index);\n    } else {\n      label = checkboxLabelTemplate.replace(/{{row}}/g, index);\n    }\n\n    let content = (\n      <SelectionControl\n        {...props}\n        id={rowId}\n        name={`${baseName}-checkbox`}\n        type=\"checkbox\"\n        checked={checked}\n        checkedCheckboxIcon={checkedIcon}\n        uncheckedCheckboxIcon={header && indeterminate ? indeterminateIcon : uncheckedIcon}\n        aria-label={label}\n      />\n    );\n    const fixedHeader = header && this.context.fixedHeader;\n    const fixedFooter = footer && this.context.fixedFooter;\n\n    if (fixedHeader) {\n      content = (\n        <div\n          className={cn('md-table-column__fixed', {\n            'md-table-column__fixed--header': fixedHeader,\n            'md-table-column__fixed--footer': fixedFooter,\n          })}\n        >\n          {React.cloneElement(content, {\n            className: cn({\n              'md-table-checkbox--header': header,\n              'md-table-checkbox--footer': footer,\n            }),\n          })}\n        </div>\n      );\n    }\n\n\n    return (\n      <Cell\n        className={cn('md-table-checkbox', {\n          'md-table-column--fixed': fixedHeader,\n        })}\n        scope={header ? 'col' : undefined}\n        ref={this._handleMount}\n      >\n        {content}\n      </Cell>\n    );\n  }\n}\n","import React, { Component, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport cn from 'classnames';\n\nimport getField from '../utils/getField';\nimport headerContextTypes from './headerContextTypes';\nimport rowContextTypes from './rowContextTypes';\nimport TableCheckbox from './TableCheckbox';\n\n/**\n * A component for displaying a row in a `DataTable`. This will\n * automatically add a `Checkbox` component to the row if it is not\n * a `plain` table.\n */\nexport default class TableRow extends Component {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the row.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A single or list of `TableColumn` to display in the table.\n     *\n     * > The specs \"require\" at least 3 columns for a non-plain data table, but that isn't\n     * strictly enforced here.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n      PropTypes.node,\n    ]).isRequired,\n\n    /**\n     * An optional onClick function to call when a row is clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * A function to call when the checkbox is clicked. This\n     * function will will be called with `(rowIndex, checked, event)`.\n     * The `TableBody` and `TableHeader` components will automatically\n     * merge in a function to toggle the checkbox.\n     */\n    onCheckboxClick: PropTypes.func,\n\n    /**\n     * An optional function to call onMouseOver.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call onMouseLeave.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * Boolean if the row is currently selected. If this value will be\n     * injected by the `TableHeader` or `TableBody` component.\n     */\n    selected: PropTypes.bool,\n\n    /**\n     * Boolean if the current row is selectable. This value will take precedence over anything inherited\n     * by the `DataTable`.\n     */\n    selectable: PropTypes.bool,\n\n    autoAdjust: deprecated(PropTypes.bool, 'Manually specify `grow` on one of the columns instead'),\n  };\n\n  static contextTypes = headerContextTypes;\n  static childContextTypes = rowContextTypes;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = { hover: false };\n  }\n\n  getChildContext() {\n    const { baseId, ...context } = this.context;\n    const id = `${baseId}-${this._row ? this._row.rowIndex : null}`;\n    return {\n      ...context,\n      rowId: context.header ? `${baseId}-toggle-all` : id,\n    };\n  }\n\n  /**\n   * Need to ignore adding the hover state if the mouse is over a menu/menu item\n   * or the edit dialog is open.\n   *\n   * @param {Function} classList - the classList to use for checking cn\n   * @return {Boolean} true if the hover state should be ignored for this classList\n   */\n  _ignoreHoverState(classList) {\n    return classList.contains('md-list--menu') || classList.contains('md-edit-dialog');\n  }\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (this.context.header) {\n      return;\n    }\n\n    let target = e.target;\n    while (target && target.parentNode) {\n      if (target.classList && this._ignoreHoverState(target.classList)) {\n        this.setState({ hover: false });\n        return;\n      }\n\n      target = target.parentNode;\n    }\n\n    this.setState({ hover: true });\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (this.context.header) {\n      return;\n    }\n\n    this.setState({ hover: false });\n  };\n\n  _handleCheckboxClick = (checked, e) => {\n    const { rowIndex } = this._row;\n    if (this.props.onCheckboxClick) {\n      this.props.onCheckboxClick(rowIndex, checked, e);\n    }\n\n    this.context.toggleSelectedRow(rowIndex, this.context.header, e);\n  };\n\n  _setRow = (row) => {\n    this._row = row;\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      selected,\n      selectable,\n      /* eslint-disable no-unused-vars */\n      onCheckboxClick,\n      // deprecated\n      autoAdjust,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { hover } = this.state;\n\n    let checkbox;\n    if (typeof selectable !== 'undefined' ? selectable : (!this.context.plain && this.context.selectableRows)) {\n      checkbox = (\n        <TableCheckbox\n          key=\"checkbox\"\n          checked={selected}\n          onChange={this._handleCheckboxClick}\n          index={this._row ? this._row.rowIndex : null}\n        />\n      );\n    }\n\n    const length = Children.count(children) - 1;\n    const columns = Children.map(Children.toArray(children), (col, i) => {\n      let adjusted = col.props.adjusted;\n      if (typeof adjusted === 'undefined') {\n        adjusted = i === length ? false : undefined;\n      }\n\n      return cloneElement(col, {\n        cellIndex: i + (checkbox ? 1 : 0),\n        header: getField(col.props, this.context, 'header'),\n        adjusted,\n      });\n    });\n\n    return (\n      <tr\n        {...props}\n        ref={this._setRow}\n        className={cn('md-table-row', className, {\n          'md-table-row--hover': hover,\n          'md-table-row--active': !this.context.header && selected,\n        })}\n        onMouseOver={this._handleMouseOver}\n        onMouseLeave={this._handleMouseLeave}\n      >\n        {checkbox}\n        {columns}\n      </tr>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport themeColors from '../utils/themeColors';\nimport getCollapserStyles from '../utils/getCollapserStyles';\nimport getField from '../utils/getField';\nimport injectTooltip from '../Tooltips/injectTooltip';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport IconSeparator from '../Helpers/IconSeparator';\n\nconst CELL_SCOPE = {\n  header: {\n    scope: 'col',\n  },\n  noop: {},\n};\n\n/**\n * A column in a table. This is either the `th` or `td` component.\n */\nclass TableColumn extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * The optional className for the table column\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the surrounding div when the DataTable has been\n     * set to include a fixed header or a fixed footer.\n     */\n    fixedStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the surrounding div when the DataTable has been\n     * set to include a fixed header or a fixed footer.\n     */\n    fixedClassName: PropTypes.string,\n\n    /**\n     * The children to display in the column.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the column is currently sorted. If this prop is not `undefined`,\n     * it will add the sort icon unto this column. You will also need to use the\n     * `onClick` function to toggle the `sorted` prop as well as handling the sorting\n     * of data.\n     *\n     * This value should really only be set in the `TableHeader` component.\n     */\n    sorted: PropTypes.bool,\n\n    /**\n     * The icon to show when a column is sortable.\n     */\n    sortIcon: PropTypes.element,\n\n    /**\n     * Boolean if the sortIcon should appear before the text in the column.\n     */\n    sortIconBefore: PropTypes.bool,\n\n    /**\n     * A boolean if the column has numeric data. It will right-align the data.\n     */\n    numeric: PropTypes.bool,\n\n    /**\n     * Boolean if the table column should gain the `.md-data-table--adjusted` class name. By default,\n     * every column will gain this class name unless it is an `EditDialogColumn`, a `SelectFieldColumn`,\n     * or the `grow` prop is enabled.\n     */\n    adjusted: PropTypes.bool,\n\n    /**\n     * Boolean if the column should expand to fill any remaining width in the container. There should\n     * really only be one column with the `grow` prop enabled. In addition, it should really only be\n     * applied to one of the columns in the TableHeader.\n     */\n    grow: PropTypes.bool,\n\n    /**\n     * Boolean if this column is the `th` for a column of `SelectFieldColumn`. This will apply\n     * additional styling to the column to position with the select field.\n     */\n    selectColumnHeader: PropTypes.bool,\n\n    /**\n     * Boolean if this is a `th` component. This value **should** be set\n     * automatically for you if it is in the `TableHeader` component.\n     */\n    header: PropTypes.bool.isRequired,\n\n    /**\n     * The optional tooltip to render on hover.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * The injected tooltip.\n     * @access private\n     */\n    tooltip: PropTypes.node,\n\n    /**\n     * Boolean if the `TableColumn` should gain the `plain` styles. This means that the text\n     * in the column can wrap and there is no height limit enforced with some additional padding.\n     */\n    plain: PropTypes.bool,\n\n    /**\n     * An optional scope to apply to the table column. If omitted, the scope will be set to\n     * `'col'` if inside of the `TableHeader` component. This is really only needed for\n     * header columns.\n     */\n    scope: PropTypes.oneOf(['row', 'col']),\n\n    /**\n     * This is injected by the `TableRow` component to help with generating ids\n     * @access private\n     */\n    cellIndex: PropTypes.number,\n    sortIconChildren: deprecated(PropTypes.node, 'Use the `sortIcon` prop instead'),\n    sortIconClassName: deprecated(PropTypes.string, 'Use the `sortIcon` prop instead'),\n  };\n\n  static defaultProps = {\n    header: false,\n    adjusted: true,\n    sortIcon: <FontIcon>arrow_upward</FontIcon>,\n    sortIconBefore: true,\n  };\n\n  static contextTypes = {\n    plain: PropTypes.bool,\n    footer: PropTypes.bool,\n    fixedHeader: PropTypes.bool,\n    fixedFooter: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      className,\n      fixedStyle,\n      fixedClassName,\n      numeric,\n      header,\n      children,\n      sorted,\n      sortIcon,\n      tooltip,\n      selectColumnHeader,\n      adjusted,\n      grow,\n      sortIconBefore,\n      /* eslint-disable no-unused-vars */\n      plain: propPlain,\n      scope: propScope,\n      cellIndex,\n\n      // deprecated\n      sortIconChildren,\n      sortIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const sortable = typeof sorted === 'boolean';\n    const plain = getField(this.props, this.context, 'plain');\n    const Component = header ? 'th' : 'td';\n    const scope = getField(this.props, CELL_SCOPE[header ? 'header' : 'noop'], 'scope');\n\n    let displayedChildren = children;\n    let ariaSort;\n    if (sortable) {\n      ariaSort = sorted ? 'ascending' : 'descending';\n      const icon = React.Children.only(getDeprecatedIcon(sortIconClassName, sortIconChildren, sortIcon));\n      displayedChildren = (\n        <IconSeparator label={children} iconBefore={sortIconBefore}>\n          {React.cloneElement(icon, { className: getCollapserStyles({ flipped: !sorted }, icon.props.className) })}\n        </IconSeparator>\n      );\n    }\n\n    const fixedHeader = header && this.context.fixedHeader;\n    const fixedFooter = this.context.footer && this.context.fixedFooter;\n    const fixed = fixedHeader || fixedFooter;\n    const baseClassNames = themeColors({ text: !header, hint: header }, {\n      'md-table-column--relative': tooltip,\n      'md-table-column--select-field': selectColumnHeader,\n    });\n\n    const mergedClassNames = cn({\n      'md-table-column--header': header,\n      'md-table-column--data': !header && !plain,\n      'md-table-column--plain': !header && plain,\n      'md-table-column--adjusted': adjusted && !grow && !selectColumnHeader,\n      'md-table-column--grow': grow,\n      'md-table-column--sortable md-pointer--hover': sortable,\n      [baseClassNames]: !fixed,\n    }, className);\n\n    if (fixed) {\n      displayedChildren = (\n        <div\n          className={cn('md-table-column__fixed', {\n            'md-table-column__fixed--header': fixedHeader,\n            'md-table-column__fixed--footer': fixedFooter,\n          })}\n        >\n          <div\n            style={fixedStyle}\n            className={cn(baseClassNames, mergedClassNames, 'md-table-column__fixed--flex', {\n              'md-table-column__fixed--flex-right': numeric,\n            }, fixedClassName)}\n          >\n            {tooltip}\n            {displayedChildren}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Component\n        aria-sort={ariaSort}\n        {...props}\n        scope={scope}\n        className={cn('md-table-column', {\n          'md-table-column--fixed': fixed,\n          'md-text-left': !numeric && !fixed,\n          'md-text-right': numeric && !fixed,\n        }, mergedClassNames)}\n      >\n        {!fixedHeader && !fixedFooter && tooltip}\n        {displayedChildren}\n      </Component>\n    );\n  }\n}\n\nexport default injectTooltip(TableColumn);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport themeColors from '../utils/themeColors';\nimport FontIcon from '../FontIcons/FontIcon';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport Paper from '../Papers/Paper';\nimport TextFieldDivider from '../TextFields/TextFieldDivider';\n\nexport default class SelectFieldInput extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    disabled: PropTypes.bool,\n    required: PropTypes.bool,\n    label: PropTypes.node,\n    placeholder: PropTypes.string,\n    active: PropTypes.bool,\n    activeLabel: PropTypes.node,\n    below: PropTypes.bool,\n    error: PropTypes.bool,\n    toolbar: PropTypes.bool,\n    dropdownIcon: PropTypes.element,\n    iconClassName: PropTypes.string,\n    iconChildren: PropTypes.node,\n    transitionName: PropTypes.string.isRequired,\n    transitionTime: PropTypes.number.isRequired,\n    lineDirection: TextFieldDivider.propTypes.lineDirection,\n  };\n\n  static defaultProps = {\n    transitionName: 'md-drop',\n    transitionTime: 300,\n  };\n\n  state = { transition: null };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      this._transitionNewValue();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _timeout = null;\n  _transitionNewValue = () => {\n    const { transitionTime, transitionName } = this.props;\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n        this.setState({ transition: null });\n      }, transitionTime);\n\n      this.setState({ transition: `${this.state.transition} ${transitionName}-enter-active` });\n    }, TICK);\n\n    this.setState({ transition: `${transitionName}-enter` });\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      name,\n      value,\n      label,\n      placeholder,\n      active,\n      activeLabel,\n      error,\n      disabled,\n      required,\n      toolbar,\n      below,\n      lineDirection,\n      dropdownIcon,\n\n      // deprecated\n      iconChildren,\n      iconClassName,\n      /* eslint-disable no-unused-vars */\n      transitionName,\n      transitionTime,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { transition } = this.state;\n\n    let divider;\n    if (!below && !toolbar) {\n      divider = (\n        <TextFieldDivider\n          key=\"text-divider\"\n          active={active}\n          error={error}\n          lineDirection={lineDirection}\n          className=\"md-divider--select-field\"\n        />\n      );\n    }\n\n    let visibleLabel = activeLabel;\n    if (!activeLabel && activeLabel !== 0) {\n      visibleLabel = ((!label || active) && placeholder) || '';\n    }\n\n    const labelActive = !!activeLabel || activeLabel === 0;\n\n    let icon = dropdownIcon;\n    if (iconClassName || iconChildren) {\n      icon = <FontIcon iconClassName={iconClassName}>{iconChildren}</FontIcon>;\n    }\n    icon = React.cloneElement(icon, { disabled });\n\n    return (\n      <AccessibleFakeInkedButton\n        {...props}\n        id={`${id}-toggle`}\n        role=\"listbox\"\n        disabled={disabled}\n        component={Paper}\n        zDepth={below && active ? 1 : 0}\n        inkDisabled={!below}\n        className={cn('md-select-field', themeColors({\n          disabled,\n          hint: !labelActive && placeholder,\n          text: labelActive,\n        }), className)}\n      >\n        <IconSeparator\n          label={visibleLabel}\n          labelClassName={transition}\n          className={cn('md-text-field', {\n            'md-text-field--margin': !below && !label,\n            'md-text-field--floating-margin': label,\n            'md-text-field--toolbar': toolbar && !below,\n            'md-select-field--text-field': !below,\n            'md-select-field--btn': below,\n          })}\n        >\n          {icon}\n        </IconSeparator>\n        {divider}\n        <input\n          key=\"value\"\n          type=\"hidden\"\n          id={id}\n          name={name}\n          value={value}\n          required={required}\n          disabled={disabled}\n        />\n      </AccessibleFakeInkedButton>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport addSuffix from '../utils/StringUtils/addSuffix';\nimport isValued from '../utils/isValued';\nimport FloatingLabel from '../TextFields/FloatingLabel';\nimport TextFieldMessage from '../TextFields/TextFieldMessage';\n\nimport SelectFieldInput from './SelectFieldInput';\n\nexport default class SelectFieldToggle extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    inputStyle: PropTypes.object,\n    inputClassName: PropTypes.string,\n    activeLabel: PropTypes.node,\n    value: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    active: PropTypes.bool,\n    error: PropTypes.bool,\n    errorText: PropTypes.node,\n    helpText: PropTypes.node,\n    helpOnFocus: PropTypes.bool,\n    below: PropTypes.bool,\n    visible: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      inputStyle,\n      inputClassName,\n      required,\n      disabled,\n      active,\n      error,\n      errorText,\n      helpText,\n      helpOnFocus,\n      visible,\n      activeLabel,\n      /* eslint-disable no-unused-vars */\n      label: propLabel,\n      placeholder: propPlaceholder,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { label, placeholder } = this.props;\n    if (required) {\n      if (label) {\n        label = addSuffix(label, '*');\n      }\n\n      if (placeholder && !label) {\n        placeholder = addSuffix(placeholder, '*');\n      }\n    }\n\n    return (\n      <div style={style} className={cn('md-select-field__toggle', className)}>\n        <FloatingLabel\n          label={label}\n          htmlFor={id}\n          active={active || visible}\n          error={error}\n          floating={isValued(activeLabel) || active || visible}\n          disabled={disabled}\n        />\n        <SelectFieldInput\n          {...props}\n          id={id}\n          style={inputStyle}\n          className={inputClassName}\n          label={label}\n          placeholder={placeholder}\n          activeLabel={activeLabel}\n          active={active}\n          error={error}\n          disabled={disabled}\n        />\n        <TextFieldMessage\n          active={active || visible}\n          error={error}\n          errorText={errorText}\n          helpText={helpText}\n          helpOnFocus={helpOnFocus}\n          leftIcon={false}\n          rightIcon={false}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { UP, DOWN, ESC, TAB, ZERO, NINE, KEYPAD_ZERO, KEYPAD_NINE } from '../constants/keyCodes';\nimport omit from '../utils/omit';\nimport isValued from '../utils/isValued';\nimport getField from '../utils/getField';\nimport isBetween from '../utils/NumberUtils/isBetween';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport FontIcon from '../FontIcons/FontIcon';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Menu from '../Menus/Menu';\nimport ListItem from '../Lists/ListItem';\n\nimport SelectFieldToggle from './SelectFieldToggle';\n\nconst MOBILE_LIST_PADDING = 8;\nconst ARIA_ACTIVE = 'aria-activedescendant';\n\nexport default class SelectField extends PureComponent {\n  static HorizontalAnchors = Menu.HorizontalAnchors;\n  static VerticalAnchors = Menu.VerticalAnchors;\n  static Positions = Menu.Positions;\n\n  static propTypes = {\n    /**\n     * An id to give the select field. This is required for accessibility.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional name to give to the select field.\n     */\n    name: PropTypes.string,\n\n    /**\n     * An optional id to provide to the select field's menu. If this is omitted,\n     * it will default to `${id}-menu`.\n     */\n    menuId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the select field's list.\n     *\n     * @see {@link #menuId}\n     * @see {@link Menus/Menu#menuId}\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the select field's container (the menu).\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field's container (the menu).\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the menu's list.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the menu's list.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field's toggle.\n     */\n    toggleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field's toggle.\n     */\n    toggleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `AccessibleFakeInkedButton` that is the trigger\n     * for the select field.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `AccessibleFakeInkedButton` that is the trigger\n     * for the select field.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * Boolean if the select field should be have the menu's list visible by default.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * Boolean if the select field should have the menu's list visible. This will make\n     * the select field controlled and require the `onVisibilityChange` prop to be defined,\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the select field's menu has it's visibility changed. The callback\n     * will include the next visible state and the event that triggered it.\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * A list of `number`, `string`, or `object` that should be used to create `ListItem`\n     * in the menu's list. When it is an `object`, it will use the `itemLabel` prop as the\n     * `primaryText` and use the value of `itemValue`.\n     *\n     * @see {@link #itemLabel}\n     * @see {@link #itemValue}\n     */\n    menuItems: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.element,\n    ])).isRequired,\n\n    /**\n     * The amount of time that a list of letters should be used when finding a menu item\n     * while typing. Since a user can select items by typing multiple letters in a row,\n     * this will be used as the timeout for clearing those letters.\n     *\n     * For example:\n     * - User types `g`\n     *\n     * Full match is now `'g'`.\n     *\n     * - User delays 200ms and types `u`\n     *\n     * Full match is now `'gu'`\n     *\n     * - User delays 1000ms and types `a`.\n     *\n     * Full match is now `'a'`\n     */\n    keyboardMatchingTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The key to use for extracting a menu item's label if the menu item is an object.\n     *\n     * Example:\n     *\n     * ```js\n     * const item = { something: 'My Label', somethingElse: 'value' };\n     * const itemLabel = 'something';\n     * const itemValue = 'somethingElse';\n     * ```\n     */\n    itemLabel: PropTypes.string.isRequired,\n\n    /**\n     * The key to use for extracting a menu item's value if the menu item is an object.\n     *\n     * Example:\n     *\n     * ```js\n     * const item = { something: 'My Label', somethingElse: 'value' };\n     * const itemLabel = 'something';\n     * const itemValue = 'somethingElse';\n     * ```\n     */\n    itemValue: PropTypes.string.isRequired,\n\n    /**\n     * The key to use for extracting a menu item's function\n     * to get additional `ListItem` props if the menu item is an object.\n     *\n     * Example:\n     *\n     * ```js\n     * const item = { something: 'My Label', addProps: ({active}) => active ? {secondaryText: 'some text'} : null };\n     * const itemLabel = 'something';\n     * const itemProps = 'addProps';\n     * ```\n     *\n     * @see {@link #getItemProps}\n     */\n    itemProps: PropTypes.string.isRequired,\n\n    /**\n     * An optional function to get additional `ListItem` props if the menu item is an object.\n     *\n     * An object with the following fields will be passed into the function:\n     * - `index` - item's index\n     * - `active` - whether item is active\n     * - `disabled` - whether item is disabled\n     * - `itemValue` - item's value\n     * - `value` - current list value\n     * - `props` - default `ListItem` props\n     * - `item` - source item's data\n     * - `field` - reference to the component instance\n     */\n    getItemProps: PropTypes.func,\n\n    /**\n     * The default value to use for the select field. If this is set, it should either match\n     * one of the `number` or `string` in your `menuItems` list or be the empty string. If\n     * the `menuItems` is a list of `object`, this value should match one of the menu item's\n     * `itemValue` or be the empty string.\n     *\n     * ```js\n     * const menuItems = [{ label: 'Something': value: 0 }, { label: 'Something else', value: 1 }];\n     *\n     * // both valid\n     * defaultValue={0}\n     * defaultValue=\"\"\n     * ```\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The value to use for the select field. If this is defined, it becomes a controlled component\n     * and requires the `onChange` prop to be defined. See the `defaultValue` for more behavior info.\n     *\n     * @see {@link #defaultValue}\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional function to call when the select field's value has been changed either when the user\n     * has click/touched/keyboard selected a value in the list, or the user has selected a value by typing\n     * in the select field while the menu's list is closed.\n     *\n     * The callback will include the next text field value, the selected item's index, the event that\n     * triggered the change, and the id, name, and value of the select field.\n     *\n     * ```js\n     * onChange(value, index, event, { id, name, value });\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional label to use with the select field. This will be a floating label as seen on the text field.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder to use in the select field. This will only appear when no value has been selected.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * Boolean if the select field should be disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the select field is required. This will update the label and placeholder to include a `*` suffix.\n     */\n    required: PropTypes.bool,\n\n    /**\n     * Boolean if the select field is considered to be in an `error` state.\n     *\n     * @see {@link TextFields/TextField#error}\n     */\n    error: PropTypes.bool,\n\n    /**\n     * An optional text to display when the text select field is in an error state.\n     *\n     * @see {@link TextFields/TextField#errorText}\n     */\n    errorText: PropTypes.node,\n\n    /**\n     * An optional text to display below the select field to provide input help to the user.\n     * This will only be displayed if the select field is not in an error state.\n     *\n     * @see {@link #helpOnFocus}\n     * @see {@link TextFields/TextField#errorText}\n     */\n    helpText: PropTypes.node,\n\n    /**\n     * Boolean if the `helpText` should only appear on focus.\n     *\n     * @see {@link #helpText}\n     * @see {@link TextFields/TextField#helpOnFocus}\n     */\n    helpOnFocus: PropTypes.bool,\n\n    /**\n     * An optional function to call when any element in the select field has been clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keydown` event has been triggered anywhere in the\n     * select field.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the select field's toggle has gained focus.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when the select field's toggle has been blurred. This\n     * will be triggered if the user hits the up or down arrow keys to traverse the list\n     * of items.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * The icon to use to display the dropdown arrow.\n     */\n    dropdownIcon: PropTypes.element,\n\n    /**\n     * Boolean if the select field is in a toolbar. This should automatically be injected by the `Toolbar`\n     * component if being used as a `titleMenu` or one of the `actions`.\n     *\n     * @see {@link Toolbars/Toolbar#titleMenu}\n     * @see {@link Toolbars/Toolbar#actions}\n     */\n    toolbar: PropTypes.bool,\n\n    /**\n     * Boolean if the currently active item should be removed from the list of available `menuItems`.\n     * If this is `undefined`, it will strip out the active one only when the\n     * `position === SelectField.Positions.BELOW`.\n     */\n    stripActiveItem: PropTypes.bool,\n\n    /**\n     * The transition name to use when a new value has been selected. By default, it will have the\n     * new item _drop_ into the select field's input location.\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition time to use when a new value has been selected. If this value is `0`, there\n     * will be no transition.\n     */\n    transitionTime: PropTypes.number.isRequired,\n\n    /**\n     * This is how the menu's `List` gets anchored to the select field.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the animation position for the list that appears.\n     *\n     * @see {@link Helpers/Layover#animationPosition}\n     */\n    position: positionShape,\n\n    /**\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * Boolean if the menu's list should appear horizontally instead of vertically.\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\n     */\n    listZDepth: PropTypes.number,\n\n    /**\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\n     * `$md-menu-desktop-max-height` values.\n     *\n     * @see [md-menu-mobile-max-height](/components/menus?tab=1#variable-md-menu-mobile-max-height)\n     * @see [md-menu-desktop-max-height](/components/menus?tab=1#variable-md-menu-desktop-max-height)\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * An optional transition name to use for the list appearing/disappearing.\n     *\n     * @see {@link Menus/Menu#transitionName}\n     */\n    menuTransitionName: PropTypes.string,\n\n    /**\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\n     */\n    menuTransitionEnterTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\n     */\n    menuTransitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Menus/Menu#block}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * @see {@link Menus/Menu#fullWidth}\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#centered}\n     */\n    centered: Menu.propTypes.centered,\n\n    /**\n     * @see {@link Helpers/Layover#sameWidth}\n     */\n    sameWidth: Menu.propTypes.sameWidth,\n\n    /**\n     * Since the `menuItems` get mapped into `ListItem`, this prop is used to remove\n     * any unnecessary props from the `ListItem` itself. This is where you\n     * would remove parts of your object such as `description` or `__metadata__`.\n     */\n    deleteKeys: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ])),\n    ]),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: Menu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: Menu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: Menu.propTypes.minBottom,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    /**\n     * The direction that the underline should appear from.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n\n    iconChildren: deprecated(PropTypes.node, 'Use `dropdownIcon` instead'),\n    iconClassName: deprecated(PropTypes.string, 'Use `dropdownIcon` instead'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    onMenuToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\n    stretchList: deprecated(\n      PropTypes.bool,\n      'No longer valid after the changes to the `Menu` component. Possibly use `sameWidth` instead'\n    ),\n    menuStyle: deprecated(PropTypes.object, 'Use `style` instead'),\n    menuClassName: deprecated(PropTypes.string, 'Use `className` instead'),\n    floatingLabel: deprecated(\n      PropTypes.bool,\n      'A select field can only have floating labels now. Only provide the `label` prop'\n    ),\n    noAutoAdjust: deprecated(PropTypes.bool, 'No longer valid to use since select fields are no longer text fields'),\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid to use since select fields are no longer text fields'),\n  };\n\n  static defaultProps = {\n    anchor: {\n      x: SelectField.HorizontalAnchors.INNER_LEFT,\n      y: SelectField.VerticalAnchors.OVERLAP,\n    },\n    fixedTo: Menu.defaultProps.fixedTo,\n    position: SelectField.Positions.TOP_LEFT,\n    itemLabel: 'label',\n    itemValue: 'value',\n    itemProps: 'getProps',\n    dropdownIcon: <FontIcon>arrow_drop_down</FontIcon>,\n    lineDirection: 'left',\n    menuItems: [],\n    defaultValue: '',\n    defaultVisible: false,\n    keyboardMatchingTimeout: 1000,\n    transitionName: 'md-drop',\n    transitionTime: 300,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: false,\n      active: false,\n      ...this._getActive(props, { value: props.defaultValue }),\n      listProps: {\n        role: 'listbox',\n        ref: this._scrollActiveIntoView,\n        [ARIA_ACTIVE]: null,\n      },\n      match: null,\n      lastSearch: null,\n      value: props.defaultValue,\n      visible: props.defaultVisible,\n    };\n\n    this._items = [];\n    this._activeItem = null;\n    this._deleteKeys = this._getDeleteKeys(props);\n  }\n\n  componentDidMount() {\n    this._container = findDOMNode(this);\n    this._field = this._container.querySelector('.md-select-field');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { itemLabel, itemValue, deleteKeys } = this.props;\n    if (deleteKeys !== nextProps.deleteKeys || itemLabel !== nextProps.itemLabel || itemValue !== nextProps.itemValue) {\n      this._deleteKeys = this._getDeleteKeys(nextProps);\n    }\n\n    if (this.props.value !== nextProps.value || this.props.menuItems !== nextProps.menuItems) {\n      this.setState(this._getActive(nextProps, this.state));\n    }\n  }\n\n  /**\n   * Gets the current value from the select field. This is used when you have an uncontrolled\n   * text field and simply need the value from a ref callback.\n   *\n   * @return {String} the select field's value\n   */\n  get value() {\n    return getField(this.props, this.state, 'value');\n  }\n\n  _getItemPart(item, itemLabel, itemValue, preferLabel = false) {\n    const type = typeof item;\n    if (type === 'number' || type === 'string') {\n      return item;\n    } else if (type === 'object') {\n      const key1 = preferLabel ? itemLabel : itemValue;\n      const key2 = preferLabel ? itemValue : itemLabel;\n      return typeof item[key1] !== 'undefined' ? item[key1] : item[key2];\n    }\n\n    return '';\n  }\n\n  _getDeleteKeys({ itemLabel, itemValue, itemProps, deleteKeys }) {\n    const keys = [itemLabel, itemValue, itemProps];\n    if (deleteKeys) {\n      return keys.concat(Array.isArray(deleteKeys) ? deleteKeys : [deleteKeys]);\n    }\n\n    return keys;\n  }\n\n  _getActiveItemLabel = (item, value, itemLabel, itemValue) => {\n    const v = this._getItemPart(item, itemLabel, itemValue);\n    const label = this._getItemPart(item, itemLabel, itemValue, true);\n\n    return v === value || v === parseFloat(value) ? label : '';\n  };\n\n  _getActive = (props, state) => {\n    let activeLabel = '';\n    let activeIndex = -1;\n    const value = getField(props, state, 'value');\n    if (isValued(value)) {\n      const { menuItems, itemLabel, itemValue } = props;\n\n      menuItems.some((item, index) => {\n        activeLabel = this._getActiveItemLabel(item, value, itemLabel, itemValue);\n        const found = isValued(activeLabel);\n        if (found) {\n          activeIndex = index;\n        }\n\n        return found;\n      });\n    }\n\n    return { activeLabel, activeIndex };\n  };\n\n  _attemptItemFocus = (index) => {\n    if (index === -1) {\n      return;\n    }\n\n    const item = this._items[index];\n    if (item) {\n      item.focus();\n    }\n  };\n\n  _setListItem = (item) => {\n    if (!item) {\n      return;\n    }\n\n    if (item.props.active) {\n      this._activeItem = findDOMNode(item);\n      item.focus();\n\n      if (!this.state.listProps[ARIA_ACTIVE]) {\n        this.setState({ listProps: { ...this.state.listProps, [ARIA_ACTIVE]: `${this.props.id}-options-active` } });\n      }\n    }\n\n    this._items.push(item);\n  };\n\n  _scrollActiveIntoView = (listRef) => {\n    if (listRef === null) {\n      this._items = [];\n      return;\n    } else if (!this._activeItem) {\n      return;\n    }\n\n    const list = findDOMNode(listRef);\n    const { offsetTop } = this._activeItem;\n    list.scrollTop = offsetTop > MOBILE_LIST_PADDING ? offsetTop : 0;\n  };\n\n  _toggle = (e) => {\n    const { isOpen, onVisibilityChange, onMenuToggle } = this.props;\n    const visible = !(typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible'));\n    if (onMenuToggle || onVisibilityChange) {\n      (onMenuToggle || onVisibilityChange)(visible, e);\n    }\n\n    let state;\n    if (typeof isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      state = { visible };\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _close = (e) => {\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(false, e);\n    }\n\n    if (e.type === 'keydown' && this._field) {\n      this._field.focus();\n    }\n\n    let state;\n    if (this.props.required && !getField(this.props, this.state, 'value')) {\n      state = { error: true };\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      state = state || {};\n      state.visible = false;\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    const { isOpen } = this.props;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    if (visible && this._container) {\n      let node = e.target;\n      while (this._container.contains(node)) {\n        if (node.dataset && typeof node.dataset.id !== 'undefined') {\n          const { id, value } = node.dataset;\n          this._selectItem(parseInt(id, 10), value, e);\n          return;\n        }\n\n        node = node.parentNode;\n      }\n    }\n  };\n\n  _selectItem = (dataIndex, dataValue, e) => {\n    const { required, menuItems, itemLabel, itemValue, onChange, id, name } = this.props;\n    const value = this._getItemPart(menuItems[dataIndex], itemLabel, itemValue);\n    const prevValue = getField(this.props, this.state, 'value');\n    if (prevValue !== value && onChange) {\n      onChange(value, dataIndex, e, { id, name, value });\n    }\n\n    const state = {\n      ...this._getActive({ value, itemLabel, itemValue, menuItems }, {}),\n      error: !!required && !value && value !== 0,\n    };\n\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    this.setState(state);\n  };\n\n  _handleFocus = (e) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    this.setState({ active: true });\n  };\n\n  _handleBlur = (e) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    let { error } = this.state;\n    const { isOpen, required } = this.props;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    const value = getField(this.props, this.state, 'value');\n\n    if (required && !visible) {\n      error = !value;\n    }\n\n    this.setState({ active: false, error });\n  };\n\n  _handleKeyDown = (e) => {\n    const { isOpen, onKeyDown } = this.props;\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n    const up = key === UP;\n    const down = key === DOWN;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n\n    if (up || down) {\n      e.preventDefault();\n\n      if (!visible) {\n        this._toggle(e);\n        return;\n      }\n\n      this._advanceFocus(up);\n    } else if (!visible && handleKeyboardAccessibility(e, this._toggle, true, true)) {\n      return;\n    } else if (visible && (key === ESC || key === TAB)) {\n      if (this._field && key === ESC) {\n        this._field.focus();\n      }\n\n      this._close(e);\n      return;\n    } else {\n      this._selectItemByLetter(key, e);\n    }\n  };\n\n  _advanceFocus = (decrement) => {\n    const { position, stripActiveItem } = this.props;\n    const { activeIndex } = this.state;\n\n    const below = position === SelectField.Positions.BELOW;\n    const value = getField(this.props, this.state, 'value');\n    const valued = isValued(value);\n    const itemStripped = (typeof stripActiveItem !== 'undefined' ? stripActiveItem : below) && valued;\n\n    // If the select field is positioned below and there is no value, need to increment the last index\n    // by one since this select field removes the active item. Need to account for that here when there\n    // is no value.\n    const lastIndex = this._items.length - (itemStripped ? 0 : 1);\n    if ((decrement && activeIndex <= 0) || (!decrement && activeIndex >= lastIndex)) {\n      return;\n    }\n\n    const nextIndex = Math.max(-1, Math.min(lastIndex, activeIndex + (decrement ? -1 : 1)));\n    if (nextIndex === activeIndex) {\n      return;\n    }\n\n    this._attemptItemFocus(nextIndex - (itemStripped ? 1 : 0));\n    this.setState({ activeIndex: nextIndex });\n  };\n\n  _selectItemByLetter = (key, e) => {\n    const charCode = String.fromCharCode(key);\n    const isLetter = charCode && charCode.match(/[A-Za-z0-9-_ ]/);\n    const isKeypad = isBetween(key, KEYPAD_ZERO, KEYPAD_NINE);\n    if (!isBetween(key, ZERO, NINE) && !isKeypad && !isLetter) {\n      return;\n    }\n\n    const letter = isLetter ? charCode : String(key - (isKeypad ? KEYPAD_ZERO : ZERO));\n\n    if (this._matchingTimeout) {\n      clearTimeout(this._matchingTimeout);\n    }\n\n    this._matchingTimeout = setTimeout(() => {\n      this._matchingTimeout = null;\n\n      this.setState({ match: null, lastSearch: null });\n    }, this.props.keyboardMatchingTimeout);\n\n    this._selectFirstMatch(letter, e);\n  };\n\n  _selectFirstMatch = (letter, e) => {\n    const { menuItems, itemLabel, itemValue, isOpen, onChange, id, name } = this.props;\n    const { lastSearch } = this.state;\n    let match = -1;\n    const search = `${lastSearch || ''}${letter}`.toUpperCase();\n    menuItems.some((item, index) => {\n      if (item && typeof item === 'object' && item.disabled) {\n        return false;\n      }\n\n      const label = String(this._getItemPart(item, itemLabel, itemValue, true));\n      if (label && label.toUpperCase().replace(/\\s/g, '').indexOf(search) === 0) {\n        match = index;\n      }\n\n      return match > -1;\n    });\n\n    const state = {\n      match,\n      lastSearch: search,\n    };\n\n    if (match !== -1) {\n      const activeItem = menuItems[match];\n      state.activeLabel = this._getItemPart(activeItem, itemLabel, itemValue, true);\n      state.activeIndex = match;\n\n      const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n      if (visible) {\n        if (state.match !== this.state.match) {\n          this._attemptItemFocus(state.activeIndex);\n        }\n      } else {\n        const value = this._getItemPart(activeItem, itemLabel, itemValue);\n        const prevValue = getField(this.props, this.state, 'value');\n\n        if (value !== prevValue && onChange) {\n          onChange(value, match, e, { id, name, value });\n        }\n\n        if (typeof this.props.value === 'undefined') {\n          state.value = value;\n        }\n      }\n    }\n\n    this.setState(state);\n  };\n\n  _reduceItems = (items, item, i) => {\n    if (item === null) {\n      return items;\n    } else if (React.isValidElement(item)) {\n      items.push(item);\n      return items;\n    }\n\n    const { getItemProps, id, itemLabel, itemProps, itemValue, position, stripActiveItem } = this.props;\n    const below = position === SelectField.Positions.BELOW;\n    const value = getField(this.props, this.state, 'value');\n\n    const dataValue = this._getItemPart(item, itemLabel, itemValue);\n    const primaryText = this._getItemPart(item, itemLabel, itemValue, true);\n\n    const active = dataValue === value || dataValue === parseFloat(value);\n    const stripped = (typeof stripActiveItem !== 'undefined' ? stripActiveItem : below) && active;\n    if (!stripped) {\n      const objectType = typeof item === 'object';\n      const props = objectType ? omit(item, this._deleteKeys) : {};\n      const disabled = props.disabled || false;\n      props.ref = disabled ? null : this._setListItem;\n      props.id = active ? `${id}-options-active` : null;\n      props.active = active;\n      props.tabIndex = -1;\n      props.primaryText = primaryText;\n      props.key = item.key || dataValue;\n      props.role = 'option';\n      props['data-id'] = disabled ? null : i;\n      props['data-value'] = disabled ? null : dataValue;\n\n      const getProps = (objectType && item[itemProps]) || getItemProps;\n      if (typeof getProps === 'function') {\n        Object.assign(props, getProps({\n          index: i,\n          active,\n          disabled,\n          itemValue,\n          value,\n          props,\n          item,\n          field: this,\n        }));\n      }\n\n      items.push(<ListItem {...props} />);\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      listStyle,\n      listClassName,\n      toggleStyle,\n      toggleClassName,\n      menuItems,\n      anchor,\n      belowAnchor,\n      fixedTo,\n      position,\n      xThreshold,\n      yThreshold,\n      listZDepth,\n      listInline,\n      listHeightRestricted,\n      block,\n      centered,\n      sameWidth,\n      fullWidth,\n      repositionOnScroll,\n      repositionOnResize,\n      simplifiedMenu,\n      minLeft,\n      minRight,\n      minBottom,\n      fillViewportWidth,\n      fillViewportHeight,\n      menuTransitionName,\n      menuTransitionEnterTimeout,\n      menuTransitionLeaveTimeout,\n      isOpen, // deprecated\n      /* eslint-disable no-unused-vars */\n      error: propError,\n      menuId: propMenuId,\n      visible: propVisible,\n      itemLabel,\n      itemValue,\n      itemProps,\n      getItemProps,\n      defaultValue,\n      defaultVisible,\n      onClick,\n      onKeyDown,\n      onVisibilityChange,\n      deleteKeys,\n      stripActiveItem,\n      keyboardMatchingTimeout,\n\n      // Deprecated\n      defaultOpen,\n      initiallyOpen,\n      onMenuToggle,\n      stretchList,\n      menuStyle,\n      menuClassName,\n      floatingLabel,\n      noAutoAdjust,\n      adjustMinWidth,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { menuId, listId, error } = this.props;\n    error = error || this.state.error;\n    if (!menuId) {\n      menuId = `${id}-menu`;\n    }\n\n    if (!listId) {\n      listId = `${menuId}-options`;\n    }\n\n    const { listProps, active, activeLabel } = this.state;\n    const below = position === SelectField.Positions.BELOW;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    const value = getField(this.props, this.state, 'value');\n    const useSameWidth = typeof sameWidth !== 'undefined' ? sameWidth : below;\n\n    const toggle = (\n      <SelectFieldToggle\n        {...props}\n        id={id}\n        style={toggleStyle}\n        className={toggleClassName}\n        visible={visible}\n        value={value}\n        below={below}\n        error={error}\n        active={active}\n        activeLabel={activeLabel}\n        onClick={this._toggle}\n        onFocus={this._handleFocus}\n        onBlur={this._handleBlur}\n      />\n    );\n\n    return (\n      <Menu\n        id={menuId}\n        listId={listId}\n        style={style}\n        className={cn('md-menu--select-field', className)}\n        listProps={listProps}\n        listStyle={listStyle}\n        listClassName={listClassName}\n        toggle={toggle}\n        visible={visible}\n        onClose={this._close}\n        onKeyDown={this._handleKeyDown}\n        onClick={this._handleClick}\n        simplified={simplifiedMenu}\n        anchor={anchor}\n        belowAnchor={belowAnchor}\n        fixedTo={fixedTo}\n        position={position}\n        xThreshold={xThreshold}\n        yThreshold={yThreshold}\n        listZDepth={listZDepth}\n        listInline={listInline}\n        listHeightRestricted={listHeightRestricted}\n        sameWidth={useSameWidth}\n        block={block}\n        centered={centered}\n        fullWidth={fullWidth}\n        minLeft={minLeft}\n        minRight={minRight}\n        minBottom={minBottom}\n        fillViewportWidth={fillViewportWidth}\n        fillViewportHeight={fillViewportHeight}\n        repositionOnScroll={repositionOnScroll}\n        repositionOnResize={repositionOnResize}\n        transitionName={menuTransitionName}\n        transitionEnterTimeout={menuTransitionEnterTimeout}\n        transitionLeaveTimeout={menuTransitionLeaveTimeout}\n      >\n        {menuItems.reduce(this._reduceItems, [])}\n      </Menu>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * This is just a simple <tfoot> component.\n */\nexport default class TableFooter extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The children to display. This should really be one or a list of `TableRow`\n     * components.\n     */\n    children: PropTypes.node,\n  };\n\n  static childContextTypes = {\n    footer: PropTypes.bool,\n  }\n\n  getChildContext() {\n    return { footer: true };\n  }\n\n  render() {\n    const { className, children, ...props } = this.props;\n\n    return (\n      <tfoot className={cn('md-table-footer', className)} {...props}>\n        {children}\n      </tfoot>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport SelectField from '../SelectFields/SelectField';\nimport Button from '../Buttons/Button';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport findTable from './findTable';\nimport TableFooter from './TableFooter';\nimport TableColumn from './TableColumn';\n\n/**\n * The `TablePagination` component is used to generate the table footer that helps\n * pagination through a large dataset by limiting the number of rows per page.\n * The pagination will always be placed persistently at the bottom of the table\n * so that when a user scrolls to the right, they will always be able to use the\n * pagination.\n */\nexport default class TablePagination extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional id to provide to the select field. If this is omitted, it will be\n     * the `DataTable`'s `baseId` with '-pagination'.\n     *\n     * @see {@link DataTables/DataTable#baseId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the increment icon button. If this is omitted, it will be\n     * the `id` with '-increment-btn'.\n     *\n     * @see {@link #id}\n     */\n    incrementId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the decrement icon button. If this is omitted, it will be\n     * the `id` with '-decrement-btn'.\n     *\n     * @see {@link #id}\n     */\n    decrementId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the `tfoot` tag.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `tfoot` tag.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field.\n     *\n     * @see {@link SelectFields/SelectField#style}\n     */\n    selectFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field.\n     *\n     * @see {@link SelectFields/SelectField#className}\n     */\n    selectFieldClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field's input.\n     *\n     * @see {@link SelectFields/SelectField#inputStyle}\n     */\n    selectFieldInputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field's input.\n     *\n     * @see {@link SelectFields/SelectField#inputClassName}\n     */\n    selectFieldInputClassName: PropTypes.string,\n\n    /**\n     * Boolean if the select field should use the simplified menu logic.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * A function to call when a user clicks the increment or decrement pagination\n     * icon button. This function will be given the new start index and the number\n     * or rows per page as well as the current page.\n     *\n     * ```js\n     * onPagination(newStart, rowsPerPage, currentPage);\n     * ```\n     */\n    onPagination: PropTypes.func.isRequired,\n\n    /**\n     * The current value for the select field holding the number of rows per page.\n     */\n    rowsPerPage: PropTypes.number,\n\n    /**\n     * The current page for the pagination. This will make the component controlled, so the only way to get pagination\n     * is making sure you are updating this prop after the `onPagination` callback is called.\n     *\n     * Pages start from 1 instead of 0.\n     */\n    page: PropTypes.number,\n\n    /**\n     * The default page to start from for the pagination. Pages start from 1 instead of 0.\n     */\n    defaultPage: PropTypes.number.isRequired,\n\n    /**\n     * The default number of rows per page to display. This will be the value for the\n     * `SelectField`.\n     */\n    defaultRowsPerPage: PropTypes.number.isRequired,\n\n    /**\n     * The label to use for the rows per page `SelectField`.\n     */\n    rowsPerPageLabel: PropTypes.node.isRequired,\n\n    /**\n     * A list of numbers for the amount of rows per page to display at a time.\n     * This will be rendered into the `SelectField`.\n     */\n    rowsPerPageItems: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    /**\n     * The total number of rows that can be displayed. This is the unfiltered/non-subset\n     * number of rows. This is used to help calculate the increment/decrement values to\n     * display and determine if the user can increment/decrement again.\n     */\n    rows: PropTypes.number.isRequired,\n\n    /**\n     * The icon to use for the increment icon button.\n     */\n    incrementIcon: PropTypes.element,\n\n    /**\n     * The icon to use for the decrement icon button.\n     */\n    decrementIcon: PropTypes.element,\n\n    incrementIconChildren: deprecated(PropTypes.node, 'Use the `incrementIcon` prop instead'),\n    incrementIconClassName: deprecated(PropTypes.string, 'Use the `incrementIcon` prop instead'),\n    decrementIconChildren: deprecated(PropTypes.node, 'Use the `decrementIcon` prop instead'),\n    decrementIconClassName: deprecated(PropTypes.string, 'Use the `decrementIcon` prop instead'),\n  };\n\n  static contextTypes = {\n    baseId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    fixedFooter: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    defaultPage: 1,\n    defaultRowsPerPage: 10,\n    rowsPerPageLabel: 'Rows per page:',\n    rowsPerPageItems: [10, 20, 30, 40, 50, 100],\n    incrementIcon: <FontIcon>keyboard_arrow_right</FontIcon>,\n    decrementIcon: <FontIcon>keyboard_arrow_left</FontIcon>,\n    simplifiedMenu: false,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    const controlledPage = typeof props.page !== 'undefined';\n    const controlledRowsPerPage = typeof props.rowsPerPage !== 'undefined';\n    const rowsPerPage = controlledRowsPerPage ? props.rowsPerPage : props.defaultRowsPerPage;\n    const page = controlledPage ? props.page : props.defaultPage;\n    this.state = {\n      start: (page - 1) * rowsPerPage,\n      controlsMarginLeft: 0,\n    };\n\n    if (!controlledPage) {\n      this.state.page = page;\n    }\n\n    if (!controlledRowsPerPage) {\n      this.state.rowsPerPage = props.defaultRowsPerPage;\n    }\n\n    this._table = null;\n    this._ticking = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { rowsPerPage, page } = this.props;\n    if (page !== nextProps.page || rowsPerPage !== nextProps.rowsPerPage) {\n      const rpp = getField(nextProps, this.state, 'rowsPerPage');\n      const p = getField(nextProps, this.state, 'page');\n\n      this.setState({ start: (p - 1) * rpp });\n    }\n  }\n\n  _setControls = (controls) => {\n    this._controls = controls;\n    this._table = findTable(controls);\n\n    if (this._table && this.context.fixedFooter) {\n      this._table.addEventListener('scroll', this._throttledPosition);\n    }\n  };\n\n  _position = () => {\n    if (this._table) {\n      const { fixedFooter } = this.context;\n      const { offsetWidth, scrollLeft } = this._table;\n\n      let controlsMarginLeft = offsetWidth - this._controls.offsetWidth;\n      if (fixedFooter) {\n        controlsMarginLeft += scrollLeft;\n      }\n\n      this.setState({\n        controlsMarginLeft: Math.max(24, controlsMarginLeft),\n      });\n    }\n  };\n\n  _throttledPosition = () => {\n    if (!this._ticking) {\n      requestAnimationFrame(() => {\n        this._ticking = false;\n        this._position();\n      });\n    }\n\n    this._ticking = true;\n  };\n\n  _increment = () => {\n    const { rows, onPagination } = this.props;\n    const { start } = this.state;\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    const page = getField(this.props, this.state, 'page');\n\n    // Only correct multiple of rows per page\n    const max = rows - (rows % rowsPerPage);\n\n    const newStart = Math.min(start + rowsPerPage, max);\n    const nextPage = page + 1;\n\n    onPagination(newStart, rowsPerPage, nextPage);\n    if (typeof this.props.page === 'undefined') {\n      this.setState({ start: newStart, page: nextPage });\n    }\n  };\n\n  _decrement = () => {\n    const { start } = this.state;\n    const page = getField(this.props, this.state, 'page');\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    const newStart = Math.max(0, start - rowsPerPage);\n    const nextPage = page - 1;\n\n    this.props.onPagination(newStart, rowsPerPage, nextPage);\n    if (typeof this.props.page === 'undefined') {\n      this.setState({ start: newStart, page: nextPage });\n    }\n  };\n\n  _setRowsPerPage = (rowsPerPage) => {\n    const page = 1;\n    const newStart = 0;\n    this.props.onPagination(newStart, rowsPerPage, page);\n    let nextState;\n    if (typeof this.props.rowsPerPage === 'undefined') {\n      nextState = { rowsPerPage };\n    }\n\n    if (typeof this.props.page === 'undefined') {\n      nextState = nextState || {};\n      nextState.start = newStart;\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  };\n\n  render() {\n    const { controlsMarginLeft, start } = this.state;\n    const {\n      className,\n      selectFieldStyle,\n      selectFieldClassName,\n      selectFieldInputStyle,\n      selectFieldInputClassName,\n      rows,\n      rowsPerPageLabel,\n      rowsPerPageItems,\n      incrementIcon,\n      decrementIcon,\n      simplifiedMenu,\n\n      // deprecated\n      incrementIconChildren,\n      incrementIconClassName,\n      decrementIconChildren,\n      decrementIconClassName,\n      /* eslint-disable no-unused-vars */\n      id: propId,\n      incrementId: propIncrementId,\n      decrementId: propDecrementId,\n      onPagination,\n      rowsPerPage: propRowsPerPage,\n      page: propPage,\n      defaultPage,\n      defaultRowsPerPage,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { baseId } = this.context;\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    let { id, incrementId, decrementId } = this.props;\n    if (!id) {\n      id = `${baseId}-pagination`;\n    }\n\n    if (!incrementId) {\n      incrementId = `${id}-increment-btn`;\n    }\n\n    if (!decrementId) {\n      decrementId = `${id}-decrement-btn`;\n    }\n\n    const pagination = `${start + 1}-${Math.min(rows, start + rowsPerPage)} of ${rows}`;\n    return (\n      <TableFooter {...props} className={cn('md-table-footer--pagination', className)}>\n        <ResizeObserver watchWidth component=\"tr\" onResize={this._throttledPosition} />\n        <ResizeObserver watchWidth component=\"tr\" target={this._table} onResize={this._throttledPosition} />\n        <tr>\n          {/* colspan 100% so footer columns do not align with body and header */}\n          <TableColumn colSpan=\"100%\">\n            <div\n              ref={this._setControls}\n              className=\"md-table-pagination md-table-pagination--controls md-text\"\n              style={{ marginLeft: controlsMarginLeft }}\n            >\n              <span className=\"md-table-pagination__label\">\n                {rowsPerPageLabel}\n              </span>\n              <SelectField\n                id={id}\n                menuItems={rowsPerPageItems}\n                position={SelectField.Positions.BELOW}\n                style={selectFieldStyle}\n                className={selectFieldClassName}\n                inputStyle={selectFieldInputStyle}\n                inputClassName={cn('md-select-field--pagination', selectFieldInputClassName)}\n                value={rowsPerPage}\n                onChange={this._setRowsPerPage}\n                simplifiedMenu={simplifiedMenu}\n              />\n              <span className=\"md-table-pagination--label\">{pagination}</span>\n              <Button\n                id={decrementId}\n                icon\n                onClick={this._decrement}\n                disabled={start === 0}\n                iconEl={getDeprecatedIcon(decrementIconClassName, decrementIconChildren, decrementIcon)}\n              />\n              <Button\n                id={incrementId}\n                icon\n                onClick={this._increment}\n                disabled={start + rowsPerPage >= rows}\n                iconEl={getDeprecatedIcon(incrementIconClassName, incrementIconChildren, incrementIcon)}\n              />\n            </div>\n            {/*\n              * Since the footer controls is positioned absolutely for a persistent footer,\n              * we have a mask to correctly set the height of the footer.\n              */}\n            <div className=\"md-table-pagination\" />\n          </TableColumn>\n        </tr>\n      </TableFooter>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\n\nimport isValidFocusKeypress from '../utils/EventUtils/isValidFocusKeypress';\n\nconst BASE_FOCUSABLE_ELEMENTS = '[href],[tabindex]:not([tabindex=\"-1\"]),input:not([disabled]):not([type=\"hidden\"])';\nconst FOCUSABLE_QUERY = ['button', 'textarea', 'select']\n  .reduce((queryString, element) => `${queryString},${element}:not([disabled])`, BASE_FOCUSABLE_ELEMENTS);\n\n/**\n * This component is used for keeping the focus within some container. When the container\n * is mounted and the `focusOnMount` prop is `true`, it will attempt to focus either:\n * - an element that matches `document.getElementById(this.props.initialFocus)`\n * - an element that matches `this._container.querySelector(this.props.initialFocus)`\n * - the first focusable element in it's children (if `this.props.initialFocus` is omitted)\n */\nexport default class FocusContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * The component to render as. This can be a React DOM element or\n     * a react Component.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The children to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional id string or a query selector string to use for the initial focus.\n     * This will only be triggered if the `focusOnMount` prop is `true`. If this is\n     * omitted and the `focusOnMount` prop is `true`, the first focusable element in the\n     * container will be focused.\n     *\n     * Examples:\n     *\n     * ```js\n     * initialFocus=\"#someAmazingId\"\n     * // or\n     * initialFocus=\".md-btn,.md-list-tile\"\n     * ```\n     */\n    initialFocus: PropTypes.string,\n\n    /**\n     * Boolean if an element in the container should be focused when mounted.\n     */\n    focusOnMount: PropTypes.bool,\n\n    /**\n     * An optional list of additional key codes to use for focus events.\n     */\n    additionalFocusKeys: PropTypes.arrayOf(PropTypes.number),\n\n    /**\n     * Boolean if the focus container should start or stop containing the focus within the container.\n     * This is useful for changing the focus requirements after mount.\n     */\n    containFocus: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'div',\n    containFocus: true,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.containFocus === nextProps.containFocus) {\n      return;\n    }\n\n    if (nextProps.containFocus) {\n      this._enableFocusTrap();\n      this._attemptInitialFocus();\n    } else {\n      this._disableFocusTrap();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.containFocus && this._container) {\n      this._focusables = [].slice.call(this._container.querySelectorAll(FOCUSABLE_QUERY));\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.containFocus) {\n      this._disableFocusTrap();\n    }\n  }\n\n  _enableFocusTrap = () => {\n    window.addEventListener('keydown', this._handleKeyDown, true);\n  };\n\n  _disableFocusTrap = () => {\n    window.removeEventListener('keydown', this._handleKeyDown, true);\n  };\n\n  _attemptInitialFocus = () => {\n    if (!this._container) {\n      return;\n    }\n\n    const { initialFocus } = this.props;\n\n    const toFocus = initialFocus\n      ? document.getElementById(initialFocus) || this._container.querySelector(initialFocus)\n      : this._focusables[0];\n\n    let debugError;\n    if (!toFocus && initialFocus) {\n      debugError = ' The `initialFocus` did not match a document\\'s `id` or was an invalid ';\n      debugError += `\\`querySelector\\` for the container. \\`initialFocus\\`: \\`${initialFocus}\\`. `;\n      debugError += 'If this was supposed to be an `id`, make sure to prefix with the `#` symbol.';\n    }\n\n    if (process.env.NODE_ENV !== 'production' && !toFocus) {\n      throw new Error(\n        'You specified that the `FocusContainer` should focus an element on mount, ' +\n        'but a focusable element was not found in the children. This could be because ' +\n        'the `initialFocus` prop is an invalid id or query selector, or the children ' +\n        `do not contain a valid focusable element.${debugError}`\n      );\n    }\n\n    if (toFocus) {\n      toFocus.focus();\n    }\n  };\n\n  /**\n   * Manages the event listeners to contain the focus within some container.  When the container\n   * ref is not null, the container has mounted and then attempts to focus an element inside\n   * if the `focusOnMount` prop is `true`.\n   */\n  _containFocus = (containerRef) => {\n    if (containerRef === null) {\n      this._container = null;\n      this._disableFocusTrap();\n      return;\n    }\n\n    const { focusOnMount, containFocus } = this.props;\n    this._container = findDOMNode(containerRef);\n    this._focusables = [].slice.call(this._container.querySelectorAll(FOCUSABLE_QUERY));\n\n    if (focusOnMount) {\n      this._attemptInitialFocus();\n    }\n\n    if (containFocus) {\n      this._enableFocusTrap();\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    this._shifted = e.shiftKey;\n    if (!isValidFocusKeypress(e, this.props.additionalFocusKeys)) {\n      return;\n    } else if (this._focusables.length === 1) {\n      e.preventDefault();\n      return;\n    }\n\n    const { target, shiftKey } = e;\n    const [first, ...focusables] = this._focusables;\n    const last = focusables[focusables.length - 1];\n\n    if (shiftKey && target === first) {\n      e.preventDefault();\n      last.focus();\n    } else if (!shiftKey && target === last) {\n      e.preventDefault();\n      first.focus();\n    }\n  };\n\n  render() {\n    const {\n      component: Component,\n      /* eslint-disable no-unused-vars */\n      initialFocus,\n      focusOnMount,\n      containFocus,\n      additionalFocusKeys,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    return <Component {...props} ref={this._containFocus} />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport default class DialogTitle extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  render() {\n    const { children, className, ...props } = this.props;\n\n    if (!children) {\n      return null;\n    }\n\n    return (\n      <h2 {...props} className={cn('md-title md-title--dialog', className)}>\n        {children}\n      </h2>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport Button from '../Buttons/Button';\n\nconst FOOTER_PADDING = 8;\n\nexport default class DialogFooter extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.object,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.object,\n      ])),\n    ]),\n    stacked: PropTypes.bool,\n  };\n\n  state = { stacked: false };\n\n  _toElement(action, index) {\n    if (isValidElement(action)) {\n      const button = Children.only(action);\n\n      return cloneElement(action, {\n        key: button.key || index,\n        className: cn('md-btn--dialog', button.props.className),\n      });\n    }\n\n    // Both label and children are valid for dialog actions\n    const { label, children, ...remaining } = action;\n    return (\n      <Button\n        key={index}\n        flat\n        {...remaining}\n        className={cn('md-btn--dialog', action.className)}\n      >\n        {label || children}\n      </Button>\n    );\n  }\n\n  _setContainer = (container) => {\n    if (container !== null) {\n      this._container = container;\n      const maxWidth = (this._container.offsetWidth - (FOOTER_PADDING * 3)) / 2;\n\n      let stacked = false;\n      Array.prototype.slice.call(this._container.querySelectorAll('.md-btn'))\n        .some(({ offsetWidth }) => {\n          stacked = offsetWidth > maxWidth;\n          return stacked;\n        });\n\n      this.setState({ stacked });\n    }\n  };\n\n  _generateActions = () => {\n    const { actions } = this.props;\n    if (!actions) {\n      return null;\n    } else if (Array.isArray(actions)) {\n      return actions.map(this._toElement);\n    }\n\n    return this._toElement(actions);\n  };\n\n  render() {\n    const {\n      actions,\n      className,\n      children,\n      stacked: propStacked,\n      ...props\n    } = this.props;\n\n    if (!children && (!actions || (Array.isArray(actions) && !actions.length))) {\n      return null;\n    }\n\n    let { stacked } = this.props;\n    const stackedDefined = typeof propStacked !== 'undefined';\n    if (!stackedDefined) {\n      stacked = this.state.stacked;\n    }\n\n    return (\n      <footer\n        {...props}\n        className={cn('md-dialog-footer', {\n          'md-dialog-footer--inline': !stacked,\n          'md-dialog-footer--stacked': stacked,\n        }, className)}\n        ref={!stackedDefined ? this._setContainer : null}\n      >\n        {this._generateActions()}\n        {children}\n      </footer>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport FocusContainer from '../Helpers/FocusContainer';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport Paper from '../Papers/Paper';\nimport DialogTitle from './DialogTitle';\nimport DialogFooter from './DialogFooter';\n\nconst DIFF_KEYS = ['style', 'height', 'width', 'contentStyle'];\n\n/**\n * The `Dialog` is just a static component for creating dialogs. Dialogs\n * seemed like they could be used outside of the `DialogContainer` component,\n * so it was exposed as well. In *most* cases, you will still want to use\n * the `DialogContainer` component.\n */\nexport default class Dialog extends PureComponent {\n  static propTypes = {\n    /**\n     * @see {@link Dialogs/DialogContainer#id}\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#aria-describedby}\n     */\n    'aria-describedby': oneRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'title', 'aria-labelledby', 'aria-label'),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#aria-labelledby}\n     */\n    'aria-labelledby': PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#aria-label}\n     */\n    'aria-label': PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional styke to apply to the title.\n     */\n    titleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the title.\n     */\n    titleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the footer. This is used when the `actions`\n     * prop is defined.\n     */\n    footerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the footer. This is used when the `actions`\n     * prop is defined.\n     */\n    footerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's content.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog's content.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * The component to render the content as. This is helpful if you would like to use\n     * the CSSTransitionGroup. This really just saves a tiny bit of markup.\n     *\n     * ```js\n     * <Dialog\n     *   contentComponent={CSSTransitionGroup}\n     *   contentProps={{\n     *     transitionName: 'md-cross-fade',\n     *     transitionLeave: false,\n     *     transitionEnterTimeout: 150,\n     *   }}\n     * >\n     *   {dynamicContent}\n     * </Dialog>\n     * ```\n     */\n    contentComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * Any additional props to pass to the content component.\n     */\n    contentProps: PropTypes.object,\n\n    /**\n     * An optional title to display in the dialog.\n     */\n    title: PropTypes.node,\n\n    /**\n     * Any children to display in the content of the dialog.\n     */\n    children: PropTypes.node,\n\n    /**\n     * A single action or a list of actions to display in the dialog. This can either be a list\n     * of `FlatButton` props or `<Button flat {...props} />` elements.\n     */\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.object,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.object,\n      ])),\n    ]),\n\n    /**\n     * @see {@link Helpers/FocusContainer#additionalFocusKeys}\n     */\n    additionalFocusKeys: FocusContainer.propTypes.additionalFocusKeys,\n\n    /**\n     * @see {@link Helpers/FocusContainer#initialFocus}\n     */\n    initialFocus: FocusContainer.propTypes.initialFocus,\n\n    /**\n     * @see {@link Helpers/FocusContainer#focusOnMount}\n     */\n    focusOnMount: FocusContainer.propTypes.focusOnMount,\n\n    /**\n     * @see {@link Helpers/FocusContainer#containFocus}\n     */\n    containFocus: FocusContainer.propTypes.containFocus,\n\n    /**\n     * An optional x coordinate on the page that caused a full page dialog\n     * to be created. This is really just used for a `transformOrigin` style.\n     */\n    pageX: PropTypes.number,\n\n    /**\n     * An optional y coordinate on the page that caused a full page dialog\n     * to be created. This is really just used for a `transformOrigin` style.\n     */\n    pageY: PropTypes.number,\n\n    /**\n     * An optional x scroll position of the container holding the dialog. This\n     * is really just used for a `transformOrigin` style on full page dialogs.\n     */\n    containerX: PropTypes.number,\n\n    /**\n     * An optional y scroll position of the container holding the dialog. This\n     * is really just used for a `transformOrigin` style on full page dialogs.\n     */\n    containerY: PropTypes.number,\n\n    /**\n     * Boolean if the dialog should be rendered as a full page dialog.\n     */\n    fullPage: PropTypes.bool,\n\n    /**\n     * The zDepth to use for the dialog.\n     */\n    zDepth: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when the dialog has been opened. This is\n     * really just used for the `DialogContainer`.\n     */\n    onOpen: PropTypes.func,\n\n    /**\n     * An optional function to call when the dialog has been closed. This is\n     * really just used for the `DialogContainer`.\n     */\n    onLeave: PropTypes.func,\n\n    /**\n     * Boolean if the dialog should be centered in the page.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the content should be padded. This will take precedence\n     * over the `autopadContent` prop. So if this is defined, that value\n     * will be used instead of any thing that was was calculated in this\n     * component.\n     *\n     * @see {@link #autopadContent}\n     */\n    paddedContent: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should automatically try to determine if the content\n     * should be padded. It will be padded if the dialog does not contain a `List`.\n     */\n    autopadContent: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog content's size should automatically be resized to overflow\n     * correctly when there is a lot of content. This will calculate and apply some `maxHeight`\n     * to the `contentStyle`.\n     */\n    autosizeContent: PropTypes.bool,\n\n    /**\n     * An optional height to apply to the dialog. This is used if it is easier to just apply height/width\n     * with for specific dialogs instead of in CSS.\n     *\n     * **This prop should not be used if the `fullPage` prop is enabled.**\n     *\n     * @see {@link #fullPage}\n     * @see {@link #width}\n     */\n    height: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional width to apply to the dialog. This is used if it is easier to just apply height/width\n     * with for specific dialogs instead of in CSS.\n     *\n     * **This prop should not be used if the `fullPage` prop is enabled.**\n     *\n     * @see {@link #fullPage}\n     * @see {@link #height}\n     */\n    width: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Boolean if the actions should be stacked on top of each other. If this value is `undefined`, it will\n     * automatically attempt to guess if the items should be stacked.\n     */\n    stackedActions: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    autopadContent: true,\n    autosizeContent: true,\n    contentComponent: 'section',\n    zDepth: 5,\n  };\n\n  static childContextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super();\n\n    const { height, width } = props;\n    let styles = props.style;\n    if (height || width) {\n      styles = styles || {};\n      styles = { height, width, ...styles };\n    }\n\n    this.state = {\n      styles,\n      contentStyles: props.contentStyle,\n      contentPadded: false,\n    };\n  }\n\n  getChildContext() {\n    return { renderNode: this._renderNode };\n  }\n\n  componentWillMount() {\n    const { pageX, pageY } = this.props;\n    if (!pageX || !pageY) {\n      return;\n    }\n\n    this.setState({ styles: this._getStyles(this.props) });\n  }\n\n  componentDidMount() {\n    if (this.props.onOpen) {\n      this.props.onOpen();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (DIFF_KEYS.some(key => nextProps[key] !== this.props[key])) {\n      this.setState({\n        styles: this._getStyles(nextProps),\n        contentStyles: { ...this.state.contentStyles, ...nextProps.contentStyle },\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.onLeave) {\n      this.props.onLeave();\n    }\n  }\n\n  _getStyles = ({ pageX, containerX, pageY, containerY, height, width, style } = this.props) => ({\n    height: typeof height !== 'undefined' ? height : null,\n    width: typeof width !== 'undefined' ? width : null,\n    transformOrigin: pageX || pageY ? `${pageX - containerX}px ${pageY - containerY}px` : null,\n    ...style,\n  });\n\n  _setRenderNode = (dialog) => {\n    this._renderNode = findDOMNode(dialog);\n  };\n\n  _setContent = (content) => {\n    if (content !== null) {\n      this._content = findDOMNode(content);\n      const contentPadded = this._content.querySelectorAll('.md-list').length === 0;\n\n      this.setState({ contentPadded });\n    }\n  };\n\n  _handleContentResize = ({ scrollHeight, el: content }) => {\n    const maxHeight = content.style.maxHeight;\n    const dialog = content.parentNode;\n    content.style.maxHeight = 'none';\n    const title = this.props.title ? dialog.querySelector('.md-title--dialog') : null;\n    const footer = this.props.actions ? dialog.querySelector('.md-dialog-footer') : null;\n\n    const totalHeight = dialog.offsetHeight - (title ? title.offsetHeight : 0) - (footer ? footer.offsetHeight : 0);\n    content.style.maxHeight = maxHeight;\n    const equalHeight = totalHeight === scrollHeight;\n    if (equalHeight) {\n      const currentHeight = (this.state.contentStyles && this.state.contentStyles.maxHeight) || null;\n      if (currentHeight && currentHeight !== scrollHeight) {\n        this.setState({ contentStyles: this.props.contentStyle });\n      }\n    } else {\n      this.setState({ contentStyles: { maxHeight: totalHeight, ...this.props.contentStyle } });\n    }\n  };\n\n  render() {\n    const { contentPadded, styles, contentStyles } = this.state;\n    const {\n      id,\n      className,\n      titleStyle,\n      titleClassName,\n      footerStyle,\n      footerClassName,\n      contentClassName,\n      title,\n      contentComponent: Content,\n      contentProps,\n      actions,\n      children,\n      fullPage,\n      centered,\n      autopadContent,\n      paddedContent,\n      autosizeContent,\n      stackedActions,\n      /* eslint-disable no-unused-vars */\n      style,\n      contentStyle,\n      pageX,\n      pageY,\n      containerX,\n      containerY,\n      onOpen,\n      onLeave,\n      height,\n      width,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { 'aria-labelledby': labelledBy } = this.props;\n    const titleId = `${id}-title`;\n    if (!labelledBy && title) {\n      labelledBy = titleId;\n    }\n\n    const padDefined = typeof paddedContent !== 'undefined';\n    const dialogChildren = fullPage ? children : [\n      <DialogTitle\n        key=\"title\"\n        id={titleId}\n        style={titleStyle}\n        className={titleClassName}\n      >\n        {title}\n      </DialogTitle>,\n      <Content\n        ref={!padDefined && autopadContent ? this._setContent : null}\n        key=\"content\"\n        {...contentProps}\n        style={contentStyles}\n        className={cn('md-dialog-content', {\n          'md-dialog-content--padded': padDefined ? paddedContent : contentPadded,\n        }, contentClassName)}\n      >\n        {autosizeContent ? <ResizeObserver watchHeight watchWidth onResize={this._handleContentResize} /> : null}\n        {children}\n      </Content>,\n      <DialogFooter\n        key=\"footer\"\n        style={footerStyle}\n        className={footerClassName}\n        actions={actions}\n        stacked={stackedActions}\n      />,\n    ];\n\n    return (\n      <Paper\n        {...props}\n        id={id}\n        component={FocusContainer}\n        ref={this._setRenderNode}\n        style={styles}\n        className={cn('md-dialog', {\n          'md-dialog--full-page': fullPage,\n          'md-dialog--centered': centered,\n        }, className)}\n        role=\"dialog\"\n        aria-labelledby={labelledBy}\n      >\n        {dialogChildren}\n      </Paper>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport AccessibleFakeButton from '../Helpers/AccessibleFakeButton';\nimport Layover from '../Helpers/Layover';\nimport Dialog from '../Dialogs/Dialog';\n\nexport default class EditDialog extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    textFieldId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    dialogStyle: PropTypes.object,\n    dialogClassName: PropTypes.string,\n    dialogContentStyle: PropTypes.object,\n    dialogContentClassName: PropTypes.string,\n    children: PropTypes.node,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    visible: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    placeholder: PropTypes.bool,\n    title: PropTypes.node,\n    large: PropTypes.bool,\n    actions: Dialog.propTypes.actions,\n    dialogZDepth: PropTypes.number,\n    header: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      id,\n      dialogStyle,\n      dialogClassName,\n      dialogContentStyle,\n      dialogContentClassName,\n      textFieldId,\n      visible,\n      header,\n      onOpen,\n      children,\n      label,\n      title,\n      large,\n      actions,\n      placeholder,\n      dialogZDepth,\n      ...props\n    } = this.props;\n\n    const field = (\n      <AccessibleFakeButton\n        className={cn('md-edit-dialog__label', {\n          'md-edit-dialog__header': header,\n        }, themeColors({ hint: placeholder || header }))}\n        noFocusOutline={visible}\n        onClick={onOpen}\n        onFocus={onOpen}\n      >\n        {label}\n      </AccessibleFakeButton>\n    );\n\n    return (\n      <Layover\n        {...props}\n        id={`${id}-layover`}\n        toggle={field}\n        visible={visible}\n        block\n        belowAnchor={null}\n      >\n        <Dialog\n          id={id}\n          aria-labelledby={!large ? textFieldId : undefined}\n          style={dialogStyle}\n          className={cn('md-edit-dialog', themeColors({ background: true, themeText: false }), dialogClassName)}\n          contentStyle={dialogContentStyle}\n          contentClassName={cn('md-edit-dialog__content', dialogContentClassName)}\n          title={large ? title : null}\n          focusOnMount\n          containFocus={!!large}\n          paddedContent={false}\n          actions={large ? actions : null}\n          zDepth={dialogZDepth}\n        >\n          {children}\n        </Dialog>\n      </Layover>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { ENTER, ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport themeColors from '../utils/themeColors';\nimport viewport from '../utils/Positioning/viewport';\nimport controlled from '../utils/PropTypes/controlled';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Layover from '../Helpers/Layover';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TextField from '../TextFields/TextField';\nimport TableColumn from './TableColumn';\nimport EditDialog from './EditDialog';\nimport findTable from './findTable';\nimport findFixedTo from './findFixedTo';\n\n/**\n * The `EditDialogColumn` is used when there should be used when a table column's value\n * can be changed. It can either be displayed as a dialog or inline.\n *\n * All props that are not documented but provided will be passed on to the `TextField`\n * component.\n */\nexport default class EditDialogColumn extends PureComponent {\n  static VerticalAnchors = Layover.VerticalAnchors;\n  static HorizontalAnchors = Layover.HorizontalAnchors;\n  static Positions = Layover.Positions;\n\n  static propTypes = {\n    /**\n     * An optional id to use for the text field in the column. If this is omitted,\n     * the id will be `${dialogId}-field`.\n     *\n     * @see {@link #dialogId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to use for the dialog that appears in the column. If this is omitted,\n     * the id will be `${rowId}-${cellIndex}-edit-dialog-field`.\n     */\n    dialogId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * The optional style to apply to the edit dialog's column.\n     */\n    style: PropTypes.object,\n\n    /**\n     * The optional className to apply to the edit dialog's column.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's surrounding `Layover` component.\n     */\n    layoverStyle: PropTypes.object,\n\n    /**\n     * An optional className to the dialog's surrounding `Layover` component.\n     */\n    layoverClassName: PropTypes.string,\n\n    /**\n     * The optional style to apply to the edit dialog.\n     */\n    dialogStyle: PropTypes.object,\n\n    /**\n     * The optional className to apply to the edit dialog.\n     */\n    dialogClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's content area. This is the area\n     * that holds the text field.\n     */\n    dialogContentStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the dialog's content area. This is the area\n     * that holds the text field.\n     */\n    dialogContentClassName: PropTypes.string,\n\n    /**\n     * The zDepth to apply to the dialog when not inline.\n     *\n     * @see {@link Papers/Paper#zDepth}\n     */\n    dialogZDepth: PropTypes.number.isRequired,\n\n    /**\n     * An optional style to apply to the text field.\n     */\n    textFieldStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the text field.\n     */\n    textFieldClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the text field's input.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the text field's input.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * Boolean if the edit dialog is currently disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the text field should be editable inline instead of in a dialog.\n     *\n     * @see {@link #inlineIcon}\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * An optional icon to set for the inline edit dialog column. Setting this prop to null\n     * will not render an icon.\n     */\n    inlineIcon: PropTypes.element,\n\n    /**\n     * The default value to use for the text field.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * A value to use for the edit dialog text field. This will make the component controlled\n     * so you will need to provide an `onChange` function.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional function to call when the text field's value has changed. This is required\n     * if the `value` prop has been defined.\n     *\n     * @see {@link TextFields/TextField#onChange}\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional function to call when the text field gains focus.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when the keydown event is triggered on the text field.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional label for the text field. When displaying an `inline` edit dialog column,\n     * the `placeholder` prop should be used instead. This is because the text field changes\n     * to the `block` type when `inline`.\n     *\n     * @see {@link #inline}\n     * @see {@link #placeholder}\n     * @see {@link TextFields/TextField#block}\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder for the text field.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * Boolean if the edit dialog should become a large dialog. When the dialog is large,\n     * the `title` prop is required.\n     *\n     * A large dialog has a Title followed by the text field, and then a cancel and ok action\n     * buttons below.\n     */\n    large: PropTypes.bool,\n\n    /**\n     * The title to use for the large edit dialog. This prop is required if the `large` prop\n     * is enabled.\n     */\n    title: PropTypes.node,\n\n    /**\n     * An optional `maxLength` to apply to the text field.\n     *\n     * @see {@link TextFields/TextField#maxLength}\n     */\n    maxLength: PropTypes.number,\n\n    /**\n     * An optional function to call when the \"Ok\" button has been clicked, the user presses enter\n     * on * the text field or when the `okOnOutsideClick` prop has been enabled and the user clicks\n     * somewhere on the page.\n     *\n     * The callback will include the current value and the click or keypress event.\n     * ```js\n     * onOkClick(value, event)\n     * ```\n     *\n     * @see {@link #large}\n     */\n    onOkClick: PropTypes.func,\n\n    /**\n     * The label to use for the \"Ok\" button in large dialogs.\n     *\n     * @see {@link #large}\n     */\n    okLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the \"Ok\" button in large dialogs should be styled with the primary color.\n     * To get a `default` styled button, set both `okPrimary` and `okSecondary` (or omit `okSecondary`)\n     * to `false`.\n     *\n     * @see {@link #large}\n     * @see {@link #okSecondary}\n     */\n    okPrimary: PropTypes.bool,\n\n    /**\n     * Boolean if the \"Ok\" button in large dialogs should be styled with the secondary color.\n     *\n     * @see {@link #large}\n     * @see {@link #okPrimary}\n     */\n    okSecondary: PropTypes.bool,\n\n    /**\n     * Any additional props to apply to the \"Ok\" button. This will override any of the other\n     * button props.\n     *\n     * @see {@link #okLabel}\n     * @see {@link #okPrimary}\n     * @see {@link #okSecondary}\n     */\n    okProps: PropTypes.object,\n\n    /**\n     * An optional function to call when the \"Cancel\" button has been clicked in large edit dialogs.\n     * The callback will include the text field's value before any edits occurred and the click event.\n     *\n     * ```js\n     * onCancelClick(previousValue, event)\n     * ```\n     *\n     * @see {@link #large}\n     */\n    onCancelClick: PropTypes.func,\n\n    /**\n     * The label to give to the \"Cancel\" button in large edit dialogs.\n     *\n     * @see {@link #large}\n     */\n    cancelLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the \"Cancel\" button in large dialogs should be styled with the primary color.\n     * To get a `default` styled button, set both `cancelPrimary` and `cancelSecondary` (or\n     * omit `cancelSecondary`) to `false`.\n     *\n     * @see {@link #large}\n     * @see {@link #cancelSecondary}\n     */\n    cancelPrimary: PropTypes.bool,\n\n    /**\n     * Boolean if the \"Cancel\" button in large dialogs should be styled with the secondary color.\n     *\n     * @see {@link #large}\n     * @see {@link #cancelPrimary}\n     */\n    cancelSecondary: PropTypes.bool,\n\n    /**\n     * Any additional props to apply to the \"Cancel\" button. This will override any of the other\n     * button props.\n     *\n     * @see {@link #cancelLabel}\n     * @see {@link #cancelPrimary}\n     * @see {@link #cancelSecondary}\n     */\n    cancelProps: PropTypes.object,\n\n    /**\n     * Boolean if the action for clicking somewhere on on the page while the dialog is open\n     * saves the changes or cancels to the previous value before opening the dialog.\n     *\n     * @see {@link #onOkClick}\n     * @see {@link #onCancelClick}\n     */\n    okOnOutsideClick: PropTypes.bool,\n\n    /**\n     * An optional function to call when a user clicks out of the text field.\n     */\n    onOutsideClick: PropTypes.func,\n\n    /**\n     * Boolean if the edit dialog should be closed if the user clicks somewhere else on the page\n     * while the dialog is open.\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * Boolean if the Edit Dialog should be visible by default. This only applies when the `inline` prop\n     * is not enabled.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the edit dialog should automatically open when the text field is focused for non-inline\n     * dialogs. This is enabled by default for backwards compatibility.\n     */\n    visibleOnFocus: PropTypes.bool,\n\n    /**\n     * The type for the text field in the edit dialog.\n     *\n     * @see {@link TextFields/TextField#type}\n     */\n    type: PropTypes.string,\n\n    /**\n     * This is how the dialog gets \"anchored\" to the table column.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the animation position to use for the dialog.\n     *\n     * @see {@link Helpers/Layover#animationPosition}\n     */\n    animationPosition: positionShape,\n\n    /**\n     * This is how the dialog should be fixed within the table. When this is omitted, it will\n     * automatically use the responsive table as the fixture so that the dialog will close/adjust itself\n     * to the scrolling of the table.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * @see {@link Helpers/Layover#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#centered}\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#sameWidth}\n     */\n    sameWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * The optional tooltip to render on hover.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the dialog.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedDialog: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: Layover.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: Layover.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: Layover.propTypes.minBottom,\n\n    /**\n     * Boolean if the edit dialog should attempt to scroll into view if the full\n     * dialog can not be displayed in the viewport when it was toggled open.\n     *\n     * @see {@link #scrollIntoViewPadding}\n     */\n    scrollIntoView: PropTypes.bool,\n\n    /**\n     * The amount of padding that should be applied when the cell is scrolled into view.\n     * This will be applied to the left of the cell.\n     */\n    scrollIntoViewPadding: PropTypes.number,\n\n    /**\n     * An optional function to call when the `click` event is triggered in the column.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mousedown` event is triggered in the column.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseup` event is triggered in the column.\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchstart` event is triggered in the column.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchend` event is triggered in the column.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseenter` event is triggered in the column.\n     */\n    onMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseover` event is triggered in the column.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseleave` event is triggered in the column.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchmove` event is triggered in the column.\n     */\n    onTouchMove: PropTypes.func,\n\n    /**\n     * This is injected by the `TableRow` component.\n     * @access private\n     */\n    header: PropTypes.bool,\n\n    /**\n     * This is injected by the `TableRow` component and used to help generate the unique id for the text\n     * field.\n     *\n     * @access private\n     */\n    cellIndex: PropTypes.number,\n\n    /**\n     * @access private\n     */\n    adjusted: PropTypes.bool,\n\n    inlineIconChildren: deprecated(PropTypes.node, 'Use the `inlineIcon` prop instead'),\n    inlineIconClassName: deprecated(PropTypes.string, 'Use the `inlineIcon` prop instead'),\n    noIcon: deprecated(PropTypes.bool, 'Set the `inlineIcon` prop to `null` instead'),\n    enforceMinWidth: deprecated(\n      PropTypes.bool,\n      'The min width will always be enforced based on the `$md-edit-dialog-min-width` Sass variable'\n    ),\n    scrollThreshold: deprecated(\n      PropTypes.number,\n      'Use `xThreshold` and `yThreshold` instead'\n    ),\n    transitionDuration: deprecated(\n      PropTypes.number,\n      'use `transitionEnterTimeout` and `transitionLeaveTimeout` instead'\n    ),\n  };\n\n  static defaultProps = {\n    type: 'text',\n    defaultValue: '',\n    okOnOutsideClick: true,\n    inlineIcon: <FontIcon>edit</FontIcon>,\n    okLabel: 'Save',\n    okPrimary: true,\n    cancelLabel: 'Cancel',\n    cancelPrimary: true,\n    animationPosition: EditDialogColumn.Positions.BELOW,\n    dialogZDepth: 1,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n    scrollIntoView: true,\n    scrollIntoViewPadding: 16,\n    minLeft: 0,\n    minRight: 0,\n    minBottom: 0,\n    visibleOnFocus: true,\n    defaultVisible: false,\n  };\n\n  static contextTypes = {\n    rowId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.defaultVisible,\n      value: props.defaultValue,\n      cancelValue: props.defaultValue,\n      actions: this._makeActions(props),\n      cellIndex: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this._column = findDOMNode(this);\n    this._table = findTable(this._column);\n    this._fixedTo = findFixedTo(this._table);\n\n    // If a developer creates their own component to wrap the EditDialogColumn, the cellIndex prop\n    // might not be defined if they don't pass ...props\n    const { cellIndex } = this.props;\n    if (!cellIndex && cellIndex !== 0) {\n      const columns = [].slice.call(this._column.parentNode.querySelectorAll('th,td'));\n      this.setState({ cellIndex: columns.indexOf(this._column) }); // eslint-disable-line react/no-did-mount-set-state\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      okLabel,\n      okPrimary,\n      okSecondary,\n      okProps,\n      cancelLabel,\n      cancelPrimary,\n      cancelSecondary,\n      cancelProps,\n    } = this.props;\n\n    if (okLabel !== nextProps.okLabel || okPrimary !== nextProps.okPrimary\n      || okSecondary !== nextProps.okSecondary || cancelLabel !== nextProps.cancelLabel\n      || cancelPrimary !== nextProps.cancelPrimary || cancelSecondary !== nextProps.cancelSecondary\n      || okProps !== nextProps.okProps || cancelProps !== nextProps.cancelProps\n    ) {\n      this.setState({ actions: this._makeActions(nextProps) });\n    }\n  }\n\n  _setField = (field) => {\n    this._field = field;\n  };\n\n  _makeActions = (props) => {\n    const {\n      okLabel,\n      okPrimary,\n      okSecondary,\n      okProps,\n      cancelLabel,\n      cancelPrimary,\n      cancelSecondary,\n      cancelProps,\n    } = props;\n\n    return [{\n      key: 'cancel',\n      children: cancelLabel,\n      primary: cancelPrimary && !cancelSecondary,\n      secondary: cancelSecondary,\n      ...cancelProps,\n      onClick: this._handleCancel,\n    }, {\n      key: 'ok',\n      children: okLabel,\n      primary: okPrimary && !okSecondary,\n      secondary: okSecondary,\n      ...okProps,\n      onClick: this._handleOk,\n    }];\n  };\n\n  _handleOpen = (e) => {\n    if (this._skipNextOpen) {\n      this._skipNextOpen = false;\n    } else if (this.props.visibleOnFocus || !e || e.type !== 'focus') {\n      const { scrollIntoView, scrollIntoViewPadding } = this.props;\n      if (scrollIntoView) {\n        const vp = viewport(this._column);\n        if (vp !== true && this._table && this._column && !this.props.inline) {\n          this._table.scrollLeft = this._column.offsetLeft - scrollIntoViewPadding;\n        }\n      }\n\n      this.setState({ visible: true, cancelValue: getField(this.props, this.state, 'value') });\n    }\n  };\n\n  _handleClose = (e) => {\n    const { onOutsideClick, okOnOutsideClick } = this.props;\n    if (onOutsideClick) {\n      onOutsideClick(e);\n    }\n\n    if (okOnOutsideClick) {\n      this._handleOk(e);\n    } else {\n      this._handleCancel(e);\n    }\n  };\n\n  _handleChange = (value, e) => {\n    if (this.props.onChange) {\n      this.props.onChange(value, e);\n    }\n\n    if (typeof this.props.value === 'undefined') {\n      this.setState({ value });\n    }\n  };\n\n  _handleFocus = (e) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    if (this.props.inline) {\n      this.setState({ cancelValue: e.target.value });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    const { onKeyDown, okOnOutsideClick, large } = this.props;\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n    if (key === ENTER) {\n      this._handleOk(e);\n    } else if (key === ESC) {\n      this._handleCancel(e);\n    } else if (key === TAB && !large) {\n      // infinitely opens otherwise...\n      this._skipNextOpen = e.shiftKey;\n\n      if (okOnOutsideClick) {\n        this._handleOk(e);\n      } else {\n        this._handleCancel(e);\n      }\n    }\n  };\n\n  _handleOk = (e) => {\n    if (this.props.onOkClick) {\n      this.props.onOkClick(getField(this.props, this.state, 'value'), e);\n    }\n\n    this.setState({ visible: false });\n  };\n\n  _handleCancel = (e) => {\n    const value = this.state.cancelValue;\n    if (this.props.onCancelClick) {\n      this.props.onCancelClick(value, e);\n    }\n\n    const state = { visible: false };\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    this.setState(state);\n  };\n\n  render() {\n    const { rowId } = this.context;\n    const {\n      style,\n      className,\n      layoverStyle,\n      layoverClassName,\n      dialogStyle,\n      dialogClassName,\n      dialogContentStyle,\n      dialogContentClassName,\n      dialogZDepth,\n      textFieldStyle,\n      textFieldClassName,\n      inputClassName,\n      large,\n      title,\n      inline,\n      inlineIcon,\n      maxLength,\n      label,\n      placeholder,\n      header,\n      anchor,\n      belowAnchor,\n      fixedTo,\n      animationPosition,\n      xThreshold,\n      yThreshold,\n      centered,\n      sameWidth,\n      repositionOnScroll,\n      repositionOnResize,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      onClick,\n      onMouseDown,\n      onMouseUp,\n      onTouchStart,\n      onTouchEnd,\n      onMouseEnter,\n      onMouseOver,\n      onMouseLeave,\n      onTouchMove,\n      simplifiedDialog,\n      minLeft,\n      minRight,\n      minBottom,\n\n      // deprecated\n      noIcon,\n      inlineIconChildren,\n      inlineIconClassName,\n      /* eslint-disable no-unused-vars */\n      id: propId,\n      dialogId: propDialogId,\n      cellIndex: propCellIndex,\n      onOkClick,\n      okLabel,\n      okPrimary,\n      okSecondary,\n      okProps,\n      onCancelClick,\n      cancelLabel,\n      cancelPrimary,\n      cancelSecondary,\n      cancelProps,\n      okOnOutsideClick,\n      defaultValue,\n      adjusted,\n      scrollIntoView,\n      scrollIntoViewPadding,\n      defaultVisible,\n      visibleOnFocus,\n\n      // deprecated\n      scrollThreshold,\n      enforceMinWidth,\n      transitionDuration,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    const { visible, actions } = this.state;\n    const value = getField(this.props, this.state, 'value');\n    const cellIndex = getField(this.props, this.state, 'cellIndex');\n\n    let { id, dialogId } = this.props;\n    if (!dialogId) {\n      dialogId = `${id || `${rowId}-${cellIndex}`}-edit-dialog`;\n    }\n\n    if (!id) {\n      id = `${dialogId}-field`;\n    }\n\n    let inlineEditIcon;\n    if (inline && !noIcon) {\n      const icon = getDeprecatedIcon(inlineIconClassName, inlineIconChildren, inlineIcon);\n      if (icon) {\n        inlineEditIcon = React.cloneElement(icon, { key: 'edit-icon' });\n      }\n    }\n\n    const numeric = props.type === 'number';\n    const field = (\n      <TextField\n        {...props}\n        ref={this._setField}\n        style={textFieldStyle}\n        className={cn({ 'md-edit-dialog__blocked-field': inline }, textFieldClassName)}\n        inputClassName={cn({\n          'md-edit-dialog__header': header && inline,\n          'md-text-right': numeric,\n        }, themeColors({ hint: header && inline }), inputClassName)}\n        id={id}\n        label={label}\n        placeholder={placeholder}\n        value={value}\n        onFocus={this._handleFocus}\n        onChange={this._handleChange}\n        onKeyDown={this._handleKeyDown}\n        block={inline}\n        maxLength={visible ? maxLength : null}\n        rightIcon={inlineEditIcon}\n      />\n    );\n\n    let children;\n    if (inline) {\n      children = field;\n    } else {\n      const dialogLabel = value || value === 0 ? value : placeholder || label;\n      children = (\n        <EditDialog\n          style={layoverStyle}\n          className={layoverClassName}\n          dialogStyle={dialogStyle}\n          dialogClassName={dialogClassName}\n          dialogContentStyle={dialogContentStyle}\n          dialogContentClassName={dialogContentClassName}\n          id={dialogId}\n          textFieldId={id}\n          visible={visible}\n          onOpen={this._handleOpen}\n          onClose={this._handleClose}\n          label={dialogLabel}\n          actions={actions}\n          large={large}\n          title={title}\n          header={header}\n          placeholder={dialogLabel === placeholder || dialogLabel === label}\n          simplified={simplifiedDialog}\n          anchor={anchor}\n          belowAnchor={belowAnchor}\n          animationPosition={animationPosition}\n          xThreshold={xThreshold}\n          yThreshold={yThreshold}\n          centered={centered}\n          sameWidth={sameWidth}\n          minLeft={minLeft}\n          minRight={minRight}\n          minBottom={minBottom}\n          fixedTo={typeof fixedTo !== 'undefined' ? fixedTo : this._fixedTo}\n          dialogZDepth={dialogZDepth}\n          repositionOnScroll={repositionOnScroll}\n          repositionOnResize={repositionOnResize}\n          transitionName={transitionName}\n          transitionEnterTimeout={transitionEnterTimeout}\n          transitionLeaveTimeout={transitionLeaveTimeout}\n        >\n          {field}\n        </EditDialog>\n      );\n    }\n\n    return (\n      <TableColumn\n        style={style}\n        numeric={numeric}\n        className={cn('md-edit-dialog-column', className)}\n        header={header}\n        adjusted={false}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n        onClick={onClick}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onTouchStart={onTouchStart}\n        onTouchMove={onTouchMove}\n        onMouseEnter={onMouseEnter}\n        onMouseOver={onMouseOver}\n        onMouseLeave={onMouseLeave}\n        onTouchEnd={onTouchEnd}\n      >\n        {children}\n      </TableColumn>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport SelectField from '../SelectFields/SelectField';\nimport withTableFixes from './withTableFixes';\nimport TableColumn from './TableColumn';\n\n/**\n * The `SelectFieldColumn` component is just a simple wrapper between a `SelectField` and\n * the `TableColumn` components.\n *\n * All props that are on the `SelectField` are also available here (except the naming of style or className).\n * See the [SelectField](/components/select-fields?tab=1#select-field-proptypes) for remaining prop descriptions.\n */\nclass SelectFieldColumn extends PureComponent {\n  static VerticalAnchors = SelectField.VerticalAnchors;\n  static HorizontalAnchors = SelectField.HorizontalAnchors;\n  static Positions = SelectField.Positions;\n  static propTypes = {\n    /**\n     * An optional id to use for the select field in the column. If this is omitted, it's value will be\n     * `${rowId}-${cellIndex}-select-field`\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * This is the optional style to apply to the `TableColumn`.\n     */\n    style: PropTypes.object,\n\n    /**\n     * This is the optional className to apply to the `TableColumn`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The is the optional style to apply to the select field's menu container.\n     *\n     * @see {@link SelectFields/SelectField#style}\n     */\n    menuStyle: PropTypes.object,\n\n    /**\n     * The is the optional class name to apply to the select field's menu container.\n     *\n     * @see {@link SelectFields/SelectField#className}\n     */\n    menuClassName: PropTypes.string,\n\n    /**\n     * This is how the select field should be fixed within the table. When this is omitted,\n     * it will automatically use the responsive table as the fixture so that the select field\n     * will close/adjust itself to the scrolling of the table.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * Boolean if the select field should span the entire width of the column.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * The position for the select field.\n     *\n     * @see {@link SelectFields/SelectField#position}\n     */\n    position: positionShape,\n\n    /**\n     * This is injected by the `TableRow` component.\n     * @access private\n     */\n    header: PropTypes.bool,\n\n    /**\n     * @access private\n     */\n    adjusted: PropTypes.bool,\n\n    /**\n     * The optional tooltip to render on hover.\n     *\n     * @see {@link DataTables/TableColumn#tooltipLabel}\n     */\n    tooltipLabel: PropTypes.string,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     *\n     * @see {@link DataTables/TableColumn#tooltipDelay}\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     *\n     * @see {@link DataTables/TableColumn#tooltipPosition}\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    wrapperStyle: deprecated(PropTypes.object, 'There is no longer a wrapper'),\n    wrapperClassName: deprecated(PropTypes.string, 'There is no longer a wrapper'),\n  };\n\n  static defaultProps = {\n    position: SelectFieldColumn.Positions.BELOW,\n    fullWidth: true,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n    simplifiedMenu: false,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      menuStyle,\n      menuClassName,\n      header,\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      /* eslint-disable no-unused-vars */\n      adjusted,\n\n      // deprecated\n      wrapperStyle,\n      wrapperClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    return (\n      <TableColumn\n        header={header}\n        style={style}\n        className={cn('md-select-field-column', className)}\n        adjusted={false}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n      >\n        <SelectField {...props} style={menuStyle} className={menuClassName} />\n      </TableColumn>\n    );\n  }\n}\n\nexport default withTableFixes(SelectFieldColumn, 'select-field');\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport mapToListParts from '../utils/mapToListParts';\nimport getField from '../utils/getField';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Menu from './Menu';\n\n/**\n * The `DropdownMenu` is just a simple wrapper to the `Menu` component. The main differences\n * is that the `toggle` component will now be the children and the list of items to display\n * will be the `menuItems` prop.\n *\n * The dropdown menu is mostly used to control the state of the menu and render a single element\n * as the toggle.\n */\nexport default class DropdownMenu extends PureComponent {\n  static Positions = Menu.Positions;\n  static HorizontalAnchors = Menu.HorizontalAnchors;\n  static VerticalAnchors = Menu.VerticalAnchors;\n  static propTypes = {\n    /**\n     * An id to use for the menu. This is required for accessibility.\n     *\n     * @see {@link Menus/Menu#id}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the menu's list.\n     *\n     * @see {@link Menus/Menu#listId}\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the menu.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the menu.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the list.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the list.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * Any additional props to provide to the list.\n     *\n     * @see {@link Menus/Menu#listProps}\n     */\n    listProps: PropTypes.object,\n\n    /**\n     * The z-depth to use for the list.\n     *\n     * @see {@link Menus/Menu/listZDepth}\n     */\n    listZDepth: PropTypes.number,\n\n    /**\n     * Boolean if the list should be displayed inline.\n     *\n     * @see {@link Lists/List#inline}\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * Boolean if the list's height should be restricted.\n     *\n     * @see {@link Menus/Menu#listHeightRestricted}\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list is currently visible. If this is defined, it will\n     * require the `onVisibilityChange` function to be defined since it will become\n     * a controlled component.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * Boolean if the menu's list should be visible by default.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * An optional function to call when the button is clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the visibility changes for the menu. The callback will\n     * include the next visibility state and the event that triggered the change.\n     *\n     * ```js\n     * onVisibilityChange(visible, event);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * This is a 0 to many relationship of `ListItem` to display in the menu's `List`. If the type\n     * of the item is a number or string, it will be passed to the `ListItem` as the `primaryText`.\n     * If it is an object, it should be the shape of the `ListItem` props. If it is a node, it will\n     * just be rendered in the `List`.\n     *\n     * @see {@link Lists/ListItem}\n     * @see {@link Menus/Menu#children}\n     */\n    menuItems: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.object,\n        PropTypes.node,\n      ])),\n    ]),\n\n    /**\n     * @see {@link Menus/Menu#toggle}\n     */\n    children: PropTypes.element.isRequired,\n\n    /**\n     * The anchor position of the menu's list.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is how the menu's list is fixed to the toggle.\n     *\n     * @see {@link Menus/Menu#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * This is the animation position for the menu's list.\n     *\n     * @see {@link Menus/Menu#position}\n     */\n    position: positionShape,\n\n    /**\n     * Boolean if the menu's list should gain the cascading styles.\n     *\n     * @see {@link Menus/Menu#cascading}\n     */\n    cascading: PropTypes.bool,\n\n    /**\n     * The zDepth to use for the lists that appear in cascading menus.\n     *\n     * @see {@link Menus/Menu#cascadingZDepth}\n     */\n    cascadingZDepth: PropTypes.number,\n\n    /**\n     * The anchor position for the cascading lists.\n     *\n     * @see {@link Menus/Menu#cascadingAnchor}\n     */\n    cascadingAnchor: anchorShape,\n\n    /**\n     * Boolean if the menu should display as a full width container. This will *not* update the button\n     * to be full width as well.\n     *\n     * @see {@link Menus/Menu#fullWidth}\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's container should display as `block` instead of `inline-block`.\n     *\n     * @see {@link Menus/Menu#block}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the list should appear centered related to the button.\n     *\n     * @see {@link Menus/Menu#centered}\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list should be the same width as the button.\n     *\n     * @see {@link Menus/Menu#sameWidth}\n     */\n    sameWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Menus/Menu#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Menus/Menu#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * Boolean if the menu's list should be closed when an element outside of the menu has been clicked.\n     *\n     * @see {@link Menus/Menu#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * The transition name to use for the menu's list visibility changes.\n     *\n     * @see {@link Menus/Menu#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * The transition name to use when the menu's list gains visibility.\n     *\n     * @see {@link Menus/Menu#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * The transition timeout to use when the menu's list loses visibility.\n     *\n     * @see {@link Menus/Menu#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: Menu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: Menu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: Menu.propTypes.minBottom,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    defaultVisible: false,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    if (typeof props.visible === 'undefined') {\n      this.state.visible = props.defaultVisible;\n    }\n  }\n\n  _handleClick = (e) => {\n    const { onVisibilityChange, children } = this.props;\n    const visible = !getField(this.props, this.state, 'visible');\n    if (onVisibilityChange) {\n      onVisibilityChange(visible, e);\n    }\n\n    const toggle = React.Children.only(children);\n    if (toggle.props.onClick) {\n      toggle.props.onClick(e);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n    }\n  };\n\n  _handleClose = (e) => {\n    const { onVisibilityChange } = this.props;\n    const visible = false;\n    if (onVisibilityChange) {\n      onVisibilityChange(visible, e);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n    }\n  };\n\n  render() {\n    const {\n      id,\n      listId,\n      menuItems,\n      children: propChildren,\n      simplifiedMenu,\n      /* eslint-disable no-unused-vars */\n      visible: propVisible,\n      onVisibilityChange,\n      defaultVisible,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const visible = getField(this.props, this.state, 'visible');\n\n    const children = React.Children.only(propChildren);\n    const toggle = React.cloneElement(children, {\n      id: children.props.id || `${id}-toggle`,\n      onClick: this._handleClick,\n    });\n\n    let items;\n    if (!Array.isArray(menuItems)) {\n      items = mapToListParts(menuItems);\n    } else {\n      items = menuItems.map(mapToListParts);\n    }\n\n    return (\n      <Menu\n        {...props}\n        simplified={simplifiedMenu}\n        id={id}\n        listId={listId}\n        toggle={toggle}\n        visible={visible}\n        onClose={this._handleClose}\n      >\n        {items}\n      </Menu>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Button from '../Buttons/Button';\nimport DropdownMenu from './DropdownMenu';\n\n/**\n * The `MenuButton` is a simple wrapper / combination of the `Button` and the `Menu`\n * components that can be uncontrolled.\n */\nexport default class MenuButton extends PureComponent {\n  static Positions = DropdownMenu.Positions;\n  static HorizontalAnchors = DropdownMenu.HorizontalAnchors;\n  static VerticalAnchors = DropdownMenu.VerticalAnchors;\n  static propTypes = {\n    /**\n     * An id to use for the menu button. This is required for accessibility.\n     *\n     * @see {@link Menus/Menu#id}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the menu's list.\n     *\n     * @see {@link Menus/Menu#listId}\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the button. If this is omitted, the button will automatically\n     * gain an id of `${id}-toggle`.\n     */\n    buttonId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the button.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the button.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the surrounding menu.\n     */\n    menuStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the surrounding menu.\n     */\n    menuClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the list.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional class name to apply to the list.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * Any additional props to provide to the list.\n     *\n     * @see {@link Menus/Menu#listProps}\n     */\n    listProps: PropTypes.object,\n\n    /**\n     * The z-depth to use for the list.\n     *\n     * @see {@link Menus/Menu/listZDepth}\n     */\n    listZDepth: PropTypes.number,\n\n    /**\n     * Boolean if the list should be displayed inline.\n     *\n     * @see {@link Lists/List#inline}\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * Boolean if the list's height should be restricted.\n     *\n     * @see {@link Menus/Menu#listHeightRestricted}\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list is currently visible. If this is defined, it will\n     * require the `onVisibilityChange` function to be defined since it will become\n     * a controlled component.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * Boolean if the menu's list should be visible by default.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * An optional function to call when the button is clicked.\n     *\n     * @see {@link #onMenuClick}\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mousedown` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseDown}\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseup` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseUp}\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseenter` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseEnter}\n     */\n    onMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mousemove` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseMove}\n     */\n    onMouseMove: PropTypes.func,\n\n    /**\n     * An optional function to call when the `mouseleave` event is triggered by the button.\n     *\n     * @see {@link #onMenuMouseLeave}\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchstart` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchStart}\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchmove` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchMove}\n     */\n    onTouchMove: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchend` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchEnd}\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `touchcancel` event is triggered by the button.\n     *\n     * @see {@link #onMenuTouchCancel}\n     */\n    onTouchCancel: PropTypes.func,\n\n    /**\n     * An optional function to call when the `focus` event is triggered by the button.\n     *\n     * @see {@link #onMenuFocus}\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when the `blur` event is triggered by the button.\n     *\n     * @see {@link #onMenuBlur}\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keydown` event is triggered by the button.\n     *\n     * @see {@link #onMenuKeyDown}\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keyup` event is triggered by the button.\n     *\n     * @see {@link #onMenuKeyUp}\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the entire `MenuButton` is clicked. This can be triggered\n     * by clicking the button or any list item that appears in the menu list.\n     *\n     * @see {@link #onClick}\n     */\n    onMenuClick: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mousedown` event.\n     *\n     * @see {@link #onMouseDown}\n     */\n    onMenuMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseup` event.\n     *\n     * @see {@link #onMouseUp}\n     */\n    onMenuMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseenter` event.\n     *\n     * @see {@link #onMouseEnter}\n     */\n    onMenuMouseEnter: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mousemove` event.\n     *\n     * @see {@link #onMouseMove}\n     */\n    onMenuMouseMove: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `mouseleave` event.\n     *\n     * @see {@link #onMouseLeave}\n     */\n    onMenuMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchstart` event.\n     *\n     * @see {@link @onTouchStart}\n     */\n    onMenuTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchmove` event.\n     *\n     * @see {@link @onTouchMove}\n     */\n    onMenuTouchMove: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchend` event.\n     *\n     * @see {@link @onTouchEnd}\n     */\n    onMenuTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `touchcancel` event.\n     *\n     * @see {@link @onTouchCancel}\n     */\n    onMenuTouchCancel: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `focus` event.\n     *\n     * @see {@link #onFocus}\n     */\n    onMenuFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `blur` event.\n     *\n     * @see {@link #onBlur}\n     */\n    onMenuBlur: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `keydown` event.\n     *\n     * @see {@link #onKeyDown}\n     */\n    onMenuKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when any element in the `MenuButton` triggers the `keyup` event.\n     *\n     * @see {@link #onKeyUp}\n     */\n    onMenuKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when the visibility changes for the menu. The callback will\n     * include the next visibility state and the event that triggered the change.\n     *\n     * ```js\n     * onVisibilityChange(visible, event);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * This is a 0 to many relationship of `ListItem` to display in the menu's `List`. If the type\n     * of the item is a number or string, it will be passed to the `ListItem` as the `primaryText`.\n     * If it is an object, it should be the shape of the `ListItem` props. If it is a node, it will\n     * just be rendered in the `List`.\n     *\n     * @see {@link Lists/ListItem}\n     * @see {@link Menus/Menu#children}\n     */\n    menuItems: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.node,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.object,\n        PropTypes.node,\n      ])),\n    ]),\n\n    /**\n     * This should be the children to use in the `Button` that gets created as the menu's toggle.\n     *\n     * @see {@link Buttons/Button}\n     * @see {@link Menus/Menu#toggle}\n     */\n    children: PropTypes.node,\n\n    /**\n     * The anchor position of the menu's list.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is how the menu's list is fixed to the toggle.\n     *\n     * @see {@link Menus/Menu#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * This is the animation position for the menu's list.\n     *\n     * @see {@link Menus/Menu#position}\n     */\n    position: positionShape,\n\n    /**\n     * Boolean if the menu's list should gain the cascading styles.\n     *\n     * @see {@link Menus/Menu#cascading}\n     */\n    cascading: PropTypes.bool,\n\n    /**\n     * The zDepth to use for the lists that appear in cascading menus.\n     *\n     * @see {@link Menus/Menu#cascadingZDepth}\n     */\n    cascadingZDepth: PropTypes.number,\n\n    /**\n     * The anchor position for the cascading lists.\n     *\n     * @see {@link Menus/Menu#cascadingAnchor}\n     */\n    cascadingAnchor: anchorShape,\n\n    /**\n     * Boolean if the menu should display as a full width container. This will *not* update the button\n     * to be full width as well.\n     *\n     * @see {@link Menus/Menu#fullWidth}\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's container should display as `block` instead of `inline-block`.\n     *\n     * @see {@link Menus/Menu#block}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * Boolean if the list should appear centered related to the button.\n     *\n     * @see {@link Menus/Menu#centered}\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the menu's list should be the same width as the button.\n     *\n     * @see {@link Menus/Menu#sameWidth}\n     */\n    sameWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Menus/Menu#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Menus/Menu#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * Boolean if the menu's list should be closed when an element outside of the menu has been clicked.\n     *\n     * @see {@link Menus/Menu#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * The transition name to use for the menu's list visibility changes.\n     *\n     * @see {@link Menus/Menu#transitionName}\n     */\n    transitionName: PropTypes.string,\n\n    /**\n     * The transition name to use when the menu's list gains visibility.\n     *\n     * @see {@link Menus/Menu#transitionEnterTimeout}\n     */\n    transitionEnterTimeout: PropTypes.number,\n\n    /**\n     * The transition timeout to use when the menu's list loses visibility.\n     *\n     * @see {@link Menus/Menu#transitionLeaveTimeout}\n     */\n    transitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: DropdownMenu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: DropdownMenu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: DropdownMenu.propTypes.minBottom,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    buttonChildren: deprecated(\n      PropTypes.node,\n      'To build a button, put any elements in the `children`. The `ListItem` have been moved to the `menuItems` prop'\n    ),\n    onMenuToggle: deprecated(PropTypes.bool, 'Use `onVisibilityChange` instead'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n  };\n\n  static defaultProps = {\n    defaultVisible: false,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n  };\n\n  render() {\n    const {\n      id,\n      listId,\n      buttonId,\n      menuStyle,\n      menuClassName,\n      listStyle,\n      listClassName,\n      listProps,\n      listZDepth,\n      listInline,\n      listHeightRestricted,\n      menuItems,\n      buttonChildren,\n      children,\n      anchor,\n      belowAnchor,\n      fixedTo,\n      position,\n      cascading,\n      cascadingAnchor,\n      cascadingZDepth,\n      fullWidth,\n      block,\n      centered,\n      sameWidth,\n      repositionOnScroll,\n      repositionOnResize,\n      xThreshold,\n      yThreshold,\n      closeOnOutsideClick,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      visible,\n      defaultVisible,\n      onVisibilityChange,\n      simplifiedMenu,\n      minLeft,\n      minRight,\n      minBottom,\n      fillViewportWidth,\n      fillViewportHeight,\n      onMenuClick,\n      onMenuMouseDown,\n      onMenuMouseUp,\n      onMenuMouseEnter,\n      onMenuMouseMove,\n      onMenuMouseLeave,\n      onMenuTouchStart,\n      onMenuTouchMove,\n      onMenuTouchCancel,\n      onMenuTouchEnd,\n      onMenuFocus,\n      onMenuBlur,\n      onMenuKeyDown,\n      onMenuKeyUp,\n      isOpen, // deprecated\n      defaultOpen, // deprecated\n      onMenuToggle, // deprecated\n      ...props\n    } = this.props;\n\n    let items = children;\n    let toggleChildren = buttonChildren;\n    if (typeof menuItems !== 'undefined') {\n      toggleChildren = children;\n      items = menuItems;\n    }\n\n    return (\n      <DropdownMenu\n        id={id}\n        listId={listId}\n        style={menuStyle}\n        className={menuClassName}\n        listStyle={listStyle}\n        listClassName={listClassName}\n        listProps={listProps}\n        listInline={listInline}\n        listZDepth={listZDepth}\n        listHeightRestricted={listHeightRestricted}\n        visible={typeof isOpen !== 'undefined' ? isOpen : visible}\n        defaultVisible={typeof defaultOpen !== 'undefined' ? defaultOpen : defaultVisible}\n        menuItems={items}\n        simplifiedMenu={simplifiedMenu}\n        anchor={anchor}\n        belowAnchor={belowAnchor}\n        fixedTo={fixedTo}\n        position={position}\n        cascading={cascading}\n        cascadingAnchor={cascadingAnchor}\n        cascadingZDepth={cascadingZDepth}\n        fullWidth={fullWidth}\n        block={block}\n        centered={centered}\n        sameWidth={sameWidth}\n        minLeft={minLeft}\n        minRight={minRight}\n        minBottom={minBottom}\n        fillViewportWidth={fillViewportWidth}\n        fillViewportHeight={fillViewportHeight}\n        repositionOnScroll={repositionOnScroll}\n        repositionOnResize={repositionOnResize}\n        xThreshold={xThreshold}\n        yThreshold={yThreshold}\n        closeOnOutsideClick={closeOnOutsideClick}\n        transitionName={transitionName}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n        onVisibilityChange={onMenuToggle || onVisibilityChange}\n        onClick={onMenuClick}\n        onMouseDown={onMenuMouseDown}\n        onMouseUp={onMenuMouseUp}\n        onMouseEnter={onMenuMouseEnter}\n        onMouseMove={onMenuMouseMove}\n        onMouseLeave={onMenuMouseLeave}\n        onTouchStart={onMenuTouchStart}\n        onTouchMove={onMenuTouchMove}\n        onTouchCancel={onMenuTouchCancel}\n        onTouchEnd={onMenuTouchEnd}\n        onFocus={onMenuFocus}\n        onBlur={onMenuBlur}\n        onKeyDown={onMenuKeyDown}\n        onKeyUp={onMenuKeyUp}\n      >\n        <Button {...props} id={buttonId}>\n          {toggleChildren}\n        </Button>\n      </DropdownMenu>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fixedToShape from '../Helpers/fixedToShape';\nimport withTableFixes from './withTableFixes';\nimport MenuButton from '../Menus/MenuButton';\nimport TableColumn from './TableColumn';\n\nclass MenuButtonColumn extends PureComponent {\n  static Positions = MenuButton.Positions;\n  static HorizontalAnchors = MenuButton.HorizontalAnchors;\n  static VerticalAnchors = MenuButton.VerticalAnchors;\n  static propTypes = {\n    /**\n     * An optional id to use for the menu button in the column. If this is omitted, it's value will be\n     * `${rowId}-${cellIndex}-menu-button`\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * This is the optional style to apply to the `TableColumn`.\n     */\n    style: PropTypes.object,\n\n    /**\n     * This is the optional className to apply to the `TableColumn`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The is the optional style to apply to the menu button's menu container.\n     *\n     * @see {@link Menus/MenuButton#style}\n     */\n    menuStyle: PropTypes.object,\n\n    /**\n     * The is the optional class name to apply to the menu button's menu container.\n     *\n     * @see {@link Menus/MenuButton#className}\n     */\n    menuClassName: PropTypes.string,\n\n    /**\n     * This is how the select field should be fixed within the table. When this is omitted,\n     * it will automatically use the responsive table as the fixture so that the select field\n     * will close/adjust itself to the scrolling of the table.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * The optional tooltip to render on hover.\n     *\n     * @see {@link DataTables/TableColumn#tooltipLabel}\n     */\n    tooltipLabel: PropTypes.string,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     *\n     * @see {@link DataTables/TableColumn#tooltipDelay}\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     *\n     * @see {@link DataTables/TableColumn#tooltipPosition}\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * This is injected by the `TableRow` component.\n     * @access private\n     */\n    header: PropTypes.bool,\n\n    /**\n     * @access private\n     */\n    adjusted: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    simplifiedMenu: false,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      menuStyle,\n      menuClassName,\n      header,\n      adjusted,\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      ...props\n    } = this.props;\n    return (\n      <TableColumn\n        style={style}\n        className={className}\n        header={header}\n        adjusted={adjusted}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n      >\n        <MenuButton {...props} style={menuStyle} className={menuClassName} />\n      </TableColumn>\n    );\n  }\n}\n\nexport default withTableFixes(MenuButtonColumn, 'menu-button');\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fixedToShape from '../Helpers/fixedToShape';\nimport withTableFixes from './withTableFixes';\nimport DropdownMenu from '../Menus/DropdownMenu';\nimport TableColumn from './TableColumn';\n\nclass DropdownMenuColumn extends PureComponent {\n  static Positions = DropdownMenu.Positions;\n  static HorizontalAnchors = DropdownMenu.HorizontalAnchors;\n  static VerticalAnchors = DropdownMenu.VerticalAnchors;\n  static propTypes = {\n    /**\n     * An optional id to use for the menu button in the column. If this is omitted, it's value will be\n     * `${rowId}-${cellIndex}-menu-button`\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * This is the optional style to apply to the `TableColumn`.\n     */\n    style: PropTypes.object,\n\n    /**\n     * This is the optional className to apply to the `TableColumn`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The is the optional style to apply to the menu button's menu container.\n     *\n     * @see {@link Menus/DropdownMenu#style}\n     */\n    menuStyle: PropTypes.object,\n\n    /**\n     * The is the optional class name to apply to the menu button's menu container.\n     *\n     * @see {@link Menus/DropdownMenu#className}\n     */\n    menuClassName: PropTypes.string,\n\n    /**\n     * This is how the select field should be fixed within the table. When this is omitted,\n     * it will automatically use the responsive table as the fixture so that the select field\n     * will close/adjust itself to the scrolling of the table.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * The optional tooltip to render on hover.\n     *\n     * @see {@link DataTables/TableColumn#tooltipLabel}\n     */\n    tooltipLabel: PropTypes.string,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     *\n     * @see {@link DataTables/TableColumn#tooltipDelay}\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     *\n     * @see {@link DataTables/TableColumn#tooltipPosition}\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * This is injected by the `TableRow` component.\n     * @access private\n     */\n    header: PropTypes.bool,\n\n    /**\n     * @access private\n     */\n    adjusted: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    simplifiedMenu: false,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      menuStyle,\n      menuClassName,\n      header,\n      adjusted,\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      ...props\n    } = this.props;\n    return (\n      <TableColumn\n        style={style}\n        className={className}\n        header={header}\n        adjusted={adjusted}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n      >\n        <DropdownMenu {...props} style={menuStyle} className={menuClassName} />\n      </TableColumn>\n    );\n  }\n}\n\nexport default withTableFixes(DropdownMenuColumn, 'menu-button');\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport oneRequired from '../utils/PropTypes/oneRequired';\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport CardTitleBlock from '../Cards/CardTitleBlock';\n\n/**\n * The `TableCardHeader` is used when contextual actions should appear when\n * a user selects a row.\n */\nexport default class TableCardHeader extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * The transition name to use when the contextual header appears.\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition time to use when the contextual header appears.\n     */\n    transitionEnterTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition time to use when the contextual header disappears.\n     */\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n\n    /**\n     * An optional title to display. It is invalid to have both `title` and `leftChildren`\n     * defined as only one will be used.\n     */\n    title: oneRequired(PropTypes.node, 'leftChildren', 'children'),\n\n    /**\n     * An optional id to provide to the title.\n     */\n    titleId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional title to display in the contextual header. This will get wrapped in an `h2`\n     * tag and additional styles applied.\n     */\n    contextualTitle: PropTypes.node,\n\n    /**\n     * An optional id to provide to the contextual title.\n     */\n    contextualTitleId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Any additional children to display in the contextual header. This will be displayed after\n     * the optional `contextualTile` and before the `actions`.\n     */\n    contextualChildren: PropTypes.node,\n\n    /**\n     * An optional button or list of buttons to display instead of a title.\n     */\n    leftChildren: invalidIf(PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]), 'title'),\n\n    /**\n     * An additional children to display after the `title` or `leftChildren` prop.\n     * This is _normally_ a list of icon button or menu button.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]),\n\n    /**\n     * An optional button/menu button or a list of button/menu button to display in the\n     * contextual header once the user has selected a row or multiple rows.\n     */\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]),\n\n    /**\n     * Boolean if the `actions` prop should not have each element cloned with additional\n     * class names.\n     */\n    noActionsAdjust: PropTypes.bool,\n\n    /**\n     * Boolean if the `children` prop should not have each element cloned with additional\n     * class names.\n     */\n    noChildrenAdjust: PropTypes.bool,\n\n    /**\n     * Boolean if the `leftChildren` prop should not have each element cloned with additional\n     * class names.\n     */\n    noLeftChildrenClone: PropTypes.bool,\n\n    /**\n     * Boolean if the contextual header is currently visible.\n     */\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    component: 'header',\n    transitionName: 'md-drop-down',\n    transitionEnterTimeout: 150,\n    transitionLeaveTimeout: 150,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { animating: false };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { visible } = this.props;\n    const { visible: nVisible, transitionEnterTimeout, transitionLeaveTimeout } = nextProps;\n    const timeout = !nVisible ? transitionLeaveTimeout : transitionEnterTimeout;\n    if (visible !== nVisible) {\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n      }\n\n      this._timeout = setTimeout(() => {\n        this._timeout = setTimeout(() => {\n          this._timeout = null;\n          this.setState({ animating: false });\n        }, timeout);\n      }, TICK);\n\n      if (!this.state.animating) {\n        this.setState({ animating: true });\n      }\n    }\n  }\n\n  _cloneCellRight(noAdjust, children) {\n    if (noAdjust || !children) {\n      return children;\n    }\n\n    return Children.map(Children.toArray(children), (child, i) => {\n      if (i === 0) {\n        return cloneElement(child, { className: cn('md-cell--right', child.props.className) });\n      }\n\n      return child;\n    });\n  }\n\n  _cloneLeftChildren(noClone, children) {\n    if (noClone || !children) {\n      return children;\n    }\n\n    return Children.map(Children.toArray(children), child => cloneElement(child, {\n      className: cn('md-btn--dialog', child.props.className),\n    }));\n  }\n\n  render() {\n    const { animating } = this.state;\n    const {\n      style,\n      className,\n      title,\n      titleId,\n      actions,\n      contextualTitleId,\n      contextualChildren,\n      noActionsAdjust,\n      noChildrenAdjust,\n      noLeftChildrenClone,\n      visible,\n      /* eslint-disable no-unused-vars */\n      children: propChildren,\n      leftChildren: propLeftChildren,\n      contextualTitle: propContextualTitle,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { children, leftChildren, contextualTitle } = this.props;\n    children = this._cloneCellRight(noChildrenAdjust, children);\n    leftChildren = this._cloneLeftChildren(noLeftChildrenClone, leftChildren);\n\n    if (title) {\n      children = (\n        <div className=\"md-card-title\" key=\"main-title\">\n          <CardTitleBlock id={titleId} title={title} />\n          {children}\n        </div>\n      );\n    } else if (leftChildren) {\n      leftChildren = Children.toArray(leftChildren);\n\n      if (children) {\n        children = leftChildren.concat(Children.toArray(children));\n      } else {\n        children = leftChildren;\n      }\n    }\n\n    if (contextualTitle) {\n      contextualTitle = (\n        <h2\n          id={contextualTitleId}\n          className=\"md-card-title--title md-card-title--title-contextual\"\n          tabIndex={contextualTitleId ? -1 : null}\n        >\n          {contextualTitle}\n        </h2>\n      );\n    }\n\n    const contextualHeader = (\n      <div key=\"contextual-header\" className=\"md-card-title md-card-title--contextual\">\n        {contextualTitle}\n        {contextualChildren}\n        {this._cloneCellRight(noActionsAdjust, actions)}\n      </div>\n    );\n\n    let mergedStyles = style;\n    if (animating) {\n      mergedStyles = Object.assign({}, style, { overflow: 'hidden' });\n    }\n\n    return (\n      <CSSTransitionGroup\n        {...props}\n        style={mergedStyles}\n        className={cn('md-table-card-header', {\n          'md-table-card-header--no-title': !title,\n        }, className)}\n      >\n        {children}\n        {visible ? contextualHeader : null}\n      </CSSTransitionGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { ESC } from '../constants/keyCodes';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getField from '../utils/getField';\nimport toggleScroll from '../utils/toggleScroll';\nimport oneRequiredForA11y from '../utils/PropTypes/oneRequiredForA11y';\nimport Dialog from './Dialog';\nimport Portal from '../Helpers/Portal';\n\n/**\n * The `DialogContainer` component is used for dynamically creating the `Dialog` with\n * transitions.\n */\nexport default class DialogContainer extends PureComponent {\n  /* eslint-disable max-len */\n  static propTypes = {\n    /**\n     * An id to use for the `Dialog` once it has been opened. This is used for the\n     * [dialog role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_dialog_role).\n     * This is used to generate an `id` for the `title` prop when it has been defined.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n    /* eslint-enable max-len */\n\n    /**\n     * An optional accessibility prop to use when the `Dialog` is opened. This should be an id\n     * pointing to some text that describes the content of the dialog. For accessibility\n     * reasons, one of the following props must be defined:\n     * - `title`\n     * - `aria-describedby`\n     * - `aria-labelledby`\n     * - `aria-label`\n     *\n     * An example usage:\n     *\n     * ```js\n     * <Dialog id=\"accessible-example\" visible aria-describedby=\"accessible-content\">\n     *   <p id=\"accessible-content\">This is some content that describes the dialog.</p>\n     * </Dialog>\n     * ```\n     */\n    'aria-describedby': oneRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'title', 'aria-labelledby', 'aria-label'),\n\n    /**\n     * An optional accessibility prop to use when the `title` prop is not given. This should be\n     * an id pointing to a `h` tag that labels the dialog.\n     *\n     * An example usage:\n     *\n     * ```js\n     * <Dialog visible id=\"accessible-example\" aria-labelledby=\"accessible-dialog-label\">\n     *   <h2 id=\"accessible-dialog-label\">Some Accessible Dialog</h2>\n     * </Dialog>\n     * ```\n     */\n    'aria-labelledby': PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional accessibility prop to use when the `title` and `aria-labelledby` props are\n     * not defined. This should be a string that describes what is in the `Dialog`.\n     *\n     * An example usage:\n     *\n     * ```js\n     * <Dialog visible id=\"accessible-example\" aria-label=\"Some Accessible Dialog\">\n     *   <p>Lorem Ipsum</p>\n     * </Dialog>\n     * ```\n     */\n    'aria-label': PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog itself when the `visible` prop is `true`.\n     */\n    dialogStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog itself when the `visible` prop is `true`.\n     */\n    dialogClassName: PropTypes.string,\n\n    /**\n     * An optional styke to apply to the title.\n     */\n    titleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the title.\n     */\n    titleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the footer. This is used when the `actions`\n     * prop is defined.\n     */\n    footerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the footer. This is used when the `actions`\n     * prop is defined.\n     */\n    footerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the dialog's content.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the dialog's content.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * The component to render the dialog's container in.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * The component to render the dialog's content in.\n     */\n    contentComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * The content to display in the dialog once open.\n     */\n    children: PropTypes.node,\n\n    /**\n     * A single action or a list of actions to display in the dialog. This can either be a list\n     * of `FlatButton` props or `<Button flat {...props} />` elements.\n     */\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.object,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.object,\n      ])),\n    ]),\n\n    /**\n     * Boolean if the `Dialog` is current visible.\n     */\n    visible: PropTypes.bool.isRequired,\n\n    /**\n     * An optional function to call when the `visible` prop is changed from `false` to `true`.\n     */\n    onShow: PropTypes.func,\n\n    /**\n     * A function to call that will close the dialog. This is required when the `modal` and `fullPage`\n     * props are not `true`.\n     */\n    onHide: (props, propName, ...args) => {\n      let validator = PropTypes.func;\n      if (!props.modal && !props.fullPage) {\n        validator = validator.isRequired;\n      }\n\n      return validator(props, propName, ...args);\n    },\n\n    /**\n     * Boolean if the dialog should behave like a modal. This means that the dialog can only\n     * be closed by clicking on an action instead of also clicking on the overlay.\n     *\n     * NOTE: Unless the `closeOnEsc` prop is disabled as well, the user can still press the escape\n     * key to close this modal.\n     */\n    modal: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be displayed as a full page dialog.\n     */\n    fullPage: (props, propName, componentName, ...args) => {\n      const componentNameSafe = componentName || '<<anonymous>>';\n      let err = PropTypes.bool(props, propName, componentName, ...args);\n\n      if (!err && props[propName] && typeof props.title !== 'undefined') {\n        err = new Error(\n          `You provided a \\`title\\` ${location} to the \\`${componentNameSafe}\\` when \\`fullPage\\` ` +\n          'has been set to true. A title for a full page dialog should be rendered as a child instead.'\n        );\n      }\n\n      return err;\n    },\n\n    /**\n     * An optional pageX location to use when rendering a full page dialog. This is used to set the location\n     * the dialog should appear from.\n     */\n    pageX: PropTypes.number,\n\n    /**\n     * An optional pageY location to use when rendering a full page dialog. This is used to set the location\n     * the dialog should appear from.\n     */\n    pageY: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/FocusContainer#additionalFocusKeys}\n     */\n    additionalFocusKeys: Dialog.propTypes.additionalFocusKeys,\n\n    /**\n     * @see {@link Helpers/FocusContainer#initialFocus}\n     */\n    initialFocus: Dialog.propTypes.initialFocus,\n\n    /**\n     * @see {@link Helpers/FocusContainer#focusOnMount}\n     */\n    focusOnMount: Dialog.propTypes.focusOnMount,\n\n    /**\n     * @see {@link Helpers/FocusContainer#containFocus}\n     */\n    containFocus: Dialog.propTypes.containFocus,\n\n    /**\n     * The transition enter timeout for the dialog.\n     */\n    transitionEnterTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition leave timeout for the dialog.\n     */\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the dialog should be closable by pressing the escape key.\n     */\n    closeOnEsc: PropTypes.bool,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the dialog.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * Since the `Dialog` uses the `Portal` component, you can pass an optional HTML Node to render\n     * the dialog in instead of the `document.body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the dialog should be rendered as the last child in the `renderNode` or `body` instead\n     * of as the first.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * An optional title for the dialog.\n     */\n    title: PropTypes.node,\n\n    /**\n     * Boolean if the dialog should animate into view if it is constructed with `visible` enabled.\n     *\n     * This basically means that if the `Dialog` has `visible` enabled on initial page load, does it animate?\n     * In some cases, it can also mean if the `Dialog` is added to the render tree with `visible` enabled,\n     * does it animate?\n     */\n    defaultVisibleTransitionable: PropTypes.bool,\n\n    /**\n     * Boolean if the Dialog should no longer try to prevent the parent container from scrolling while visible.\n     * In most cases, this will attempt to prevent the main window scrolling. If this dialog is nested in another\n     * dialog, it will attempt to prevent the parent dialog from scrolling.\n     */\n    disableScrollLocking: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should automatically try to determine if the content\n     * should be padded. It will be padded if the dialog does not contain a `List`.\n     */\n    autopadContent: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog content's size should automatically be resized to overflow\n     * correctly when there is a lot of content. This will calculate and apply some `maxHeight`\n     * to the `contentStyle`.\n     */\n    autosizeContent: PropTypes.bool,\n\n    /**\n     * An optional height to apply to the dialog. This is used if it is easier to just apply height/width\n     * with for specific dialogs instead of in CSS.\n     *\n     * **This prop should not be used if the `fullPage` prop is enabled.**\n     *\n     * @see {@link #fullPage}\n     * @see {@link #width}\n     */\n    height: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional width to apply to the dialog. This is used if it is easier to just apply height/width\n     * with for specific dialogs instead of in CSS.\n     *\n     * **This prop should not be used if the `fullPage` prop is enabled.**\n     *\n     * @see {@link #fullPage}\n     * @see {@link #height}\n     */\n    width: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Boolean if the actions should be stacked on top of each other. If this value is `undefined`, it will\n     * automatically attempt to guess if the items should be stacked.\n     */\n    stackedActions: PropTypes.bool,\n\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    transitionName: deprecated(PropTypes.string, 'The transition name will be managed by the component'),\n    transitionEnter: deprecated(PropTypes.bool, 'The transition will always be enforced'),\n    transitionLeave: deprecated(PropTypes.bool, 'The transition will always be enforced'),\n    actionLeft: deprecated(PropTypes.node, 'Use the `fullPage` prop instead'),\n    actionRight: deprecated(PropTypes.node, 'Use the `fullPage` prop instead'),\n    close: deprecated(PropTypes.func, 'Use `onHide` instead'),\n  };\n\n  static defaultProps = {\n    autopadContent: true,\n    autosizeContent: true,\n    component: 'span',\n    closeOnEsc: true,\n    contentComponent: 'section',\n    focusOnMount: true,\n    transitionEnterTimeout: 300,\n    transitionLeaveTimeout: 300,\n    defaultVisibleTransitionable: false,\n  };\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const visible = typeof props.isOpen !== 'undefined' ? props.isOpen : props.visible;\n    const dialogVisible = visible && !props.defaultVisibleTransitionable;\n\n    this.state = {\n      active: visible && !props.fullPage,\n      portalVisible: visible,\n      dialogVisible,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.isOpen && !this.props.visible) {\n      return;\n    }\n\n    this._mountDialog(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const visible = typeof nextProps.isOpen !== 'undefined' ? nextProps.isOpen : nextProps.visible;\n    if (this.props.isOpen === visible || this.props.visible === visible) {\n      return;\n    }\n\n    const el = getField(this.props, this.context, 'renderNode') || window;\n    let { scrollX: pageX, scrollY: pageY } = el;\n    if (typeof el.scrollTop !== 'undefined' && typeof el.scrollLeft !== 'undefined') {\n      pageX = el.scrollLeft;\n      pageY = el.scrollTop;\n    } else if (typeof el.scrollY !== 'undefined' && typeof el.scrollX !== 'undefined') {\n      pageX = el.scrollX;\n      pageY = el.scrollY;\n    }\n\n    this._pageX = pageX;\n    this._pageY = pageY;\n\n    if (this._inTimeout) {\n      clearTimeout(this._inTimeout);\n      this._inTimeout = null;\n    }\n\n    if (visible) {\n      this._activeElement = document.activeElement;\n      this._mountPortal(nextProps);\n    } else {\n      this.setState({ dialogVisible: false, active: false });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { visible, closeOnEsc } = this.props;\n\n    // Only going to support visible here since it was not implemented before.\n    if (visible === prevProps.visible && closeOnEsc === prevProps.closeOnEsc) {\n      return;\n    }\n\n    let add = false;\n    let remove = false;\n    if (closeOnEsc !== prevProps.closeOnEsc) {\n      add = visible && closeOnEsc;\n      remove = !visible || (prevProps.closeOnEsc && !closeOnEsc);\n    } else if (closeOnEsc) {\n      add = visible;\n      remove = !visible;\n    }\n\n    if (add) {\n      window.addEventListener('keydown', this._handleEscClose);\n    } else if (remove) {\n      window.removeEventListener('keydown', this._handleEscClose);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.isOpen || this.props.visible) {\n      toggleScroll(false);\n    }\n\n    if (this.props.visible && this.props.closeOnEsc) {\n      window.removeEventListener('keydown', this._handleEscClose);\n    }\n\n    if (this._inTimeout) {\n      clearTimeout(this._inTimeout);\n    }\n  }\n\n  _setContainer = (container) => {\n    if (container !== null) {\n      this._container = findDOMNode(container);\n    }\n  };\n\n  _handleEscClose = (e) => {\n    if ((e.which || e.keyCode) === ESC) {\n      (this.props.onHide || this.props.close)(e);\n    }\n  };\n\n  _mountPortal = (props) => {\n    this._mountDialog(props);\n    this.setState({ portalVisible: true });\n  };\n\n  _mountDialog = (props) => {\n    const { fullPage, onShow } = props;\n    this._inTimeout = setTimeout(() => {\n      this._inTimeout = fullPage ? null : setTimeout(() => {\n        this._inTimeout = null;\n        this.setState({ active: true });\n      }, TICK);\n      this.setState({ dialogVisible: true }, onShow);\n    }, TICK);\n  };\n\n  _unmountPortal = () => {\n    this.setState({ portalVisible: false });\n  };\n\n  _handleClick = (e) => {\n    const visible = typeof this.props.isOpen !== 'undefined' ? this.props.isOpen : this.props.visible;\n    if (this.props.modal || !visible || e.target !== this._container) {\n      return;\n    }\n\n    (this.props.onHide || this.props.close)(e);\n  };\n\n  _handleDialogMounting = (dialog) => {\n    const { disableScrollLocking } = this.props;\n    if (dialog === null) {\n      if (this._activeElement && this._activeElement.focus) {\n        this._activeElement.focus();\n      }\n\n      if (!disableScrollLocking) {\n        toggleScroll(false, this.scrollEl);\n      }\n\n      this._activeElement = null;\n    } else {\n      const container = document.getElementById(this.props.id);\n      if (!container || disableScrollLocking) {\n        return;\n      }\n\n      let el = getField(this.props, this.context, 'renderNode');\n      let node = container.parentNode;\n      while (node && node.classList && !el) {\n        if (node.classList.contains('md-dialog')) {\n          el = node;\n        }\n\n        node = node.parentNode;\n      }\n\n      this.scrollEl = el;\n      toggleScroll(true, el);\n    }\n  };\n\n  render() {\n    const { active, dialogVisible, portalVisible } = this.state;\n    const {\n      style,\n      className,\n      dialogStyle,\n      dialogClassName,\n      modal,\n      fullPage,\n      component,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      lastChild,\n      portal,\n      /* eslint-disable no-unused-vars */\n      visible: propVisible,\n      renderNode: propRenderNode,\n      closeOnEsc,\n      onShow,\n      onHide,\n      disableScrollLocking,\n      defaultVisibleTransitionable,\n\n      // deprecated\n      close,\n      isOpen,\n      actionLeft,\n      actionRight,\n      transitionName,\n      transitionEnter,\n      transitionLeave,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const renderNode = getField(this.props, this.context, 'renderNode');\n    const dialog = (\n      <Dialog\n        key=\"dialog\"\n        style={dialogStyle}\n        className={cn('md-background--card', dialogClassName)}\n        ref={this._handleDialogMounting}\n        centered={!fullPage}\n        fullPage={fullPage}\n        {...props}\n        containerX={this._pageX}\n        containerY={this._pageY}\n        onLeave={this._unmountPortal}\n      />\n    );\n\n    const container = (\n      <CSSTransitionGroup\n        component={component}\n        ref={this._setContainer}\n        style={style}\n        className={cn('md-dialog-container', {\n          'md-overlay': !fullPage,\n          'md-overlay--active': !fullPage && active && propVisible,\n          'md-pointer--hover': !fullPage && !modal && propVisible,\n        }, className)}\n        transitionName={`md-dialog--${fullPage ? 'full-page' : 'centered'}`}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n        tabIndex={-1}\n        onClick={this._handleClick}\n      >\n        {dialogVisible ? dialog : null}\n      </CSSTransitionGroup>\n    );\n\n    if (!portal) {\n      return portalVisible ? container : null;\n    }\n\n    return (\n      <Portal visible={portalVisible} renderNode={renderNode} lastChild={lastChild}>\n        {container}\n      </Portal>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Portal from '../Helpers/Portal';\n\nexport default class Overlay extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    active: PropTypes.bool,\n    visible: PropTypes.bool.isRequired,\n    renderNode: PropTypes.object,\n    onClick: PropTypes.func,\n  };\n\n  static childContextTypes = {\n    isInPortal: PropTypes.bool,\n  };\n\n  getChildContext() {\n    // Always want the overlay to render in a separate subtree until 1.1.0\n    return { isInPortal: false };\n  }\n\n  render() {\n    const { active, visible, renderNode, onClick, style, className } = this.props;\n    return (\n      <Portal visible={visible} renderNode={renderNode}>\n        <div\n          style={style}\n          className={cn('md-overlay md-overlay--drawer md-pointer--hover', {\n            'md-overlay--active': active,\n          }, className)}\n          onClick={onClick}\n        />\n      </Portal>\n    );\n  }\n}\n","/** @module Drawers/DrawerTypes */\n\n/**\n * An enum for all the different type of drawers.\n *\n * @readonly\n * @enum {string}\n */\nconst DrawerTypes = {\n  // Permanent drawers\n  /**\n   * This is the default drawer type. It will always be on the screen and takes\n   * up the entire height. This is very helpful for main navigation on desktops\n   * when you do not need an expandable workspace.\n   */\n  FULL_HEIGHT: 'full-height',\n\n  /**\n   * This drawer type will always be on the screen, but it will appear under the\n   * main toolbar.\n   */\n  CLIPPED: 'clipped',\n\n  /**\n   * This drawer type will always be on the screen, but it will appear under the\n   * main toolbar and have a transparent background. This is useful if you want\n   * a persistent drawer on desktop screens, but do not want the main focus to be\n   * the drawer.\n   */\n  FLOATING: 'floating',\n\n  // Persistent drawers\n  /**\n   * A persistent drawer changes between being hidden and being fixed on the page like\n   * a permanent drawer. When it is visible, it will take up the same amount of room\n   * as a permanent drawer, and will not go away until closed.\n   *\n   * This drawer type is helpful when you need to have a dynamic workspace size.\n   */\n  PERSISTENT: 'persistent',\n\n  /**\n   * This is a modification of the persistent drawer. It will behave as the persistent drawer\n   * but it will always have a \"mini\" drawer visible. This is helpful when you want to have\n   * a dynamic workspace size and keep certain actions available at all times.\n   */\n  PERSISTENT_MINI: 'persistent-mini',\n\n  // Temporary\n  /**\n   * A temporary drawer will not be visible by default. When it is visible, it will overlay\n   * the page to get the main focus on the drawer. When the user touches the overlay or\n   * one of the navigation items, the drawer will be closed. The overlay can be disabled on\n   * desktop and tablets.\n   */\n  TEMPORARY: 'temporary',\n\n  /**\n   * This is a modification of the temporary drawer. It will behave like a temporary drawer,\n   * but it will always have a \"mini\" drawer visible. Just like the `PERSISTENT_MINI` drawer\n   * type, this is useful when certain actions should be available at all times but additional\n   * actions are available when the drawer is visible.\n   */\n  TEMPORARY_MINI: 'temporary-mini',\n};\n\nexport default DrawerTypes;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { MOBILE_MIN_WIDTH, TABLET_MIN_WIDTH, DESKTOP_MIN_WIDTH } from '../constants/media';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport getField from '../utils/getField';\nimport mapToListParts from '../utils/mapToListParts';\nimport controlled from '../utils/PropTypes/controlled';\nimport Paper from '../Papers/Paper';\nimport Portal from '../Helpers/Portal';\nimport List from '../Lists/List';\nimport Overlay from './Overlay';\n\nimport { isTemporary, isPermanent, isMini } from './isType';\nimport DrawerTypes from './DrawerTypes';\n\nconst oneOfDrawerTypes = PropTypes.oneOf([\n  DrawerTypes.FULL_HEIGHT,\n  DrawerTypes.CLIPPED,\n  DrawerTypes.FLOATING,\n  DrawerTypes.PERSISTENT,\n  DrawerTypes.PERSISTENT_MINI,\n  DrawerTypes.TEMPORARY,\n  DrawerTypes.TEMPORARY_MINI,\n]);\n\n/**\n * The `Drawer` component is used for having a sliding panel of content or navigation\n * that appears from the side of a screen.\n *\n * If the `Drawer` uses any of the `_MINI` drawer types, you will need to also create another\n * `Drawer` that is not `_MINI`. Transitioning the `width` on mobile devices is very sluggish,\n * and it isn't much more work to create another drawer.\n */\nexport default class Drawer extends PureComponent {\n  static DrawerTypes = DrawerTypes;\n  static propTypes = {\n    /**\n     * An optional id to provide to the drawer. This is generally a good idea to provide if\n     * there are any `navItems` defined.\n     *\n     * @see {@link #navItemsId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the navItems list. If this is omitted and the `id` prop is\n     * defined, it will be defaulted to `${id}-nav-items`.\n     */\n    navItemsId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `List` surrounding the `navItems`.\n     */\n    navStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `List` surrounding the `navItems`.\n     */\n    navClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the overlay.\n     */\n    overlayStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the overlay.\n     */\n    overlayClassName: PropTypes.string,\n\n    /**\n     * An optional component to render the drawer in. When this prop is undefined, the drawer\n     * will be rendered as a `nav` if the `navItems` prop is defined, otherwise an `aside`.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.element,\n      PropTypes.object,\n    ]),\n\n    /**\n     * An optional list of navigation items to display in the drawer. This list can either contain\n     * a valid child component for a `List` or an object used to create a `Divider`, `Subheader`,\n     * or `ListItem`.\n     *\n     * - To create a divider in the list, set a `divider` key to `true`. Any other keys will be\n     * passed to the `Divider` component.\n     * - To create a subheader in the list, set the `subheader` key to `true`. Any other keys will\n     * be passed to the `Subheader` component.\n     * - To create a list item, just create an object with any normal `ListItem` props.\n     */\n    navItems: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({\n        divider: PropTypes.bool,\n        subheader: PropTypes.bool,\n        primaryText: PropTypes.node,\n      }),\n    ])),\n\n    /**\n     * Boolean if a temporary drawer should close when a nav item is clicked.\n     */\n    autoclose: PropTypes.bool,\n\n    /**\n     * An optional header to display. This _should_ normally be a toolbar.\n     */\n    header: PropTypes.node,\n\n    /**\n     * Any additional children to display after the `header` and `navItems`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The drawer type to use when the current device matches the mobile\n     * media query.\n     */\n    mobileType: PropTypes.oneOf([\n      Drawer.DrawerTypes.TEMPORARY,\n      Drawer.DrawerTypes.TEMPORARY_MINI,\n    ]).isRequired,\n\n    /**\n     * The min-width to use for the mobile media query.\n     */\n    mobileMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * The drawer type to use when the current device matches the tablet\n     * media query.\n     */\n    tabletType: oneOfDrawerTypes.isRequired,\n\n    /**\n     * The min-width to use for the tablet media query.\n     */\n    tabletMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * The drawer type to use when the current device matches the desktop media\n     * query.\n     */\n    desktopType: oneOfDrawerTypes.isRequired,\n\n    /**\n     * The min-width for a desktop screen.\n     */\n    desktopMinWidth: PropTypes.number.isRequired,\n\n    /**\n     * An optional type to enforce across all media sizes. Since `mobile` devices are\n     * included, you are required to manually specify when the `type` should be `temporary`.\n     *\n     * When the `type` is not one of the `temporary` types, the `onMediaTypeChange` prop\n     * must be provided.\n     */\n    type: (props, propName, component, ...others) => {\n      const type = props[propName];\n      if (isTemporary(type)) {\n        return oneOfDrawerTypes(props, propName, component, ...others);\n      }\n\n      let err = oneOfDrawerTypes(props, propName, component, ...others);\n      if (!err && typeof type !== 'undefined' && !isMini(type) && typeof props.onMediaTypeChange === 'undefined') {\n        err = new Error(\n          `You provided a \\`${propName}\\` prop to the ${component} without the \\`onMediaTypeChange\\` ` +\n          `handler. The \\`onMediaTypeChange\\` prop must be specified when the \\`${propName}\\` is not ` +\n          'one of the `temporary` types.'\n        );\n      }\n\n      return err;\n    },\n\n    /**\n     * An optional function to call when the drawer's type changes when the screen resizes.\n     * The callback will include the new `type` that should be used for the screen size,\n     * and an object containing the media matches for `mobile`, `tablet`, and `desktop`.\n     *\n     * ```js\n     * this.props.onMediaTypeChange(Drawer.DrawerTypes.TEMPORARY, {\n     *   mobile: true,\n     *   tablet: false,\n     *   desktop: false,\n     * });\n     * ```\n     */\n    onMediaTypeChange: PropTypes.func,\n\n    /**\n     * The default drawer type to display on initial render. The drawer will automatically\n     * adjust itself to the correct media once it has mounted. This prop is really only useful\n     * for server side rendering.\n     */\n    defaultMedia: PropTypes.oneOf(['mobile', 'tablet', 'desktop']).isRequired,\n\n    /**\n     * Boolean if there should be a visible overlay when the drawer is visible. The default behavior\n     * is to only include a visible overlay when the `type` is `TEMPORARY` or `TEMPORARY_MINI` and\n     * the device is not a desktop.\n     *\n     * Definining this variable as `true` or `false` will override any default behavior. This means that\n     * if this is enabled for a full-height drawer, an overlay will still be created.\n     */\n    overlay: PropTypes.bool,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the drawer. The overlay that appears for temporary type drawers will still appear in the\n     * separate subtree.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the drawer into. The default is to render as\n     * the first child in the `body`.\n     *\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n     * since the `Portal` component will not be used.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the drawer should be rendered as the last child instead of the first child\n     * in the `renderNode` or `body`.\n     *\n     * > This prop will not be used when the drawer is of the permanent type or `inline` is specified\n     * since the `Portal` component will not be used.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * Boolean if the drawer is visible by default. If this is omitted, the drawer will be visible\n     * if the current drawer type is NOT `Drawer.DrawerTypes.TEMPORARY` or `Drawer.DrawerTypes.TEMPORARY_MINI`.\n     *\n     * This basically means that if you are using the default configuration, a mobile device's drawer\n     * will be hidden while tablets and desktops will be visible.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the drawer is visible. This will force the component to define the `onVisibilityChange`\n     * prop as well as manually updating the drawer's visibility.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the visibility of the drawer is changed. The function will\n     * be called with the new visibility state.\n     *\n     * ```js\n     * onVisibilityChange(!currentlyVisible);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * The drawer's position on the page when it is not `inline`. When the drawer's position is `left`,\n     * the width will be `calc(100vw - 56px)` on mobile devices and `$md-drawer-desktop-width` on desktops.\n     *\n     * When the position is `right`, the width will be `100vw` for mobile devices and scaling to the drawer's\n     * children width on desktops.\n     */\n    position: PropTypes.oneOf(['left', 'right']).isRequired,\n\n    /**\n     * Boolean if the drawer should be displayed inline instead of fixed to the page. When this prop\n     * is enabled, the `position` prop will not be used.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * The `$md-drawer-transition-time` value from sass.\n     */\n    transitionDuration: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the temporary drawer's overlay should be created on desktop screens. This is really used so that\n     * the drawer will close when a user clicks anywhere on the page except in the drawer.\n     */\n    clickableDesktopOverlay: PropTypes.bool,\n\n    /**\n     * Boolean if the `autoclose` feature should wait for the ink transition to finish before automatically\n     * closing the drawer. This will add a `300ms` delay. If this is `false`, there will only be a `17ms` delay.\n     *\n     * > The delay is required so that any event listeners will still be correctly invoked when an item is clicked.\n     */\n    autocloseAfterInk: PropTypes.bool,\n\n    /**\n     * Boolean if the `type` prop should be constant across all media sizes. This is only valid if the `type` is\n     * one of the temporary types.\n     *\n     * This will basically mean that when attempting to do a media adjustment, it will use the `type` prop instead of\n     * `mobileType`, `tabletType`, and `desktopType` to determine the next drawer type.\n     */\n    constantType: PropTypes.bool.isRequired,\n\n    /**\n     * An optional zDepth to apply to the drawer. If this is omitted, the value will be set as follows:\n     * - floating || inline = 1\n     * - temporary = 5\n     * - all others = 1\n     *\n     * @see {@link Papers/Paper#zDepth}\n     */\n    zDepth: PropTypes.number,\n\n    closeOnNavItemClick: deprecated(PropTypes.bool, 'Use `autoclose` instead'),\n    onVisibilityToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\n  };\n\n  static defaultProps = {\n    defaultMedia: 'mobile',\n    mobileType: Drawer.DrawerTypes.TEMPORARY,\n    mobileMinWidth: MOBILE_MIN_WIDTH,\n    tabletType: Drawer.DrawerTypes.PERSISTENT,\n    tabletMinWidth: TABLET_MIN_WIDTH,\n    desktopType: Drawer.DrawerTypes.FULL_HEIGHT,\n    desktopMinWidth: DESKTOP_MIN_WIDTH,\n    position: 'left',\n    transitionDuration: 300,\n    autoclose: true,\n    clickableDesktopOverlay: true,\n    constantType: true,\n  };\n\n  /**\n   * Determines the current media and returns an object containing matches for `mobile`, `tablet`, `desktop`,\n   * and the current drawer type. This expects a `props` object of the drawer.\n   *\n   * If this is used server side, it will default to only matching mobile.\n   *\n   * @param {Object=} props - The current drawer's prop shape to extract the mobile, tablet,\n   *    and desktop type/min widths. This defaults to the drawer's default props.\n   * @return {Object} an object containing the media matches and the current type to use for the drawer.\n   */\n  static getCurrentMedia(props = Drawer.defaultProps) {\n    const {\n      mobileMinWidth,\n      tabletMinWidth,\n      desktopMinWidth,\n      mobileType,\n      tabletType,\n      desktopType,\n      constantType,\n    } = props;\n    if (typeof window === 'undefined') {\n      const type = constantType && props.type ? props.type : mobileType;\n      return { mobile: true, tablet: false, desktop: false, type };\n    }\n\n    const mobile = Drawer.matchesMedia(mobileMinWidth, tabletMinWidth - 1);\n    const tablet = Drawer.matchesMedia(tabletMinWidth, desktopMinWidth);\n    const desktop = Drawer.matchesMedia(desktopMinWidth);\n\n    let type;\n    if (constantType && props.type && isTemporary(props.type)) {\n      type = props.type;\n    } else if (desktop) {\n      type = desktopType;\n    } else if (tablet) {\n      type = tabletType;\n    } else {\n      type = mobileType;\n    }\n\n    return { type, mobile, tablet, desktop };\n  }\n\n  /**\n   * Simply does a `window.matchMedia(query)` where the query gets defined as a min width\n   * and optional max width.\n   *\n   * @param {number} min - The min width for the media query.\n   * @param {number=} max - An optional max width to include for the media query.\n   * @return {boolean} true if the media matches.\n   */\n  static matchesMedia(min, max) {\n    let media = `screen and (min-width: ${min}px)`;\n    if (max) {\n      media += ` and (max-width: ${max}px)`;\n    }\n\n    return window.matchMedia(media).matches;\n  }\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { defaultVisible, defaultMedia, overlay } = props;\n\n    this.state = {\n      mobile: defaultMedia === 'mobile',\n      tablet: defaultMedia === 'tablet',\n      desktop: defaultMedia === 'desktop',\n      animating: false,\n      overlayActive: false,\n      drawerActive: false,\n    };\n\n    if (typeof props.type === 'undefined') {\n      this.state.type = props[`${defaultMedia}Type`];\n    }\n\n    const type = getField(props, this.state, 'type');\n    this._initialFix = true;\n\n    if (typeof props.visible === 'undefined') {\n      let visible = isPermanent(type) || isMini(type);\n      if (!visible && typeof defaultVisible !== 'undefined') {\n        visible = defaultVisible;\n      }\n\n      this.state.visible = visible;\n    }\n\n    const visible = getField(props, this.state, 'visible');\n\n    this.state.overlayActive = (typeof overlay !== 'undefined' ? overlay : isTemporary(type) && !this.state.desktop)\n      && visible;\n    this.state.drawerActive = visible;\n  }\n\n  componentWillMount() {\n    if (typeof window !== 'undefined') {\n      this._updateType(this.props);\n    }\n  }\n\n  componentDidMount() {\n    if (!isMini(getField(this.props, this.state, 'type'))) {\n      window.addEventListener('resize', this._updateMedia);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      mobileMinWidth,\n      mobileType,\n      tabletMinWidth,\n      tabletType,\n      desktopMinWidth,\n      desktopType,\n    } = this.props;\n\n    if (nextProps.mobileMinWidth !== mobileMinWidth || nextProps.mobileType !== mobileType\n      || nextProps.tabletMinWidth !== tabletMinWidth || nextProps.tabletType !== tabletType\n      || nextProps.desktopMinWidth !== desktopMinWidth || nextProps.desktopType !== desktopType) {\n      this._updateType(nextProps);\n    }\n\n    const { visible, transitionDuration, overlay } = nextProps;\n    if (this.props.visible === nextProps.visible) {\n      return;\n    }\n\n    const type = getField(nextProps, this.state, 'type');\n    this._animate(visible, type, transitionDuration, overlay, this.state.desktop);\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    if (this._closeTimeout) {\n      clearTimeout(this._closeTimeout);\n    }\n\n    window.removeEventListener('resize', this._updateMedia);\n  }\n\n  _updateType = (props) => {\n    const {\n      onMediaTypeChange,\n      overlay,\n      transitionDuration,\n    } = props;\n\n    const onVisibilityChange = props.onVisibilityToggle || props.onVisibilityChange;\n\n    let state = Drawer.getCurrentMedia(props);\n    const diffType = getField(props, this.state, 'type') !== state.type;\n    const diffMedia = state.mobile !== this.state.mobile\n      || state.tablet !== this.state.tablet\n      || state.desktop !== this.state.desktop;\n\n    if (onMediaTypeChange && (diffType || diffMedia)) {\n      onMediaTypeChange(state.type, { mobile: state.mobile, tablet: state.tablet, desktop: state.desktop });\n    }\n\n    if (diffType) {\n      let visible = isPermanent(state.type);\n      if (this._initialFix) {\n        if (props.defaultVisible) {\n          visible = props.defaultVisible;\n        } else if (props.visible) {\n          visible = props.visible;\n        }\n      }\n\n      const prevVisible = getField(props, this.state, 'visible');\n      if (onVisibilityChange && (visible !== prevVisible)) {\n        onVisibilityChange(visible);\n      }\n\n      if (typeof props.visible === 'undefined') {\n        state.visible = visible;\n        this._animate(visible, state.type, transitionDuration, overlay, state.desktop);\n      }\n    } else if (this._initialFix && diffMedia) {\n      state.overlayActive = (typeof overlay !== 'undefined' ? overlay : isTemporary(state.type) && !state.desktop)\n        && getField(props, this.state, 'visible');\n    }\n\n    if (typeof props.type !== 'undefined') {\n      const { type, ...realState } = state; // eslint-disable-line no-unused-vars\n      state = realState;\n    }\n\n    this._initialFix = false;\n    this.setState(state);\n  };\n\n  _updateMedia = () => {\n    this._updateType(this.props);\n  };\n\n  _animate = (visible, type, timeout, overlay, desktop) => {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    if (visible) {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        this.setState({\n          overlayActive: overlay || (isTemporary(type) && !desktop),\n          drawerActive: true,\n          animating: true,\n        });\n      }, TICK);\n    } else {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        this.setState({ animating: false });\n      }, timeout);\n      this.setState({ animating: true, overlayActive: false, drawerActive: false });\n    }\n  };\n\n  _setNavigation = (navigation) => {\n    this._navigation = findDOMNode(navigation);\n  };\n\n  _handleNavClick = (e) => {\n    const { closeOnNavItemClick, autoclose, autocloseAfterInk } = this.props;\n    const enabled = typeof closeOnNavItemClick !== 'undefined' ? closeOnNavItemClick : autoclose;\n    if (!enabled || !isTemporary(getField(this.props, this.state, 'type'))) {\n      return;\n    }\n\n    let { target } = e;\n    while (target && this._navigation.contains(target)) {\n      if (target.classList.contains('md-list-tile')) {\n        // Clicked a nav item that has a nested list\n        if (target.getAttribute('aria-expanded') !== null) {\n          return;\n        }\n\n        this._closeTimeout = setTimeout(() => {\n          this._closeTimeout = null;\n\n          this._closeDrawer(e);\n        }, autocloseAfterInk ? 300 : TICK);\n        return;\n      }\n\n      target = target.parentNode;\n    }\n  };\n\n  _closeDrawer = () => {\n    const { onVisibilityChange, onVisibilityToggle, transitionDuration, overlay } = this.props;\n    const callback = onVisibilityToggle || onVisibilityChange;\n    if (callback) {\n      callback(false);\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      this.setState({ visible: false });\n      this._animate(false, getField(this.props, this.state, 'type'), transitionDuration, overlay, this.state.desktop);\n    }\n  };\n\n  render() {\n    const { overlayActive, drawerActive, animating } = this.state;\n    const {\n      id,\n      style,\n      className,\n      navStyle,\n      navClassName,\n      component,\n      navItems,\n      header,\n      children,\n      inline,\n      position,\n      overlay,\n      clickableDesktopOverlay,\n      lastChild,\n      portal,\n      overlayStyle,\n      overlayClassName,\n      /* eslint-disable no-unused-vars */\n      type: propType,\n      visible: propVisible,\n      renderNode: propRenderNode,\n      navItemsId: propNavItemsId,\n      zDepth: propZDepth,\n      constantType,\n      defaultVisible,\n      defaultMedia,\n      mobileType,\n      mobileMinWidth,\n      tabletType,\n      tabletMinWidth,\n      desktopType,\n      desktopMinWidth,\n      transitionDuration,\n      onMediaTypeChange,\n      onVisibilityChange,\n      autoclose,\n      autocloseAfterInk,\n      // deprecated\n      onVisibilityToggle,\n      closeOnNavItemClick,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { navItemsId, zDepth } = this.props;\n    if (!navItemsId && id) {\n      navItemsId = `${id}-nav-items`;\n    }\n\n    const { desktop } = this.state;\n    const renderNode = getField(this.props, this.context, 'renderNode');\n    const type = getField(this.props, this.state, 'type');\n    const visible = getField(this.props, this.state, 'visible');\n    const mini = isMini(type);\n    const temporary = isTemporary(type);\n    const floating = DrawerTypes.FLOATING === type;\n    const permanent = isPermanent(type);\n\n    let Component;\n    if (component) {\n      Component = component;\n    } else if (navItems) {\n      Component = 'nav';\n    } else {\n      Component = 'aside';\n    }\n\n    let navigation;\n    if (navItems) {\n      navigation = (\n        <List\n          ref={this._setNavigation}\n          key=\"navigation\"\n          id={navItemsId}\n          style={navStyle}\n          className={cn('md-list--drawer', {\n            'md-toolbar-relative': mini && !visible,\n            'md-background': floating,\n          }, navClassName)}\n          onClick={this._handleNavClick}\n        >\n          {navItems.map(mapToListParts)}\n        </List>\n      );\n    }\n\n    if (typeof zDepth === 'undefined') {\n      zDepth = 1;\n      if (floating || inline) {\n        zDepth = 0;\n      } else if (!mini && temporary) {\n        zDepth = 5;\n      }\n    }\n\n    let overlayVisible = overlay;\n    if (typeof overlayVisible !== 'boolean') {\n      overlayVisible = temporary && !mini && (!desktop || clickableDesktopOverlay) && (animating || visible);\n    }\n\n    const drawer = (\n      <Paper\n        {...props}\n        id={id}\n        key=\"drawer\"\n        component={Component}\n        zDepth={zDepth}\n        raiseOnHover={false}\n        style={style}\n        className={cn('md-drawer', {\n          [`md-drawer--${position}`]: !inline,\n          'md-drawer--fixed': !inline,\n          'md-drawer--inline': inline,\n          'md-drawer--active': mini || drawerActive,\n          'md-drawer--mini': mini,\n          'md-transition--deceleration': !mini && !permanent && visible,\n          'md-transition--acceleration': !mini && !permanent && !visible,\n          'md-background': inline || floating,\n          'md-background--card': !floating && !inline,\n        }, className)}\n      >\n        {header}\n        {navigation}\n        {children}\n        <Overlay\n          style={overlayStyle}\n          className={overlayClassName}\n          active={overlayActive}\n          onClick={this._closeDrawer}\n          visible={overlayVisible}\n          renderNode={renderNode}\n        />\n      </Paper>\n    );\n\n    if (inline || permanent) {\n      return drawer;\n    } else if (!portal) {\n      return mini || animating || visible ? drawer : null;\n    }\n\n    return (\n      <Portal visible={animating || visible} renderNode={renderNode} lastChild={lastChild}>\n        {drawer}\n      </Portal>\n    );\n  }\n}\n","export const MOBILE_MIN_WIDTH = 320;\nexport const TABLET_MIN_WIDTH = 768;\nexport const DESKTOP_MIN_WIDTH = 1025;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport DialogFooter from '../Dialogs/DialogFooter';\n\n/**\n * The `PanelContent` component is for displaying the expanded content\n * for an `ExpansionPanel`. It will display any children in a `md-panel-content`\n * container followed by a `Divider` and the `PanelControls` .\n */\nexport default class PanelContent extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    footerStyle: PropTypes.object,\n    footerClassName: PropTypes.string,\n    contentStyle: PropTypes.object,\n    children: PropTypes.node,\n    onSave: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    saveProps: PropTypes.object,\n    saveType: PropTypes.string,\n    saveLabel: PropTypes.node.isRequired,\n    savePrimary: PropTypes.bool,\n    saveSecondary: PropTypes.bool,\n    cancelProps: PropTypes.object,\n    cancelType: PropTypes.string,\n    cancelLabel: PropTypes.node.isRequired,\n    cancelPrimary: PropTypes.bool,\n    cancelSecondary: PropTypes.bool,\n    footer: PropTypes.node,\n    footerChildren: PropTypes.node,\n  };\n\n  render() {\n    const {\n      style,\n      footerStyle,\n      footerClassName,\n      contentStyle,\n      className,\n      children,\n      onSave,\n      onCancel,\n      saveProps,\n      saveType,\n      saveLabel,\n      savePrimary,\n      saveSecondary,\n      cancelProps,\n      cancelType,\n      cancelLabel,\n      cancelPrimary,\n      cancelSecondary,\n      footer,\n      footerChildren,\n    } = this.props;\n\n    const actions = [{\n      type: cancelType,\n      label: cancelLabel,\n      primary: cancelPrimary,\n      secondary: cancelSecondary,\n      ...cancelProps,\n      onClick: onCancel,\n    }, {\n      type: saveType,\n      label: saveLabel,\n      primary: savePrimary,\n      secondary: saveSecondary,\n      ...saveProps,\n      onClick: onSave,\n    }];\n\n    let actionFooter = null;\n    if (typeof footer === 'undefined') {\n      actionFooter = (\n        <DialogFooter\n          actions={actions}\n          style={footerStyle}\n          className={cn('md-divider-border md-divider-border--top', footerClassName)}\n        >\n          {footerChildren}\n        </DialogFooter>\n      );\n    } else if (footer !== null) {\n      actionFooter = footer;\n    }\n\n    return (\n      <div style={style}>\n        <div className={cn('md-panel-content', className)} style={contentStyle}>\n          {children}\n        </div>\n        {actionFooter}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport themeColors from '../utils/themeColors';\nimport getCollapserStyles from '../utils/getCollapserStyles';\nimport controlled from '../utils/PropTypes/controlled';\nimport Paper from '../Papers/Paper';\nimport AccessibleFakeButton from '../Helpers/AccessibleFakeButton';\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport PanelContent from './PanelContent';\n\nconst LABEL_FONT_SIZE = 15;\nconst LINE_HEIGHT = 1.42857;\nconst SINGLE_LINE_HEIGHT = LABEL_FONT_SIZE * LINE_HEIGHT;\n\n/**\n * The `ExpansionPanel` component needs to be used with the `ExpansionList`\n * component. The only reason is that the `ExpansionPanel` should really\n * be rendered as a table, but it was a bit hard to have a single component\n * dynamically rendering another row when expanded. It couldn't be in the\n * same row since the expanded content might not have the same columns.\n */\nexport default class ExpansionPanel extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the panel.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the panel.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An options style to apply to the panel's header content. This is the\n     * section that toggles the children to be visible and label columns.\n     */\n    headerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the panel's header content. This is the\n     * section that toggles the children to be visible and label columns.\n     */\n    headerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the element surrounding the children when expanded.\n     */\n    contentStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the element surrounding the children when expanded.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the footer when the `footer` prop is `undefined`.\n     *\n     * @see {@link #footer}\n     */\n    footerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the footer when the `footer` prop is `undefined`.\n     *\n     * @see {@link #footer}\n     */\n    footerClassName: PropTypes.string,\n\n    /**\n     * The main label to display in the unexpanded panel.\n     */\n    label: PropTypes.node.isRequired,\n\n    /**\n     * Any additional columns to display after the main label. If this is a `list`\n     * instead of a singular item, they will each be formatted as a column.\n     */\n    secondaryLabel: PropTypes.node,\n\n    /**\n     * Any additional columns to display after the main label when the panel is\n     * expanded. If this is omitted, the default `secondaryLabel` will be displayed\n     * instead.\n     */\n    expandedSecondaryLabel: PropTypes.node,\n\n    /**\n     * The component to render the panel as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * The content to display once the panel is toggled open.\n     */\n    children: PropTypes.node,\n\n    /**\n     * A boolean if the panel is currently expanded. This will force the component\n     * to be controlled and require's the `onExpandToggle` function to be defined.\n     */\n    expanded: controlled(PropTypes.bool, 'onExpandToggle', 'defaultExpanded'),\n\n    /**\n     * Boolean if an uncontrolled panel should be expanded by default.\n     */\n    defaultExpanded: PropTypes.bool.isRequired,\n\n    /**\n     * The icon to display for expanding the expansion panel.\n     */\n    expanderIcon: PropTypes.element,\n\n    /**\n     * Boolean if the `ExpansionPanel` is currently tab focused. This is injected\n     * and managed by the `ExpansionList` component. Do not set yourself.\n     */\n    focused: PropTypes.bool.isRequired,\n\n    /**\n     * A list of min-widths to apply to each column in the panel header. This is injected\n     * and managed by the `ExpansionList` component. Do not set yourself.\n     */\n    columnWidths: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    /**\n     * Boolean if the panel has too much content so that it overflowns. This is injected\n     * and managed by the `ExpansionList` component. Do not set yourself.\n     *\n     * When this is active, it will truncate all columns except for the main label and the\n     * toggle icon.\n     */\n    overflown: PropTypes.bool,\n\n    /**\n     * A function to call when the expansion panel's expanded state is toggled.\n     * The callback for this function will include the new expanded state.\n     *\n     * `onExpandToggle(expanded)`\n     */\n    onExpandToggle: PropTypes.func,\n\n    /**\n     * An optional function to call when the Save button is clicked on the expanded panel.\n     */\n    onSave: PropTypes.func,\n\n    /**\n     * An optional function to call when the Cancel button is clicked on the expanded panel.\n     */\n    onCancel: PropTypes.func,\n\n    /**\n     * Boolean if the panel should close when the Save button is clicked.\n     */\n    closeOnSave: PropTypes.bool,\n\n    /**\n     * Boolean if the panel should close when the Cancel button is clicked.\n     */\n    closeOnCancel: PropTypes.bool,\n\n    /**\n     * An optional button type to apply to the Save button. This will get\n     * passed to the `FlatButton`.\n     */\n    saveType: PropTypes.oneOf(['button', 'submit', 'reset']),\n\n    /**\n     * The label for the Save button.\n     */\n    saveLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the Save button should be styled with the primary color.\n     */\n    savePrimary: PropTypes.bool,\n\n    /**\n     * Boolean if the Save button should be styled with the secondary color,\n     */\n    saveSecondary: PropTypes.bool,\n\n    /**\n     * Any additional props to provide/override for the save button in the\n     * footer of the panel.\n     */\n    saveProps: PropTypes.object,\n\n    /**\n     * An optional button type to apply to the Cancel button. This will get\n     * passed to the `FlatButton`.\n     */\n    cancelType: PropTypes.oneOf(['button', 'submit', 'reset']),\n\n    /**\n     * The label for the Cancel button.\n     */\n    cancelLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the Cancel button should be styled with the primary color,\n     */\n    cancelPrimary: PropTypes.bool,\n\n    /**\n     * Boolean if the Cancel button should be styled with the secondary color,\n     */\n    cancelSecondary: PropTypes.bool,\n\n    /**\n     * Any additional props to provide/override for the cancel button in the\n     * footer of the panel.\n     */\n    cancelProps: PropTypes.object,\n\n    /**\n     * The tab index for the panel's header. This allows keyboard navigation.\n     */\n    tabIndex: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the panel's content should animate when the content's visibility changes. This\n     * can also be toggled from the `ExpansionList` component if all `ExpansionPanel` in the list\n     * should not animate. This only affects the height transition.\n     *\n     * > The default value is really `true` since it gets passed down to the `Collapse` component.\n     */\n    animateContent: PropTypes.bool,\n\n    /**\n     * This prop controls the footer for the expansion panel. If this prop is `undefined`, it will\n     * go with the default behavior of generating the save and cancel buttons with the save and cancel\n     * props.\n     *\n     * If this value is `null`, there will be no footer created.\n     *\n     * Finally, if this prop is defined as any renderable item, it will be displayed in place of the\n     * footer.\n     *\n     * @see {@link #footerChildren}\n     */\n    footer: PropTypes.node,\n\n    /**\n     * Any additional children that should be displayed in the footer of the panel. These children\n     * will be placed after the action buttons.\n     */\n    footerChildren: PropTypes.node,\n    expandIconChildren: deprecated(PropTypes.node, 'Use the `expanderIcon` instead'),\n    expandIconClassName: deprecated(PropTypes.string, 'Use the `expanderIcon` instead'),\n  };\n\n  static defaultProps = {\n    defaultExpanded: false,\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\n    component: 'li',\n    saveLabel: 'Save',\n    cancelLabel: 'Cancel',\n    savePrimary: true,\n    tabIndex: 0,\n    closeOnSave: true,\n    closeOnCancel: true,\n    focused: false,\n    columnWidths: [],\n  };\n\n  static contextTypes = {\n    animateContent: PropTypes.bool,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      received: false,\n      twoLine: false,\n    };\n\n    if (typeof props.expanded === 'undefined') {\n      this.state.expanded = props.defaultExpanded;\n    }\n  }\n\n  componentDidMount() {\n    this._determineIfTwoLine();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (process.env.NODE_ENV === 'development' && !this.state.received) {\n      if (nextProps.columnWidths.length === 0) {\n        // Hopefully a nice warning about fixing the missing props injected from ExpansionList\n        /* eslint-disable no-console */\n        console.error(\n          'The `ExpansionPanel` component expects the `columnWidths` prop to be injected from the ' +\n          '`ExpansionList` component. It could be missing because:' +\n          '\\n - you have a wrapper component with extra functionality' +\n          '\\n - the `ExpansionPanel` is not a direct child of the `ExpansionList` component' +\n          '\\n\\nYou can fix this by making sure to pass `this.props.focused` and `this.props.columnWidths` ' +\n          'within your wrapper component and making the `ExpansionPanel` a direct child of `ExpansionList`.'\n        );\n      }\n\n      this.setState({ received: true });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.label === prevProps.label && this.props.secondaryLabel === prevProps.secondaryLabel) {\n      return;\n    }\n\n    this._determineIfTwoLine();\n  }\n\n  _isExpanded(props, state) {\n    return typeof props.expanded === 'undefined' ? state.expanded : props.expanded;\n  }\n\n  _determineIfTwoLine = () => {\n    let twoLine = false;\n    Array.prototype.slice.call(findDOMNode(this).querySelectorAll('.md-panel-column'))\n      .some(el => (twoLine = el.offsetHeight > SINGLE_LINE_HEIGHT));\n\n    this.setState({ twoLine });\n  };\n\n  _handleClick = () => {\n    const expanded = !this._isExpanded(this.props, this.state);\n    if (this.props.onExpandToggle) {\n      this.props.onExpandToggle(expanded);\n    }\n\n\n    if (typeof this.props.expanded === 'undefined') {\n      this.setState({ expanded });\n    }\n  };\n\n  _handleSave = (e) => {\n    const { onSave, onExpandToggle, closeOnSave } = this.props;\n    if (onSave) {\n      onSave(e);\n    }\n\n    if (closeOnSave) {\n      if (onExpandToggle) {\n        onExpandToggle(false);\n      }\n\n      if (typeof this.props.expanded === 'undefined') {\n        this.setState({ expanded: false });\n      }\n    }\n  };\n\n  _handleCancel = (e) => {\n    const { onCancel, onExpandToggle, closeOnCancel } = this.props;\n    if (onCancel) {\n      onCancel(e);\n    }\n\n    if (closeOnCancel) {\n      if (onExpandToggle) {\n        onExpandToggle(false);\n      }\n\n      if (typeof this.props.expanded === 'undefined') {\n        this.setState({ expanded: false });\n      }\n    }\n  };\n\n  render() {\n    const {\n      className,\n      label,\n      secondaryLabel,\n      expandedSecondaryLabel,\n      children,\n      focused,\n      columnWidths,\n      saveType,\n      saveLabel,\n      savePrimary,\n      saveSecondary,\n      saveProps,\n      cancelType,\n      cancelLabel,\n      cancelPrimary,\n      cancelSecondary,\n      cancelProps,\n      headerStyle,\n      headerClassName,\n      contentStyle,\n      contentClassName,\n      tabIndex,\n      overflown,\n      footer,\n      footerChildren,\n      footerStyle,\n      footerClassName,\n\n      // deprecated\n      expandIconChildren,\n      expandIconClassName,\n      /* eslint-disable no-unused-vars */\n      animateContent: propAnimateContent,\n      expanded: propExpanded,\n      expanderIcon: propExpanderIcon,\n      defaultExpanded,\n      closeOnSave,\n      closeOnCancel,\n      onSave,\n      onCancel,\n      onExpandToggle,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    const { twoLine } = this.state;\n    const expanded = this._isExpanded(this.props, this.state);\n    const animateContent = getField(this.props, this.context, 'animateContent');\n\n    let columns = Children.map(expanded && expandedSecondaryLabel || secondaryLabel, (panelLabel, i) => (\n      <div\n        style={{ [`${overflown ? 'width' : 'minWidth'}`]: columnWidths[i + 1] }}\n        className={cn('md-panel-column', {\n          'md-panel-column--overflown': overflown,\n        }, themeColors({ text: true }))}\n      >\n        {panelLabel}\n      </div>\n    ));\n\n    if (!Array.isArray(columns)) {\n      columns = [columns];\n    }\n\n    columns.unshift((\n      <div\n        key=\"main-label\"\n        style={{ minWidth: columnWidths[0] }}\n        className={cn('md-panel-column', themeColors({ text: true }))}\n      >\n        {label}\n      </div>\n    ));\n\n    let expanderIcon = getDeprecatedIcon(expandIconClassName, expandIconChildren, this.props.expanderIcon);\n    expanderIcon = React.Children.only(expanderIcon);\n    expanderIcon = React.cloneElement(expanderIcon, {\n      className: getCollapserStyles({\n        flipped: expanded,\n      }, 'md-expansion-panel__collapser md-cell--right', expanderIcon.props.className),\n    });\n\n    return (\n      <Paper\n        {...props}\n        className={cn('md-expansion-panel', {\n          'md-expansion-panel--expanded': expanded,\n        }, className)}\n        aria-expanded={expanded}\n      >\n        <AccessibleFakeButton\n          onClick={this._handleClick}\n          style={headerStyle}\n          className={cn('md-panel-header', {\n            'md-panel-header--expanded': expanded || twoLine,\n            'md-panel-header--focused': focused,\n          }, headerClassName)}\n          tabIndex={tabIndex}\n        >\n          {columns}\n          {expanderIcon}\n        </AccessibleFakeButton>\n        <Collapse collapsed={!expanded} animate={animateContent}>\n          <PanelContent\n            style={contentStyle}\n            className={contentClassName}\n            footerStyle={footerStyle}\n            footerClassName={footerClassName}\n            onSave={this._handleSave}\n            onCancel={this._handleCancel}\n            saveType={saveType}\n            saveLabel={saveLabel}\n            savePrimary={savePrimary}\n            saveSecondary={saveSecondary}\n            saveProps={saveProps}\n            cancelType={cancelType}\n            cancelLabel={cancelLabel}\n            cancelPrimary={cancelPrimary}\n            cancelSecondary={cancelSecondary}\n            cancelProps={cancelProps}\n            footer={footer}\n            footerChildren={footerChildren}\n          >\n            {children}\n          </PanelContent>\n        </Collapse>\n      </Paper>\n    );\n  }\n}\n","import React, { PureComponent, cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\n\nimport { TAB } from '../constants/keyCodes';\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport ResizeObserver from '../Helpers/ResizeObserver';\n\n/**\n * The `ExpansionList` component is a wrapper for the `ExpansionPanel` that helps\n * determine which `ExpansionPanel` currently has tab focus and adjusts the column\n * sizes in the header of the `ExpansionPanel`.\n *\n * The `ExpansionList` and `ExpansionPanel` components should have probably been\n * implemented as a `table` instead of a `ul || ol` since it is more column based,\n * but it would complicate the API to have dynamic row generation for the expanded\n * panels. The expanded panels _might_ not follow the same column widths as their labels\n * so a singular row with a div for expanded content might not work correctly.\n */\nexport default class ExpansionList extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style object to apply to the list.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the list.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The children should be a list or singular `ExpansionPanel` component\n     * to render with some additional props injected.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component to render the list as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * Boolean if all the expansion panels in the list should animate when their content's visibility\n     * changes. This is just a quicker way to disable all animations instead of having to toggle it off\n     * on each panel.\n     *\n     * > The default value is really `true` since it gets passed down to the `Collapse` component.\n     */\n    animateContent: PropTypes.bool,\n\n    /**\n     * The threshold that should be used for when the list should recalculate the positioning of all\n     * the columns. This will only compare the difference between updates.\n     * So if the size changes from 80 -> 120 -> 160 -> 140. It will only update on the third resize (160)\n     */\n    recalculateThreshold: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    component: 'ul',\n    recalculateThreshold: 80,\n  };\n\n  static childContextTypes = {\n    animateContent: PropTypes.bool,\n  };\n\n  state = { columnWidths: [], focusedIndex: -1, overflown: false };\n\n  getChildContext() {\n    const { animateContent } = this.props;\n    return { animateContent };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.children !== nextProps.children) {\n      this._calcColumnWidths();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { focusedIndex } = this.state;\n    if (prevState.focusedIndex === focusedIndex || (prevState.focusedIndex > -1 && focusedIndex > -1)) {\n      return;\n    }\n\n    handleWindowClickListeners(this._removeFocus, this.state.focusedIndex !== -1);\n  }\n\n  componentWillUnmount() {\n    if (this.state.focusedIndex === -1) {\n      handleWindowClickListeners(this._removeFocus, false);\n    }\n\n    window.removeEventListener('keyup', this._determineTabFocus);\n  }\n\n  _setContainer = (container) => {\n    if (container !== null) {\n      this._container = findDOMNode(container);\n      window.addEventListener('keyup', this._determineTabFocus);\n\n      this._width = this._container.offsetWidth;\n      this._calcColumnWidths();\n    }\n  };\n\n  _determineTabFocus = (e) => {\n    if ((e.which || e.keyCode) === TAB) {\n      const panels = Array.prototype.slice.call(findDOMNode(this).querySelectorAll('.md-panel-header'));\n      this.setState({ focusedIndex: panels.indexOf(e.target) });\n    }\n  };\n\n  _removeFocus = () => {\n    this.setState({ focusedIndex: -1 });\n  };\n\n  _isOverflown = (widths) => {\n    if (!this._container) {\n      return false;\n    }\n\n    const panel = this._container.querySelector('.md-panel-header');\n    if (!panel) {\n      return false;\n    }\n\n    const collapser = this._container.querySelector('.md-expansion-panel__collapser');\n    const collapserWidth = collapser ? collapser.offsetWidth : 0;\n    const styles = window.getComputedStyle(panel);\n    const maxWidth = panel.offsetWidth\n      - parseFloat(styles.paddingLeft)\n      - parseFloat(styles.paddingRight)\n      - collapserWidth;\n\n    const totalWidth = widths.reduce((total, w) => total + w, 0);\n    return totalWidth > maxWidth;\n  };\n\n  /**\n   * Since this should really be rendered as a table, need to calculate the max width for each _column_\n   * on the panel's header and apply that as a min width for the other panels.\n   */\n  _getColumnWidths = () => {\n    if (!this._container) {\n      return this.state.columnWidths;\n    }\n\n    return [].slice.call(this._container.querySelectorAll('.md-panel-header'))\n      .reduce((maxes, row) => {\n        const columns = row.querySelectorAll('.md-panel-column');\n        for (let i = 0; i < columns.length; i++) {\n          const col = columns[i];\n          // Need to reset the widths if it has already been calculated to get a more accurate measurement.\n          const { width, minWidth } = col.style;\n          col.style.width = 'auto';\n          col.style.minWidth = 'auto';\n\n          // Only need to include the offsetWidth of the column because the child will really\n          // determine the width of the column. Since it has already been defined at this point,\n          // no additional work needs to be done.\n          maxes[i] = Math.max(col.offsetWidth, maxes[i] || 0);\n          col.style.width = width;\n          col.style.minWidth = minWidth;\n        }\n\n        return maxes;\n      }, [0]);\n  };\n\n  _calcColumnWidths = () => {\n    const { columnWidths } = this.state;\n    const nextWidths = this._getColumnWidths();\n    const overflown = this._isOverflown(nextWidths);\n    if (this.state.overflown !== overflown\n      || columnWidths.length !== nextWidths.length\n      || nextWidths.some((w, i) => w !== columnWidths[i])\n    ) {\n      this.setState({ columnWidths: nextWidths, overflown });\n    }\n  };\n\n  _handleResize = ({ width }) => {\n    const { recalculateThreshold } = this.props;\n    if (this._width !== width && (Math.abs(width - this._width) >= recalculateThreshold)) {\n      this._width = width;\n      this._calcColumnWidths();\n    }\n  };\n\n  render() {\n    const { columnWidths, focusedIndex, overflown } = this.state;\n    const {\n      children,\n      className,\n      component: Component,\n      animateContent, // eslint-disable-line no-unused-vars\n      recalculateThreshold, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    const panels = Children.map(children, (child, i) => cloneElement(child, {\n      key: child.key || i,\n      overflown,\n      columnWidths,\n      focused: focusedIndex === i,\n    }));\n    return (\n      <Component\n        {...props}\n        ref={this._setContainer}\n        className={cn('md-expansion-panel-list', className)}\n      >\n        <ResizeObserver watchWidth onResize={this._handleResize} />\n        {panels}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { TAB, SPACE, ENTER } from '../constants/keyCodes';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport getBtnStyles from '../Buttons/getBtnStyles';\nimport FontIcon from '../FontIcons/FontIcon';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\n\n/**\n * The `FileInput` component is used as simple styling for the `<input type=\"file\" />`.\n * It will style the input as a raised button by default.\n */\nexport default class FileInput extends PureComponent {\n  static propTypes = {\n    /**\n     * The id for the text field. This is required for a11y and to get the `input type=\"file\"` to\n     * open.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An optional name to provide to the input.\n     */\n    name: PropTypes.string,\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the label.\n     */\n    labelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the label.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * Boolean if the `FileInput` should be styled with the primary color.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the `FileInput` should be styled with the secondary color.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the `FileInput` should be styled as a flat button instead of a\n     * raised button.\n     */\n    flat: PropTypes.bool,\n\n    /**\n     * Boolean if the theming should be swapped from text to background or vice-versa.\n     *\n     * @see {@link Buttons/Button#swapTheming}\n     */\n    swapTheming: PropTypes.bool,\n\n    /**\n     * This should be a comma separated list of Media Types that the `FileInput` can\n     * accept. If this prop is left blank, any file will be accepted.\n     *\n     * The values can either be:\n     * - A file extension\n     * - audio/*\n     * - video/*\n     * - image/*\n     * - any valid [IANA Media Type](http://www.iana.org/assignments/media-types/media-types.xhtml)\n     *\n     * > NOTE: IE does not enforce this.\n     */\n    accept: PropTypes.string,\n\n    /**\n     * Boolean if the same file is allowed to be uploaded multiple times. This will basically make the\n     * `value` of the file input always blank.\n     */\n    allowDuplicates: PropTypes.bool,\n\n    /**\n     * Boolean if multiple files will be accepted.\n     */\n    multiple: PropTypes.bool,\n\n    /**\n     * A label to display on the `FileInput`. This will be used with the `AccessibleFakeInkedButton` component to\n     * create a `<label>` for the `<input type=\"file\">`.\n     */\n    label: PropTypes.node,\n\n    /**\n     * Boolean if the icons should appear before the label.\n     */\n    iconBefore: PropTypes.bool,\n\n    /**\n     * An optional icon to display with the file download. This can be a `FontIcon` or an `SVGIcon`.\n     */\n    icon: PropTypes.element,\n\n    /**\n     * A function to call when the value of the input changes. This will\n     * be triggered when the user selects a new file or cancels the new file selection.\n     *\n     * This function will be given the new [FileList](https://developer.mozilla.org/en-US/docs/Web/API/FileList)\n     * as an array and the change event. If this is not a multiple file input, only the\n     * newly selected File will be given instead of a list of one file. Since this is an\n     * `input` tag, the user will not be able to select the same file multiple times unless\n     * you manually clear the input's value.\n     *\n     * > NOTE: If the user hits cancel, null will be given for a single file input.\n     *\n     * ```js\n     * onChange(files, e);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * This prop tells mobile browsers that the input would prefer the user to get the image/video from\n     * the camera instead of using the file browser. This will be completely ignored by desktop browsers.\n     *\n     * Providing `'user'` will select the front facing camera while `'environment'` will select the rear facing\n     * camera.\n     *\n     * @see https://developers.google.com/web/fundamentals/media/capturing-images/\n     */\n    capture: PropTypes.oneOf(['user', 'environment']),\n\n    /**\n     * Boolean if the `FileInput` is currently disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional function to call when they keyup event is triggered on the file input's label.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when they keydown event is triggered on the file input's label.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when they mouseup event is triggered on the file input's label.\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when they mousedown event is triggered on the file input's label.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when they mouseover event is triggered on the file input's label.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when they mouseleave event is triggered on the file input's label.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when they touchend event is triggered on the file input's label.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when they touchstart event is triggered on the file input's label.\n     */\n    onTouchStart: PropTypes.func,\n\n    iconChildren: deprecated(PropTypes.node, 'Use `icon` instead'),\n    iconClassName: deprecated(PropTypes.string, 'Use `icon` instead'),\n    value: deprecated(\n      PropTypes.string,\n      'There should\\'t be a reason to set the value manually. Check out {@link #allowDuplicates} instead'\n    ),\n  };\n\n  static defaultProps = {\n    label: 'Select a file',\n    icon: <FontIcon>file_upload</FontIcon>,\n    allowDuplicates: false,\n  };\n\n  state = { hover: false, pressed: false };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.disabled && !nextProps.disabled && this.state.hover) {\n      this.setState({ hover: false });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    // I honestly don't remember why this was implemented, but it was copied from the Button\n    // component\n    if (!this.state.pressed && nextState.pressed) {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n        if (this._attemptedBlur) {\n          this._attemptedBlur = false;\n\n          this.setState({ pressed: false });\n        }\n      }, 450);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    window.removeEventListener('click', this._blur);\n  }\n\n  _handleChange = (e) => {\n    const { multiple, onChange } = this.props;\n    const { files } = e.target;\n    if (onChange) {\n      if (!multiple) {\n        onChange(files[0] || null, e);\n      } else {\n        onChange(Array.prototype.slice.call(files), e);\n      }\n    }\n  };\n\n  _blur = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this._timeout) {\n      this._attemptedBlur = true;\n    } else {\n      this.setState({ pressed: false });\n    }\n  };\n\n  _handleMouseUp = (e) => {\n    if (this.props.onMouseUp) {\n      this.props.onMouseUp(e);\n    }\n\n    this._blur();\n  };\n\n  _handleMouseDown = (e) => {\n    if (this.props.onMouseDown) {\n      this.props.onMouseDown(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    this._blur();\n    captureNextEvent('mouseover');\n  };\n\n  _handleKeyUp = (e) => {\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(e);\n    }\n\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.addEventListener('click', this._blur);\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n\n    if (key === TAB) {\n      window.removeEventListener('click', this._blur);\n      this.setState({ pressed: false });\n    } else if (key === SPACE || key === ENTER) {\n      e.preventDefault();\n      e.target.click();\n    }\n  };\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ hover: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ hover: false });\n    }\n  };\n\n  render() {\n    const { hover, pressed } = this.state;\n    const {\n      style,\n      className,\n      labelStyle,\n      labelClassName,\n      label,\n      primary,\n      secondary,\n      flat,\n      id,\n      name,\n      iconBefore,\n      disabled,\n      accept,\n      multiple,\n      swapTheming,\n      allowDuplicates,\n      capture,\n\n      // Deprecated\n      iconChildren,\n      iconClassName,\n      /* eslint-disable no-unused-vars */\n      icon: propIcon,\n      onChange,\n      onKeyUp,\n      onKeyDown,\n      onMouseUp,\n      onMouseDown,\n      onMouseOver,\n      onMouseLeave,\n      onTouchStart,\n      onTouchEnd,\n\n      // deprecated\n      value: propValue,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    let { icon } = this.props;\n    if (iconClassName || iconChildren) {\n      icon = <FontIcon iconClassName={iconClassName}>{iconChildren}</FontIcon>;\n    }\n\n    let labelChildren = label;\n    if (icon) {\n      icon = React.cloneElement(icon, { inherit: true });\n      labelChildren = <IconSeparator label={label} iconBefore={iconBefore}>{icon}</IconSeparator>;\n    }\n\n    let value;\n    if (allowDuplicates) {\n      value = '';\n    }\n\n    return (\n      <div\n        {...props}\n        style={style}\n        className={cn('md-inline-block md-file-input-container', className)}\n      >\n        <AccessibleFakeInkedButton\n          component=\"label\"\n          htmlFor={id}\n          disabled={disabled}\n          onTouchStart={this._handleTouchStart}\n          onTouchEnd={this._handleTouchEnd}\n          onMouseDown={this._handleMouseDown}\n          onMouseUp={this._handleMouseUp}\n          onKeyDown={this._handleKeyDown}\n          onKeyUp={this._handleKeyUp}\n          onMouseOver={this._handleMouseOver}\n          onMouseLeave={this._handleMouseLeave}\n          style={labelStyle}\n          className={getBtnStyles({\n            flat,\n            raised: !flat,\n            disabled,\n            primary,\n            secondary,\n            hover,\n            swapTheming,\n            pressed,\n          }, labelClassName)}\n        >\n          {labelChildren}\n        </AccessibleFakeInkedButton>\n        <input\n          id={id}\n          name={name}\n          accept={accept}\n          type=\"file\"\n          multiple={multiple}\n          disabled={disabled}\n          aria-hidden=\"true\"\n          className=\"md-file-input\"\n          onChange={this._handleChange}\n          value={value}\n          tabIndex={-1}\n          capture={capture}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport FileInput from './FileInput';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport omit from '../utils/omit';\n\n/**\n * The `FileUpload` component is used to upload files locally This is a wrapper of the `FileInput` component\n * with some additional functionality so any props that are undocumented on `FileUpload` but are present\n * on `FileInput` are correctly provided. If you want to upload files to a server, use\n * [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData)\n * by attaching the `File`.\n *\n * Quick example:\n *\n * ```js\n * function upload(file) {\n *   fetch('/api/images', {\n *     method: 'POST',\n *     body: new FormData().append('file', file),\n *   });\n * }\n * ```\n *\n * An upload can be aborted by calling the `abort(file || fileName)` function. If\n * the file or fileName are omitted, it will *attempt* to abort the current\n * file that is uploading. Unreliable for multi-select.\n *\n * ```js\n * <FileUpload ref=\"upload\" />\n * <Button raised onClick={() => this.refs.upload.abort()} label=\"Abort! Abort!\" />\n * ```\n */\nexport default class FileUpload extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the label.\n     */\n    labelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the label.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * Boolean if the `FileInput` should be styled with the primary color.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the `FileInput` should be styled with the secondary color.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the `FileInput` should be styled as a flat button instead of a\n     * raised button.\n     */\n    flat: PropTypes.bool,\n\n    /**\n     * This should be a comma separated list of Media Types that the `FileInput` can\n     * accept. If this prop is left blank, any file will be accepted.\n     *\n     * The values can either be:\n     * - A file extension\n     * - audio/*\n     * - video/*\n     * - image/*\n     * - any valid [IANA Media Type](http://www.iana.org/assignments/media-types/media-types.xhtml)\n     */\n    accept: PropTypes.string,\n\n    /**\n     * Boolean if multiple files will be accepted.\n     */\n    multiple: PropTypes.bool,\n\n    /**\n     * A label to display on the `FileInput`.\n     */\n    label: PropTypes.node,\n\n    /**\n     * The icon children to use for the upload icon.\n     */\n    iconChildren: PropTypes.node,\n\n    /**\n     * The icon className to use for the upload icon.\n     */\n    iconClassName: PropTypes.string,\n\n    /**\n     * An optional max size for the file. If the file is greater than\n     * this limit, the file will not be uploaded.\n     */\n    maxSize: PropTypes.number,\n\n    /**\n     * A required function to call when the `maxSize` prop is set. It will\n     * be given a list of files that were too big.\n     */\n    onSizeError: (props, propName, component, ...others) => {\n      if (typeof props.maxSize === 'number') {\n        return PropTypes.func.isRequired(props, propName, component, ...others);\n      }\n\n      return null;\n    },\n\n    /**\n     * You can force the `FileReader` to read the file as a specific type\n     * if you do not trust the *amazing* regex I have for choosing the correct\n     * one.\n     *\n     * ```js\n     * if(type.match(/image|video|audio/)) {\n     *   fr.readAsDataURL(file);\n     * } else if(type.match(/application|model|multipart/)) {\n     *   fr.readAsArrayBuffer(file);\n     * } else {\n     *   fr.readAsText(file);\n     * }\n     * ```\n     *\n     * > `.yml` and `.js` both are considered `application`, so it definitely fails there.\n     *\n     * If this prop is a function, you will be given the file's type, the file object, and\n     * the file reader. You will then need to call `fileReader.readAsYOUR_CORRECT_TYPE(file)`.\n     */\n    readAs: PropTypes.oneOfType([\n      PropTypes.oneOf(['DataURL', 'ArrayBuffer', 'Text']),\n      PropTypes.func,\n    ]),\n\n    /**\n     * An optional function to call when the `FileUpload` aborts. The current\n     * file and the abort event are given. This might not be the most useful\n     * function to use since you will need to manually call abort yourself anyways.\n     */\n    onAbort: PropTypes.func,\n\n    /**\n     * An optional function to call when the `FileUpload` errors. The current\n     * file, the error, and the error event are given.\n     *\n     * ```js\n     * onError(file, event.target.error, event);\n     * ```\n     */\n    onError: PropTypes.func,\n\n    /**\n     * An optional function to call when the `FileUpload` loads. The current\n     * file, the load result, and the load event are given.\n     *\n     * ```js\n     * onLoad(file, event.target.result, event);\n     * ```\n     *\n     * The load result will either be:\n     * - a data URL\n     * - a plain text string\n     * - an array buffer\n     *\n     * depending on what type the file is.\n     */\n    onLoad: PropTypes.func,\n\n    /**\n     * An optional function to call when the `FileUpload` starts loading. The current\n     * file and the load start event are given.\n     */\n    onLoadStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `FileUpload` finishes loading. The\n     * current file and the load end event are given.\n     */\n    onLoadEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `FileUpload` progress. The current\n     * file, upload progress, and the progress event are given. The progress\n     * will be a number between 0 and 100 that has not been rounded.\n     *\n     * ```js\n     * onProgress(file, progress, event);\n     * ```\n     */\n    onProgress: PropTypes.func,\n\n    /**\n     * Boolean if the same file is allowed to be uploaded multiple times. This will basically make the\n     * `value` of the file input always blank.\n     */\n    allowDuplicates: PropTypes.bool,\n\n    /**\n     * An optional function to call when a file selects or unselects a file.\n     * This will be called before any local uploading occurs.\n     *\n     * ```js\n     * onChange(file(s) || null, event);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * This prop tells mobile browsers that the input would prefer the user to get the image/video from\n     * the camera instead of using the file browser. This will be completely ignored by desktop browsers.\n     *\n     * Providing `'user'` will select the front facing camera while `'environment'` will select the rear facing\n     * camera.\n     *\n     * @see https://developers.google.com/web/fundamentals/media/capturing-images/\n     */\n    capture: PropTypes.oneOf(['user', 'environment']),\n    value: deprecated(\n      PropTypes.string,\n      'There should\\'t be a reason to set the value manually. Check out {@link #allowDuplicates} instead'\n    ),\n  };\n\n  state = {};\n\n  /**\n   * Attempts to abort the upload of a file. This function takes an optional `file` or `fileName`\n   * as it's parameter. If the parameter is omitted, it attempts to abort the first file that was\n   * added. If the `onAbort` function was given, it will be called as well.\n   *\n   * @param {Object|string} file - The file or the file name to use to find the\n   *     correct `FileReader`.\n   */\n  abort = (file) => {\n    let fileName = file;\n    if (!file) {\n      // Attempt to remove first file added...\n      fileName = Object.keys(this.state)[0];\n    } else if (typeof file.name === 'string') {\n      fileName = file.name;\n    }\n\n    const reader = this.state[fileName];\n    if (reader) {\n      reader.abort();\n      findDOMNode(this).querySelector('.md-file-input').value = '';\n\n      this.setState(omit(this.state, [fileName]));\n    }\n  };\n\n  _uploadFile = (file) => {\n    const {\n      onAbort,\n      onError,\n      onLoad,\n      onLoadStart,\n      onLoadEnd,\n      onProgress,\n      readAs,\n    } = this.props;\n\n    const { name, type } = file;\n\n    const fr = new FileReader();\n    if (onError) {\n      fr.onerror = e => {\n        onError(file, e.target.error, e);\n      };\n    }\n\n    if (onAbort) {\n      fr.onabort = e => {\n        onAbort(file, e);\n      };\n    }\n\n    if (onLoadStart) {\n      fr.onloadstart = e => {\n        onLoadStart(file, e);\n      };\n    }\n\n    if (onLoadEnd) {\n      fr.onloadend = e => {\n        onLoadEnd(file, e);\n      };\n    }\n\n    fr.onload = e => {\n      if (onLoad) {\n        onLoad(file, e.target.result, e);\n      }\n\n      this.setState(omit(this.state, [name]));\n    };\n\n    if (onProgress) {\n      fr.onprogress = e => {\n        if (e.lengthComputable) {\n          onProgress(file, (e.loaded / e.total) * 100, e);\n        }\n      };\n    }\n\n    if (readAs) {\n      if (typeof readAs === 'function') {\n        readAs(type, file, fr);\n      } else {\n        fr[`readAs${readAs}`](file);\n      }\n    } else if (type.match(/image|video|audio|application\\/pdf/) || name.match(/\\.mkv$/)) {\n      fr.readAsDataURL(file);\n    } else if (type.match(/application\\/json/)) {\n      fr.readAsText(file);\n    } else if (type.match(/application|model|multipart/) || name.match(/(w|e)ar$/)) {\n      fr.readAsArrayBuffer(file);\n    } else {\n      fr.readAsText(file);\n    }\n\n    return fr;\n  };\n\n  _handleUpload = (fileList, e) => {\n    if (this.props.onChange) {\n      this.props.onChange(fileList, e);\n    }\n\n    if (!fileList) { return; }\n    const { maxSize, onSizeError } = this.props;\n    let files = Array.isArray(fileList) ? fileList : [fileList];\n\n    let errorFiles = [];\n    if (maxSize) {\n      errorFiles = files.filter(file => file.size > maxSize);\n      files = files.filter(file => file.size <= maxSize);\n    }\n\n    if (errorFiles.length) {\n      onSizeError(errorFiles);\n    }\n\n    if (!files.length) {\n      return;\n    }\n\n    const nextState = {};\n    files.forEach(file => {\n      const fileReader = this._uploadFile(file);\n      nextState[file.name] = fileReader;\n    });\n\n    this.setState(nextState);\n  };\n\n  render() {\n    const {\n      /* eslint-disable no-unused-vars */\n      maxSize,\n      readAs,\n      onLoad,\n      onLoadStart,\n      onLoadEnd,\n      onProgress,\n      onAbort,\n      onError,\n      onSizeError,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    return <FileInput {...props} onChange={this._handleUpload} />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport bem from '../utils/bem';\nimport isValued from '../utils/isValued';\n\nconst DIFF_KEYS = [\n  'className',\n  'stacked',\n  'container',\n  'noSpacing',\n  'gutter',\n  'spacing',\n];\n\nexport default class Grid extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the Grid component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the Grid component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render the Grid as. This should probably not be used as much\n     * as the `children` callback function.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n\n    /**\n     * The children can either be renderable React elements or a callback function\n     * that accepts the style and className props to apply so that the styles can\n     * be manually added to whichever component.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n\n    /**\n     * An optional container name to apply to the Grid. This should be the same name as provided\n     * to the [react-md-make-grid-container](/components/grids?tab=2#mixin-react-md-make-grid-container) mixin.\n     */\n    container: PropTypes.string,\n\n    /**\n     * Boolean if the grid should be placed vertically instead of horizontally.\n     */\n    stacked: PropTypes.bool,\n\n    /**\n     * Boolean if all the gutters and spacing should be removed from the grid.\n     */\n    noSpacing: PropTypes.bool,\n\n    /**\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\n     */\n    gutter: PropTypes.number,\n\n    /**\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\n     */\n    spacing: PropTypes.number,\n  };\n\n  static defaultProps = {\n    component: 'div',\n    stacked: false,\n    noSpacing: false,\n  };\n\n  /**\n   * A utility function to get the grid's className based on the Grid's props. This is\n   * used behind the scenes to merge and create the className for the grid.\n   *\n   * ### Example:\n   * ```js\n   * <div className={Grid.getClassName()}>A base grid</div>\n   * <div className={Grid.getClassName({ stacked: true })}>A stacked Grid</div>\n   * ```\n   *\n   * @param {Object=} props - This should be an object of the `Grid`'s props. It\n   *    will extract the needed keys and generate the className.\n   * @return {String} the full className to use for the grid\n   */\n  static getClassName(props = {}) {\n    const { className, stacked, noSpacing, gutter, spacing, container } = props;\n    return bem('md-grid', {\n      'stacked': stacked,\n      'no-spacing': noSpacing,\n      [`${gutter}-${spacing}`]: isValued(gutter) && isValued(spacing),\n      [container]: container,\n    }, className);\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = { className: Grid.getClassName(props) };\n  }\n\n  componentWillMount() {\n    this.setState({ className: Grid.getClassName(this.props) });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (DIFF_KEYS.some(key => this.props[key] !== nextProps[key])) {\n      this.setState({ className: Grid.getClassName(nextProps) });\n    }\n  }\n\n  render() {\n    const { className } = this.state;\n    const {\n      style,\n      component: Component,\n      children,\n      /* eslint-disable no-unused-vars */\n      className: propClassName,\n      container,\n      stacked,\n      noSpacing,\n      gutter,\n      spacing,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    if (typeof children === 'function') {\n      return children({ style, className });\n    }\n\n    return <Component {...props} style={style} className={className}>{children}</Component>;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport bem from '../utils/bem';\n\nconst DIFF_KEYS = [\n  'className',\n  'align',\n  'position',\n  'size',\n  'offset',\n  'order',\n  'phoneSize',\n  'phoneOrder',\n  'phoneOffset',\n  'phoneHidden',\n  'tabletSize',\n  'tabletOrder',\n  'tabletOffset',\n  'tabletHidden',\n  'desktopSize',\n  'desktopOrder',\n  'desktopOffset',\n  'desktopHidden',\n];\n\nexport default class Cell extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the Cell component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the Cell component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render the Cell as. This should probably not be used as much\n     * as the `children` callback function.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n\n    /**\n     * The children can either be renderable React elements or a callback function\n     * that accepts the style and className props to apply so that the styles can\n     * be manually added to whichever component.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n\n    /**\n     * An optional cell alignment to apply. When the `Grid` is not `stacked`,\n     * this will apply to vertical alignment within each \"row\" of the grid.\n     *\n     * Alignments:\n     * - `top` - This will align to the top of the row\n     * - `middle` - This will align to the middle of the row\n     * - `bottom` - This will align to the bottom of the row\n     * - `stretch` - This will make the cell stretch to fill all the available space\n     *   in the row.\n     *\n     * @see {@link #position}\n     */\n    align: PropTypes.oneOf(['top', 'middle', 'bottom', 'stretch']),\n\n    /**\n     * An optional cell position to apply. When the `Grid` is not `stacked`,\n     * this will apply to horizontal alignment within each \"row\" of the grid.\n     *\n     * Positions:\n     * - `center` - This will align the cell to be within the center of the row. This really\n     *    just applies `margin-left: auto; margin-right: auto`.\n     * - `right` - This will align the cell to the end of the row. This really just applies `margin-left: auto`.\n     *\n     * @see {@link #align}\n     */\n    position: PropTypes.oneOf(['center', 'right']),\n\n    /**\n     * An optional size to apply to the cell. This sizing will be applied across all media sizes.\n     * If the size is greater than the number of columns allowed for the media size, it will just\n     * span the entire width.\n     */\n    size: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell. This order will be applied across all media sizes.\n     */\n    order: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell. This will add spacing to the left of the cell.\n     */\n    offset: PropTypes.number,\n\n    /**\n     * An optional size to apply to the cell only on phones.\n     */\n    phoneSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on phones.\n     */\n    phoneOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on phones.\n     */\n    phoneOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on phones only.\n     */\n    phoneHidden: PropTypes.bool,\n\n    /**\n     * An optional size to apply to the cell only on tablets.\n     */\n    tabletSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on tablets.\n     */\n    tabletOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on tablets.\n     */\n    tabletOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on tablets only.\n     */\n    tabletHidden: PropTypes.bool,\n\n    /**\n     * An optional size to apply to the cell only on desktops.\n     */\n    desktopSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on desktops.\n     */\n    desktopOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on desktops.\n     */\n    desktopOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on desktops only.\n     */\n    desktopHidden: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'div',\n    phoneHidden: false,\n    tabletHidden: false,\n    desktopHidden: false,\n  };\n\n  /**\n   * A utility function to get the cell's className based on the Cell's props. This is\n   * used behind the scenes to merge and create the className for the cell.\n   *\n   * ### Example:\n   * ```js\n   * <div className={Cell.getClassName()}>A simple cell</div>\n   * <div className={Cell.getClassName({ size: 1 })}>A cell with size 1</div>\n   * ```\n   *\n   * @param {Object=} props - This should be an object of the `Cell`'s props. It\n   *    will extract the needed keys and generate the className.\n   * @return {String} the full className to use for the cell\n   */\n  static getClassName(props = {}) {\n    const {\n      className,\n      align,\n      position,\n      size,\n      order,\n      offset,\n      phoneSize,\n      phoneOrder,\n      phoneOffset,\n      phoneHidden,\n      tabletSize,\n      tabletOrder,\n      tabletOffset,\n      tabletHidden,\n      desktopSize,\n      desktopOrder,\n      desktopOffset,\n      desktopHidden,\n    } = props;\n\n    return bem('md-cell', {\n      [align]: align,\n      [position]: position,\n      [size]: size,\n      [`order-${order}`]: order,\n      [`${offset}-offset`]: offset,\n      [`${phoneSize}-phone`]: phoneSize,\n      [`order-${phoneOrder}-phone`]: phoneOrder,\n      [`${phoneOffset}-phone-offset`]: phoneOffset,\n      'phone-hidden': phoneHidden,\n      [`${tabletSize}-tablet`]: tabletSize,\n      [`order-${tabletOrder}-tablet`]: tabletOrder,\n      [`${tabletOffset}-tablet-offset`]: tabletOffset,\n      'tablet-hidden': tabletHidden,\n      [`${desktopSize}-desktop`]: desktopSize,\n      [`order-${desktopOrder}-desktop`]: desktopOrder,\n      [`${desktopOffset}-desktop-offset`]: desktopOffset,\n      'desktop-hidden': desktopHidden,\n    }, className);\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = { className: Cell.getClassName(props) };\n  }\n\n  componentWillMount() {\n    this.setState({ className: Cell.getClassName(this.props) });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (DIFF_KEYS.some(key => this.props[key] !== nextProps[key])) {\n      this.setState({ className: Cell.getClassName(nextProps) });\n    }\n  }\n\n  render() {\n    const { className } = this.state;\n    const {\n      style,\n      component: Component,\n      children,\n      /* eslint-disable no-unused-vars */\n      className: propClassName,\n      align,\n      position,\n      size,\n      offset,\n      order,\n      phoneSize,\n      phoneOrder,\n      phoneOffset,\n      phoneHidden,\n      tabletSize,\n      tabletOrder,\n      tabletOffset,\n      tabletHidden,\n      desktopSize,\n      desktopOrder,\n      desktopOffset,\n      desktopHidden,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    if (typeof children === 'function') {\n      return children({ style, className });\n    }\n\n    return <Component {...props} style={style} className={className}>{children}</Component>;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport Grid from './Grid';\nimport Cell from './Cell';\n\nconst DIFF_KEYS = [\n  'className',\n  'cellClassName',\n  'stacked',\n  'container',\n  'noSpacing',\n  'gutter',\n  'spacing',\n  'align',\n  'position',\n  'size',\n  'offset',\n  'order',\n  'phoneSize',\n  'phoneOrder',\n  'phoneOffset',\n  'phoneHidden',\n  'tabletSize',\n  'tabletOrder',\n  'tabletOffset',\n  'tabletHidden',\n  'desktopSize',\n  'desktopOrder',\n  'desktopOffset',\n  'desktopHidden',\n];\n\nexport default class GridList extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the Grid component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the Grid component. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to each child. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    cellStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to each child. This will only be applied\n     * if the `children` prop is not a callback function.\n     *\n     * @see {@link #children}\n     */\n    cellClassName: PropTypes.string,\n\n    /**\n     * The component to render the Cell as. This should probably not be used as much\n     * as the `children` callback function.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n\n    /**\n     * The children can either be renderable React elements or a callback function\n     * that accepts the style and className props to apply so that the styles can\n     * be manually added to whichever component.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n\n    /**\n     * An optional container name to apply to the Grid. This should be the same name as provided\n     * to the [react-md-make-grid-container](/components/grids?tab=2#mixin-react-md-make-grid-container) mixin.\n     */\n    container: PropTypes.string,\n\n    /**\n     * Boolean if the grid should be placed vertically instead of horizontally.\n     */\n    stacked: PropTypes.bool,\n\n    /**\n     * Boolean if all the gutters and spacing should be removed from the grid.\n     */\n    noSpacing: PropTypes.bool,\n\n    /**\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\n     */\n    gutter: PropTypes.number,\n\n    /**\n     * When the [react-md-make-custom-grid](/components/grids?tab=2#mixin-react-md-make-custom-grid) mixin\n     * is used, you can use the `gutter` and `spacing` props on the `Grid` to apply the correct className\n     */\n    spacing: PropTypes.number,\n\n    /**\n     * An optional cell alignment to apply. When the `Grid` is not `stacked`,\n     * this will apply to vertical alignment within each \"row\" of the grid.\n     *\n     * Alignments:\n     * - `top` - This will align to the top of the row\n     * - `middle` - This will align to the middle of the row\n     * - `bottom` - This will align to the bottom of the row\n     * - `stretch` - This will make the cell stretch to fill all the available space\n     *   in the row.\n     *\n     * @see {@link #position}\n     */\n    align: PropTypes.oneOf(['top', 'middle', 'bottom', 'stretch']),\n\n    /**\n     * An optional cell position to apply. When the `Grid` is not `stacked`,\n     * this will apply to horizontal alignment within each \"row\" of the grid.\n     *\n     * Positions:\n     * - `center` - This will align the cell to be within the center of the row. This really\n     *    just applies `margin-left: auto; margin-right: auto`.\n     * - `right` - This will align the cell to the end of the row. This really just applies `margin-left: auto`.\n     *\n     * @see {@link #align}\n     */\n    position: PropTypes.oneOf(['center', 'right']),\n\n    /**\n     * An optional size to apply to the cell. This sizing will be applied across all media sizes.\n     * If the size is greater than the number of columns allowed for the media size, it will just\n     * span the entire width.\n     */\n    size: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell. This order will be applied across all media sizes.\n     */\n    order: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell. This will add spacing to the left of the cell.\n     */\n    offset: PropTypes.number,\n\n    /**\n     * An optional size to apply to the cell only on phones.\n     */\n    phoneSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on phones.\n     */\n    phoneOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on phones.\n     */\n    phoneOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on phones only.\n     */\n    phoneHidden: PropTypes.bool,\n\n    /**\n     * An optional size to apply to the cell only on tablets.\n     */\n    tabletSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on tablets.\n     */\n    tabletOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on tablets.\n     */\n    tabletOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on tablets only.\n     */\n    tabletHidden: PropTypes.bool,\n\n    /**\n     * An optional size to apply to the cell only on desktops.\n     */\n    desktopSize: PropTypes.number,\n\n    /**\n     * An optional order to apply to the cell only on desktops.\n     */\n    desktopOrder: PropTypes.number,\n\n    /**\n     * An optional offset to apply to the cell only on desktops.\n     */\n    desktopOffset: PropTypes.number,\n\n    /**\n     * Boolean if the cell should be hidden on desktops only.\n     */\n    desktopHidden: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    component: 'div',\n    stacked: false,\n    noSpacing: false,\n    phoneHidden: false,\n    tabletHidden: false,\n    desktopHidden: false,\n  };\n\n  /**\n   * A utility function to get the grid's className based on the `Grid`'s and `Cell`'s\n   * props. This is * used behind the scenes to merge and create the className for the grid.\n   *\n   * ### Example:\n   * ```js\n   * const { className, cellClassName } = GridList.getClassNames();\n   * const { className, cellClassName } = GridList.getClassNames({ size: 1, container: 'custom' });\n   * ```\n   *\n   * @param {Object=} props - This should be an object of the `Grid`'s props. It\n   *    will extract the needed keys and generate the classNames.\n   * @return {Object} an object containing the `className` and `cellClassName` attributes.\n   */\n  static getClassNames(props = {}) {\n    const { className, cellClassName, ...remaining } = props;\n    return {\n      className: Grid.getClassName({ className, ...remaining }),\n      cellClassName: Cell.getClassName({ className: cellClassName, ...remaining }),\n    };\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = GridList.getClassNames(props);\n  }\n\n  componentWillMount() {\n    this.setState(GridList.getClassNames(this.props));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (DIFF_KEYS.some(key => this.props[key] !== nextProps[key])) {\n      this.setState(GridList.getClassNames(nextProps));\n    }\n  }\n\n  render() {\n    const { className, cellClassName } = this.state;\n    const {\n      style,\n      cellStyle,\n      component: Component,\n      children,\n      /* eslint-disable no-unused-vars */\n      className: propClassName,\n      cellClassName: propCellClassName,\n      container,\n      noSpacing,\n      stacked,\n      gutter,\n      spacing,\n      align,\n      position,\n      size,\n      offset,\n      order,\n      phoneSize,\n      phoneOrder,\n      phoneOffset,\n      phoneHidden,\n      tabletSize,\n      tabletOrder,\n      tabletOffset,\n      tabletHidden,\n      desktopSize,\n      desktopOrder,\n      desktopOffset,\n      desktopHidden,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    if (typeof children === 'function') {\n      return children({ style, className, cellStyle, cellClassName });\n    }\n\n    return (\n      <Component {...props} style={style} className={className}>\n        {React.Children.map(children, (child) => {\n          if (!child) {\n            return child;\n          }\n\n          let childStyle = child.props.style;\n          if (cellStyle) {\n            childStyle = childStyle ? { ...cellStyle, ...childStyle } : cellStyle;\n          }\n\n          return React.cloneElement(child, {\n            style: childStyle,\n            className: cn(child.props.className, cellClassName),\n          });\n        })}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport ListItemText from './ListItemText';\nimport TileAddon from './TileAddon';\n\nexport default class ListItemControl extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the `.md-list-item`.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `.md-list-item`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `.md-list-tile`.\n     */\n    tileStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `.md-list-tile`.\n     */\n    tileClassName: PropTypes.string,\n\n    /**\n     * The primary text to display in the `ListItemControl`. The `primaryAction` or\n     * `secondaryAction` will end up getting the `label` prop injected into it with\n     * a combination of the `primaryText` and `secondaryText`. If the `primaryAction`\n     * or `secondaryAction` already have a label prop, the `label` prop will be used\n     * as the `primaryText`.\n     */\n    primaryText: PropTypes.node,\n\n    /**\n     * An optional secondary text that can be displayed in the label of the `primaryAction`\n     * or `secondaryAction`.\n     */\n    secondaryText: PropTypes.node,\n\n    /**\n     * Boolean if the primary and secondary text will span three lines.\n     */\n    threeLines: PropTypes.bool,\n\n    /**\n     * The primary action of the `ListItemControl`. This _should_ normally\n     * be a type of `SelectionControl`\n     */\n    primaryAction: PropTypes.element,\n\n    /**\n     * The secondary action of the `ListItemControl`. This _should_ normally\n     * be a type of `SelectionControl`. If it is a selection control,\n     * make sure to add the `labelBefore` prop to get correct positioning.\n     */\n    secondaryAction: PropTypes.element,\n\n    /**\n     * An optional `FontIcon` to display to the left of the action.\n     */\n    leftIcon: PropTypes.node,\n\n    /**\n     * An optional `Avatar` to display to the left of the action.\n     */\n    leftAvatar: PropTypes.node,\n\n    /**\n     * An optional `FontIcon` to display to the right of the action.\n     */\n    rightIcon: PropTypes.node,\n\n    /**\n     * An optional `FontIcon` to display to the right of the action.\n     */\n    rightAvatar: PropTypes.node,\n\n    /**\n     * Defines the number of items in the list. This is only required when all items in the\n     * list are not present in the DOM.\n     *\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize\n     */\n    'aria-setsize': PropTypes.number,\n\n    /**\n     * Defines the items position in the list. This is only required when all items in the list\n     * are not present in the DOM. The custom validation just requires this prop if the `aria-setsize`\n     * prop is defined as a helpful reminder.\n     *\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset\n     */\n    'aria-posinset': (props, propName, ...args) => {\n      let validator = PropTypes.number;\n      if (typeof props['aria-setsize'] !== 'undefined') {\n        validator = validator.isRequired;\n      }\n\n      return validator(props, propName, ...args);\n    },\n  };\n\n  render() {\n    const {\n      className,\n      tileStyle,\n      tileClassName,\n      primaryAction,\n      secondaryAction,\n      primaryText,\n      secondaryText,\n      threeLines,\n      leftIcon,\n      leftAvatar,\n      rightIcon,\n      rightAvatar,\n      ...props\n    } = this.props;\n\n    let control = Children.only(primaryAction || secondaryAction);\n    const text = (\n      <ListItemText\n        key=\"text\"\n        primaryText={control.props.label || primaryText}\n        secondaryText={secondaryText}\n        className={cn({\n          'md-tile-content--left-icon': leftIcon,\n          'md-tile-content--left-avatar': leftAvatar,\n          'md-tile-content--left-button': primaryAction,\n          'md-tile-content--right-padding': primaryAction,\n        })}\n      />\n    );\n    control = cloneElement(control, {\n      className: cn('md-list-control', {\n        'md-list-control--right': secondaryAction,\n      }, control.props.className),\n      label: text,\n    });\n\n    const leftNode = (\n      <TileAddon\n        key=\"left-addon\"\n        icon={leftIcon}\n        avatar={leftAvatar}\n      />\n    );\n\n    const rightNode = (\n      <TileAddon\n        key=\"right-addon\"\n        icon={rightIcon}\n        avatar={rightAvatar}\n      />\n    );\n\n    const icond = !!leftIcon || !!rightIcon;\n    const avatard = !!leftAvatar || !!rightAvatar;\n\n    return (\n      <li {...props} className={cn('md-list-item', className)}>\n        <div\n          style={tileStyle}\n          className={cn('md-list-tile', {\n            'md-list-tile--icon': !secondaryText && icond && !avatard,\n            'md-list-tile--avatar': !secondaryText && avatard,\n            'md-list-tile--two-lines': secondaryText && !threeLines,\n            'md-list-tile--three-lines': secondaryText && threeLines,\n            'md-list-tile--control-left': primaryAction,\n            'md-list-tile--control-right': secondaryAction,\n          }, themeColors({ text: true }), tileClassName)}\n        >\n          {leftNode}\n          {control}\n          {rightNode}\n        </div>\n      </li>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nfunction validateAspectRatio(props, propName, component, ...args) {\n  const value = props[propName];\n  let err = PropTypes.string.isRequired(props, propName, component, ...args);\n  if (!err && value.split('-').length !== 2) {\n    err = new Error(\n      `Your provided an \\`${propName}\\` prop to the ${component} that is not a valid ` +\n      `aspect ratio \\`${value}\\`. This should be in the form of '{width}-{height}'.`\n    );\n  }\n\n  return err;\n}\n\n/**\n * The `Media` component is used to display images, iframes, ...media. Who'da thunk?\n */\nexport default class Media extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply to the card media component.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Any media to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the aspect ratio should be forced.\n     */\n    forceAspect: PropTypes.bool,\n\n    /**\n     * The aspect ratio to use.\n     */\n    aspectRatio: validateAspectRatio,\n\n    /**\n     * Boolean if this component should be expandable when there is a `CardExpander`\n     * above it in the `Card`.\n     */\n    expandable: PropTypes.bool,\n\n    /**\n     * The component to render the card media as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    forceAspect: true,\n    aspectRatio: '16-9',\n    component: 'section',\n  };\n\n  render() {\n    const {\n      component: Component,\n      className,\n      children,\n      forceAspect,\n      aspectRatio,\n      expandable, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    return (\n      <Component\n        {...props}\n        className={cn('md-media', {\n          [`md-media--${aspectRatio}`]: forceAspect,\n        }, className)}\n      >\n        {children}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `MediaOverlay` component is just a very simple wrapper that adds the\n * `.md-media-overlay` class name to a div. The overlay will be positioned\n * at the bottom of the `Media` by default.\n */\nexport default class MediaOverlay extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the overlay.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the overlay.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Any children to display in the overlay. This is _normally_ a `CardTitle` component\n     * or some buttons.\n     */\n    children: PropTypes.node,\n\n    /**\n     * The component to be rendered as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    component: 'div',\n  };\n\n  render() {\n    const { className, component: Component, ...props } = this.props;\n    return <Component className={cn('md-media-overlay', className)} {...props} />;\n  }\n}\n","import React, { PureComponent, Children, isValidElement, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport default class ToolbarTitle extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    prominent: PropTypes.bool,\n    offset: PropTypes.bool,\n    title: PropTypes.node,\n  };\n\n  render() {\n    const { title, className, prominent, offset, ...props } = this.props;\n    if (!title) {\n      return null;\n    }\n\n    const fullClassName = cn('md-title md-title--toolbar', {\n      'md-title--toolbar-prominent': prominent,\n      'md-title--toolbar-offset': offset,\n    }, className);\n\n    if (isValidElement(title)) {\n      const titleEl = Children.only(title);\n      return cloneElement(title, {\n        ...props,\n        id: titleEl.props.id || props.id,\n        className: cn(fullClassName, titleEl.props.className),\n      });\n    }\n\n    return (\n      <h2\n        {...props}\n        className={fullClassName}\n      >\n        {title}\n      </h2>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport invalidIf from '../utils/PropTypes/invalidIf';\nimport between from '../utils/PropTypes/between';\nimport Paper from '../Papers/Paper';\nimport ToolbarTitle from './ToolbarTitle';\n\nexport default class Toolbar extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional id to provide to the toolbar. If this is specified and the `titleId` is not, the title\n     * will gain an id of `${id}-title`. This will not be applied to the `titleMenu`.\n     *\n     * @see {@link #titleId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the toolbar.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the toolbar,\n     */\n    className: PropTypes.string,\n\n    /*\n     * An optional style to apply to the `h2` surrounding the `title` prop.\n     */\n    titleStyle: PropTypes.object,\n\n    /*\n     * An optional className to apply to the `h2` surrounding the `title` prop.\n     */\n    titleClassName: PropTypes.string,\n\n    /**\n     * Boolean if the toolbar should more prominent. This will double the height of the toolbar.\n     */\n    prominent: PropTypes.bool,\n\n    /**\n     * Boolean if the toolbar's title should be more prominent. This will move the title to the\n     * second line of the toolbar. This only works when the `prominent` prop is true as well.\n     */\n    prominentTitle: PropTypes.bool,\n\n    /**\n     * The current title of the page to show in the toolbar. It is invalid to specify both a\n     * `title` and a `titleMenu`. Only one should be given.\n     */\n    title: invalidIf(PropTypes.node, 'titleMenu'),\n\n    /**\n     * An optional id to give the main title in the toolbar. This will not be applied to the\n     * `titleMenu`.\n     */\n    titleId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional title menu to display instead of the title. This should be a `SelectField` component.\n     * It is cloned with some additional props, so if the `SelectField` is separated into a separate\n     * component, the following props must be passed to get the correct styling: `className`, `block`,\n     * `paddedBlock`, `position`.\n     */\n    titleMenu: PropTypes.element,\n\n    /**\n     * This prop is used for rendering an optional navigation button to the left of the `title`\n     * or the `titleMenu` component. This needs to be an icon `Button` because some additional props\n     * are cloned into it.\n     */\n    nav: PropTypes.element,\n\n    /**\n     * Any additional actions to display to the right of the title. This should be a list or a single\n     * `Button` to display. The buttons get cloned with an additional className for toolbar styling.\n     */\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]),\n\n    /**\n     * Any children to display in the toolbar. This will be displayed between the optional title and\n     * actions.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the toolbar should be fixed to the top of the page. This will add some additional box shadow.\n     */\n    fixed: PropTypes.bool,\n\n    /**\n     * Boolean if the nav, actions, and title should share the same color. For a `colored` or dark `themed`\n     * toolbar, they will all be colored white. For a transparent or light `themed` toolbar, the colors will\n     * be the `rgba(0, 0, 0, .87)`. Setting this to false will only style the title to the specific color\n     * stated above.\n     */\n    singleColor: PropTypes.bool,\n\n    /**\n     * Boolean if the toolbar should be colored based off the current theme. This will either style the background\n     * to be fairly white, or fairly black. You can not specify both `themed` and `colored`.\n     */\n    themed: PropTypes.bool,\n\n    /**\n     * Boolean if the toolbar should be colored with the `$md-primary-color`.\n     */\n    colored: invalidIf(PropTypes.bool, 'themed'),\n\n    /**\n     * The component to render the toolbar as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * Boolean if the toolbar is inset in the page. This will just add some margin around\n     * it.\n     */\n    inset: PropTypes.bool,\n\n    /**\n     * An optional zDepth to enforce for the toolbar. This should be a number between 0 and 5.\n     * If this is omitted, the toolbar will gain a zDepth of 2 when `fixed`.\n     */\n    zDepth: between(PropTypes.number, 0, 5),\n    containerStyle: deprecated(\n      PropTypes.object,\n      'The `container` no longer exists in the `Toolbar`. Use the `style` prop instead'\n    ),\n    containerClassName: deprecated(\n      PropTypes.string,\n      'The `container` no longer exists in the `Toolbar`. Use the `className` prop instead'\n    ),\n    primary: deprecated(PropTypes.bool, 'Use the `colored` prop instead'),\n    secondary: deprecated(\n      PropTypes.bool,\n      'Toolbars can no longer be themed to the secondary color. Use the `colored` prop instead'\n    ),\n    actionLeft: deprecated(PropTypes.element, 'Use the `nav` prop instead'),\n    actionsRight: deprecated(\n      PropTypes.node,\n      'Use the `menu` prop and/or the `actions` prop instead'\n    ),\n  };\n\n  static defaultProps = {\n    singleColor: true,\n    component: 'header',\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      component,\n      titleStyle,\n      titleClassName,\n      prominentTitle,\n      themed,\n      singleColor,\n      actions,\n      fixed,\n      children,\n      inset,\n      titleId,\n      /* eslint-disable no-unused-vars */\n      nav: propNav,\n      title: propTitle,\n      titleMenu: propTitleMenu,\n      zDepth: propZDepth,\n      colored: propColored,\n      prominent: propProminent,\n\n      // deprecated\n      containerStyle,\n      containerClassName,\n      /* eslint-enble no-unused-vars */\n      // deprecated\n      actionLeft,\n      actionsRight,\n      primary,\n      secondary,\n      ...props\n    } = this.props;\n\n    let {\n      colored,\n      title,\n      titleMenu,\n      nav,\n      prominent,\n      zDepth,\n    } = this.props;\n\n    colored = colored || primary || secondary;\n    prominent = prominent || prominentTitle;\n\n    title = (\n      <ToolbarTitle\n        key=\"title\"\n        style={titleStyle}\n        className={titleClassName}\n        prominent={prominentTitle}\n        offset={prominentTitle}\n        id={typeof titleId === 'undefined' && props.id ? `${props.id}-title` : titleId}\n        title={title}\n      />\n    );\n\n    if (nav || actionLeft) {\n      const navEl = Children.only(nav || actionLeft);\n      nav = cloneElement(nav, {\n        className: cn('md-btn--toolbar md-toolbar--action-left', navEl.props.className),\n      });\n    }\n\n    let rightActions;\n    if (actions || actionsRight) {\n      rightActions = Children.map(Children.toArray(actions || actionsRight), action => cloneElement(action, {\n        className: cn('md-btn--toolbar', action.props.className),\n      }));\n\n      rightActions = (\n        <div key=\"actions\" className=\"md-cell--right md-toolbar--action-right\">\n          {rightActions}\n        </div>\n      );\n    }\n\n    if (titleMenu) {\n      titleMenu = Children.only(titleMenu);\n      titleMenu = cloneElement(titleMenu, {\n        className: cn('md-title md-title--toolbar md-select-field--toolbar', {\n          'md-title--toolbar-offset': prominentTitle,\n          'md-title--toolbar-prominent': prominentTitle,\n        }, titleMenu.props.className),\n        position: titleMenu.props.position || 'tl',\n        toolbar: true,\n      });\n    }\n\n    if (typeof zDepth !== 'number') {\n      zDepth = fixed ? 2 : 0;\n    }\n\n    return (\n      <Paper\n        {...props}\n        component={component}\n        zDepth={zDepth}\n        style={style}\n        className={cn('md-toolbar', {\n          'md-background--primary': colored,\n          'md-toolbar--themed': themed,\n          'md-toolbar--text-white': singleColor && colored,\n          'md-toolbar--prominent': prominent,\n          'md-toolbar--fixed': fixed,\n          'md-toolbar--inset': inset,\n        }, className)}\n      >\n        {nav}\n        {title}\n        {titleMenu}\n        {children}\n        {rightActions}\n      </Paper>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * This is an accessibility only component that should be used in the `NavigationDrawer`\n * component. It allows keyboard users to quickly jump to the main content.\n *\n * This component relies on the `contextTypes` of the `NavigationDrawer` to work. If this is going\n * to be used outside of that component, you will need to specify an `id` and `label` contextType\n * to pass to this component.\n */\nexport default class JumpToContentLink extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional function to call when the linked is clicked.\n     */\n    onClick: PropTypes.func,\n  };\n\n  static contextTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    label: PropTypes.node.isRequired,\n  }\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    document.getElementById(this.context.id).focus();\n  };\n\n  render() {\n    const { className, ...props } = this.props;\n    const { id, label } = this.context;\n    return (\n      <a\n        {...props}\n        id={`jump-to-${id}`}\n        href={`#${id}`}\n        onClick={this._handleClick}\n        className={cn('md-content-jump', className)}\n      >\n        {label}\n      </a>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Buttons/Button';\n\n/**\n * A button used to close the persistent navigation drawer. The button will\n * be generated based on the `NavigationDrawer`'s `contextTypes`.\n *\n * This component is really only used if you are using a `persistent` drawer and you\n * manually created the `drawerHeader` for the `NavigationDrawer`.\n */\nexport default class CloseButton extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional additional function to call when the `click` event is triggered.\n     */\n    onClick: PropTypes.func,\n  };\n\n  static contextTypes = {\n    closeIcon: PropTypes.element,\n    onCloseClick: PropTypes.func,\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (this.context.onCloseClick) {\n      this.context.onCloseClick(e);\n    }\n  };\n\n  render() {\n    const { closeIcon } = this.context;\n\n    return (\n      <Button\n        {...this.props}\n        icon\n        key=\"close\"\n        onClick={this._handleClick}\n        iconEl={closeIcon}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport TileAddon from '../Lists/TileAddon';\n\nexport default class MiniListItem extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    tileStyle: PropTypes.object,\n    tileClassName: PropTypes.string,\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]),\n    active: PropTypes.bool,\n    activeClassName: PropTypes.string,\n    leftIcon: PropTypes.node,\n    leftAvatar: PropTypes.node,\n    disabled: PropTypes.bool,\n    onTouchStart: PropTypes.func,\n    onTouchEnd: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    defaultOpen: PropTypes.bool,\n    itemComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    activeClassName: 'md-text--theme-primary',\n    component: 'div',\n    itemComponent: 'li',\n  };\n\n  state = { active: false };\n\n  componentWillUnmount() {\n    if (this._touchTimeout) {\n      clearTimeout(this._touchTimeout);\n    }\n  }\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    this._touched = true;\n\n    this.setState({ active: true, touchedAt: Date.now() });\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    const time = Date.now() - this.state.touchedAt;\n    this._touchTimeout = setTimeout(() => {\n      this._touchTimeout = null;\n\n      this.setState({ active: false });\n    }, time > 450 ? 0 : 450 - time);\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      tileStyle,\n      tileClassName,\n      leftIcon,\n      leftAvatar,\n      active,\n      activeClassName,\n      itemComponent: ItemComponent,\n      /* eslint-disable no-unused-vars,react/prop-types */\n      primaryText,\n      secondaryText,\n      rightIcon,\n      rightAvatar,\n      threeLines,\n      children,\n      defaultOpen,\n      isOpen,\n      inset,\n      nestedItems,\n      animateNestedItems,\n      expanderIcon,\n\n      // deprecated\n      expanderIconChildren,\n      expanderIconClassName,\n      /* eslint-enable no-unused-vars,react/prop-types */\n      ...props\n    } = this.props;\n\n    return (\n      <ItemComponent style={style} className={className}>\n        <AccessibleFakeInkedButton\n          {...props}\n          style={tileStyle}\n          className={cn('md-list-tile md-list-tile--icon md-list-tile--mini', {\n            'md-list-tile--active': this.state.active && !this._touched,\n          }, tileClassName)}\n          onMouseOver={this._handleMouseOver}\n          onMouseLeave={this._handleMouseLeave}\n          onTouchStart={this._handleTouchStart}\n          onTouchEnd={this._handleTouchEnd}\n        >\n          <TileAddon\n            active={active}\n            activeClassName={activeClassName}\n            icon={leftIcon}\n            avatar={leftAvatar}\n          />\n        </AccessibleFakeInkedButton>\n      </ItemComponent>\n    );\n  }\n}\n","/** @module utils/DateUtils/DateTimeFormat */\n\n/**\n * A _really_ terrible DateTimeFormat mock if it is not available in\n * the browser or node version.\n */\nconst DateTimeFormat = (() => {\n  if (typeof Intl !== 'undefined' && typeof Intl.DateTimeFormat !== 'undefined') {\n    return Intl.DateTimeFormat;\n  }\n\n  // Very bad 'mock' of Intl.DateTimeFormat\n  return class DateTimeFormat { // eslint-disable-line no-shadow\n    constructor(locales, formatOptions) {\n      this.locales = locales;\n      this.options = formatOptions;\n    }\n\n    format(date) {\n      return date.toLocaleString();\n    }\n  };\n})();\n\nexport default DateTimeFormat;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `PickerControl` component is the button that goes in the header\n * of a `Picker` component. It is used to switch the view of the `Picker`\n * from state to state.\n *\n * For example, this is the year and date views for the `DatePicker`.\n */\nexport default class PickerControl extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    active: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired,\n  };\n\n  render() {\n    const { className, active, ...props } = this.props;\n    return (\n      <button\n        {...props}\n        type=\"button\"\n        className={cn('md-btn md-pointer--hover md-picker-control md-picker-text', {\n          'md-picker-text--active': active,\n        }, className)}\n      />\n    );\n  }\n}\n","/* eslint-disable new-cap */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport PickerControl from './PickerControl';\n\n/**\n * The `DatePickerHeader` component is the component that holds the\n * current year and the current date. It allows the user to switch\n * between calendar and year picker mode.\n */\nexport default class DatePickerHeader extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n    calendarMode: PropTypes.oneOf(['calendar', 'year']).isRequired,\n    changeCalendarMode: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = this._getFormattedDate(props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { DateTimeFormat, locales, calendarTempDate, changeCalendarMode } = this.props;\n    if (DateTimeFormat !== nextProps.DateTimeFormat\n      || locales !== nextProps.locales\n      || calendarTempDate !== nextProps.calendarTempDate\n      || changeCalendarMode !== nextProps.changeCalendarMode) {\n      this.setState(this._getFormattedDate(nextProps));\n    }\n  }\n\n  _getFormattedDate({ DateTimeFormat, locales, calendarTempDate }) {\n    return {\n      year: DateTimeFormat(locales, { year: 'numeric' }).format(calendarTempDate),\n      weekday: DateTimeFormat(locales, { weekday: 'short' }).format(calendarTempDate),\n      date: DateTimeFormat(locales, { month: 'short', day: '2-digit' }).format(calendarTempDate),\n    };\n  }\n\n  _selectYear = (e) => {\n    this.props.changeCalendarMode('year', e);\n  };\n\n  _selectCalendar = (e) => {\n    this.props.changeCalendarMode('calendar', e);\n  };\n\n  render() {\n    const { year, weekday, date } = this.state;\n    const { calendarMode, className } = this.props;\n    const isYearMode = calendarMode === 'year';\n    return (\n      <header className={cn('md-picker-header', className)}>\n        <PickerControl\n          onClick={this._selectYear}\n          active={isYearMode}\n          aria-expanded={isYearMode}\n        >\n          <h6 className=\"md-subheading-1\">{year}</h6>\n        </PickerControl>\n        <PickerControl onClick={this._selectCalendar} active={calendarMode === 'calendar'}>\n          <h4 className=\"md-display-1\">{`${weekday},`}&nbsp;</h4>\n          <h4 className=\"md-display-1\">{date}</h4>\n        </PickerControl>\n      </header>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * This component renders a selectable date in the `CalendarMonth` component.\n */\nexport default class CalendarDate extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    date: PropTypes.instanceOf(Date).isRequired,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n    today: PropTypes.bool,\n    getDateClassName: PropTypes.func,\n    dateRenderer: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { ...this._getFormattedDate(props), desktopActive: false };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { DateTimeFormat, locales, date } = this.props;\n    if (DateTimeFormat !== nextProps.DateTimeFormat || locales !== nextProps.locales || date !== nextProps.date) {\n      this.setState(this._getFormattedDate(nextProps));\n    }\n  }\n\n  _getFormattedDate({ DateTimeFormat, locales, date }) {\n    return {\n      date: new DateTimeFormat(locales, { day: 'numeric' }).format(date),\n    };\n  }\n\n  _setFocus = (btn) => {\n    if (btn && this.props.active) {\n      btn.focus();\n    }\n  };\n\n  _handleClick = (e) => {\n    this.props.onClick(new Date(this.props.date), e);\n  };\n\n  _setActive = () => {\n    if (!this.props.disabled) {\n      this.setState({ desktopActive: true });\n    }\n  };\n\n  _setInactive = () => {\n    if (!this.props.disabled) {\n      this.setState({ desktopActive: false });\n    }\n  };\n\n  render() {\n    const { date, desktopActive } = this.state;\n    const { disabled, active, today, className, getDateClassName, dateRenderer } = this.props;\n\n    const fullyActive = today && !active && !desktopActive;\n\n    const generatedClassName = getDateClassName\n      ? getDateClassName(this.props.date, date)\n      : null;\n\n    return (\n      <div\n        role=\"gridcell\"\n        className=\"md-calendar-date\"\n        style={{ display: 'inline-block' }}\n      >\n        <button\n          type=\"button\"\n          ref={this._setFocus}\n          onFocus={this._setActive}\n          onBlur={this._setInactive}\n          onMouseOver={this._setActive}\n          onMouseLeave={this._setInactive}\n          className={cn('md-calendar-date--btn', {\n            'md-calendar-date--btn-active': active || desktopActive,\n            'md-pointer--hover': !disabled,\n          }, themeColors({ disabled, primary: fullyActive }), 'md-btn', className, generatedClassName)}\n          onClick={this._handleClick}\n          disabled={disabled}\n        >\n          <span\n            className={cn('md-calendar-date--date', {\n              'md-picker-text--active': active || desktopActive,\n              'md-font-bold': fullyActive,\n            })}\n          >\n            {dateRenderer ? dateRenderer(this.props.date, date) : date}\n          </span>\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport addDate from '../utils/dates/addDate';\nimport chunk from '../utils/chunk';\nimport getLastDay from '../utils/dates/getLastDay';\nimport stripTime from '../utils/dates/stripTime';\nimport toDayOfWeek from '../utils/dates/toDayOfWeek';\n\nimport CalendarDate from './CalendarDate';\n\n/**\n * This component renders a month for the calendar view of the `DatePicker`.\n */\nexport default class CalendarMonth extends PureComponent {\n  static propTypes = {\n    /**\n     * A className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The current selected date of the calendar. This is\n     * the date after hitting the Ok button or `value` || `defaultValue`.\n     */\n    calendarDate: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * The current selected date of the calendar before verifying\n     * the new date.\n     */\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * An optional min date for the calendar. This will disable any\n     * dates that come before this date in the month.\n     */\n    minDate: PropTypes.instanceOf(Date),\n\n    /**\n     * An optional max date for the calendar. This will disable any\n     * dates that come after this date in the month.\n     */\n    maxDate: PropTypes.instanceOf(Date),\n\n    /**\n     * A function to call that will select a new date.\n     */\n    onCalendarDateClick: PropTypes.func.isRequired,\n\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n\n    /**\n     * True if weekends are to be greyed out.\n     */\n    disableWeekEnds: PropTypes.bool,\n\n    /**\n     * An optional className to apply to a date.\n     */\n    dateClassName: PropTypes.string,\n\n    /**\n     * An optional function to provide class for each date in calendar.\n     */\n    getDateClassName: PropTypes.func,\n\n      /**\n     * An optional function to render each date component.\n     */\n    dateRenderer: PropTypes.func,\n\n    /**\n     * True if dates from adjacent months should be shown.\n     */\n    showAllDays: PropTypes.bool,\n    disableOuterDates: PropTypes.bool,\n\n    /**\n     * An optional className to apply to a date from an adjacent month.\n     */\n    outerDateClassName: PropTypes.string,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    firstDayOfWeek: 0,\n  };\n\n  render() {\n    const {\n      calendarDate,\n      calendarTempDate,\n      onCalendarDateClick,\n      minDate,\n      maxDate,\n      DateTimeFormat,\n      locales,\n      className,\n      firstDayOfWeek,\n      disableWeekEnds,\n      dateClassName,\n      getDateClassName,\n      dateRenderer,\n      showAllDays,\n      outerDateClassName,\n      disableOuterDates,\n      ...props\n    } = this.props;\n\n    const days = [];\n    const firstDay = stripTime(calendarDate);\n    firstDay.setDate(1);\n    const lastDay = getLastDay(calendarDate);\n    let currentDate = toDayOfWeek(firstDay, 0);\n    let endDate = toDayOfWeek(lastDay, 6);\n    const activeDateTime = stripTime(calendarTempDate).getTime();\n    const todayTime = new Date().getTime();\n\n    if (firstDayOfWeek) {\n      currentDate = addDate(currentDate, firstDayOfWeek > firstDay.getDay() ? firstDayOfWeek - 7 : firstDayOfWeek, 'D');\n      endDate = addDate(endDate, firstDayOfWeek > lastDay.getDay() ? firstDayOfWeek - 7 : firstDayOfWeek, 'D');\n    }\n\n    while (currentDate <= endDate) {\n      const key = `${currentDate.getMonth()}-${currentDate.getDate()}`;\n      const currentMonth = currentDate.getMonth() === calendarDate.getMonth();\n\n      let date;\n      if (currentMonth || showAllDays) {\n        const time = currentDate.getTime();\n        const isMinDateDisabled = minDate && minDate.getTime() > time;\n        const isMaxDateDisabled = maxDate && maxDate.getTime() < time;\n        const isWeekendDisabled = disableWeekEnds && (currentDate.getDay() === 0 || currentDate.getDay() === 6);\n        const disabled = (!currentMonth && disableOuterDates)\n          || isMinDateDisabled\n          || isMaxDateDisabled\n          || isWeekendDisabled;\n\n        date = (\n          <CalendarDate\n            key={key}\n            className={cn(dateClassName, { [outerDateClassName]: !currentMonth && outerDateClassName })}\n            today={time === todayTime}\n            getDateClassName={getDateClassName}\n            dateRenderer={dateRenderer}\n            active={time === activeDateTime}\n            disabled={disabled}\n            onClick={onCalendarDateClick}\n            date={currentDate}\n            DateTimeFormat={DateTimeFormat}\n            locales={locales}\n          />\n        );\n      } else {\n        date = <div key={key} className=\"md-calendar-date\" role=\"gridcell\" />;\n      }\n\n      days.push(date);\n      currentDate = addDate(currentDate, 1, 'D');\n    }\n\n    const weeks = chunk(days, 7);\n\n    return (\n      <div role=\"grid\" className={cn('md-calendar-month', className)} {...props}>\n        {weeks.map((week, i) => (\n          <div key={i} role=\"row\">\n            {week}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport isMonthBefore from '../utils/dates/isMonthBefore';\nimport toDayOfWeek from '../utils/dates/toDayOfWeek';\nimport addDate from '../utils/dates/addDate';\nimport Button from '../Buttons/Button';\n\n/**\n * This component renders the controls for a `DatePicker`'s Calendar.\n * This will render a next and previous month button along with the\n * current month/year. It also renders the abbreviiations for the days\n * of the week.\n */\nexport default class CalendarHeader extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    date: PropTypes.instanceOf(Date).isRequired,\n    minDate: PropTypes.instanceOf(Date),\n    maxDate: PropTypes.instanceOf(Date),\n    previousIcon: PropTypes.element,\n    onPreviousClick: PropTypes.func.isRequired,\n    nextIcon: PropTypes.node,\n    onNextClick: PropTypes.func.isRequired,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    /**\n     * An optional className to apply to the title.\n     */\n    titleClassName: PropTypes.string,\n    /**\n     * The DateTimeFormat options to apply to format the title.\n     */\n    titleFormat: PropTypes.shape({\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    }),\n    /**\n     * An optional className to apply to a weekday.\n     */\n    weekdayClassName: PropTypes.string,\n    /**\n     * The DateTimeFormat option to apply to format a weekday.\n     */\n    weekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n  };\n\n  static defaultProps = {\n    firstDayOfWeek: 0,\n    titleFormat: { month: 'long', year: 'numeric' },\n    weekdayFormat: 'narrow',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = this._createState(props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { DateTimeFormat, locales, date } = this.props;\n    if (DateTimeFormat !== nextProps.DateTimeFormat || locales !== nextProps.locales || date !== nextProps.date) {\n      this.setState(this._createState(nextProps));\n    }\n  }\n\n  _createState({\n    DateTimeFormat,\n    locales,\n    date,\n    firstDayOfWeek,\n    titleFormat,\n    weekdayClassName,\n    weekdayFormat,\n  } = this.props) {\n    const firstDay = toDayOfWeek(date, firstDayOfWeek);\n    const formatter = new DateTimeFormat(locales, { weekday: weekdayFormat });\n    const dows = [];\n    for (let i = 0; i < 7; i++) {\n      const dow = formatter.format(addDate(firstDay, i, 'D'));\n      dows.push(\n        <h4\n          key={i}\n          className={cn('md-calendar-date md-calendar-dow', themeColors({ disabled: true }), weekdayClassName)}\n        >\n          {dow}\n        </h4>\n      );\n    }\n\n    return {\n      dows,\n      title: new DateTimeFormat(locales, titleFormat).format(date),\n    };\n  }\n\n  render() {\n    const { dows, title } = this.state;\n    const {\n      date,\n      minDate,\n      maxDate,\n      onPreviousClick,\n      previousIcon,\n      onNextClick,\n      nextIcon,\n      titleClassName,\n    } = this.props;\n\n    const isPreviousDisabled = isMonthBefore(minDate, date);\n    const isNextDisabled = isMonthBefore(date, maxDate);\n    return (\n      <header className=\"md-calendar-header\">\n        <div className=\"md-calendar-controls\">\n          <Button\n            icon\n            onClick={onPreviousClick}\n            disabled={isPreviousDisabled}\n            className=\"md-calendar-control\"\n            iconEl={previousIcon}\n          />\n          <h4 className={cn('md-title', titleClassName)}>{title}</h4>\n          <Button\n            icon\n            onClick={onNextClick}\n            disabled={isNextDisabled}\n            className=\"md-calendar-control\"\n            iconEl={nextIcon}\n          />\n        </div>\n        <div className=\"md-calendar-dows\">\n          {dows}\n        </div>\n      </header>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport CalendarMonth from './CalendarMonth';\nimport CalendarHeader from './CalendarHeader';\n\nexport default class DatePickerCalendar extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    previousIcon: PropTypes.element,\n    onPreviousClick: PropTypes.func.isRequired,\n    nextIcon: PropTypes.element,\n    onNextClick: PropTypes.func.isRequired,\n    onCalendarDateClick: PropTypes.func.isRequired,\n    calendarDate: PropTypes.instanceOf(Date).isRequired,\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    minDate: PropTypes.instanceOf(Date),\n    maxDate: PropTypes.instanceOf(Date),\n\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n\n    /**\n     * True if weekends are to be greyed out.\n     */\n    disableWeekEnds: PropTypes.bool,\n\n    /**\n     * True if dates from adjacent months should be shown.\n     */\n    showAllDays: PropTypes.bool,\n    disableOuterDates: PropTypes.bool,\n\n    /**\n     * An optional className to apply to a date in calendar.\n     */\n    dateClassName: PropTypes.string,\n\n    /**\n     * An optional function to provide class for each date in calendar.\n     */\n    getDateClassName: PropTypes.func,\n\n    /**\n     * An optional function to render each date component.\n     */\n    dateRenderer: PropTypes.func,\n\n    /**\n     * An optional className to apply to a date from an adjacent month.\n     */\n    outerDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the title in calendar header.\n     */\n    titleClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat options to apply to format the title in calendar header.\n     */\n    titleFormat: PropTypes.shape({\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    }),\n\n    /**\n     * An optional className to apply to a weekday in calendar header.\n     */\n    weekdayClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\n     */\n    weekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n  };\n\n  render() {\n    const {\n      className,\n      previousIcon,\n      onPreviousClick,\n      nextIcon,\n      onNextClick,\n      calendarDate,\n      calendarTempDate,\n      onCalendarDateClick,\n      DateTimeFormat,\n      locales,\n      minDate,\n      maxDate,\n      firstDayOfWeek,\n      disableWeekEnds,\n      showAllDays,\n      disableOuterDates,\n      dateClassName,\n      getDateClassName,\n      dateRenderer,\n      outerDateClassName,\n      titleClassName,\n      titleFormat,\n      weekdayClassName,\n      weekdayFormat,\n    } = this.props;\n\n    return (\n      <section className={cn('md-picker-content md-picker-content--calendar', className)}>\n        <CalendarHeader\n          date={calendarDate}\n          minDate={minDate}\n          maxDate={maxDate}\n          DateTimeFormat={DateTimeFormat}\n          locales={locales}\n          onPreviousClick={onPreviousClick}\n          previousIcon={previousIcon}\n          onNextClick={onNextClick}\n          nextIcon={nextIcon}\n          firstDayOfWeek={firstDayOfWeek}\n          titleClassName={titleClassName}\n          titleFormat={titleFormat}\n          weekdayClassName={weekdayClassName}\n          weekdayFormat={weekdayFormat}\n        />\n        <CalendarMonth\n          key={new DateTimeFormat(locales).format(calendarDate)}\n          calendarDate={calendarDate}\n          calendarTempDate={calendarTempDate}\n          onCalendarDateClick={onCalendarDateClick}\n          minDate={minDate}\n          maxDate={maxDate}\n          DateTimeFormat={DateTimeFormat}\n          locales={locales}\n          firstDayOfWeek={firstDayOfWeek}\n          disableWeekEnds={disableWeekEnds}\n          showAllDays={showAllDays}\n          disableOuterDates={disableOuterDates}\n          dateClassName={dateClassName}\n          getDateClassName={getDateClassName}\n          dateRenderer={dateRenderer}\n          outerDateClassName={outerDateClassName}\n        />\n      </section>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * This is a component for rendering a year in the Date Picker's Year picker\n * list.\n */\nexport default class Year extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    active: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    year: PropTypes.number.isRequired,\n  };\n\n  state = { desktopActive: false };\n\n  _setActiveFocus = (btn) => {\n    if (btn && this.props.active) {\n      btn.focus();\n    }\n  };\n\n  _setActive = () => {\n    this.setState({ desktopActive: true });\n  };\n\n  _setInactive = () => {\n    this.setState({ desktopActive: false });\n  };\n\n  _handleClick = (e) => {\n    this.props.onClick(this.props.year, e);\n  };\n\n  render() {\n    const { desktopActive } = this.state;\n    const { active, className, year } = this.props;\n    return (\n      <button\n        type=\"button\"\n        ref={this._setActiveFocus}\n        className={cn('md-year', { 'md-year--active': active }, themeColors({\n          text: !active && !desktopActive,\n          primary: active || desktopActive,\n        }), 'md-btn md-pointer--hover md-full-width', className)}\n        onClick={this._handleClick}\n      >\n        {year}\n      </button>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport Year from './Year';\n\n/**\n * The `YearPicker` component is the Year view in a `DatePicker`. This\n * will display a list of years to select from within the given range.\n */\nexport default class YearPicker extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n    onCalendarYearClick: PropTypes.func.isRequired,\n    yearsDisplayed: PropTypes.number.isRequired,\n    minDate: PropTypes.instanceOf(Date),\n    maxDate: PropTypes.instanceOf(Date),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = this._getYearRange(props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.yearsDisplayed !== nextProps.yearsDisplayed) {\n      this.setState(this._getFullYear(nextProps));\n    }\n  }\n\n  /**\n   * Gets the current start and end years for the year picker.\n   *\n   * @param {Object} props - The current props to extract the year range from.\n   * @return {Object} an object containign the start and end years\n   */\n  _getYearRange({ minDate, maxDate, yearsDisplayed, calendarTempDate }) {\n    const year = calendarTempDate.getFullYear();\n    const range = !minDate && !maxDate\n      ? parseInt(yearsDisplayed / 2, 10)\n      : yearsDisplayed;\n\n    let startYear;\n    let endYear;\n    if (minDate && maxDate) {\n      startYear = minDate.getFullYear();\n      endYear = maxDate.getFullYear();\n    } else if (!minDate && !maxDate) {\n      startYear = year - range;\n      endYear = year + range;\n      if (yearsDisplayed % 2 === 0) {\n        endYear -= 1;\n      }\n    } else if (!maxDate) {\n      startYear = minDate.getFullYear();\n      endYear = startYear + yearsDisplayed - 1;\n    } else {\n      endYear = maxDate.getFullYear();\n      startYear = endYear - yearsDisplayed + 1;\n    }\n\n    return { startYear, endYear };\n  }\n\n  _setContainer(container) {\n    if (container === null) {\n      return;\n    }\n\n    const { offsetHeight, offsetWidth } = container;\n    const { offsetTop: top, offsetHeight: height } = container.querySelector('.md-year--active');\n\n    // Portrait seems to be 3/4 of the way while landscape is about 1/2\n    if (offsetHeight > offsetWidth) {\n      container.scrollTop = top - (offsetHeight * 3 / 4);\n    } else {\n      container.scrollTop = top - (offsetHeight / 2) + (height / 2);\n    }\n  }\n\n  render() {\n    const { startYear, endYear } = this.state;\n\n    const currentYear = this.props.calendarTempDate.getFullYear();\n    const years = [];\n    for (let year = startYear; year <= endYear; year++) {\n      years.push(\n        <Year\n          key={year}\n          year={year}\n          active={year === currentYear}\n          onClick={this.props.onCalendarYearClick}\n        />\n      );\n    }\n\n    return (\n      <section\n        className={cn('md-picker-content md-picker-content--year', this.props.className)}\n        ref={this._setContainer}\n      >\n        <ol className=\"md-years\">\n          {years}\n        </ol>\n      </section>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport DialogFooter from '../Dialogs/DialogFooter';\nimport DatePickerHeader from './DatePickerHeader';\nimport DatePickerCalendar from './DatePickerCalendar';\nimport YearPicker from './YearPicker';\n\nexport default class DatePicker extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    okLabel: PropTypes.node.isRequired,\n    okPrimary: PropTypes.bool.isRequired,\n    onOkClick: PropTypes.func.isRequired,\n    cancelLabel: PropTypes.node.isRequired,\n    cancelPrimary: PropTypes.bool.isRequired,\n    onCancelClick: PropTypes.func.isRequired,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    calendarDate: PropTypes.instanceOf(Date).isRequired,\n    calendarTempDate: PropTypes.instanceOf(Date).isRequired,\n    calendarMode: PropTypes.oneOf(['calendar', 'year']).isRequired,\n    changeCalendarMode: PropTypes.func.isRequired,\n    icon: PropTypes.bool,\n    inline: PropTypes.bool,\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n\n    /**\n     * True if weekends are to be greyed out.\n     */\n    disableWeekEnds: PropTypes.bool,\n\n    /**\n     * True if dates from adjacent months should be shown in calendar.\n     */\n    showAllDays: PropTypes.bool,\n    disableOuterDates: PropTypes.bool,\n\n    /**\n     * An optional className to apply to the header of date picker.\n     */\n    headerClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the content container of date picker.\n     */\n    contentClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the footer of date picker.\n     */\n    footerClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the calendar container of date picker.\n     */\n    calendarClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the year picker of date picker.\n     */\n    yearPickerClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to a date in calendar.\n     */\n    calendarDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to a date from an adjacent month in calendar.\n     */\n    calendarOuterDateClassName: PropTypes.string,\n\n    /**\n     * An optional function to provide class for each date in calendar.\n     */\n    getDateClassName: PropTypes.func,\n\n    /**\n     * An optional function to render each date component.\n     */\n    dateRenderer: PropTypes.func,\n\n    /**\n     * An optional className to apply to the title in calendar header.\n     */\n    calendarTitleClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat options to apply to format the title in calendar header.\n     */\n    calendarTitleFormat: PropTypes.shape({\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    }),\n\n    /**\n     * An optional className to apply to a weekday in calendar header.\n     */\n    calendarWeekdayClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\n     */\n    calendarWeekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n  };\n\n  render() {\n    const {\n      okLabel,\n      okPrimary,\n      onOkClick,\n      cancelLabel,\n      cancelPrimary,\n      onCancelClick,\n      DateTimeFormat,\n      locales,\n      calendarTempDate,\n      calendarMode,\n      changeCalendarMode,\n      style,\n      className,\n      inline,\n      icon,\n      displayMode,\n      firstDayOfWeek,\n      disableWeekEnds,\n      showAllDays,\n      disableOuterDates,\n      headerClassName,\n      contentClassName,\n      footerClassName,\n      calendarClassName,\n      yearPickerClassName,\n      calendarDateClassName,\n      calendarOuterDateClassName,\n      getDateClassName,\n      dateRenderer,\n      calendarTitleClassName,\n      calendarTitleFormat,\n      calendarWeekdayClassName,\n      calendarWeekdayFormat,\n      ...props\n    } = this.props;\n\n    let picker;\n    if (calendarMode === 'calendar') {\n      picker = (\n        <DatePickerCalendar\n          {...props}\n          key=\"calendar\"\n          className={calendarClassName}\n          calendarTempDate={calendarTempDate}\n          DateTimeFormat={DateTimeFormat}\n          locales={locales}\n          firstDayOfWeek={firstDayOfWeek}\n          disableWeekEnds={disableWeekEnds}\n          showAllDays={showAllDays}\n          disableOuterDates={disableOuterDates}\n          dateClassName={calendarDateClassName}\n          getDateClassName={getDateClassName}\n          dateRenderer={dateRenderer}\n          outerDateClassName={calendarOuterDateClassName}\n          titleClassName={calendarTitleClassName}\n          titleFormat={calendarTitleFormat}\n          weekdayClassName={calendarWeekdayClassName}\n          weekdayFormat={calendarWeekdayFormat}\n        />\n      );\n    } else {\n      picker = (\n        <YearPicker\n          {...props}\n          key=\"year\"\n          className={yearPickerClassName}\n          calendarTempDate={calendarTempDate}\n          DateTimeFormat={DateTimeFormat}\n          locales={locales}\n        />\n      );\n    }\n\n    const actions = [{\n      key: 'cancel',\n      onClick: onCancelClick,\n      primary: cancelPrimary,\n      secondary: !cancelPrimary,\n      label: cancelLabel,\n    }, {\n      key: 'ok',\n      onClick: onOkClick,\n      primary: okPrimary,\n      secondary: !okPrimary,\n      label: okLabel,\n    }];\n\n    return (\n      <div\n        style={style}\n        className={cn('md-picker md-picker--date', {\n          [`md-picker--${displayMode}`]: displayMode,\n          'md-picker--inline': inline,\n          'md-picker--inline-icon': inline && icon,\n        }, className)}\n      >\n        <DatePickerHeader\n          className={headerClassName}\n          DateTimeFormat={DateTimeFormat}\n          locales={locales}\n          calendarTempDate={calendarTempDate}\n          calendarMode={calendarMode}\n          changeCalendarMode={changeCalendarMode}\n        />\n        <div className={cn('md-picker-content-container', contentClassName)}>\n          {picker}\n          <DialogFooter\n            className={footerClassName}\n            actions={actions}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable new-cap,no-shadow */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport addDate from '../utils/dates/addDate';\nimport isSameDay from '../utils/dates/isSameDay';\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\n\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TextField from '../TextFields/TextField';\nimport Dialog from '../Dialogs/DialogContainer';\nimport DatePicker from './DatePicker';\n\n/**\n * The `DatePickerContainer` component is a wrapper for the main `DatePicker` component\n * to manage the state and _logic_ for rendering the `DatePicker`. This component will\n * either render inline or in a `Dialog` depending if the `inline` prop is set to `true`.\n *\n * NOTE: This component is actually exported as `DatePicker` when using the `import { member }` syntax.\n * The following two lines are equivalent:\n *\n * ```js\n * import { DatePicker } from 'react-md/lib/Pickers';\n * import DatePicker from 'react-md/lib/Pickers/DatePickerContainer';\n * ```\n */\nexport default class DatePickerContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the text field in the date picker. This is require for a11y.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An aria label for the dialog. This is required for a11y.\n     */\n    'aria-label': isRequiredForA11y(PropTypes.string),\n\n    /**\n     * An optional style to apply to the date picker's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the date picker's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the date picker.\n     */\n    pickerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the date picker.\n     */\n    pickerClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the header of date picker.\n     */\n    pickerHeaderClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the content container of date picker.\n     */\n    pickerContentClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the footer of date picker.\n     */\n    pickerFooterClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the calendar container of date picker.\n     */\n    calendarClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the year picker of date picker.\n     */\n    yearPickerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the input tag.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the input tag.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the text field's container.\n     */\n    textFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the text field's container.\n     */\n    textFieldClassName: PropTypes.string,\n\n    /**\n     * An optional icon to display with the date picker.\n     *\n     * @see {@link TextFields/TextField#leftIcon}\n     */\n    icon: PropTypes.node,\n\n    /**\n     * Boolean if the date picker is open by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * An optional label to be displayed in the date picker's text\n     * field.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder to be displayed in the date picker's text field.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * The value of the date picker. This will make the date picker\n     * be a controlled component. This value should either be a\n     * formatted date string or a date object.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional default value to give for the date picker. This should\n     * either be a formatted date string or a date object.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]),\n\n    /**\n     * An optional date to use when the calendar is opened for the first time.\n     * If this is omitted, it will either be the `defaultValue`, `value`, or\n     * today.\n     */\n    defaultCalendarDate: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]),\n\n    /**\n     * An optional function to call when the selected date is changed\n     * by hitting the OK button. The newly formatted date string,\n     * the new Date object, and the change event will be given.\n     *\n     * `onChange(dateString, dateObject, event)`.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * A function to format the dates since it should be formatted to the user's\n     * locale. This _should_ be the `Intl.DateTimeFormat` function. You\n     * can also create your own if you really wanted. Inadvisable though.\n     *\n     * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\n     */\n    DateTimeFormat: PropTypes.func.isRequired,\n\n    /**\n     * The locales to use for formatting the date. This will default to using\n     * the user's language in the browser or `'en-US'` when server rendering.\n     */\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n\n    /**\n     * The label to use for the ok button on the date picker.\n     */\n    okLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the ok button should be styled with the primary color.\n     */\n    okPrimary: PropTypes.bool,\n\n    /**\n     * The label to use for the cancel button on the date picker.\n     */\n    cancelLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the cancel button should be styled with the primary color.\n     */\n    cancelPrimary: PropTypes.bool,\n\n    /**\n     * The initial mode to open the calendar in.\n     */\n    defaultCalendarMode: PropTypes.oneOf(['calendar', 'year']),\n\n    /**\n     * The icon to use to display the previous month icon in the calendar.\n     */\n    previousIcon: PropTypes.node,\n\n    /**\n     * The icon to use to display the next month icon in the calendar.\n     */\n    nextIcon: PropTypes.node,\n\n    /**\n     * An optional min date to use for the date picker. This will prevent\n     * any dates before this time to be chosen.\n     */\n    minDate: PropTypes.instanceOf(Date),\n\n    /**\n     * An optional max date to use for the date picker. This will prevent\n     * any dates after this time to be chosen.\n     */\n    maxDate: (props, propName, component, ...others) => {\n      const err = PropTypes.instanceOf(Date)(props, propName, component, ...others);\n      if (err || !props.minDate || !props[propName]) {\n        return err;\n      }\n\n      const { minDate, maxDate } = props;\n      if (minDate > maxDate) {\n        return new Error(\n          `The min date: '${minDate}' is greater than the max date: '${maxDate}'`\n        );\n      }\n\n      return null;\n    },\n\n    /**\n     * Boolean if the date should automatically be selected when a user clicks\n     * on a new date instead of making them hit the ok button.\n     */\n    autoOk: PropTypes.bool,\n\n    /**\n     * The number of years to display.\n     */\n    yearsDisplayed: PropTypes.number,\n\n    /**\n     * Boolean if the date picker should be displayed inline instead of in a\n     * dialog.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * An optional force of the display mode of the date picker.\n     * This _should_ not really be used since there are media queries\n     * to use the correct mode based on device orientation.\n     */\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n    /**\n     * The DateTimeFormat options to apply to format the date.\n     */\n    formatOptions: PropTypes.shape({\n      weekday: PropTypes.oneOf(['narrow', 'short', 'long']),\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n      day: PropTypes.oneOf(['numeric', '2-digit']),\n      hour: PropTypes.oneOf(['numeric', '2-digit']),\n      minute: PropTypes.oneOf(['numeric', '2-digit']),\n      second: PropTypes.oneOf(['numeric', '2-digit']),\n      timeZoneName: PropTypes.oneOf(['short', 'long']),\n    }),\n\n    /**\n     * Boolean if the text field for the Date Picker should be displayed as full width.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * The direction that the text field divider expands from when the text field\n     * in the date picker gains focus.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\n\n    /**\n     * An optional boolean if the time picker is current visible by dialog or inline.\n     * If this is set, the `onOpenToggle` function is required.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the date picker is opened in either a dialog, or\n     * inline. The callback will include the next state.\n     *\n     * ```js\n     * onVisibilityChange(!visible, e);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * Boolean if the time picker is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\n     */\n    closeOnEsc: PropTypes.bool,\n\n    /**\n     * Boolean if the inline time picker's visibility should be animated.\n     */\n    animateInline: PropTypes.bool,\n\n    /**\n     * Boolean if the time is required.\n     *\n     * @see {@link TextFields/TextField#required}\n     */\n    required: PropTypes.bool,\n\n    /**\n     * @see {@link TextFields/TextField#block}\n     */\n    block: TextField.propTypes.block,\n\n    /**\n     * @see {@link TextFields/TextField#paddedBlock}\n     */\n    paddedBlock: TextField.propTypes.paddedBlock,\n\n    /**\n     * @see {@link TextFields/TextField#active}\n     */\n    active: TextField.propTypes.active,\n\n    /**\n     * @see {@link TextFields/TextField#error}\n     */\n    error: TextField.propTypes.error,\n\n    /**\n     * @see {@link TextFields/TextField#floating}\n     */\n    floating: TextField.propTypes.floating,\n\n    /**\n     * @see {@link TextFields/TextField#leftIconStateful}\n     */\n    leftIconStateful: TextField.propTypes.leftIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#rightIcon}\n     */\n    rightIcon: TextField.propTypes.rightIcon,\n\n    /**\n     * @see {@link TextFields/TextField#rightIconStateful}\n     */\n    rightIconStateful: TextField.propTypes.rightIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#customSize}\n     */\n    customSize: TextField.propTypes.customSize,\n\n    /**\n     * @see {@link TextFields/TextField#errorText}\n     */\n    errorText: TextField.propTypes.errorText,\n\n    /**\n     * @see {@link TextFields/TextField#helpText}\n     */\n    helpText: TextField.propTypes.helpText,\n\n    /**\n     * @see {@link TextFields/TextField#helpOnFocus}\n     */\n    helpOnFocus: TextField.propTypes.helpOnFocus,\n\n    /**\n     * @see {@link TextFields/TextField#inlineIndicator}\n     */\n    inlineIndicator: TextField.propTypes.inlineIndicator,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the dialog.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the dialog into. The default is to render as the first child\n     * in the `body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the DatePicker should be read only. This will prevent the user from opening the picker\n     * and only display the current date in the text field.\n     */\n    readOnly: PropTypes.bool,\n\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n\n    /**\n     * True if weekends are to be greyed out.\n     */\n    disableWeekEnds: PropTypes.bool,\n\n    /**\n     * True if dates from adjacent months should be shown in calendar.\n     */\n    showAllDays: PropTypes.bool,\n\n    /**\n     * Boolean if the dates from adjacent months should be disabled. This will only\n     * do something if the `showAllDays` prop is enabled as well.\n     *\n     * This is really only helpful if youd like the other days to appear, but not be\n     * clickable until the user switches to that month.\n     *\n     * @see {@link #showAllDays}\n     */\n    disableOuterDates: PropTypes.bool,\n\n    /**\n     * An optional className to apply to a date in calendar.\n     */\n    calendarDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to a date from an adjacent month in calendar. This will be applied\n     * along with the `calendarDateClassName`.\n     *\n     * @see {@link #showAllDays}\n     * @see {@link #calendarDateClassName}\n     */\n    calendarOuterDateClassName: PropTypes.string,\n\n    /**\n     * An optional function to provide class for each date in calendar.\n     *\n     * ```js\n     * getDateClassName(date:Date, day:number): string;\n     * ```\n     */\n    getDateClassName: PropTypes.func,\n\n    /**\n     * An optional function to render each date component.\n     *\n     * ```js\n     * dateRenderer(date:Date, day:number): React.Component;\n     * ```\n     */\n    dateRenderer: PropTypes.func,\n\n    /**\n     * An optional callback triggered on previous month click.\n     *\n     * ```js\n     * onPreviousMonth(firstDayInMonth:Date);\n     * ```\n     */\n    onPreviousMonth: PropTypes.func,\n\n    /**\n     * An optional callback triggered on next month click.\n     *\n     * ```js\n     * onNextMonth(firstDayInMonth:Date);\n     * ```\n     */\n    onNextMonth: PropTypes.func,\n\n    /**\n     * An optional callback triggered on year selection.\n     *\n     * ```js\n     * onYearSelected(firstDayInYear:Date);\n     * ```\n     */\n    onYearSelected: PropTypes.func,\n\n    /**\n     * An optional className to apply to the title in calendar header.\n     */\n    calendarTitleClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat options to apply to format the title in calendar header.\n     */\n    calendarTitleFormat: PropTypes.shape({\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    }),\n\n    /**\n     * An optional className to apply to a weekday in calendar header.\n     */\n    calendarWeekdayClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\n     */\n    calendarWeekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n\n    /**\n     * @see {@link Dialogs/DialogContainer#disableScrollLocking}\n     */\n    disableScrollLocking: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\n     * of the first.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * True if the datepicker should swap to calendar mode automatically after a year is picked\n     * while in `year` mode.\n     */\n    closeYearOnSelect: PropTypes.bool,\n\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\n    nextIconChildren: deprecated(PropTypes.node, 'use the `nextIcon` prop instead'),\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid for a text field'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initialCalendarDate: deprecated(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]), 'Use `defaultCalendarDate` instead'),\n    initialCalendarMode: deprecated(PropTypes.oneOf(['calendar', 'year']), 'Use `defaultCalendarMode` instead'),\n    initialYearsDisplayed: deprecated(\n      PropTypes.number,\n      'Use `yearsDisplayed` instead. I have not implemented infinite loading years'\n    ),\n  };\n\n  static defaultProps = {\n    animateInline: true,\n    previousIcon: <FontIcon>chevron_left</FontIcon>,\n    nextIcon: <FontIcon>chevron_right</FontIcon>,\n    autoOk: false,\n    icon: <FontIcon>date_range</FontIcon>,\n    yearsDisplayed: 100,\n    defaultCalendarMode: 'calendar',\n    DateTimeFormat: DateTimeFormat, // eslint-disable-line object-shorthand\n    locales: typeof window !== 'undefined'\n      ? window.navigator.userLanguage || window.navigator.language\n      : 'en-US',\n    okLabel: 'Ok',\n    okPrimary: true,\n    cancelLabel: 'Cancel',\n    cancelPrimary: true,\n    closeOnEsc: true,\n    closeYearOnSelect: false,\n    disableScrollLocking: false,\n    'aria-label': 'Pick a date',\n  };\n\n  constructor(props) {\n    super(props);\n\n    let date;\n    let value;\n    const {\n      defaultValue,\n      DateTimeFormat,\n      locales,\n      formatOptions,\n      minDate,\n      maxDate,\n    } = props;\n\n    if (typeof props.value !== 'undefined') {\n      date = this._getDate(props.value);\n    } else if (defaultValue) {\n      date = this._getDate(defaultValue);\n      value = typeof defaultValue === 'string'\n        ? defaultValue\n        : DateTimeFormat(locales, formatOptions).format(defaultValue);\n    } else {\n      date = new Date();\n      value = '';\n    }\n\n    date = this._validateDateRange(date, minDate, maxDate);\n\n    const defaultCalendarDate = typeof props.initialCalendarDate !== 'undefined'\n      ? props.initialCalendarDate\n      : props.defaultCalendarDate;\n    let calendarTempDate = date;\n    if (typeof defaultCalendarDate !== 'undefined' && !props.value && !props.defaultValue) {\n      calendarTempDate = this._getDate(defaultCalendarDate);\n      date = calendarTempDate;\n    } else if (calendarTempDate === null) {\n      calendarTempDate = new Date();\n      date = new Date();\n    }\n\n    const visible = typeof props.initiallyOpen !== 'undefined'\n      ? props.initiallyOpen\n      : !!props.defaultVisible;\n\n    this.state = {\n      value,\n      visible,\n      calendarDate: date,\n      calendarTempDate,\n      calendarMode: props.initialCalendarMode || props.defaultCalendarMode,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value, minDate, maxDate } = nextProps;\n    const minEqual = isSameDay(this.props.minDate, minDate);\n    const maxEqual = isSameDay(this.props.maxDate, maxDate);\n    if (this.props.value !== value || !minEqual || !maxEqual) {\n      let { calendarDate } = this.state;\n      if (typeof value !== 'undefined') {\n        calendarDate = this._getDate(value);\n      }\n\n      calendarDate = this._validateDateRange(calendarDate, minDate, maxDate);\n\n      if (!isSameDay(this.state.calendarDate, calendarDate)) {\n        this.setState({ calendarDate, calendarTempDate: calendarDate });\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { inline, isOpen } = this.props;\n    const visible = typeof isOpen !== 'undefined'\n      ? isOpen\n      : getField(this.props, this.state, 'visible');\n    const pVisible = typeof prevProps.isOpen !== 'undefined'\n      ? prevProps.isOpen\n      : getField(prevProps, prevState, 'visible');\n\n    if (visible === pVisible) {\n      return;\n    }\n\n    if (visible) {\n      if (inline) {\n        handleWindowClickListeners(this._handleOutsideClick, true);\n        window.addEventListener('keydown', this._closeOnEsc);\n      }\n    } else if (inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  componentWillUnmount() {\n    const visible = typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible');\n\n    if (visible && this.props.inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  _getDate(value) {\n    if (value === '' || value === null) {\n      return new Date();\n    } else if (typeof value === 'string') {\n      return new Date(value);\n    }\n\n    return value;\n  }\n\n  _setContainer= (container) => {\n    this._container = container;\n  };\n\n  _closeOnEsc = (e) => {\n    if ((e.which || e.keyCode) === ESC) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (this._container && !this._container.contains(e.target)) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _toggleOpen = (e) => {\n    if (this.props.disabled || this.props.readOnly) {\n      return;\n    }\n\n    const visible = !(typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible'));\n\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(visible, e);\n    }\n\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    handleKeyboardAccessibility(e, this._toggleOpen, true, true);\n\n    if ((e.which || e.keyCode) === TAB && this.state.active) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleOkClick = (e) => {\n    const { DateTimeFormat, locales, onChange, formatOptions, onVisibilityChange } = this.props;\n    const value = DateTimeFormat(locales, formatOptions).format(this.state.calendarTempDate);\n    if (onChange) {\n      onChange(value, new Date(this.state.calendarTempDate), e);\n    }\n\n    if (onVisibilityChange) {\n      onVisibilityChange(false, e);\n    }\n\n    let state;\n    if (typeof this.props.value === 'undefined') {\n      state = { value };\n    }\n\n    if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\n      state = state || {};\n      state.visible = false;\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _handleCancelClick = (e) => {\n    const state = { calendarTempDate: this.state.calendarDate };\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.isOpen === 'undefined') {\n      state.visible = false;\n    }\n\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(false, e);\n    }\n\n    this.setState(state);\n  };\n\n  _changeCalendarMode = (calendarMode) => {\n    if (this.state.calendarMode === calendarMode) { return; }\n\n    this.setState({ calendarMode });\n  };\n\n  _previousMonth = () => {\n    const calendarDate = addDate(this.state.calendarDate, -1, 'M');\n    this.setState({ calendarDate });\n\n    if (this.props.onPreviousMonth) {\n      this.props.onPreviousMonth(calendarDate);\n    }\n  };\n\n  _nextMonth = () => {\n    const calendarDate = addDate(this.state.calendarDate, 1, 'M');\n    this.setState({ calendarDate });\n\n    if (this.props.onNextMonth) {\n      this.props.onNextMonth(calendarDate);\n    }\n  };\n\n  _setCalendarTempDate = (calendarTempDate) => {\n    const { autoOk, DateTimeFormat, locales, onChange, formatOptions } = this.props;\n\n    const state = { calendarTempDate };\n    if (autoOk) {\n      const value = DateTimeFormat(locales, formatOptions).format(calendarTempDate);\n      if (onChange) {\n        onChange(value, new Date(calendarTempDate));\n      }\n\n      if (typeof this.props.value === 'undefined') {\n        state.value = value;\n      }\n\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        if (this.props.onVisibilityChange) {\n          this.props.onVisibilityChange(false);\n        }\n\n        if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\n          this.setState({ visible: false });\n        }\n      });\n    }\n    this.setState(state);\n  };\n\n  _setCalendarTempYear = (year) => {\n    const { calendarTempDate, calendarDate } = this.state;\n    if (calendarTempDate.getFullYear() === year) { return; }\n\n    const { minDate, maxDate } = this.props;\n    let nextDate = new Date(calendarDate.setFullYear(year));\n    let nextTemp = new Date(calendarTempDate.setFullYear(year));\n\n    if (minDate && nextTemp < minDate) {\n      nextDate = new Date(minDate);\n      nextTemp = new Date(minDate);\n    }\n\n    if (maxDate && nextTemp > maxDate) {\n      nextDate = new Date(maxDate);\n      nextTemp = new Date(maxDate);\n    }\n\n    if (this.props.onYearSelected) {\n      this.props.onYearSelected(nextDate);\n    }\n\n    this.setState({\n      calendarDate: nextDate,\n      calendarTempDate: nextTemp,\n    });\n\n    if (this.props.closeYearOnSelect) {\n      this._changeCalendarMode('calendar');\n    }\n  };\n\n  /**\n   * Gets the current value from the date picker as a formatted string.\n   *\n   * @param {Object} props? the props object to use.\n   * @param {Object} state? the state object to use.\n   * @return {String} a formatted date string or the empty string.\n   */\n  _getFormattedValue(props, state) {\n    const { DateTimeFormat, locales, formatOptions } = props;\n    const value = getField(props, state, 'value');\n    if (!value) {\n      return '';\n    } else if (value instanceof Date) {\n      return DateTimeFormat(locales, formatOptions).format(new Date(value));\n    } else {\n      return value;\n    }\n  }\n\n  /**\n   * Attempts to validate the `calendarDate` in the state against the min and\n   * max dates.\n   *\n   * This will return null if the current calendarDate is still within the range.\n   *\n   * @param {Date} calendarDate - The current calendar date to compare to.\n   * @param {Date} minDate - An optional min date to compare to.\n   * @param {Date} maxDate - An optional max date to compare to.\n   * @return {Object} - The new state object with the updated calendarDate and\n   *    calendarTempDate keys or null.\n   */\n  _validateDateRange(calendarDate, minDate, maxDate) {\n    let date = calendarDate;\n    if (minDate && minDate > calendarDate) {\n      date = new Date(minDate);\n    }\n\n    if (maxDate && maxDate < calendarDate) {\n      date = new Date(maxDate);\n    }\n\n    return date;\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      pickerStyle,\n      pickerClassName,\n      pickerHeaderClassName,\n      pickerContentClassName,\n      pickerFooterClassName,\n      inputStyle,\n      inputClassName,\n      textFieldStyle,\n      textFieldClassName,\n      label,\n      placeholder,\n      icon,\n      inline,\n      displayMode,\n      fullWidth,\n      lineDirection,\n      id,\n      disabled,\n      closeOnEsc,\n      animateInline,\n      portal,\n      renderNode,\n      lastChild,\n      block,\n      paddedBlock,\n      active,\n      error,\n      floating,\n      required,\n      leftIconStateful,\n      rightIcon,\n      rightIconStateful,\n      customSize,\n      errorText,\n      helpText,\n      helpOnFocus,\n      inlineIndicator,\n      disableScrollLocking,\n      'aria-label': ariaLabel,\n      nextIcon: propNextIcon,\n      previousIcon: propPreviousIcon,\n\n      // deprecated\n      isOpen,\n      previousIconChildren,\n      previousIconClassName,\n      nextIconChildren,\n      nextIconClassName,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      visible: propVisible,\n      defaultValue,\n      defaultVisible,\n      onChange,\n      readOnly,\n      onVisibilityChange,\n      defaultCalendarDate,\n      getDateClassName,\n      dateRenderer,\n\n      // deprecated\n      initialCalendarDate,\n      initiallyOpen,\n      adjustMinWidth,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const nextIcon = getDeprecatedIcon(nextIconClassName, nextIconChildren, propNextIcon);\n    const previousIcon = getDeprecatedIcon(previousIconClassName, previousIconChildren, propPreviousIcon);\n    const visible = typeof isOpen !== 'undefined'\n      ? isOpen\n      : getField(this.props, this.state, 'visible');\n\n    const picker = (\n      <DatePicker\n        {...this.state}\n        {...props}\n        nextIcon={nextIcon}\n        previousIcon={previousIcon}\n        icon={!!icon}\n        inline={inline}\n        style={pickerStyle}\n        className={pickerClassName}\n        headerClassName={pickerHeaderClassName}\n        contentClassName={pickerContentClassName}\n        footerClassName={pickerFooterClassName}\n        displayMode={displayMode}\n        onCancelClick={this._handleCancelClick}\n        onOkClick={this._handleOkClick}\n        changeCalendarMode={this._changeCalendarMode}\n        onPreviousClick={this._previousMonth}\n        onNextClick={this._nextMonth}\n        onCalendarDateClick={this._setCalendarTempDate}\n        onCalendarYearClick={this._setCalendarTempYear}\n        getDateClassName={getDateClassName}\n        dateRenderer={dateRenderer}\n      />\n    );\n\n    let content;\n    if (inline) {\n      content = <Collapse collapsed={!visible} animate={animateInline}>{picker}</Collapse>;\n    } else {\n      content = (\n        <Dialog\n          id={`${id}-dialog`}\n          visible={visible}\n          onHide={this._handleCancelClick}\n          dialogClassName=\"md-dialog--picker\"\n          contentClassName=\"md-dialog-content--picker\"\n          aria-label={ariaLabel}\n          closeOnEsc={closeOnEsc}\n          renderNode={renderNode}\n          portal={portal}\n          lastChild={lastChild}\n          focusOnMount={false}\n          disableScrollLocking={disableScrollLocking}\n        >\n          {picker}\n        </Dialog>\n      );\n    }\n\n    return (\n      <div style={style} className={cn('md-picker-container', className)} ref={this._setContainer}>\n        <TextField\n          id={id}\n          style={textFieldStyle}\n          className={cn({ 'md-pointer--hover': !disabled }, textFieldClassName)}\n          inputStyle={inputStyle}\n          inputClassName={cn({ 'md-pointer--hover': !disabled }, inputClassName)}\n          active={active || visible}\n          error={error}\n          floating={floating || visible}\n          required={required}\n          disabled={disabled}\n          leftIcon={icon}\n          leftIconStateful={leftIconStateful}\n          rightIcon={rightIcon}\n          rightIconStateful={rightIconStateful}\n          inlineIndicator={inlineIndicator}\n          block={block}\n          paddedBlock={paddedBlock}\n          fullWidth={fullWidth}\n          lineDirection={lineDirection}\n          customSize={customSize}\n          helpText={helpText}\n          helpOnFocus={helpOnFocus}\n          errorText={errorText}\n          label={label}\n          placeholder={placeholder}\n          onClick={this._toggleOpen}\n          onKeyDown={this._handleKeyDown}\n          value={this._getFormattedValue(this.props, this.state)}\n          readOnly\n        />\n        {content}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { TAB } from '../constants/keyCodes';\nimport themeColors from '../utils/themeColors';\n\nconst CLOCK_PADDING = 4;\n\n/**\n * The `ClockTime` component is used for positioning hours or minutes\n * in a clock. The time will be positioned based on it's given index\n * and the radius of the clock.\n */\nexport default class ClockTime extends PureComponent {\n  static propTypes = {\n    /**\n     * The index of the current time to be displayed. This\n     * should be a number between 1 and 24.\n     */\n    index: PropTypes.number.isRequired,\n\n    /**\n     * The time number to display.\n     */\n    time: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if this time is currently selected.\n     */\n    active: PropTypes.bool.isRequired,\n\n    /**\n     * The radius of the clock.\n     */\n    radius: PropTypes.number.isRequired,\n\n    onKeyboardFocus: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // default size in scss\n      size: 18,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.radius !== nextProps.radius || this.props.index !== nextProps.index) {\n      this._setPosition(nextProps, this._time);\n    }\n  }\n\n  _handleKeyUp = (e) => {\n    if ((e.which || e.keyCode) === TAB) {\n      this.props.onKeyboardFocus(this.props.time);\n    }\n  }\n\n  _setTime = (time) => {\n    this._time = time;\n    if (time !== null) {\n      this._setPosition(this.props, time);\n\n      if (this.props.active) {\n        time.focus();\n      }\n    }\n  };\n\n  _setPosition = ({ radius, index }, time) => {\n    // 36 is default size for the time\n    const size = (time.offsetWidth || 36) / 2;\n    const timeRadians = (Math.PI / 2) - index * (Math.PI / 6);\n    const innerCircle = index > 12;\n\n    const outerRadius = radius - size;\n    const innerRadius = outerRadius - CLOCK_PADDING - (innerCircle ? size * 2 : 0);\n\n    this.setState({\n      style: {\n        top: outerRadius - innerRadius * Math.sin(timeRadians),\n        left: outerRadius + innerRadius * Math.cos(timeRadians),\n      },\n    });\n  };\n\n  render() {\n    const { time, active } = this.props;\n    return (\n      <div\n        ref={this._setTime}\n        tabIndex={0}\n        className={cn('md-clock-time md-text-no-select md-pointer--none', {\n          'md-picker-text--active': active,\n        }, themeColors({ text: !active }))}\n        style={this.state.style}\n        onKeyUp={this._handleKeyUp}\n      >\n        <span className=\"md-clock-time-value\">{time}</span>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `ClockHand` component is just used to display the hand of the clock\n * and a ball to surround the selected time.\n */\nexport default class ClockHand extends PureComponent {\n  static propTypes = {\n    /**\n     * This is the x and y coordinate to use for the center of the `ClockFace`.\n     * This should really be whatever the radius of the `ClockFace` is.\n     */\n    coords: PropTypes.number,\n\n    /**\n     * The current time of the clock.\n     */\n    time: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the clock is displaying minutes instead of hours.\n     */\n    minutes: PropTypes.bool.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { active: false };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.minutes !== nextProps.minutes) {\n      if (this.state.timeout) { clearTimeout(this.state.timeout); }\n\n      this.setState({\n        active: true,\n        timeout: setTimeout(() => this.setState({ active: false, timeout: null }), 150),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.timeout) { clearTimeout(this.state.timeout); }\n  }\n\n  _calcCurrentDegrees({ time, minutes }) {\n    const timeAt0Deg = minutes ? 15 : 3;\n    const sectors = minutes ? 60 : 12;\n\n    return (time % sectors - timeAt0Deg) * (360 / sectors);\n  }\n\n  render() {\n    const { coords, time, minutes } = this.props;\n\n    const degrees = this._calcCurrentDegrees(this.props);\n    let invisibleMinute = false;\n    if (minutes) {\n      invisibleMinute = degrees % (360 / 12) !== 0;\n    }\n\n    const rotateTransform = `rotate3d(0, 0, 1, ${degrees}deg)`;\n    return (\n      <div\n        className={cn('md-clock-hand md-background--primary', {\n          'md-clock-hand--active': this.state.active,\n          'md-clock-hand--minute-hover': invisibleMinute,\n          'md-clock-hand--inner': !minutes && (time > 12 || time === 0),\n        })}\n        style={{\n          left: coords,\n          top: coords,\n          WebkitTransform: rotateTransform,\n          MozTransform: rotateTransform,\n          msTransform: rotateTransform,\n          transform: rotateTransform,\n        }}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport isValidClick from '../utils/EventUtils/isValidClick';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport calcTimeFromPoint from '../utils/NumberUtils/calcTimeFromPoint';\nimport calcPageOffset from '../utils/Positioning/calcPageOffset';\nimport ResizeObserver from '../Helpers/ResizeObserver';\n\nimport ClockTime from './ClockTime';\nimport ClockHand from './ClockHand';\n\n/**\n * The `ClockFace` component is used for rendering all the clock's times\n * and the clock hand.\n */\nexport default class ClockFace extends PureComponent {\n  static propTypes = {\n    /**\n     * The current time for the clock.\n     */\n    time: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the clock is on the minutes view.\n     */\n    minutes: PropTypes.bool.isRequired,\n\n    /**\n     * A function to call when a new time is selected. It gives the\n     * new time value. If it is 12 o'clock, 0 will be given.\n     */\n    onChange: PropTypes.func.isRequired,\n\n    /**\n     * An optional time period string. This should be either AM or PM\n     * if the locale uses them.\n     */\n    timePeriod: PropTypes.string,\n\n    /**\n     * If true the hover mode of the Time Picker is activated.\n     * In hover mode no clicks are required to start selecting an hour\n     * and the timemode switches automatically when a time was chosen.\n     * When a minute is selected the chosen time is applied automatically.\n     */\n    hoverMode: PropTypes.bool,\n\n    onTimeChosen: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { radius: 136, moving: false };\n    this._center = {};\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this._handleMouseMove);\n    window.removeEventListener('mouseup', this._handleMouseMove);\n\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\n    clearInterval(this.interval);\n  }\n\n  _setFace = (face) => {\n    this._face = face;\n    this._setPositioning();\n  }\n\n  _setPositioning = () => {\n    if (!this._face) {\n      return;\n    }\n\n    const radius = this._face.offsetWidth / 2;\n    const offset = calcPageOffset(this._face);\n    this._center = { x: offset.left + radius, y: offset.top + radius };\n    this._left = offset.left;\n    this._top = offset.top;\n\n    if (this.state.radius !== radius) {\n      this.setState({ radius });\n    }\n  };\n\n  _handleMouseEnter = () => {\n    const { hoverMode } = this.props;\n\n    if (hoverMode) {\n      this._enableMouseMoving();\n    }\n  };\n\n  _handleMouseLeave = () => {\n    const { hoverMode } = this.props;\n\n    if (hoverMode) {\n      this._disableMouseMoving();\n    }\n  };\n\n  _handleMouseDown = (e) => {\n    if (!isValidClick(e)) {\n      return;\n    }\n\n    const { hoverMode } = this.props;\n\n    if (!hoverMode) {\n      this._enableMouseMoving();\n    }\n  };\n\n  _handleMouseMove = (e) => {\n    if (!this.state.moving) {\n      return;\n    }\n\n    e.preventDefault();\n    this._calcNewTime(e);\n  };\n\n  _handleMouseUp = (e) => {\n    if (!isValidClick(e)) {\n      return;\n    }\n\n    const { onTimeChosen, hoverMode } = this.props;\n\n    if (this._face) {\n      if (this._face.contains(e.target)) {\n        onTimeChosen();\n        this._calcNewTime(e);\n      } else {\n        captureNextEvent('click');\n      }\n    }\n\n    if (!hoverMode) {\n      this._disableMouseMoving();\n    }\n  };\n\n  _handleTouchStart = () => {\n    captureNextEvent('mousedown');\n\n    addTouchEvent(window, 'move', this._handleTouchMove);\n    addTouchEvent(window, 'end', this._handleTouchEnd);\n    this.setState({ moving: true });\n  };\n\n  _handleTouchMove = (e) => {\n    if (!this.state.moving) {\n      return;\n    }\n\n    this._calcNewTime(e);\n  };\n\n  _handleTouchEnd = (e) => {\n    this._calcNewTime(e);\n    if (this._face && !this._face.contains(e.target)) {\n      captureNextEvent('click');\n    }\n\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\n\n    this.setState({ moving: false });\n  };\n\n  _calcNewTime = (e) => {\n    const { pageX: x, pageY: y } = e.changedTouches ? e.changedTouches[0] : e;\n    const innerRadius = this.state.radius - 48;\n    const { onChange, minutes, timePeriod } = this.props;\n    onChange(calcTimeFromPoint({ x, y }, this._center, innerRadius, minutes, timePeriod));\n  };\n\n  _enableMouseMoving = () => {\n    window.addEventListener('mousemove', this._handleMouseMove);\n    window.addEventListener('mouseup', this._handleMouseUp);\n\n    this.setState({ moving: true });\n  };\n\n  _disableMouseMoving = () => {\n    window.removeEventListener('mousemove', this._handleMouseMove);\n    window.removeEventListener('mouseup', this._handleMouseUp);\n\n    this.setState({ moving: false });\n  };\n\n  render() {\n    const { time, minutes, timePeriod, onChange, hoverMode } = this.props;\n    const { radius } = this.state;\n    const size = !minutes && !timePeriod ? 24 : 12;\n    const times = Array.apply(null, new Array(size)).map((_, i) => {\n      let clockTime = i + 1;\n      if (minutes) {\n        clockTime = (clockTime * 5) % 60;\n      } else {\n        clockTime %= 24;\n      }\n\n      return (\n        <ClockTime\n          key={`time-${i}`}\n          index={i + 1}\n          time={clockTime}\n          active={clockTime === time}\n          radius={radius}\n          onKeyboardFocus={onChange}\n        />\n      );\n    });\n\n    return (\n      <div\n        ref={this._setFace}\n        className=\"md-clock-face md-block-centered md-pointer--hover\"\n        onMouseDown={this._handleMouseDown}\n        onMouseEnter={hoverMode ? this._handleMouseEnter : undefined}\n        onMouseLeave={hoverMode ? this._handleMouseLeave : undefined}\n        onTouchStart={this._handleTouchStart}\n      >\n        <ResizeObserver watchHeight onResize={this._setPositioning} />\n        {times}\n        <ClockHand time={time} coords={radius} minutes={minutes} />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport addHours from '../utils/DateUtils/addHours';\nimport PickerControl from './PickerControl';\n\n/**\n * This component displays a section for switching between the AM\n * and PM time periods.\n */\nexport default class TimePeriods extends PureComponent {\n  static propTypes = {\n    /**\n     * The current time for the time picker.\n     */\n    tempTime: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * A function to update the time for the time picker.\n     */\n    setTempTime: PropTypes.func.isRequired,\n\n    /**\n     * The current time period.\n     */\n    timePeriod: PropTypes.string.isRequired,\n  };\n\n  _setAM = () => {\n    if (this.props.timePeriod !== 'AM') {\n      this.props.setTempTime(addHours(this.props.tempTime, -12));\n    }\n  };\n\n  _setPM = () => {\n    if (this.props.timePeriod !== 'PM') {\n      this.props.setTempTime(addHours(this.props.tempTime, 12));\n    }\n  };\n\n  render() {\n    const { timePeriod } = this.props;\n    return (\n      <div className=\"md-time-periods\">\n        <PickerControl onClick={this._setAM} active={timePeriod === 'AM'}>\n          <h6 className=\"md-time-period\">AM</h6>\n        </PickerControl>\n        <PickerControl onClick={this._setPM} active={timePeriod === 'PM'}>\n          <h6 className=\"md-time-period\">PM</h6>\n        </PickerControl>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TimePeriods from './TimePeriods';\nimport PickerControl from './PickerControl';\n\n/**\n * The `TimePickerHeader` component is used for rendering the\n * current time for the `TimePicker` as well as switching between\n * the different views for the time picker.\n */\nexport default class TimePickerHeader extends PureComponent {\n  static propTypes = {\n    /**\n     * The current time of the time picker.\n     */\n    tempTime: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * The current time type that is being changed.\n     */\n    timeMode: PropTypes.oneOf(['hour', 'minute', 'second']).isRequired,\n\n    /**\n     * A function to update the time mode.\n     */\n    setTimeMode: PropTypes.func.isRequired,\n\n    /**\n     * A function to update the time for the time picker.\n     */\n    setTempTime: PropTypes.func.isRequired,\n\n    /**\n     * A formatted hours string for the user's locale. This\n     * would be '3' for en-US if the time was '3:15'\n     */\n    hours: PropTypes.string.isRequired,\n\n    /**\n     * A formatted minutes string for the user's locale.\n     * This would be ':15' for en-US if the time was '3:15'.\n     */\n    minutes: PropTypes.string.isRequired,\n\n    /**\n     * A formatted seconds string for the user's locale.\n     * This would be ':00' for en-US if the time was '3:15:00'.\n     */\n    seconds: PropTypes.string,\n\n    /**\n     * An optional time period to use for locales that use\n     * 12 hour clocks and AM/PM.\n     */\n    timePeriod: PropTypes.string,\n\n    /**\n     * A boolean that if true, seconds are displayed\n     */\n    showSeconds: PropTypes.bool,\n  };\n\n  _setHour = () => {\n    this.props.setTimeMode('hour');\n  };\n\n  _setMinute = () => {\n    this.props.setTimeMode('minute');\n  };\n\n  _setSecond = () => {\n    this.props.setTimeMode('second');\n  };\n\n  render() {\n    const { timeMode, hours, minutes, seconds, timePeriod, setTempTime, tempTime, showSeconds } = this.props;\n    let timePeriods;\n    if (timePeriod) {\n      timePeriods = <TimePeriods tempTime={tempTime} setTempTime={setTempTime} timePeriod={timePeriod} />;\n    }\n\n    const secondsControl = showSeconds === true ?\n      (<PickerControl onClick={this._setSecond} active={timeMode === 'second'}>\n        <h4 className=\"md-display-3\">\n          {seconds}\n        </h4>\n      </PickerControl>) : null;\n\n    return (\n      <header className=\"md-picker-header md-text-right\">\n        <PickerControl onClick={this._setHour} active={timeMode === 'hour'}>\n          <h4 className=\"md-display-3\">\n            {hours}\n          </h4>\n        </PickerControl>\n        <PickerControl onClick={this._setMinute} active={timeMode === 'minute'}>\n          <h4 className=\"md-display-3\">\n            {minutes}\n          </h4>\n        </PickerControl>\n        {secondsControl}\n        {timePeriods}\n      </header>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport ClockFace from './ClockFace';\nimport DialogFooter from '../Dialogs/DialogFooter';\nimport TimePickerHeader from './TimePickerHeader';\n\n/**\n * The `TimePicker` component is used to display a time picker\n * in the `TimePickerContainer` component.\n */\nexport default class TimePicker extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    okLabel: PropTypes.node.isRequired,\n    okPrimary: PropTypes.bool.isRequired,\n    onOkClick: PropTypes.func.isRequired,\n    cancelLabel: PropTypes.node.isRequired,\n    cancelPrimary: PropTypes.bool.isRequired,\n    onCancelClick: PropTypes.func.isRequired,\n    DateTimeFormat: PropTypes.func.isRequired,\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n    icon: PropTypes.bool,\n    inline: PropTypes.bool,\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n    /**\n     * A function that will switch the state from hour to minute.\n     */\n    setTimeMode: PropTypes.func.isRequired,\n\n    /**\n     * A function that will update the time for the TimePicker before\n     * the user selects ok. This function will be given a new Date object\n     * with a modified time.\n     */\n    setTempTime: PropTypes.func.isRequired,\n\n    /**\n     * The current display mode of the time picker.\n     */\n    timeMode: PropTypes.oneOf(['hour', 'minute', 'second']).isRequired,\n\n    /**\n     * The current time as a date object that is being displayed in the\n     * time picker.\n     */\n    tempTime: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * A string that is a representation of the hours in the user's locale.\n     */\n    hours: PropTypes.string.isRequired,\n\n    /**\n     * A string that is a representation of the minutes in the user's locale.\n     * This will also include any separator the locale uses.\n     *\n     * Example: ':15' in '3:15 PM' for 'en-US'\n     */\n    minutes: PropTypes.string.isRequired,\n\n    /**\n     * A string that is a representation of the seconds in the user's locale.\n     * This will also include any separator the locale uses.\n     *\n     * Example: ':00' in '3:15:00 PM' for 'en-US'\n     */\n    seconds: PropTypes.string,\n\n    /**\n     * An optional time period if a user's locale uses it.\n     */\n    timePeriod: PropTypes.string,\n\n    /**\n     * If true the hover mode of the Time Picker is activated.\n     * In hover mode no clicks are required to start selecting an hour\n     * and the timemode switches automatically when a time was chosen.\n     * When a minute is selected the chosen time is applied automatically.\n     */\n    hoverMode: PropTypes.bool,\n\n    /**\n     * A boolean that if true, seconds are displayed\n     */\n    showSeconds: PropTypes.bool,\n  };\n\n  /**\n   * Takes in the new time (number o'clock or minutes), updates the temp time\n   * with that new time, and then calls the setTempTime prop.\n   */\n  _updateTime = (newTime) => {\n    let timePart = newTime;\n    const { tempTime, setTempTime, timeMode, timePeriod } = this.props;\n    const time = new Date(tempTime);\n    if (timeMode === 'hour') {\n      const isAM = timePeriod === 'AM';\n      const is12 = timePart === 12;\n      if (timePeriod && isAM && is12) {\n        timePart = 0;\n      } else if (timePeriod && !isAM && !is12) {\n        timePart += 12;\n      }\n\n      time.setHours(timePart);\n    }\n\n    if (timeMode === 'minute') {\n      time.setMinutes(timePart);\n    }\n\n    if (timeMode === 'second') {\n      time.setSeconds(timePart);\n    }\n\n    setTempTime(time);\n  };\n\n  _handleTimeChosen = () => {\n    const { hoverMode, setTimeMode, onOkClick, timeMode } = this.props;\n\n    if (hoverMode) {\n      if (timeMode === 'hour') {\n        setTimeMode('minute');\n      } else {\n        onOkClick();\n      }\n    }\n  };\n\n  render() {\n    const {\n      okLabel,\n      okPrimary,\n      onOkClick,\n      cancelLabel,\n      cancelPrimary,\n      onCancelClick,\n      style,\n      className,\n      setTimeMode,\n      setTempTime,\n      timeMode,\n      tempTime,\n      hours,\n      minutes,\n      seconds,\n      timePeriod,\n      displayMode,\n      inline,\n      icon,\n      hoverMode,\n      showSeconds,\n    } = this.props;\n\n    const hoursInt = parseInt(hours, 10);\n    const minutesInt = parseInt(minutes.replace(/[^0-9]/g, ''), 10);\n    let secondsInt;\n    if (showSeconds) secondsInt = parseInt(seconds.replace(/[^0-9]/g, ''), 10);\n\n    const actions = [{\n      key: 'cancel',\n      onClick: onCancelClick,\n      primary: cancelPrimary,\n      secondary: !cancelPrimary,\n      label: cancelLabel,\n    }, {\n      key: 'ok',\n      onClick: onOkClick,\n      primary: okPrimary,\n      secondary: !okPrimary,\n      label: okLabel,\n    }];\n\n    let time;\n    if (timeMode === 'hour') time = hoursInt;\n    if (timeMode === 'minute') time = minutesInt;\n    if (timeMode === 'second') time = secondsInt;\n\n    return (\n      <div\n        style={style}\n        className={cn('md-picker md-picker--time', {\n          [`md-picker--${displayMode}`]: displayMode,\n          'md-picker--inline': inline,\n          'md-picker--inline-icon': inline && icon,\n        }, className)}\n      >\n        <TimePickerHeader\n          tempTime={tempTime}\n          timeMode={timeMode}\n          setTimeMode={setTimeMode}\n          setTempTime={setTempTime}\n          hours={hours}\n          minutes={minutes}\n          seconds={seconds}\n          timePeriod={timePeriod}\n          showSeconds={showSeconds}\n        />\n        <div className=\"md-picker-content-container\">\n          <div className=\"md-picker-content md-picker-content--clock\">\n            <ClockFace\n              time={time}\n              minutes={timeMode === 'minute' || timeMode === 'second'}\n              onChange={this._updateTime}\n              timePeriod={timePeriod}\n              hoverMode={hoverMode}\n              onTimeChosen={this._handleTimeChosen}\n            />\n          </div>\n          <DialogFooter actions={actions} />\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-shadow */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\nimport formatTime from '../utils/DateUtils/formatTime';\nimport extractTimeParts from '../utils/DateUtils/extractTimeParts';\nimport Dialog from '../Dialogs/DialogContainer';\nimport FontIcon from '../FontIcons/FontIcon';\nimport TextField from '../TextFields/TextField';\nimport Collapse from '../Helpers/Collapse';\nimport TimePicker from './TimePicker';\n\n/**\n * The `TimePickerContainer` component is a wrapper for the main `TimePicker` component\n * to manage the state and _logic_ for rendering the `TimePicker`. This component will\n * either render inline or in a `Dialog` depending if the `inline` prop is set\n * to `true`.\n *\n * NOTE: This component is actually exported as `TimePicker` when using the `import { member }` syntax.\n * The following two lines are equivalent:\n *\n * ```js\n * import { TimePicker } from 'react-md/lib/Pickers';\n * import TimePicker from 'react-md/lib/Pickers/TimePickerContainer';\n * ```\n */\nexport default class TimePickerContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the text field in the time picker. This is require for a11y.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An aria-label to apply to the dialog when it has been opened. This is required for\n     * a11y.\n     */\n    'aria-label': isRequiredForA11y(PropTypes.string),\n\n    /**\n     * An optional style to apply to the time picker's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the time picker's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the time picker.\n     */\n    pickerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the time picker.\n     */\n    pickerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the input tag.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the input tag.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the text field's container.\n     */\n    textFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the text field's container.\n     */\n    textFieldClassName: PropTypes.string,\n\n    /**\n     * An optional icon to display with the time picker.\n     *\n     * @see {@link TextFields/TextField#leftIcon}\n     */\n    icon: PropTypes.node,\n\n    /**\n     * Boolean if the time picker is open by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * An optional label to be displayed in the time picker's text\n     * field.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder to be displayed in the time picker's text field.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * The value of the time picker. This will make the time picker\n     * be a controlled component.\n     */\n    value: controlled(PropTypes.instanceOf(Date), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional function to call when the selected date is changed\n     * by hitting the OK button. The newly formatted time string,\n     * the new Date object, and the change event will be given.\n     *\n     * `onChange(timeString, dateObject, event)`.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional default value to give for the year picker.\n     */\n    defaultValue: PropTypes.instanceOf(Date),\n\n    /**\n     * A function to format the dates since it should be formatted to the user's\n     * locale. This _should_ be the `Intl.DateTimeFormat` function. You\n     * can also create your own if you really wanted. Inadvisable though.\n     *\n     * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\n     */\n    DateTimeFormat: PropTypes.func.isRequired,\n\n    /**\n     * The locales to use for formatting the date. This will default to using\n     * the user's language in the browser or `'en-US'` when server rendering.\n     */\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n\n    /**\n     * The label to use for the ok button on the year picker.\n     */\n    okLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the ok button should be styled with the primary color.\n     */\n    okPrimary: PropTypes.bool,\n\n    /**\n     * The label to use for the cancel button on the year picker.\n     */\n    cancelLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the cancel button should be styled with the primary color.\n     */\n    cancelPrimary: PropTypes.bool,\n\n    /**\n     * The default mode to open the time picker in.\n     */\n    defaultTimeMode: PropTypes.oneOf(['hour', 'minute', 'second']),\n\n    /**\n     * Boolean if the date should automatically be selected when a user clicks\n     * on a new date instead of making them hit the ok button.\n     */\n    autoOk: PropTypes.bool,\n\n    /**\n     * Boolean if the date picker should be displayed inline instead of in a\n     * dialog.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * An optional force of the display mode of the date picker.\n     * This _should_ not really be used since there are media queries\n     * to use the correct mode based on device orientation.\n     */\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n    /**\n     * Boolean if the text field for the Time Picker should be displayed as full width.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * The direction that the text field divider expands from when the text field\n     * in the date picker gains focus.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\n\n    /**\n     * An optional boolean if the time picker is current visible by dialog or inline.\n     * If this is set, the `onVisibilityChange` function is required.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the date picker is opened in either a dialog, or\n     * inline. The callback will include the next state.\n     *\n     * ```js\n     * onVisibilityChange(!visible, e);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * Boolean if the time picker is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\n     */\n    closeOnEsc: PropTypes.bool,\n\n    /**\n     * If true the hover mode of the Time Picker is activated.\n     * In hover mode no clicks are required to start selecting an hour\n     * and the time mode switches automatically when a time was chosen.\n     * When a minute is selected the chosen time is applied automatically.\n     */\n    hoverMode: PropTypes.bool,\n\n    /**\n     * If true seconds will be selectable in the Time Picker.\n     */\n    showSeconds: PropTypes.bool,\n\n    /**\n     * Boolean if the inline time picker's visibility should be animated.\n     */\n    animateInline: PropTypes.bool,\n\n    /**\n     * Boolean if the time is required.\n     *\n     * @see {@link TextFields/TextField#required}\n     */\n    required: PropTypes.bool,\n\n    /**\n     * @see {@link TextFields/TextField#block}\n     */\n    block: TextField.propTypes.block,\n\n    /**\n     * @see {@link TextFields/TextField#paddedBlock}\n     */\n    paddedBlock: TextField.propTypes.paddedBlock,\n\n    /**\n     * @see {@link TextFields/TextField#active}\n     */\n    active: TextField.propTypes.active,\n\n    /**\n     * @see {@link TextFields/TextField#error}\n     */\n    error: TextField.propTypes.error,\n\n    /**\n     * @see {@link TextFields/TextField#floating}\n     */\n    floating: TextField.propTypes.floating,\n\n    /**\n     * @see {@link TextFields/TextField#leftIconStateful}\n     */\n    leftIconStateful: TextField.propTypes.leftIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#rightIcon}\n     */\n    rightIcon: TextField.propTypes.rightIcon,\n\n    /**\n     * @see {@link TextFields/TextField#rightIconStateful}\n     */\n    rightIconStateful: TextField.propTypes.rightIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#customSize}\n     */\n    customSize: TextField.propTypes.customSize,\n\n    /**\n     * @see {@link TextFields/TextField#errorText}\n     */\n    errorText: TextField.propTypes.errorText,\n\n    /**\n     * @see {@link TextFields/TextField#helpText}\n     */\n    helpText: TextField.propTypes.helpText,\n\n    /**\n     * @see {@link TextFields/TextField#helpOnFocus}\n     */\n    helpOnFocus: TextField.propTypes.helpOnFocus,\n\n    /**\n     * @see {@link TextFields/TextField#inlineIndicator}\n     */\n    inlineIndicator: TextField.propTypes.inlineIndicator,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the dialog.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the dialog into. The default is to render as the first child\n     * in the `body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\n     * of the first.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * @see {@link Dialogs/DialogContainer#disableScrollLocking}\n     */\n    disableScrollLocking: PropTypes.bool,\n\n    /**\n     * Boolean if the TimePicker should be read only. This will prevent the user from opening the picker\n     * and only display the current date in the text field.\n     */\n    readOnly: PropTypes.bool,\n\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initialTimeMode: deprecated(PropTypes.oneOf(['hour', 'minute']), 'Use `defaultTimeMode` instead'),\n  };\n\n  static defaultProps = {\n    animateInline: true,\n    defaultTimeMode: 'hour',\n    icon: <FontIcon>access_time</FontIcon>,\n    DateTimeFormat: DateTimeFormat, // eslint-disable-line object-shorthand\n    locales: typeof window !== 'undefined'\n      ? window.navigator.userLanguage || window.navigator.language\n      : 'en-US',\n    okLabel: 'Ok',\n    okPrimary: true,\n    cancelLabel: 'Cancel',\n    cancelPrimary: true,\n    closeOnEsc: true,\n    disableScrollLocking: false,\n    'aria-label': 'Select a time',\n    hoverMode: false,\n    showSeconds: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialDate;\n    if (props.defaultValue) {\n      initialDate = new Date(props.defaultValue);\n    } else if (props.value) {\n      initialDate = new Date(props.value);\n    } else {\n      initialDate = new Date();\n    }\n\n    const visible = typeof props.initiallyOpen !== 'undefined'\n      ? props.initiallyOpen\n      : !!props.defaultVisible;\n\n    this.state = {\n      visible,\n      ...this._getTimeParts(initialDate, props),\n      value: props.defaultValue,\n      time: initialDate,\n      timeMode: props.initialTimeMode || props.defaultTimeMode,\n      tempTime: initialDate,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      const time = nextProps.value || new Date();\n      this.setState({ tempTime: time, ...this._getTimeParts(time, nextProps) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { inline, isOpen } = this.props;\n    const visible = typeof isOpen !== 'undefined'\n      ? isOpen\n      : getField(this.props, this.state, 'visible');\n    const pVisible = typeof prevProps.isOpen !== 'undefined'\n      ? prevProps.isOpen\n      : getField(prevProps, prevState, 'visible');\n\n    if (visible === pVisible) {\n      return;\n    }\n\n    if (visible) {\n      if (inline) {\n        handleWindowClickListeners(this._handleOutsideClick, true);\n        window.addEventListener('keydown', this._closeOnEsc);\n      }\n    } else if (inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  componentWillUnmount() {\n    const visible = typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible');\n    if (visible && this.props.inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  _setContainer = (container) => {\n    this._container = container;\n  };\n\n  _getTimeParts(date, props) {\n    return extractTimeParts(props.DateTimeFormat, props.locales, props.showSeconds, date);\n  }\n\n  _closeOnEsc = (e) => {\n    if ((e.which || e.keyCode) === ESC) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (this._container && !this._container.contains(e.target)) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _toggleOpen = (e) => {\n    if (this.props.disabled || this.props.readOnly) {\n      return;\n    }\n\n    const visible = !(typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible'));\n\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(visible, e);\n    }\n\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      const { hoverMode } = this.props;\n\n      if (hoverMode) {\n        this._setTimeMode('hour');\n      }\n\n      this.setState({ visible });\n    }\n  };\n\n  _setTimeMode = (timeMode) => {\n    if (this.state.timeMode === timeMode) {\n      return;\n    }\n\n    this.setState({ timeMode });\n  };\n\n  _setTempTime = (time) => {\n    if (this.state.tempTime === time) {\n      return;\n    }\n\n    this.setState({ tempTime: time, ...this._getTimeParts(time, this.props) });\n  };\n\n  _handleKeyDown = (e) => {\n    handleKeyboardAccessibility(e, this._toggleOpen, true, true);\n\n    if ((e.which || e.keyCode) === TAB && this.state.active) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleOkClick = (e) => {\n    const { onVisibilityChange, onChange, DateTimeFormat, locales, showSeconds } = this.props;\n    const value = new Date(this.state.tempTime);\n    if (onChange) {\n      onChange(formatTime(DateTimeFormat, locales, showSeconds, value), value, e);\n    }\n\n    if (onVisibilityChange) {\n      onVisibilityChange(false, e);\n    }\n\n    const state = { time: value, ...this._getTimeParts(value, this.props) };\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      state.visible = false;\n    }\n\n    this.setState(state);\n  };\n\n  _handleCancelClick = (e) => {\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(false, e);\n    }\n\n    let state;\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      state = { visible: false };\n    }\n\n    const value = getField(this.props, this.state, 'value');\n    if (value) {\n      state = { ...state, ...this._getTimeParts(value, this.props) };\n      state.tempTime = this.state.time;\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _getTextFieldValue(props, state) {\n    const { DateTimeFormat, locales, showSeconds } = props;\n    const value = getField(props, state, 'value');\n    if (!value) {\n      return '';\n    } else if (value instanceof Date) {\n      return formatTime(DateTimeFormat, locales, showSeconds, value);\n    } else {\n      // currently don't support value of string\n      return value;\n    }\n  }\n\n  render() {\n    const {\n      timeMode,\n      tempTime,\n      hours,\n      minutes,\n      seconds,\n      timePeriod,\n    } = this.state;\n\n    const {\n      style,\n      className,\n      pickerStyle,\n      pickerClassName,\n      inputStyle,\n      inputClassName,\n      textFieldStyle,\n      textFieldClassName,\n      id,\n      disabled,\n      label,\n      placeholder,\n      icon,\n      inline,\n      displayMode,\n      fullWidth,\n      lineDirection,\n      closeOnEsc,\n      hoverMode,\n      showSeconds,\n      portal,\n      renderNode,\n      lastChild,\n      animateInline,\n      block,\n      paddedBlock,\n      active,\n      error,\n      floating,\n      required,\n      leftIconStateful,\n      rightIcon,\n      rightIconStateful,\n      customSize,\n      errorText,\n      helpText,\n      helpOnFocus,\n      inlineIndicator,\n      disableScrollLocking,\n      'aria-label': ariaLabel,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      visible: propVisible,\n      readOnly,\n      defaultValue,\n      defaultVisible,\n      defaultTimeMode,\n      onVisibilityChange,\n\n      // deprecated\n      isOpen,\n      initialTimeMode,\n      initiallyOpen,\n      ...props\n    } = this.props;\n\n    const visible = typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible');\n\n    const picker = (\n      <TimePicker\n        {...props}\n        inline={inline}\n        icon={!!icon}\n        tempTime={tempTime}\n        timeMode={timeMode}\n        seconds={seconds}\n        hours={hours}\n        minutes={minutes}\n        timePeriod={timePeriod}\n        style={pickerStyle}\n        className={pickerClassName}\n        displayMode={displayMode}\n        onOkClick={this._handleOkClick}\n        onCancelClick={this._handleCancelClick}\n        setTimeMode={this._setTimeMode}\n        setTempTime={this._setTempTime}\n        hoverMode={hoverMode}\n        showSeconds={showSeconds}\n      />\n    );\n\n    let content;\n    if (inline) {\n      content = <Collapse collapsed={!visible} animate={animateInline}>{picker}</Collapse>;\n    } else {\n      content = (\n        <Dialog\n          id={`${id}-dialog`}\n          visible={visible}\n          onHide={this._handleCancelClick}\n          dialogClassName=\"md-dialog--picker\"\n          contentClassName=\"md-dialog-content--picker\"\n          aria-label={ariaLabel}\n          closeOnEsc={closeOnEsc}\n          portal={portal}\n          lastChild={lastChild}\n          renderNode={renderNode}\n          focusOnMount={false}\n          disableScrollLocking={disableScrollLocking}\n        >\n          {picker}\n        </Dialog>\n      );\n    }\n\n    return (\n      <div style={style} className={cn('md-picker-container', className)} ref={this._setContainer}>\n        <TextField\n          id={id}\n          style={textFieldStyle}\n          className={cn({ 'md-pointer--hover': !disabled }, textFieldClassName)}\n          inputStyle={inputStyle}\n          inputClassName={cn({ 'md-pointer--hover': !disabled }, inputClassName)}\n          active={active || visible}\n          error={error}\n          floating={floating || visible}\n          required={required}\n          disabled={disabled}\n          leftIcon={icon}\n          leftIconStateful={leftIconStateful}\n          rightIcon={rightIcon}\n          rightIconStateful={rightIconStateful}\n          inlineIndicator={inlineIndicator}\n          block={block}\n          paddedBlock={paddedBlock}\n          fullWidth={fullWidth}\n          lineDirection={lineDirection}\n          customSize={customSize}\n          helpText={helpText}\n          helpOnFocus={helpOnFocus}\n          errorText={errorText}\n          label={label}\n          placeholder={placeholder}\n          onClick={this._toggleOpen}\n          onKeyDown={this._handleKeyDown}\n          value={this._getTextFieldValue(this.props, this.state)}\n          readOnly\n        />\n        {content}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport between from '../utils/PropTypes/between';\n\nconst ROATE_DISTANCE = 360 * 1.75;\nconst BASE_SIZE = 24; // font-icon font size\n\n/**\n * The `CircularProgress` component is used to give visual feedback while your app\n * is loading.\n *\n * There are two different types of circular progress bars: `Determinate` and `Indeterminate`.\n *\n * A `Determinate` circular progress bar should be used when you want to keep track of the current\n * progress. An example would be downloading a file.\n *\n * An `Indeterminate` circular progress bar should be used when you can not keep track of the progress\n * yourself. An example would be waiting for some API call to complete.\n */\nexport default class CircularProgress extends PureComponent {\n  /* eslint-disable max-len */\n  static propTypes = {\n    /**\n     * The `id` prop is required for accessibility concerns.\n     * [Progress Bar Role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role)\n     *\n     * > If the progressbar is describing the loading progress of a particular region of a page, the author\n     * __SHOULD__ use aria-describedby to point to the status, and set the aria-busy attribute to true on the\n     * region until it is finished loading. It is not possible for the user to alter the value of a progressbar\n     * because it is always readonly.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /* eslint-enable max-len */\n\n    /**\n     * A style object to apply to the SVG. If this is a determinate `CircularProgress`,\n     * the `transform` (and vendor prefixes) styles will be merged with the current\n     * progress rotation.\n     */\n    style: PropTypes.object.isRequired,\n\n    /**\n     * An optional className to apply to the SVG.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The current value of the progress. If this value is defined, it will\n     * be converted to a determinate circular progress. The progress will not\n     * advance unless this value changes.\n     *\n     * This value should also be a number between 0 and 100.\n     */\n    value: between(PropTypes.number, 0, 100),\n\n    /**\n     * The scale for the circular progress.\n     */\n    scale: PropTypes.number.isRequired,\n\n    /**\n     * You probably don't want to update this. I'm not good at SVG. This should\n     * match the SCSS variable `$md-circular-progress-stroke-dashoffset`.\n     */\n    determinateDashoffset: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the progress should be centered in it's container.\n     */\n    centered: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    style: {},\n    scale: 1,\n    determinateDashoffset: 187,\n    centered: true,\n  };\n\n  render() {\n    const {\n      scale,\n      style,\n      className,\n      value,\n      determinateDashoffset,\n      centered,\n      ...props\n    } = this.props;\n\n    const isDeterminate = typeof value === 'number';\n    let circleStyle;\n    let svgStyle = style;\n    if (isDeterminate) {\n      const rotate = `rotate3d(0, 0, 1, ${ROATE_DISTANCE / 100 * value}deg)`;\n      circleStyle = {\n        strokeDashoffset: determinateDashoffset - (determinateDashoffset / 100 * value),\n      };\n\n      svgStyle = Object.assign({}, style, {\n        WebkitTransform: cn(style.WebkitTransform, rotate),\n        MozTransform: cn(style.MozTransform, rotate),\n        transform: cn(style.transform, rotate),\n      });\n    }\n\n    const accessibilityProps = {\n      role: 'progressbar',\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n    };\n\n    if (isDeterminate) {\n      accessibilityProps['aria-valuenow'] = value;\n    }\n\n    return (\n      <svg\n        {...props}\n        {...accessibilityProps}\n        style={svgStyle}\n        className={cn('md-progress md-progress--circular', {\n          'md-block-centered': centered,\n          'md-progress--circular-determinate': isDeterminate,\n          'md-progress--circular-indeterminate': !isDeterminate,\n        }, className)}\n        width={scale * BASE_SIZE}\n        height={scale * BASE_SIZE}\n        viewBox=\"0 0 66 66\"\n      >\n        <circle\n          className={cn('md-circular-progress-path', {\n            'md-circular-progress-path--animated': !isDeterminate,\n          })}\n          strokeWidth=\"6\"\n          strokeLinecap=\"round\"\n          style={circleStyle}\n          cx=\"33\"\n          cy=\"33\"\n          r=\"30\"\n        />\n      </svg>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport between from '../utils/PropTypes/between';\n\n/**\n * There are 3 different types of linear progress bars: `Determinate`,\n * `Indeterminate`, and `Query Indeterminate`.\n *\n * A `Determinate` linear progress bar should be used when you can keep track of the\n * progress and have a percentage complete you can work with. An example would be\n * uploading/downloading a file.\n *\n * An `Indeterminate` linear progress bar should be used when you can not keep track\n * of the progress yourself. An example might be waiting for an API call to complete.\n *\n * A `Query Indeterminate` linear progress bar is used when you are combining\n * `Indeterminate` and `Determinate`. A Linear Progress component can be displayed\n * as a query indeterminate progress bar by adding the prop `query={true}` to the\n * component. Until a progress value is given, it will display the query linear\n * progress animation. Afterwards, it will start the determinate animation of where\n * you manually keep updating the value of the progress.\n */\nexport default class LinearProgress extends PureComponent {\n  /* eslint-disable max-len */\n  static propTypes = {\n    /**\n     * The `id` prop is required for accessibility concerns.\n     * [Progress Bar Role](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_progressbar_role)\n     *\n     * > If the progressbar is describing the loading progress of a particular region of a page, the author\n     * __SHOULD__ use aria-describedby to point to the status, and set the aria-busy attribute to true on the\n     * region until it is finished loading. It is not possible for the user to alter the value of a progressbar\n     * because it is always readonly.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /* eslint-enable max-len */\n    /**\n     * An optional className to apply to the linear progress container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional className to apply to the progress bar element.\n     *\n     * If a function is specified it will be called to get necessary className.\n     * Current progress value and reference to the component will be passed into the function.\n     */\n    progressClassName: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the progress bar element.\n     *\n     * If a function is specified it will be called to get necessary style.\n     * Current progress value and reference to the component will be passed into the function.\n     */\n    progressStyle: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n    ]),\n\n    /**\n     * The current value of the progress. If this value is defined, it will\n     * be converted to a determinate circular progress. The progress will not\n     * advance unless this value changes.\n     *\n     * This value should also be a number between 0 and 100.\n     */\n    value: between(PropTypes.number, 0, 100),\n\n    /**\n     * Boolean if this should be a query indeterminate progress bar.\n     */\n    query: PropTypes.bool,\n\n    /**\n     * Boolean if the Linear Progress should be centered. This\n     * will only work if the `max-width` style is set.\n     */\n    centered: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    query: false,\n  };\n\n  render() {\n    const { className, progressClassName, progressStyle, value, query, centered, ...props } = this.props;\n    const isDeterminate = typeof value === 'number';\n\n    const accessibilityProps = {\n      role: 'progressbar',\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n    };\n\n    let style;\n    if (isDeterminate) {\n      style = { width: `${value}%` };\n      accessibilityProps['aria-valuenow'] = value;\n    }\n    if (progressStyle) {\n      style = Object.assign(style || {},\n        typeof progressStyle === 'function'\n          ? progressStyle(value, this)\n          : progressStyle\n      );\n    }\n\n    return (\n      <div\n        {...props}\n        className={cn('md-progress md-progress--linear', { 'md-block-centered': centered }, className)}\n      >\n        <div\n          {...accessibilityProps}\n          style={style}\n          className={cn('md-progress--linear-active', {\n            'md-progress--linear-query': query,\n            'md-progress--linear-determinate': isDeterminate,\n            'md-progress--linear-indeterminate': !isDeterminate,\n          }, typeof progressClassName === 'function'\n              ? progressClassName(value, this)\n              : progressClassName\n          )}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport { UP, DOWN, LEFT, RIGHT } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport minMaxLoop from '../utils/NumberUtils/minMaxLoop';\nimport controlled from '../utils/PropTypes/controlled';\nimport SelectionControl from './SelectionControl';\n\n\n/**\n * A custom PropTypes validator to make sure that each `control` in the `controls` prop\n * contains the given `propName`, or the `SelectionControlGroup` has defined that prop.\n */\nfunction requiredByAllControls(validator) {\n  return function validate(props, propName, component, ...others) {\n    let err = validator(props, propName, component, ...others);\n\n    if (!err && typeof props[propName] === 'undefined') {\n      const invalids = props.controls.filter(c => !c[propName]).map((_, i) => i);\n      if (invalids.length) {\n        const invalidPrefix = invalids.length === props.controls.length\n          ? 'All `controls`'\n          : `The \\`controls\\` at indexes \\`${invalids.join('`, `')}\\``;\n        const invalidMsg = `${invalidPrefix} are missing the \\`${propName}\\` prop.`;\n\n        err = new Error(\n          `The \\`${propName}\\` prop is required to make \\`${component}\\` accessible for users of ` +\n          `assistive technologies such as screen readers. Either add the \\`${propName}\\` to the \\`${component}\\` ` +\n          `or add the \\`${propName}\\` to each \\`control\\` in the \\`controls\\` prop. ${invalidMsg}`\n        );\n      }\n    }\n\n    return err;\n  };\n}\n\n\n/**\n * The `SelectionControlGroup` component is used to simplify the generation of a list\n * of `SelectionControl`. Any common props are extracted to this component and passed\n * to the `SelectionControl`.\n */\nexport default class SelectionControlGroup extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to every `SelectionControl`. This will be merged with any `style`\n     * that a `control` might have.\n     */\n    controlStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to every `SelectionControl`. This will be merged with any\n     * `className` that a `control` might have.\n     */\n    controlClassName: PropTypes.string,\n\n    /**\n     * An optional base id to apply to each `SelectionControl`. When this is included, the id for\n     * each control will start with this and end with their current index. If this is omitted,\n     * each `control` in the `controls` prop *must* have an `id` prop. This is required for\n     * accessibility.\n     */\n    id: requiredByAllControls(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * The type to apply to each `SelectionControl` in the group. Only `checkbox` and `radio` is\n     * valid for a grouping.\n     */\n    type: PropTypes.oneOf(['checkbox', 'radio']).isRequired,\n\n    /**\n     * The component to render the `SelectionControlGroup` in. This can only be a valid dom element\n     * since it relies on the ref callback to add keyboard accessibility.\n     */\n    component: PropTypes.string.isRequired,\n\n    /**\n     * An optional label to display above the group of `SelectionControl`s.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional className to apply to the node surrounding the `label` prop.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * The component to render each item in the `controls` list as. By default, this will be the\n     * `SelectionControl` component but you can change this to any React component that accepts\n     * the selection control props. It is currently provided:\n     *\n     * ```js\n     * const controlProps = {\n     *   id: `${id}${i}`,\n     *   key: `control${i}`,\n     *   name: `${name}${type === 'checkbox' ? '[]' : ''}`,\n     *   type,\n     *   inline,\n     *   disabled,\n     *   checked,\n     *   tabIndex: !radio || checked || (i === 0 && this._activeIndex === -1) ? undefined : -1,\n     *   checkedRadioIcon,\n     *   uncheckedRadioIcon,\n     *   checkedCheckboxIcon,\n     *   uncheckedCheckboxIcon,\n     *   ...control,\n     *   style,\n     *   className: cn(controlClassName, control.className),\n     * };\n     * ```\n     */\n    controlComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * The component to render the optional `label` in.\n     */\n    labelComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * An optional function to call when any `SelectionControl`'s `checked` state is changed\n     * in the group. If the `type` of the group is `radio`, the `value` of the `checked` radio\n     * will be given in the callback. If the `type` of the group is `checkbox`, a comma-delimited\n     * string of all `checked` checkboxes values will be given.\n     *\n     * ```js\n     * // checkbox\n     * onChange('Alpha,Omega', changeEvent);\n     *\n     * // radio\n     * onChange('Omega', changeEvent);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * A name to use for each `SelectionControl` in the group. If the `type` of the group is\n     * `checkbox`, the name will be updated to be an array name so that using\n     * `document.querySelector('input[name=\"yourName[]\"].value` will give the comma-delimited\n     * string of checked checkboxes.\n     *\n     * It is either required to have this prop set or every `control` in the `controls` prop to\n     * have the `name` prop.\n     */\n    name: requiredByAllControls(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * The default value for the `SelectionControlGroup`. This can either be a single value\n     * or a comma-delimited string of checkbox values. When the `type` of the group is `radio`\n     * and the group is uncontrolled, it is recommended to set this prop. Otherwise the first\n     * value of the `controls` prop will be used as the default value.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional value to use for the `SelectionControlGroup`. This will make the component\n     * controlled and require the `onChange` prop to be defined. Like the `defaultValue`, this\n     * can either be a single value or a comma-delimited list of checkbox values.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'onChange'),\n\n    /**\n     * A list of objects to create the `SelectionControl` components. The shape of the object\n     * is the `propTypes` of the `SelectionControl` component, except that `value` prop is\n     * now required.\n     *\n     * The `SelectionControl` will inherit any inheritable props from the `SelectionControlGroup`.\n     */\n    controls: PropTypes.arrayOf(PropTypes.shape({\n      key: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      label: PropTypes.node.isRequired,\n      value: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.number,\n        PropTypes.string,\n      ]).isRequired,\n    })).isRequired,\n\n    /**\n     * Boolean if the `SelectionControl` should be displayed inline.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * Boolean if all the selection controls in the group are disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional function to call when the keydown event is triggered.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An icon to use for a checked `radio` control. This will be applied to each\n     * control that has a `type=\"radio\"` in the `controls` list. This is just a simpler\n     * way of applying the custom icons for each radio in the list.\n     *\n     * This will default to the `checkedRadioIcon` on the `SelectionControl`.\n     *\n     * @see {@link #controls}\n     * @see {@link #uncheckedRadioIcon}\n     * @see {@link SelectionControls/SelectionControls#checkedRadioIcon}\n     * @see {@link SelectionControls/SelectionControls#uncheckedRadioIcon}\n     */\n    checkedRadioIcon: PropTypes.node,\n\n    /**\n     * An icon to use for an unchecked `radio` control. This will be applied to each\n     * control that has a `type=\"radio\"` in the `controls` list. This is just a simpler\n     * way of applying the custom icons for each radio in the list.\n     *\n     * This will default to the `uncheckedRadioIcon` on the `SelectionControl`.\n     *\n     * @see {@link #controls}\n     * @see {@link #checkedRadioIcon}\n     * @see {@link SelectionControls/SelectionControls#checkedRadioIcon}\n     * @see {@link SelectionControls/SelectionControls#uncheckedRadioIcon}\n     */\n    uncheckedRadioIcon: PropTypes.node,\n\n    /**\n     * An icon to use for a checked `checkbox` control. This will be applied to each\n     * control that has a `type=\"checkbox\"` in the `controls` list. This is just a simpler\n     * way of applying the custom icons for each checkbox in the list.\n     *\n     * This will default to the `checkedCheckboxIcon` on the `SelectionControl`.\n     *\n     * @see {@link #controls}\n     * @see {@link #uncheckedCheckboxIcon}\n     * @see {@link SelectionControls/SelectionControls#checkedCheckboxIcon}\n     * @see {@link SelectionControls/SelectionControls#uncheckedCheckboxIcon}\n     */\n    checkedCheckboxIcon: PropTypes.node,\n\n    /**\n     * An icon to use for an unchecked `checkbox` control. This will be applied to each\n     * control that has a `type=\"checkbox\"` in the `controls` list. This is just a simpler\n     * way of applying the custom icons for each checkbox in the list.\n     *\n     * This will default to the `uncheckedCheckboxIcon` on the `SelectionControl`.\n     *\n     * @see {@link #controls}\n     * @see {@link #checkedCheckboxIcon}\n     * @see {@link SelectionControls/SelectionControls#checkedCheckboxIcon}\n     * @see {@link SelectionControls/SelectionControls#uncheckedCheckboxIcon}\n     */\n    uncheckedCheckboxIcon: PropTypes.node,\n  };\n\n  static defaultProps = {\n    component: 'fieldset',\n    labelComponent: 'legend',\n    labelClassName: 'md-subheading-1',\n    controlComponent: SelectionControl,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const radio = props.type === 'radio';\n    this.state = {};\n\n    if (typeof props.value === 'undefined') {\n      let value = props.defaultValue;\n\n      if (typeof value === 'undefined') {\n        value = radio ? props.controls[0].value : '';\n      }\n\n      this.state.value = value;\n    }\n\n    const groupValue = getField(props, this.state, 'value');\n    this._activeIndex = -1;\n    props.controls.some(({ value }, i) => {\n      if (value === groupValue) {\n        this._activeIndex = i;\n      }\n\n      return this._activeIndex > -1;\n    });\n  }\n\n  _isChecked(value, controlValue, type) {\n    return type === 'radio'\n      ? value === controlValue\n      : value.split(',').indexOf(controlValue) !== -1;\n  }\n\n  _setGroup = (group) => {\n    this._group = group;\n  };\n\n  _handleChange = (e) => {\n    let value = e.target.value;\n    if (this.props.type === 'checkbox') {\n      const { checked } = e.target;\n      const currentValue = getField(this.props, this.state, 'value');\n      const existsIndex = currentValue.indexOf(value);\n      if (existsIndex === -1 && checked) {\n        value = `${currentValue ? `${currentValue},` : ''}${value}`;\n      } else if (existsIndex > -1 && !checked) {\n        value = currentValue.replace(new RegExp(`${value},?`), '');\n      } else {\n        value = currentValue;\n      }\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(value, e);\n    }\n\n    if (typeof this.props.value === 'undefined') {\n      this.setState({ value });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n    const dec = key === UP || key === LEFT;\n    const inc = key === DOWN || key === RIGHT;\n    if (!this._group || (!dec && !inc)) {\n      return;\n    }\n\n    e.preventDefault();\n    const radios = this._group.querySelectorAll('*[role=\"radio\"]');\n    this._activeIndex = minMaxLoop(this._activeIndex, 0, radios.length - 1, inc);\n    radios[this._activeIndex].focus();\n    const { value } = this.props.controls[this._activeIndex];\n    if (getField(this.props, this.state, 'value') !== value) {\n      if (this.props.onChange) {\n        this.props.onChange(value, e);\n      }\n\n      if (typeof this.props.value === 'undefined') {\n        this.setState({ value });\n      }\n    }\n  };\n\n  render() {\n    const {\n      id,\n      name,\n      type,\n      label,\n      labelClassName,\n      className,\n      controlStyle,\n      controlClassName,\n      component: Component,\n      labelComponent: LabelComponent,\n      inline,\n      disabled,\n      checkedRadioIcon,\n      uncheckedRadioIcon,\n      checkedCheckboxIcon,\n      uncheckedCheckboxIcon,\n      controlComponent: ControlComponent,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      controls: propControls,\n      defaultValue,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const value = getField(this.props, this.state, 'value');\n    const radio = type === 'radio';\n\n    const controls = this.props.controls.map((control, i) => {\n      let style = control.style;\n      if (controlStyle) {\n        style = style ? { ...controlStyle, ...style } : controlStyle;\n      }\n\n      const checked = this._isChecked(value, control.value, type);\n      const controlProps = {\n        id: `${id}${i}`,\n        key: `control${i}`,\n        name: `${name}${type === 'checkbox' ? '[]' : ''}`,\n        type,\n        inline,\n        disabled,\n        checked,\n        tabIndex: !radio || checked || (i === 0 && this._activeIndex === -1) ? undefined : -1,\n        checkedRadioIcon,\n        uncheckedRadioIcon,\n        checkedCheckboxIcon,\n        uncheckedCheckboxIcon,\n        'aria-describedby': `${id}-group-label`,\n        ...control,\n        style,\n        className: cn(controlClassName, control.className),\n      };\n\n      return <ControlComponent {...controlProps} />;\n    });\n\n    let ariaLabel;\n    if (label) {\n      ariaLabel = <LabelComponent className={labelClassName} id={`${id}-group-label`}>{label}</LabelComponent>;\n    }\n\n    return (\n      <Component\n        {...props}\n        ref={this._setGroup}\n        className={cn('md-selection-control-group', className)}\n        onChange={this._handleChange}\n        onKeyDown={radio ? this._handleKeyDown : null}\n      >\n        {ariaLabel}\n        {controls}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FontIcon from '../FontIcons/FontIcon';\nimport SelectionControl from './SelectionControl';\n\n/**\n * The `Checkbox` component is used for the selection of multiple options from a set.\n */\nexport default class Checkbox extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to use with the checkbox. This is used for accessibility and so that the label\n     * triggers the checkbox toggle.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An optional style to apply to the checkbox's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the checkbox's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A label to display with the checkbox. This is required for accessibility and triggering\n     * the toggle.\n     */\n    label: PropTypes.node,\n\n    /**\n     * Boolean if the label should appear before the checkbox icon.\n     */\n    labelBefore: PropTypes.bool,\n\n    /**\n     * A name to use for the `Checkbox`. This is required for accessibility. If the checkbox is\n     * part of a group, it is recommended to make this a string ending in `[]` so that the\n     * value can be found from `document.querySelector('input[name=\"someName[]\"]').value`.\n     */\n    name: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * Boolean if the `Checkbox` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional function to call when the `checked` state of the `Checkbox` changes.\n     * The callback will include the new checked state and the changeEvent.\n     *\n     * ```js\n     * onChange(changeEvent.target.checked, changeEvent);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional value for the `Checkbox`. It is recommended to use a value though.\n     */\n    value: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Boolean if the `Checkbox` is checked by default.\n     */\n    defaultChecked: PropTypes.bool,\n\n    /**\n     * A boolean if the `Checkbox` is currently checked. This will required the `onChange` prop\n     * to be defined.\n     */\n    checked: controlled(PropTypes.bool, 'onChange', 'defaultChecked'),\n\n    /**\n     * Boolean if the `Checkbox` should be displayed inline.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * The icon to display when the checkbox is checked.\n     */\n    checkedIcon: PropTypes.node,\n\n    /**\n     * The icon to display when the checkbox is unchecked.\n     */\n    uncheckedIcon: PropTypes.node,\n\n    checkedIconChildren: deprecated(PropTypes.node, 'Use `checkedIcon` instead'),\n    checkedIconClassName: deprecated(PropTypes.string, 'Use `checkedIcon` instead'),\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use `uncheckedIcon` instead'),\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use `uncheckedIcon` instead'),\n  };\n\n  static defaultProps = {\n    checkedIcon: <FontIcon>check_box</FontIcon>,\n    uncheckedIcon: <FontIcon>check_box_outline_blank</FontIcon>,\n  };\n\n  render() {\n    const {\n      checkedIcon,\n      uncheckedIcon,\n      // deprecated\n      checkedIconChildren,\n      checkedIconClassName,\n      uncheckedIconChildren,\n      uncheckedIconClassName,\n      ...props\n    } = this.props;\n\n    const checked = getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon);\n    const unchecked = getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon);\n\n    return (\n      <SelectionControl\n        type=\"checkbox\"\n        checkedCheckboxIcon={checked}\n        uncheckedCheckboxIcon={unchecked}\n        __superSecreteProp\n        {...props}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport FontIcon from '../FontIcons/FontIcon';\nimport SelectionControl from './SelectionControl';\n\n/**\n * The `Radio` component is used for the selection of a single option from a set. Unfortunately\n * the `Radio` component must always be controlled because of the `FontIcon` toggles and how\n * the `radio` input type works. It is recommended to use the `SelectionControlGroup` component\n * to manage the `radio`.\n */\nexport default class Radio extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to use with the radio. This is used for accessibility and so that the label\n     * triggers the radio toggle.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An optional style to apply to the radio's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the radio's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A label to display with the radio. This is required for accessibility and triggering\n     * the toggle.\n     */\n    label: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the label should appear before the radio icon.\n     */\n    labelBefore: PropTypes.bool,\n\n    /**\n     * A name to use for the `Radio`. This is required for accessibility.\n     */\n    name: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * Boolean if the `Radio` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * A function to call when the `Radio` triggers the `change` event. The `onChange` callback\n     * will include the current value of the checked `radio` and the change event.\n     *\n     * ```js\n     * onChange(changeEvent.target.value, changeEvent);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * The value for the `Radio` component.\n     */\n    value: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * A boolean if the `Radio` is currently checked.\n     */\n    checked: PropTypes.bool.isRequired,\n\n    /**\n     * Boolean if the `Radio` should be displayed inline.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * The icon to display when the radio is checked/selected.\n     */\n    checkedIcon: PropTypes.node.isRequired,\n\n    /**\n     * The icon to display when the radio is not checked/selected.\n     */\n    uncheckedIcon: PropTypes.node.isRequired,\n    checkedIconChildren: deprecated(PropTypes.node, 'Use `checkedIcon` instead'),\n    checkedIconClassName: deprecated(PropTypes.string, 'Use `checkedIcon` instead'),\n    uncheckedIconChildren: deprecated(PropTypes.node, 'Use `uncheckedIcon` instead'),\n    uncheckedIconClassName: deprecated(PropTypes.string, 'Use `uncheckedIcon` instead'),\n  };\n\n  static defaultProps = {\n    checkedIcon: <FontIcon>radio_button_checked</FontIcon>,\n    uncheckedIcon: <FontIcon>radio_button_unchecked</FontIcon>,\n  };\n\n  render() {\n    const {\n      checkedIcon,\n      uncheckedIcon,\n      // deprecated\n      checkedIconChildren,\n      checkedIconClassName,\n      uncheckedIconChildren,\n      uncheckedIconClassName,\n      ...props\n    } = this.props;\n\n    const checked = getDeprecatedIcon(checkedIconClassName, checkedIconChildren, checkedIcon);\n    const unchecked = getDeprecatedIcon(uncheckedIconClassName, uncheckedIconChildren, uncheckedIcon);\n\n    return (\n      <SelectionControl\n        type=\"radio\"\n        checkedCheckboxIcon={checked}\n        uncheckedCheckboxIcon={unchecked}\n        __superSecreteProp\n        {...props}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport controlled from '../utils/PropTypes/controlled';\nimport SelectionControl from './SelectionControl';\n\nexport default class Switch extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to use with the switch. This is used for accessibility and so that the label\n     * triggers the switch toggle.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An optional style to apply to the switch's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the switch's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A label to display with the switch. This is required for accessibility and triggering\n     * the toggle.\n     */\n    label: PropTypes.node,\n\n    /**\n     * Boolean if the label should appear before the switch.\n     */\n    labelBefore: PropTypes.bool,\n\n    /**\n     * A name to use for the `Switch`. This is required for accessibility since behind the scenes\n     * the `Switch` is renders as an `<input type=\"checkbox\" />`.\n     */\n    name: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * Boolean if the `Switch` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional function to call when the `checked` state of the `Switch` changes.\n     * The callback will include the new checked state and the changeEvent.\n     *\n     * ```js\n     * onChange(changeEvent.target.checked, changeEvent);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional value for the `Switch`. It is recommended to use a value though.\n     */\n    value: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * Boolean if the `Switch` is checked by default.\n     */\n    defaultChecked: PropTypes.bool,\n\n    /**\n     * A boolean if the `Switch` is currently checked. This will required the `onChange` prop\n     * to be defined.\n     */\n    checked: controlled(PropTypes.bool, 'onChange', 'defaultChecked'),\n\n    defaultToggled: deprecated(PropTypes.bool, 'Use the `defaultChecked` prop instead'),\n    toggled: deprecated(PropTypes.bool, 'Use the `checked` prop instead'),\n  };\n\n  render() {\n    const {\n      toggled,\n      defaultToggled,\n      ...props\n    } = this.props;\n\n    if (typeof toggled !== 'undefined' && typeof props.checked === 'undefined') {\n      props.checked = toggled;\n    }\n\n    if (typeof defaultToggled !== 'undefined' && typeof props.defaultChecked === 'undefined') {\n      props.defaultChecked = defaultToggled;\n    }\n\n    return <SelectionControl type=\"switch\" {...props} __superSecreteProp />;\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * This is just the label component for the slider. It will\n * return null if there are no children to display.\n */\nexport default class SliderLabel extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    htmlFor: (props, propName, component, ...others) => {\n      if (typeof props.children === 'undefined') {\n        return null;\n      }\n\n      return PropTypes.string.isRequired(props, propName, component, ...others);\n    },\n  };\n\n  render() {\n    const { children, className, htmlFor, ...props } = this.props;\n    if (!children) {\n      return null;\n    }\n\n    return (\n      <label\n        {...props}\n        htmlFor={htmlFor}\n        className={cn('md-slider-label', themeColors({ text: true }), className)}\n      >\n        {children}\n      </label>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `TrackFill` component is used for showing a colored bar\n * within the `Track` component to show the `Slider`'s position.\n *\n * If the `Slider` is disabled, this will just return null.\n */\nexport default class TrackFill extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    dragging: PropTypes.bool,\n    disabled: PropTypes.bool,\n    trackFillWidth: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { style, className, trackFillWidth, dragging, disabled, ...props } = this.props;\n    if (disabled) {\n      return null;\n    }\n\n    return (\n      <hr\n        {...props}\n        style={Object.assign({}, style, { width: trackFillWidth })}\n        className={cn('md-slider-track-fill', className, {\n          'md-slider-track-fill--dragging': dragging,\n        })}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport AccessibleFakeButton from '../Helpers/AccessibleFakeButton';\n\n/**\n * The `Thumb` component is the little ball for the slider.\n */\nexport default class Thumb extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    thumbLeft: PropTypes.string.isRequired,\n    on: PropTypes.bool,\n    off: PropTypes.bool,\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    dragging: PropTypes.bool,\n    discrete: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      on,\n      off,\n      active,\n      disabled,\n      dragging,\n      thumbLeft,\n      discrete,\n      ...props\n    } = this.props;\n\n    return (\n      <AccessibleFakeButton\n        disabled={disabled}\n        {...props}\n        style={Object.assign({}, style, { left: thumbLeft })}\n        className={cn('md-slider-thumb', className, {\n          'md-slider-thumb--active': active,\n          'md-slider-thumb--dragging': dragging,\n          'md-slider-thumb--disabled': disabled,\n          'md-slider-thumb--on': on,\n          'md-slider-thumb--continuous-off': !discrete && off,\n          'md-slider-thumb--discrete': discrete,\n          'md-slider-thumb--discrete-on': discrete && active && on,\n          'md-slider-thumb--discrete-off': discrete && !disabled && off,\n          'md-slider-thumb--discrete-active': discrete && active,\n          'md-slider-thumb--discrete-active-off': discrete && active && off,\n        })}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n/**\n * The `ThumbMask` component is used for either:\n *\n *  - rendering the ink behind the `Thumb` component when the `Thumb`\n *  has keyboard focus or touch focus\n *  - rendering a underlay to make the `Track` look broken for disabled\n *  Sliders.\n */\nexport default class ThumbMask extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    thumbLeft: PropTypes.string.isRequired,\n    maskInked: PropTypes.bool,\n    dragging: PropTypes.bool,\n    discrete: PropTypes.bool,\n    leaving: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      thumbLeft,\n      disabled,\n      dragging,\n      maskInked,\n      discrete,\n      leaving,\n      ...props\n    } = this.props;\n\n    return (\n      <span\n        {...props}\n        style={Object.assign({}, style, { left: thumbLeft })}\n        className={cn('md-slider-thumb md-slider-thumb--mask', className, {\n          'md-slider-thumb--dragging': dragging,\n          'md-slider-thumb--mask-inked': maskInked,\n          'md-slider-thumb--mask-disabled': disabled,\n          'md-slider-thumb--discrete-mask-inked': maskInked && discrete,\n          'md-slider-thumb--discrete-mask-leaving': discrete && leaving,\n        })}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport default class DiscreteValue extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    discrete: PropTypes.bool,\n    dragging: PropTypes.bool,\n    active: PropTypes.bool,\n    value: PropTypes.number.isRequired,\n    thumbLeft: PropTypes.string.isRequired,\n    valuePrecision: PropTypes.number.isRequired,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      discrete,\n      dragging,\n      thumbLeft,\n      active,\n      value,\n      valuePrecision,\n      ...props\n    } = this.props;\n\n    if (!discrete || !active) {\n      return null;\n    }\n\n    let valueStr = value.toFixed(valuePrecision);\n    if (valuePrecision > 0) {\n      const [w, d] = valueStr.split('.');\n      if (parseInt(d, 10) === 0) {\n        valueStr = w;\n      }\n    }\n    return (\n      <span\n        {...props}\n        style={Object.assign({}, style, { left: thumbLeft })}\n        className={cn('md-slider-discrete-value', className, {\n          'md-slider-discrete-value--dragging': dragging,\n        })}\n      >\n        {valueStr}\n      </span>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport updateUnit from '../utils/NumberUtils/updateUnit';\nimport TrackFill from './TrackFill';\nimport Thumb from './Thumb';\nimport ThumbMask from './ThumbMask';\nimport DiscreteValue from './DiscreteValue';\n\nconst half = w => w / 2;\n\n/**\n * The `Track` component is used for showing the current state of the slider.\n * It will render the `TrackFill`, `Thumb`, and `ThumbMask` components.\n */\nexport default class Track extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    thumbStyle: PropTypes.object,\n    thumbClassName: PropTypes.string,\n    trackFillStyle: PropTypes.object,\n    trackFillClassName: PropTypes.string,\n    discreteValueStyle: PropTypes.object,\n    discreteValueClassName: PropTypes.string,\n    on: PropTypes.bool,\n    off: PropTypes.bool,\n    active: PropTypes.bool,\n    dragging: PropTypes.bool,\n    disabled: PropTypes.bool,\n    thumbLeft: PropTypes.string.isRequired,\n    trackFillWidth: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    discrete: PropTypes.bool,\n    maskInked: PropTypes.bool,\n    maskLeaving: PropTypes.bool,\n    onThumbKeyUp: PropTypes.func.isRequired,\n    onThumbKeyDown: PropTypes.func.isRequired,\n    onThumbFocus: PropTypes.func.isRequired,\n    scale: PropTypes.number,\n    step: PropTypes.number,\n    discreteTicks: PropTypes.number,\n    tickWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    valuePrecision: PropTypes.number.isRequired,\n  };\n\n  render() {\n    const {\n      on,\n      off,\n      active,\n      disabled,\n      dragging,\n      className,\n      thumbLeft,\n      trackFillWidth,\n      trackFillStyle,\n      trackFillClassName,\n      discreteValueStyle,\n      discreteValueClassName,\n      maskInked,\n      maskLeaving,\n      thumbStyle,\n      thumbClassName,\n      discrete,\n      onThumbFocus,\n      onThumbKeyUp,\n      onThumbKeyDown,\n      value,\n      tickWidth,\n      discreteTicks,\n      scale,\n      step,\n      valuePrecision,\n      ...props\n    } = this.props;\n\n    const ticks = [];\n    if (typeof discreteTicks !== 'undefined' && !disabled && discrete) {\n      const amt = scale / (discreteTicks / step);\n      const offset = updateUnit(tickWidth, half, 'px');\n      const inc = 100 / amt;\n\n      for (let i = 0; i <= amt; i++) {\n        let left = `${i * inc}%`;\n        let width = tickWidth;\n        if (i === 0 || i === amt) {\n          width = updateUnit(tickWidth, half);\n        } else {\n          left = `calc(${left} - ${offset})`;\n        }\n\n        ticks.push(\n          <span\n            key={`tick-${i}`}\n            className=\"md-slider-discrete-tick\"\n            style={{ left, width }}\n          />\n        );\n      }\n    }\n\n    return (\n      <div {...props} className={cn('md-slider-track', className)}>\n        {ticks}\n        <TrackFill\n          style={trackFillStyle}\n          className={trackFillClassName}\n          disabled={disabled}\n          dragging={dragging}\n          trackFillWidth={trackFillWidth}\n        />\n        <Thumb\n          style={thumbStyle}\n          className={thumbClassName}\n          on={on}\n          off={off}\n          disabled={disabled}\n          dragging={dragging}\n          active={active}\n          thumbLeft={thumbLeft}\n          onFocus={onThumbFocus}\n          onKeyUp={onThumbKeyUp}\n          onKeyDown={onThumbKeyDown}\n          discrete={discrete}\n        />\n        <DiscreteValue\n          style={discreteValueStyle}\n          className={discreteValueClassName}\n          discrete={discrete}\n          dragging={dragging}\n          active={active}\n          value={value}\n          thumbLeft={thumbLeft}\n          valuePrecision={valuePrecision}\n        />\n        <ThumbMask\n          dragging={dragging}\n          disabled={disabled}\n          thumbLeft={thumbLeft}\n          maskInked={maskInked}\n          discrete={discrete}\n          leaving={maskLeaving}\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { LEFT, RIGHT, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport isValidClick from '../utils/EventUtils/isValidClick';\nimport { setTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport calculateValueDistance from '../utils/NumberUtils/calculateValueDistance';\nimport isWithinStep from '../utils/NumberUtils/isWithinStep';\nimport controlled from '../utils/PropTypes/controlled';\nimport SliderLabel from './SliderLabel';\nimport Track from './Track';\nimport TextField from '../TextFields/TextField';\n\n/**\n * The `Slider` component is used to let users select a value from a continuous\n * or discrete range of values by moving the slider thumb.\n *\n * When the user has finished dragging the Slider or increments the value by using\n * the edit field/keyboard arrows, the value will be rounded to the nearest `step`.\n */\nexport default class Slider extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to use for the `Slider`. This is required if the `label` prop\n     * is defined.\n     */\n    id: (props, propName, component, ...others) => {\n      if (typeof props.label === 'undefined') {\n        return PropTypes.string(props, propName, component, ...others);\n      }\n\n      return isRequiredForA11y(PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]))(props, propName, component, ...others);\n    },\n\n    /**\n     * An optional style to apply to the slider's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the slider's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the slider's thumb.\n     */\n    thumbStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the slider's thumb.\n     */\n    thumbClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the slider's track.\n     */\n    trackStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the slider's track.\n     */\n    trackClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the slider's track fill.\n     */\n    trackFillStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the slider's track fill.\n     */\n    trackFillClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to a discrete slider's value.\n     */\n    discreteValueStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to a discrete slider's value.\n     */\n    discreteValueClassName: PropTypes.string,\n\n    /**\n     * The default value for the slider. This number must be between the min and max values if\n     * defined. If this is undefined, it's value will be set to the min value.\n     */\n    defaultValue: PropTypes.number,\n\n    /**\n     * The min value for the slider. This value **must** be less than the `max` value.\n     */\n    min: (props, propName, component, ...others) => {\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\n      if (!err) {\n        const min = props[propName];\n        let name;\n        if (min > props.value) {\n          name = 'value';\n        } else if (typeof props.defaultValue !== 'undefined' && min > props.defaultValue) {\n          name = 'defaultValue';\n        }\n\n        if (name) {\n          err = new Error(\n            `The '${propName}' prop must be less than or equal to the '${name}' prop for the '${component}' but ` +\n            `received: 'min: ${min}' and '${name}: ${props[name]}'`\n          );\n        }\n      }\n\n      return err;\n    },\n\n    /**\n     * The max value for the slider. This value **must** be greater than the `min` value.\n     */\n    max: (props, propName, component, ...others) => {\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\n      if (!err) {\n        const max = props[propName];\n        let name;\n        if (max < props.value) {\n          name = 'value';\n        } else if (max < props.defaultValue) {\n          name = 'defaultValue';\n        }\n\n        if (name) {\n          err = new Error(\n            `The '${propName}' prop must be greater than or equal to the '${name}' prop for the '${component}' but ` +\n            `received: '${propName}: ${max}' and '${name}: ${props[name]}'`\n          );\n        }\n      }\n\n      return err;\n    },\n\n    /**\n     * Boolean if the slider is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional value for the slider. This will make the component controlled\n     * and require the `onChange` function.\n     */\n    value: controlled(PropTypes.number, 'onChange'),\n\n    /**\n     * This is called when the slider's value gets updated. The value can be updated\n     * by one of the following:\n     *\n     * - Clicking a section of the slider\n     * - Dragging the slider with the mouse\n     * - Touching a section of the slider.\n     * - Dragging the slider with touch\n     * - Using the text field to update the value either by typing or incrementing\n     * - Using the left or right arrow keys to increment/decrement the value.\n     *\n     * The callback for this function is as follows:\n     *\n     * ```js\n     * onChange(value, event);\n     * ```\n     *\n     * where the event can either be:\n     * - a touch start event\n     * - a touch move event\n     * - a touch end event\n     * - a mouse down event\n     * - a mouse move event\n     * - a mouse up event\n     * - a key up event\n     * - a key down event\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * This is only called when the user is dragging the slider with either\n     * the mouse or touch. Probably not really useful. It just includes the\n     * new drag percentage while the `onChange` does not.\n     *\n     * The callback for this function is defined as:\n     *\n     * ```js\n     * onDragChange(dragPercentage, value, (touchMove || mouseMove) event);\n     * ```\n     */\n    onDragChange: PropTypes.func,\n\n    /**\n     * An optional function to call when the slider's container has\n     * the mousedown event.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the slider's container has\n     * the touchstart event.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional icon or letter to place to the left of the slider.\n     * if you want to use a non-font icon or a letter, use the `md-slider-ind`\n     * className on your element.\n     */\n    leftIcon: PropTypes.element,\n\n    /**\n     * An optional icon or letter to place to the right of the slider.\n     * if you want to use a non-font icon or a letter, use the `md-slider-ind`\n     * className on your element.\n     *\n     * > NOTE: This can not be used if the `editable` prop is true.\n     */\n    rightIcon: PropTypes.element,\n\n    /**\n     * An optional label to display above the slider. If this prop\n     * is set, then an `id` must also be given.\n     */\n    label: PropTypes.node,\n\n    /**\n     * The incremental amount when the user hits left or right with the\n     * keyboard arrows, or the user hits the up or down buttons in the\n     * editable number text field. This number must be a number between\n     * 0 and 1 or a whole number above 1.\n     */\n    step: (props, propName, component, ...others) => {\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\n      if (!err) {\n        const step = props[propName];\n        if (step <= 0) {\n          err = new Error(\n            `The '${propName}' for the '${component}' must be a number greater than 0. The ` +\n            `current value is '${step}'.`\n          );\n        } else {\n          const valueDefined = typeof props.value !== 'undefined';\n          const defaultDefined = typeof props.defaultValue !== 'undefined';\n          let value = props.value;\n          if (!valueDefined) {\n            value = defaultDefined ? props.defaultValue : props.min;\n          }\n\n          let name;\n          if (!isWithinStep(value, step)) {\n            if (valueDefined) {\n              name = 'value';\n            } else if (defaultDefined) {\n              name = 'defaultValue';\n            } else {\n              name = 'min';\n            }\n          }\n\n          if (name) {\n            err = new Error(\n              `The '${name}' prop on '${component}' should be a number divisible by the ` +\n              `'${propName}' prop. The current value is '${props[name]}' and the '${propName}' ` +\n              `is '${step}'.`\n            );\n          }\n        }\n      }\n\n      return err;\n    },\n\n    /**\n     * Boolean if the Slider should be editable. This will place a number text field\n     * to the right of the slider. If this prop is set to `true`, the `rightIcon`\n     * prop can not be set.\n     */\n    editable: (props, propName, component, ...others) => {\n      if (typeof props[propName] === 'undefined') {\n        return null;\n      }\n\n      let err = PropTypes.bool.isRequired(props, propName, component, ...others);\n      if (!err && typeof props.rightIcon !== 'undefined') {\n        err = new Error(\n          `The '${component}' is unable to be 'editable' and include a 'rightIcon'.`\n        );\n      }\n\n      return err;\n    },\n\n    /**\n     * The width for the number text field when the Slider is editable.\n     */\n    inputWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Boolean if the slider should be discrete. This will update the slider to include a\n     * _balloon_ with the current value inside. It will also not allow the `Slider` to be\n     * editable.\n     */\n    discrete: (props, propName, component, ...others) => {\n      if (typeof props[propName] === 'undefined') {\n        return null;\n      }\n\n      let err = PropTypes.bool(props, propName, component, ...others);\n      if (!err && typeof props.editable !== 'undefined') {\n        err = new Error(\n          `The '${component}' cannot be 'discrete' and 'editable'. Please choose one.`\n        );\n      }\n\n      return err;\n    },\n\n    /**\n     * The width of each tick for a discrete slider with ticks. This can either be a number\n     * which gets converted to `px`, or a valid CSS unit.\n     */\n    tickWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * This is number divisible by the total number of values included in the Slider. Every\n     * value that is divisible by this number will include a tick mark. It is common recommended\n     * to have this equal to the `step` prop.\n     *\n     * This prop is completely optional.\n     */\n    discreteTicks: (props, propName, component, ...others) => {\n      if (typeof props[propName] === 'undefined') {\n        return null;\n      }\n\n      let err = PropTypes.number(props, propName, component, ...others);\n      if (!err) {\n        const { min, max, step } = props;\n        const range = Math.abs(max - min);\n\n        if ((range / props[propName]) % 1 !== 0) {\n          err = new Error(\n            `The '${propName}' must be a number divisible by the range set by the 'min' and ` +\n            `'max' props. The current range is '${range}' by including the min: '${min}' and ` +\n            `max: '${max}' values. The current value of '${propName}' is '${props[propName]}'.`\n          );\n        } else if (props[propName] % step !== 0) {\n          err = new Error(\n            `The 'step' prop must be a number divisible by the '${propName}'. It is common to have ` +\n            `them as the same value. The current 'step' is '${step}' and the '${propName}' is '${props[propName]}'.`\n          );\n        }\n      }\n\n      return err;\n    },\n\n    /**\n     * The transition time for a discrete Slider's keyboard focus ink. This should match the\n     * `md-slider-discrete-ink-transition-time` value in your SCSS. This is used because\n     * the ink is only visible temporarily for a discrete slider when keyboard focusing.\n     */\n    discreteInkTransitionTime: PropTypes.number.isRequired,\n\n    /**\n     * The precision that the value should be rounded to when the Slider is updated. This\n     * needs to be a whole number greater than or equal to 0.\n     */\n    valuePrecision: (props, propName, component, ...others) => {\n      let err = PropTypes.number.isRequired(props, propName, component, ...others);\n      if (!err) {\n        const precision = props[propName];\n\n        if (precision % 1 !== 0 || precision < 0) {\n          err = new Error(\n            `The '${propName}' must be a positive whole number or 0 on the '${component}'. ` +\n            `The current '${propName}' is '${precision}'`\n          );\n        }\n      }\n\n      return err;\n    },\n\n    stepPrecision: deprecated(PropTypes.number, 'Use `step` and `valuePrecision` instead'),\n  };\n\n  static defaultProps = {\n    min: 0,\n    max: 100,\n    step: 1,\n    inputWidth: 40,\n    tickWidth: 6,\n    discreteInkTransitionTime: 300,\n    valuePrecision: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { min, max, step } = props;\n    const scale = Math.abs(max - min) / step;\n\n    let value = typeof props.value !== 'undefined'\n      ? props.value\n      : props.defaultValue;\n\n    if (typeof value === 'undefined') {\n      value = min;\n    }\n\n    const distance = this._calcDistance(value, min, max);\n    const thumbLeft = this._calcLeft(distance);\n    const trackFillWidth = `${distance}%`;\n\n    if (typeof props.value !== 'undefined') {\n      value = undefined;\n    }\n\n    let trackWidth;\n    if (props.label && !props.editable && !props.leftIcon && !props.rightIcon) {\n      trackWidth = '100%';\n    }\n\n    this.state = {\n      value,\n      scale,\n      distance,\n      thumbLeft,\n      trackWidth,\n      trackFillWidth,\n      active: false,\n      dragging: false,\n      maskInked: false,\n    };\n    this._dragAdded = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { leftIcon, rightIcon, label, min, max, step, value } = this.props;\n    if (value !== nextProps.value) {\n      const distance = this._calcDistance(nextProps.value, nextProps.min, nextProps.max);\n      this.setState({ distance, trackFillWidth: `${distance}%`, thumbLeft: this._calcLeft(distance) });\n    }\n\n    if (leftIcon !== nextProps.leftIcon\n      || rightIcon !== nextProps.rightIcon\n      || label !== nextProps.label\n    ) {\n      this._calcTrackWidth(nextProps);\n    }\n\n    if (min !== nextProps.min || max !== nextProps.max || step !== nextProps.step) {\n      this.setState({ scale: Math.abs(nextProps.max - nextProps.min) / nextProps.step });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { active, manualIncrement } = this.state;\n    let fn = window[`${active ? 'add' : 'remove'}EventListener`];\n    if (active !== prevState.active) {\n      fn('click', this._blurOnOutsideClick);\n\n      if (active) {\n        this._focusThumb();\n      }\n    }\n\n    const addDrag = active && !manualIncrement;\n    fn = window[`${addDrag ? 'add' : 'remove'}EventListener`];\n    if (this._dragAdded !== addDrag) {\n      fn('mousemove', this._handleDragMove);\n      fn('mouseup', this._handleDragEnd);\n      setTouchEvent(addDrag, window, 'move', this._handleDragMove);\n      setTouchEvent(addDrag, window, 'end', this._handleDragEnd);\n\n      this._dragAdded = addDrag;\n    }\n  }\n\n  componentWillUnmount() {\n    const rm = window.removeEventListener;\n    rm('click', this._blurOnOutsideClick);\n    rm('mousemove', this._handleMouseMove);\n    rm('mouseup', this._handleMouseUp);\n    removeTouchEvent(window, 'move', this._handleDragMove);\n    removeTouchEvent(window, 'end', this._handleDragEnd);\n\n    if (this._inkTimeout) {\n      clearTimeout(this._inkTimeout);\n    }\n\n    if (this._focusTimeout) {\n      clearTimeout(this._focusTimeout);\n    }\n  }\n\n  /**\n   * Gets the `left` position for the thumb based on the value given.\n   *\n   * @param {number} value - The current value.\n   * @return {string} the `calc` string.\n   */\n  _calcLeft(value) {\n    return `calc(${value}% - 6px)`;\n  }\n\n  _calcDistance(value, min, max) {\n    return Math.max(0, Math.min(100, ((value - min) / (max - min)) * 100));\n  }\n\n  /**\n   * Checks if a classList does not contain all the *bad* class names.\n   *\n   * @param {function} classList - The classList to check.\n   * @return {Boolean} true if the classList does not contain any of the *bad* class names.\n   */\n  _isValidClassList(classList) {\n    let invalid = false;\n    ['md-slider-label', 'md-slider-ind', 'md-icon'].some(cl => {\n      invalid = classList.contains(cl);\n      return invalid;\n    });\n\n    return !invalid;\n  }\n\n  _isInTextField(e) {\n    const { className } = e.target;\n\n    // SVG's className is an object instead of a string\n    return typeof className.match === 'function' && className.match(/text-field/);\n  }\n\n  /**\n   * Checks if the target is within the text field container.\n   *\n   * @param {Object} target - The event target.\n   * @return {Boolean} true if the target is in the text field.\n   */\n  _isTextField = (target) => this._field && this._field.contains(target);\n\n  /**\n   * Updates the slider's thumb position and the slider's track fill width based\n   * on the thumb's current x position on the screen.\n   *\n   * The slider distance will be *normalized* when:\n   *  - The user does a quick jump\n   *  - The user stops dragging with the mouse\n   *  - The user drops dragging with touch\n   *\n   * If the position is not *normalized*, the `onDragChange` prop will be called\n   * with the new distance percentage, the value, and the move event.\n   *\n   * The `onChange` function will always be called.\n   *\n   * @param {Object} e - The current event to extract an x location from\n   * @param {bool} normalize - Boolean if the distance should be normalized\n   *    to the current scale of the slider.\n   */\n  _updatePosition = (e, normalize) => {\n    const x = (e.changedTouches ? e.changedTouches[0] : e).clientX;\n    const { scale } = this.state;\n    const { onChange, onDragChange, min, max, step } = this.props;\n\n    const { value, distance } = calculateValueDistance(\n      x,\n      this._track.offsetWidth,\n      this._track.getBoundingClientRect().left,\n      scale,\n      step,\n      min,\n      max,\n      normalize\n    );\n\n    const isNewValue = getField(this.props, this.state, 'value') !== value;\n    if (onChange && isNewValue) {\n      onChange(value, e);\n    }\n\n    if (!normalize && onDragChange && (isNewValue || this.state.distance !== distance)) {\n      onDragChange(distance, value, e);\n    }\n\n    const state = {\n      active: true,\n      distance,\n      manualIncrement: false,\n      dragging: !normalize,\n      thumbLeft: this._calcLeft(distance),\n      trackFillWidth: `${distance}%`,\n    };\n\n    if (e.type === 'touchend' || e.type === 'mousedown') {\n      state.maskInked = false;\n    }\n\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    this.setState(state);\n  };\n\n  /**\n   * This will either allow a user to start dragging the slider or quickly\n   * jump to a new value on the slider if the slider is not disabled.\n   *\n   * This will handle the `touchstart` and `mousedown` events.\n   *\n   * @param {Object} e - The touchstart or mousedown event.\n   */\n  _handleDragStart = (e) => {\n    if (e.type === 'mousedown' && this.props.onMouseDown) {\n      this.props.onMouseDown(e);\n    } else if (e.type === 'touchstart' && this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    if (this.props.disabled || (e.type === 'mousedown' && !isValidClick(e, 'mousedown')) || this._isInTextField(e)) {\n      return;\n    }\n\n    const { classList } = e.target;\n    const isDiscreteValue = classList.contains('md-slider-discrete-value');\n    if (classList.contains('md-slider-thumb') || isDiscreteValue) {\n      // Prevents text highlighting while dragging.\n      if (e.type.match(/mouse/)) {\n        e.preventDefault();\n      }\n      this.setState({ dragging: true, active: true, manualIncrement: false, maskInked: false });\n    } else if (!this._isTextField(e.target) && this._isValidClassList(classList)) {\n      this._updatePosition(e, true);\n    }\n  };\n\n  _setNode = (node) => {\n    this._node = findDOMNode(node);\n  };\n\n  _setTrack = (track) => {\n    this._track = findDOMNode(track);\n  };\n\n  _setField = (field) => {\n    this._field = findDOMNode(field);\n    this._calcTrackWidth(this.props);\n  };\n\n  _handleDragMove = (e) => {\n    if (this.props.disabled || !this.state.dragging) {\n      return;\n    }\n\n    // Stops the text highlighting while dragging\n    if (e.type.match(/mouse/)) {\n      e.preventDefault();\n    }\n\n    this._updatePosition(e, false);\n  };\n\n  _handleDragEnd = (e) => {\n    if (!this.state.dragging || this.props.disabled || (e.type === 'mouseup' && !isValidClick(e))) {\n      return;\n    }\n\n    this._updatePosition(e, true);\n  };\n\n  /**\n   * This will set the active state of the slider to false if the user\n   * clicks outside of the slider's container.\n   *\n   * @param {Object} e - The window's click event.\n   */\n  _blurOnOutsideClick = (e) => {\n    if ((this.state.dragging && !this.state.manualIncrement) || this.props.disabled) {\n      return;\n    }\n\n    if (!this._node.contains(e.target)) {\n      this.setState({ active: false, maskInked: false });\n    }\n  };\n\n  /**\n   * Updates the slider with the `step` prop and calls the `onChange`\n   * function with the new value.\n   *\n   * @param {number} incrementedValue - The newly incremented value of the slider.\n   * @param {Object} e - Either the text field's change event, mouse down event, or\n   *    touch start event.\n   * @param {bool} disableTransition - Boolean if the jump's transition should be disabled.\n   */\n  _handleIncrement = (incrementedValue, e, disableTransition) => {\n    const { onChange, min, max, discrete } = this.props;\n\n    const value = Math.max(min, Math.min(max, incrementedValue));\n    const distance = this._calcDistance(value, min, max);\n\n    if (onChange) {\n      onChange(value, e);\n    }\n\n    const state = {\n      distance,\n      manualIncrement: true,\n      thumbLeft: this._calcLeft(distance),\n      trackFillWidth: `${distance}%`,\n      dragging: Math.abs(this.state.distance - distance) < 2 && disableTransition,\n    };\n\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    if (e.type === 'keydown' && !discrete) {\n      state.maskInked = true;\n    }\n\n    this.setState(state);\n  };\n\n  _handleTextFieldChange = (newValue, e) => {\n    this._handleIncrement(newValue, e, false);\n  };\n\n  /**\n   * This will increment the Slider's value by the `step` prop. If the left or\n   * right key arrow is pressed.\n   *\n   * @param {Object} e - the keydown event.\n   */\n  _handleKeyDown = (e) => {\n    const key = e.which || e.keyCode;\n    const { min, max, step, disabled } = this.props;\n    if (disabled) {\n      return;\n    }\n\n    if (key === TAB) {\n      this.setState({ active: false, maskInked: false });\n      return;\n    } else if ((key !== LEFT && key !== RIGHT)) {\n      return;\n    }\n\n    let nextValue = getField(this.props, this.state, 'value');\n    nextValue = Math.max(\n      min,\n      Math.min((key === LEFT ? -step : step) + nextValue, max)\n    );\n\n    this._handleIncrement(nextValue, e, true);\n  };\n\n  /**\n   * This function will animate the discrete Slider's ink if it gains focus\n   * by a tab event.\n   *\n   * @param {Object} e - the key up event.\n   */\n  _handleKeyUp = (e) => {\n    if ((e.which || e.keyCode) !== TAB) {\n      return;\n    }\n\n    if (this.props.discrete) {\n      this._animateDiscreteInk();\n    }\n\n    this.setState({ maskInked: true });\n  };\n\n  _handleFocus = () => {\n    this.setState({ active: true });\n  };\n\n  /**\n   * For some reason the width of the track gets set to 0 if the `Slider` has a label and\n   * does not include the `leftIcon`, `rightIcon`, and is not `editable` OR it is\n   * `editable` and does not include the `leftIcon`. All other cases the width works\n   * correctly.\n   *\n   * This function just checks these things, and sets the width accordingly.\n   */\n  _calcTrackWidth = (props) => {\n    const { editable, leftIcon, rightIcon, inputWidth, label } = props;\n\n    if (!label) {\n      this.setState({ trackWidth: null });\n      return;\n    }\n\n    let trackWidth = null;\n    if (!leftIcon && !rightIcon && !editable) {\n      trackWidth = '100%';\n    } else if (this._field && editable && !leftIcon) {\n      const cs = window.getComputedStyle(this._field);\n      const pl = parseInt(cs.getPropertyValue('padding-left'), 10) || 0;\n      const ml = parseInt(cs.getPropertyValue('margin-left'), 10) || 0;\n\n      trackWidth = pl + ml + inputWidth;\n    }\n\n    if (trackWidth !== this.state.trackWidth) {\n      this.setState({ trackWidth });\n    }\n  };\n\n  /**\n   * The ink for a Discrete slider is only visible for a short time on initial\n   * focus. This function will handle the in/out transitions.\n   */\n  _animateDiscreteInk = () => {\n    const wait = this.props.discreteInkTransitionTime;\n    if (this._inkTimeout) {\n      clearTimeout(this._inkTimeout);\n    }\n\n    this._inkTimeout = setTimeout(() => {\n      this.setState({ leaving: true, maskInked: false });\n\n      this._inkTimeout = setTimeout(() => {\n        this._inkTimeout = null;\n        this.setState({ leaving: false });\n      }, wait);\n    }, wait);\n  };\n\n  /**\n   * This is a helper function for focusing the Slider's thumb component. There\n   * is a short delay because the body sometimes gets focused immediately after\n   * if there is no timeout..\n   */\n  _focusThumb = () => {\n    if (this._focusTimeout) {\n      clearTimeout(this._focusTimeout);\n    }\n\n    this._focusTimeout = setTimeout(() => {\n      this._focusTimeout = null;\n      if (!this._thumb) {\n        this._thumb = this._node.querySelector('.md-slider-thumb');\n      }\n\n      this._thumb.focus();\n    }, 100);\n  };\n\n  render() {\n    const {\n      dragging,\n      active,\n      thumbLeft,\n      trackFillWidth,\n      maskInked,\n      trackWidth,\n      scale,\n      distance,\n    } = this.state;\n\n    const {\n      id,\n      min,\n      max,\n      disabled,\n      className,\n      trackStyle,\n      trackClassName,\n      thumbStyle,\n      thumbClassName,\n      discreteValueStyle,\n      discreteValueClassName,\n      label,\n      editable,\n      step,\n      inputWidth,\n      leftIcon,\n      rightIcon,\n      discrete,\n      discreteTicks,\n      tickWidth,\n      valuePrecision,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      onChange,\n      onDragChange,\n      discreteInkTransitionTime,\n\n      // deprecated\n      stepPrecision,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const value = getField(this.props, this.state);\n    let rightChildren = rightIcon;\n    if (editable) {\n      rightChildren = (\n        <TextField\n          id={`${id}-editor`}\n          ref={this._setField}\n          type=\"number\"\n          value={value}\n          inputClassName=\"md-slider-editor\"\n          style={{ width: inputWidth }}\n          onChange={this._handleTextFieldChange}\n          step={step}\n        />\n      );\n    }\n\n    return (\n      <div\n        {...props}\n        ref={this._setNode}\n        className={cn('md-slider-container', className, {\n          'md-pointer--hover': !disabled,\n        })}\n        onMouseDown={this._handleDragStart}\n        onTouchStart={this._handleDragStart}\n      >\n        <SliderLabel htmlFor={id}>{label}</SliderLabel>\n        <input\n          id={id}\n          type=\"range\"\n          className=\"md-slider-input\"\n          readOnly\n          min={min}\n          max={max}\n          value={value}\n          disabled={disabled}\n        />\n        {leftIcon}\n        <Track\n          ref={this._setTrack}\n          style={Object.assign({}, trackStyle, { width: trackWidth })}\n          className={cn(trackClassName, {\n            'md-slider-track--ind-left': leftIcon,\n            'md-slider-track--ind-right': rightIcon,\n          })}\n          thumbStyle={thumbStyle}\n          thumbClassName={thumbClassName}\n          discreteValueStyle={discreteValueStyle}\n          discreteValueClassName={discreteValueClassName}\n          active={active}\n          dragging={dragging}\n          disabled={disabled}\n          thumbLeft={thumbLeft}\n          trackFillWidth={trackFillWidth}\n          on={!disabled && distance > 0}\n          off={distance === 0}\n          maskInked={maskInked}\n          onThumbKeyUp={this._handleKeyUp}\n          onThumbKeyDown={this._handleKeyDown}\n          onThumbFocus={this._handleFocus}\n          discrete={discrete}\n          tickWidth={tickWidth}\n          discreteTicks={discreteTicks}\n          valuePrecision={valuePrecision}\n          step={step}\n          scale={scale}\n          value={value}\n        />\n        {rightChildren}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport Button from '../Buttons/Button';\nimport isInvalidAnimate from './isInvalidAnimate';\n\nexport default class Snackbar extends PureComponent {\n  static propTypes = {\n    autoFocusAction: PropTypes.bool,\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    onDismiss: PropTypes.func.isRequired,\n    toast: PropTypes.shape({\n      text: PropTypes.node.isRequired,\n      action: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.shape({\n          label: PropTypes.node,\n          children: PropTypes.node,\n          onClick: PropTypes.func,\n        }),\n      ]),\n      onAppear: PropTypes.func,\n    }).isRequired,\n    multiline: PropTypes.bool,\n    autohide: PropTypes.bool,\n    autohideTimeout: PropTypes.number,\n    fab: PropTypes.object,\n    leaveTimeout: PropTypes.number.isRequired,\n  };\n\n  componentWillMount() {\n    const { fab, multiline, toast: { onAppear } } = this.props;\n    if (onAppear) {\n      onAppear();\n    }\n\n    if (!fab || isInvalidAnimate(fab)) {\n      return;\n    }\n\n    this._fab = fab.getComposedComponent().getComposedComponent();\n    this._fab._animateForSnackbar(multiline);\n  }\n\n  componentDidMount() {\n    this._handleAutohide();\n  }\n\n  componentWillUnmount() {\n    this._clearTimeout();\n\n    if (this._eventType === 'focus') {\n      window.removeEventListener('focus', this._handleWindowFocus);\n    } else if (this._eventType === 'blur') {\n      window.removeEventListener('blur', this._handleWindowBlur);\n    }\n  }\n\n  _handleClick = (e) => {\n    const { onDismiss, toast: { action }, leaveTimeout, multiline } = this.props;\n    if (typeof action.onClick === 'function') {\n      action.onClick(e);\n    }\n\n    if (this._fab) {\n      this._fab._animateForSnackbar(multiline, leaveTimeout);\n    }\n\n    onDismiss();\n  };\n\n  _clearTimeout = () => {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n      this._timeout = null;\n    }\n  };\n\n  _handleAutohide = () => {\n    const { autohide, autohideTimeout, onDismiss, multiline, leaveTimeout } = this.props;\n    if (!autohide) {\n      return;\n    }\n\n    window.addEventListener('blur', this._handleWindowBlur);\n    this._eventType = 'blur';\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n      this._eventType = null;\n\n      window.removeEventListener('blur', this._handleWindowBlur);\n\n      if (this._fab) {\n        this._fab._animateForSnackbar(multiline, leaveTimeout);\n      }\n\n      onDismiss();\n    }, autohideTimeout || this.state.toast);\n  };\n\n  _handleWindowBlur = () => {\n    this._clearTimeout();\n    window.removeEventListener('blur', this._handleWindowBlur);\n    window.addEventListener('focus', this._handleWindowFocus);\n    this._eventType = 'focus';\n  };\n\n  _handleWindowFocus = () => {\n    window.removeEventListener('focus', this._handleWindowFocus);\n    this._eventType = null;\n    this._handleAutohide();\n  };\n\n  render() {\n    const {\n      autoFocusAction,\n      className,\n      toast,\n      multiline,\n      /* eslint-disable no-unused-vars */\n      id: propId,\n      fab,\n      autohide,\n      autohideTimeout,\n      leaveTimeout,\n      onDismiss,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    let { text, action } = toast;\n    let { id } = this.props;\n\n    let Component = 'p';\n    if (action) {\n      Component = 'section';\n      text = <p className=\"md-snackbar--toast md-snackbar--action\">{text}</p>;\n\n      let btnProps = {\n        autoFocus: autoFocusAction,\n        flat: true,\n        onClick: this._handleClick,\n        children: action,\n        secondary: true,\n        className: 'md-btn--snackbar',\n      };\n\n      if (typeof action !== 'string') {\n        btnProps = Object.assign(btnProps, action, {\n          className: cn(btnProps.className, action.className),\n          onClick: this._handleClick,\n        });\n      }\n\n\n      action = <Button {...btnProps} />;\n    }\n\n    if (!id) {\n      id = `snackbar-alert${action ? '-dialog' : ''}`;\n    }\n\n    const role = `alert${action ? 'dialog' : ''}`;\n    return (\n      <Component\n        {...props}\n        id={id}\n        role={role}\n        className={cn('md-snackbar', {\n          'md-snackbar--multiline': multiline,\n          'md-snackbar--toast': !action,\n        }, className)}\n      >\n        {text}\n        {action}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport CSSTransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport isInvalidAnimate from './isInvalidAnimate';\nimport Portal from '../Helpers/Portal';\nimport Snackbar from './Snackbar';\n\nconst CHAINED_TOAST_DELAY = 50;\n\n/**\n * The `Snackbar` component is used for displaying a concise and small message to the user about\n * an operation performed.\n *\n * > The main component for the `Snackbar` is actually named the `SnackbarContainer`, so you need\n * to make sure the import is `react-md/lib/Snackbars` or `react-md/lib/Snackbars/SnackbarContainer`.\n * The first import is preferable.\n */\nexport default class SnackbarContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the Snackbar once a toast has been added and is visible. This is a recommended\n     * prop for accessibility concerns. If it is omitted, the id will become `'snackbar-alert'`\n     * when there is no action on the toast, or `'snackbar-alert-dialog'` when there is an action\n     * on the toast.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the snackbar once it appears.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the snackbar once it appears.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An immutable controlled queue of toasts that should appear in the snackbar.\n     * The snackbar will always display the first toast in this list. When the user has\n     * either clicked the action of the toast, or the `autohideTimeout` has been reached,\n     * the `onDismiss` function will be called. The `onDismiss` function should remove the\n     * first toast and return a new list of remaining toasts.\n     *\n     * ```js\n     * let toasts = [];\n     * const onDismiss = () => {\n     *   const [, ...remainingToasts] = toasts;\n     *   toasts = remainingToasts;\n     * };\n     * ```\n     */\n    toasts: PropTypes.arrayOf(PropTypes.shape({\n      /**\n       * The text to display in the toast.\n       */\n      text: PropTypes.node.isRequired,\n\n      /**\n       * An optional action to take. If this value is a string, the `label` for the\n       * button will be this value, Otherwise, all the keys in the action object will\n       * be applied to the `Button`.\n       */\n      action: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.shape({\n          onClick: PropTypes.func,\n          children: PropTypes.node,\n          // Deprecated\n          label: PropTypes.node,\n        }),\n      ]),\n    })).isRequired,\n\n    /**\n     * A function to call that will dismiss a toast. This will automatically be bound to\n     * any toast that has an `action` and it will also be called when the `autohideTimeout`\n     * has been reached.\n     */\n    onDismiss: PropTypes.func.isRequired,\n\n    /**\n     * Boolean if the snackbar's toasts should automatically be dismissed after the\n     * `autohideTimeout` has been reached.\n     */\n    autohide: PropTypes.bool,\n\n    /**\n     * The amount of time before the snackbar should be dequeued and the next toast\n     * should be displayed.\n     */\n    autohideTimeout: PropTypes.number.isRequired,\n\n    /**\n     * When a toast has an action, it will automatically be focused when this prop is enabled.\n     * This will require your action onClick handler to correctly focus an element on the page\n     * once the toast is hidden. If this prop is disabled, it is recommended to add custom focus\n     * logic so that keyboard users can interact with the snackbar.\n     */\n    autoFocusAction: PropTypes.bool,\n\n    /**\n     * The transition name to use for the snackbar appearing and disappearing.\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition time for the snackbar to enter. This should match the `$md-snackbar-transition-time`\n     * sass variable.\n     */\n    transitionEnterTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The transition time for the snackbar to leave. This should match the `$md-snackbar-transition-time`\n     * sass variable.\n     */\n    transitionLeaveTimeout: PropTypes.number.isRequired,\n\n    /**\n     * When the app contains a floating action button that is fixed to the bottom of the screen,\n     * you should set this to be a ref of the floating action button. When a snackbar appears,\n     * the FAB will be moved to not overlay the snackbar.\n     */\n    fab: (props, propName, componentName, location, propFullName) => {\n      const propValue = props[propName];\n      const propType = typeof propValue;\n\n      if (!propValue) {\n        return null;\n      }\n\n      if (propType !== 'object' || typeof propValue.render !== 'function' || isInvalidAnimate(propValue)) {\n        const componentNameSafe = componentName || '<<anonymous>>';\n        const propFullNameSafe = propFullName || propName;\n        return new Error(\n          `Invalid ${location} \\`${propFullNameSafe}\\` supplied to \\`${componentNameSafe}\\`, expected a ` +\n          'ref to a floating `Button` component. This should not be a DOMElement from `findDOMNode` but instead ' +\n          'the React ref object.'\n        );\n      }\n\n      return null;\n    },\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the snackbar.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM node to render the Snackbar in. If this is omitted, it will render as the first\n     * child in the `body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the snackbar should render as the last child in the `renderNode` or `body` instead of\n     * as the first.\n     */\n    lastChild: PropTypes.bool,\n    dismiss: deprecated(PropTypes.func, 'Use `onDismiss` instead'),\n  };\n\n  static defaultProps = {\n    autoFocusAction: false,\n    autohide: true,\n    toasts: [],\n    autohideTimeout: 3000,\n    transitionName: 'md-snackbar',\n    transitionEnterTimeout: 300,\n    transitionLeaveTimeout: 300,\n  };\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const visible = !!props.toasts.length;\n    this.state = {\n      visible,\n      toast: null,\n    };\n  }\n\n  componentDidMount() {\n    const { toasts } = this.props;\n    if (toasts.length) {\n      this._initAndToast(toasts[0]);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const [toast] = nextProps.toasts;\n    const [prevToast] = this.props.toasts;\n    if (toast === prevToast || toast === this.state.toast) {\n      return;\n    }\n\n    if (!toast) {\n      this._createLeaveTimer();\n    } else if (!this.state.visible) {\n      this._initAndToast(toast);\n    } else {\n      this._createSwapTimer(toast);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._initTimeout) {\n      clearTimeout(this._initTimeout);\n    }\n\n    if (this._leaveTimeout) {\n      clearTimeout(this._leaveTimeout);\n    }\n\n    if (this._swapTimeout) {\n      clearTimeout(this._swapTimeout);\n    }\n\n    if (this._dismissTimeout) {\n      clearTimeout(this._dismissTimeout);\n    }\n  }\n\n  _setContainer = (container) => {\n    this._container = findDOMNode(container);\n  };\n\n  /**\n   * This function takes in a new toast object and checks if the message will span\n   * multiple lines of text by creating the new snackbar before the `Snackbar` component\n   * gets made, checking the height of the message, and then removing the temporary\n   * snackbar.\n   */\n  _isMultiline = (toast) => {\n    const container = this._container;\n    if (container === null) {\n      return false;\n    }\n\n    const message = document.createElement('p');\n    message.classList.add('md-snackbar--toast');\n    message.innerHTML = toast.text;\n\n    let snackbar;\n    if (toast.action) {\n      message.classList.add('md-snackbar--action');\n\n      snackbar = document.createElement('section');\n      snackbar.className = 'md-snackbar';\n      snackbar.appendChild(message);\n\n      const action = document.createElement('button');\n      action.innerHTML = typeof toast.action === 'string' ? toast.action : toast.action.label;\n      action.className = 'md-btn md-btn--flat md-btn--text md-btn--snackbar';\n      snackbar.appendChild(action);\n    } else {\n      snackbar = message;\n    }\n\n    // Only style we really want from the .md-snackbar\n    snackbar.style.maxWidth = '568px';\n\n    container.appendChild(snackbar);\n    const multiline = message.offsetHeight > 20;\n    container.removeChild(snackbar);\n\n    return multiline;\n  };\n\n  _initAndToast = (toast) => {\n    this._initTimeout = setTimeout(() => {\n      this._initTimeout = null;\n\n      this.setState({ toast, multiline: this._isMultiline(toast) });\n    }, TICK);\n\n    this.setState({ visible: true });\n  };\n\n  _createLeaveTimer = () => {\n    const { transitionLeaveTimeout: time } = this.props;\n    this._leaveTimeout = setTimeout(() => {\n      this._leaveTimeout = null;\n\n      this.setState({ visible: false });\n    }, time + TICK);\n\n    this.setState({ toast: null });\n  };\n\n  _createSwapTimer = (toast) => {\n    this._swapTimeout = setTimeout(() => {\n      this._swapTimeout = null;\n\n      this.setState({ toast, multiline: this._isMultiline(toast) });\n    }, this.props.transitionLeaveTimeout + CHAINED_TOAST_DELAY);\n\n    this.setState({ toast: null });\n  };\n\n  render() {\n    const { visible, toast, multiline } = this.state;\n    const {\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      dismiss,\n      onDismiss,\n      lastChild,\n      portal,\n      renderNode: propRenderNode, // eslint-disable-line no-unused-vars\n      toasts, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n    const renderNode = getField(this.props, this.context, 'renderNode');\n\n    let snackbar;\n    if (toast) {\n      snackbar = (\n        <Snackbar\n          {...props}\n          key=\"snackbar\"\n          leaveTimeout={transitionLeaveTimeout}\n          toast={toast}\n          multiline={multiline}\n          onDismiss={onDismiss || dismiss}\n        />\n      );\n    }\n\n    const container = (\n      <CSSTransitionGroup\n        ref={this._setContainer}\n        key=\"container\"\n        className=\"md-snackbar-container\"\n        transitionName={transitionName}\n        transitionEnterTimeout={transitionEnterTimeout}\n        transitionLeaveTimeout={transitionLeaveTimeout}\n      >\n        {snackbar}\n      </CSSTransitionGroup>\n    );\n\n    if (!portal) {\n      return visible ? container : null;\n    }\n\n    return (\n      <Portal visible={visible} renderNode={renderNode} lastChild={lastChild}>\n        {container}\n      </Portal>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The `SVGIcon` component is used for rendering inline SVG icons or sprite-mapped SVGs\n * as an icon.\n */\nexport default class SVGIcon extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if the primary theme color should be applied.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the secondary theme color should be applied.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the icon is considered disabled and should inherit the\n     * disabled color.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the icon is considered errored and should inherit the error color.\n     */\n    error: PropTypes.bool,\n\n    /**\n     * Boolean if the color of the icon should be inherited by parent elements.\n     */\n    inherit: PropTypes.bool,\n\n    /**\n     * The role to apply to the SVG. When using icons, it is generally recommended to leave it as the default\n     * `img` so that it is insured as a graphic.\n     */\n    role: PropTypes.oneOf(['img', 'presentation']),\n\n    /**\n     * This prop is the title attribute to provide to the `<svg>` element itself. This should be used when you\n     * are using a spritesheet that has defined `<title>` with each SVG symbol.\n     */\n    titleAttr: PropTypes.string,\n\n    /**\n     * An optional list of ids to use to label the SVG icon with. This is helpful to add when you use the `title`\n     * and `desc` props as this is used to create ids for those two props. This is super beneficial to screen readers.\n     *\n     * When this is defined, it is a space-delimited string of ids to provide to the title and desc (in order). If\n     * this is omitted and the `use` prop is defined, it will take everything after the `#` sign and append `-title` and\n     * `-desc` as a fallback. Check out the examples for more information about this.\n     *\n     * @see {@link #title}\n     * @see {@link #desc}\n     */\n    'aria-labelledby': PropTypes.string,\n\n    /**\n     * An optional title to give to your SVG icon. This is generally recommended for accessibility when not using\n     * the `use` prop, or your spritemap does not contain `<title>` and `<desc>.\n     *\n     * @see {@link #aria-labelledby}\n     */\n    title: PropTypes.string,\n\n    /**\n     * An optional description to give to your SVG icon. This is generally recommended for accessibility when not using\n     * the `use` prop, or your spritemap does not contain `<title>` and `<desc>.\n     *\n     * @see {@link #aria-labelledby}\n     */\n    desc: PropTypes.string,\n\n    /**\n     * This should be a link to a part of an SVG spritemap. So normally one of the following:\n     * - `'#some-custom-svg'`\n     * - `'/images/spritemap.svg#some-custom-svg'`\n     *\n     * This prop **should not** be used with the `children` prop as only one will be rendered.\n     *\n     * > NOTE: IE **does not support** external SVGs. Please see the demo for more details.\n     */\n    use: PropTypes.string,\n\n    /**\n     * Any `<svg>` children to render to create your icon. This can not be used with the `use` prop.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n      PropTypes.node,\n    ]),\n\n    /**\n     * Boolean if the SVG should gain the `focusable` attribute. This is disabled by default since IE11\n     * and Edge actually default this to true and keyboard's will tab focus all SVGs.\n     */\n    focusable: PropTypes.string,\n\n    /**\n     * An optional size to apply to the SVG. This can be used to set both the\n     * `height` and `width` simultaneously. This will be provided as inline styles\n     * since the `height` and `width` are normally controlled by CSS, and CSS has\n     * higher precedence than the `height`/`width` attributes.\n     */\n    size: PropTypes.number,\n\n    /**\n     * The `height` prop should not be used since the `height` and `width` are controlled by CSS and the CSS\n     * has a higher precedence than inline attributes. If you want to set the `height`, it should be done via\n     * CSS or the `size` prop.\n     *\n     * @see {@link #size}\n     */\n    height: deprecated(PropTypes.number, 'Use the `size` prop instead'),\n\n    /**\n     * The `width` prop should not be used since the `height` and `width` are controlled by CSS and the CSS\n     * has a higher precedence than inline attributes. If you want to set the `height`, it should be done via\n     * CSS or the `size` prop.\n     *\n     * @see {@link #size}\n     */\n    width: deprecated(PropTypes.number, 'Use the `size` prop instead'),\n\n    /**\n     * The viewBox attribute allows you to specify that a given set of graphics stretch to\n     * fit a particular container element.\n     *\n     * The value of the viewBox attribute is a list of four numbers min-x, min-y, width and\n     * height, separated by white space and/or a comma, which specify a rectangle in user\n     * space which should be mapped to the bounds of the viewport established by the given\n     * element, taking into account attribute preserveAspectRatio.\n     *\n     * Negative values for width or height are not permitted and a value of zero disables\n     * rendering of the element.An optional viewbox for the SVG.\n     *\n     * For example, if the SVG element is 250 (width) by 200 (height) and you provide\n     * `viewBox=\"0 0 25 20\"`, the coordinates inside the SVG will go from the top left corner\n     * (0, 0) to the bottom right (25, 20) and each unit will be worth `10px`.\n     */\n    viewBox: PropTypes.string,\n\n    /**\n     * An optional xmlns string to provide. The `use` prop will not work without this prop\n     * defined.\n     */\n    xmlns: PropTypes.string,\n  };\n\n  static defaultProps = {\n    role: 'img',\n    focusable: 'false',\n    xmlns: 'http://www.w3.org/2000/svg',\n    viewBox: '0 0 24 24',\n  };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      styles: this._mergeStyles(props),\n      ...this._getIds(props),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { style, size, use, title, desc, 'aria-labelledby': labels } = this.props;\n    let nextState;\n    if (style !== nextProps.style || size !== nextProps.size) {\n      nextState = { styles: this._mergeStyles(nextProps) };\n    }\n\n\n    if (title !== nextProps.title || desc !== nextProps.desc ||\n      ((nextProps.title || nextProps.desc) && (use !== nextProps.use || labels !== nextProps['aria-labelledby']))\n    ) {\n      nextState = { ...nextState, ...this._getIds(nextProps) };\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  }\n\n  _getIds = ({ use, 'aria-labelledby': labels, title, desc }) => {\n    let titleId = null;\n    let descId = null;\n    let labelledBy = null;\n    if (title || desc) {\n      if (use) {\n        const baseId = use.replace(/.*#/, '');\n        titleId = `${baseId}-title`;\n        descId = `${baseId}-desc`;\n\n        if (title) {\n          labelledBy = `${baseId}-title`;\n        }\n\n        if (desc) {\n          labelledBy = `${labelledBy ? `${labelledBy} ` : ''}${descId}`;\n        }\n      } else if (labels) {\n        [titleId, descId] = labels.split(' ');\n      }\n    }\n\n    return { titleId, descId, labelledBy };\n  };\n\n  _mergeStyles = ({ style, size }) => {\n    if (style && size) {\n      return { height: size, width: size, ...style };\n    } else if (style) {\n      return style;\n    } else if (size) {\n      return { height: size, width: size };\n    }\n\n    return undefined;\n  };\n\n  render() {\n    const { styles, titleId, descId, labelledBy } = this.state;\n    const {\n      className,\n      disabled,\n      use,\n      primary,\n      secondary,\n      error,\n      inherit,\n      titleAttr,\n      'aria-labelledby': ariaLabelledBy,\n      /* eslint-disable no-unused-vars */\n      size,\n      title: propTitle,\n      desc: propDesc,\n      style: propStyle,\n      children: propChildren,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { children, title, desc } = this.props;\n    if (!children && use) {\n      children = <use xlinkHref={use} />;\n    }\n\n    if (title) {\n      title = <title id={titleId}>{title}</title>;\n    }\n\n    if (desc) {\n      desc = <desc id={descId}>{desc}</desc>;\n    }\n\n    return (\n      <svg\n        {...props}\n        title={titleAttr}\n        aria-labelledby={ariaLabelledBy || labelledBy}\n        style={styles}\n        className={cn('md-icon', themeColors({\n          disabled,\n          error,\n          inherit,\n          primary,\n          secondary,\n        }, className))}\n      >\n        {title}\n        {desc}\n        {children}\n      </svg>\n    );\n  }\n}\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject')\n  , defined = require('./_defined');\nmodule.exports = function(it){\n  return IObject(defined(it));\n};","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};","var toInteger = require('./_to-integer')\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};","var global = require('./_global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};","var shared = require('./_shared')('keys')\n  , uid    = require('./_uid');\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};","var has          = require('./_has')\n  , toIObject    = require('./_to-iobject')\n  , arrayIndexOf = require('./_array-includes')(false)\n  , IE_PROTO     = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject')\n  , toLength  = require('./_to-length')\n  , toIndex   = require('./_to-index');\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = require('./_object-keys-internal')\n  , enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};","exports.f = Object.getOwnPropertySymbols;","exports.f = {}.propertyIsEnumerable;","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./_object-assign')});","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _assign = require(\"../core-js/object/assign\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = require('./_has')\n  , toObject    = require('./_to-object')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export')\n  , core    = require('./_core')\n  , fails   = require('./_fails');\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject        = require('./_to-object')\n  , $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function(){\n  return function getPrototypeOf(it){\n    return $getPrototypeOf(toObject(it));\n  };\n});","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;","module.exports = { \"default\": require(\"core-js/library/fn/object/get-prototype-of\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();","var toInteger = require('./_to-integer')\n  , defined   = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};","module.exports = require('./_hide');","var dP       = require('./_object-dp')\n  , anObject = require('./_an-object')\n  , getKeys  = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};","module.exports = require('./_global').document && document.documentElement;","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = require('./_an-object')\n  , dPs         = require('./_object-dps')\n  , enumBugKeys = require('./_enum-bug-keys')\n  , IE_PROTO    = require('./_shared-key')('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var store      = require('./_shared')('wks')\n  , uid        = require('./_uid')\n  , Symbol     = require('./_global').Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;","var def = require('./_object-dp').f\n  , has = require('./_has')\n  , TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};","'use strict';\nvar create         = require('./_object-create')\n  , descriptor     = require('./_property-desc')\n  , setToStringTag = require('./_set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};","'use strict';\nvar LIBRARY        = require('./_library')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , hide           = require('./_hide')\n  , has            = require('./_has')\n  , Iterators      = require('./_iterators')\n  , $iterCreate    = require('./_iter-create')\n  , setToStringTag = require('./_set-to-string-tag')\n  , getPrototypeOf = require('./_object-gpo')\n  , ITERATOR       = require('./_wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};","'use strict';\nvar $at  = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});","module.exports = function(done, value){\n  return {value: value, done: !!done};\n};","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');","require('./es6.array.iterator');\nvar global        = require('./_global')\n  , hide          = require('./_hide')\n  , Iterators     = require('./_iterators')\n  , TO_STRING_TAG = require('./_wks')('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}","exports.f = require('./_wks');","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');","module.exports = { \"default\": require(\"core-js/library/fn/symbol/iterator\"), __esModule: true };","var META     = require('./_uid')('meta')\n  , isObject = require('./_is-object')\n  , has      = require('./_has')\n  , setDesc  = require('./_object-dp').f\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !require('./_fails')(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};","var global         = require('./_global')\n  , core           = require('./_core')\n  , LIBRARY        = require('./_library')\n  , wksExt         = require('./_wks-ext')\n  , defineProperty = require('./_object-dp').f;\nmodule.exports = function(name){\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});\n};","var getKeys   = require('./_object-keys')\n  , toIObject = require('./_to-iobject');\nmodule.exports = function(object, el){\n  var O      = toIObject(object)\n    , keys   = getKeys(O)\n    , length = keys.length\n    , index  = 0\n    , key;\n  while(length > index)if(O[key = keys[index++]] === el)return key;\n};","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys')\n  , gOPS    = require('./_object-gops')\n  , pIE     = require('./_object-pie');\nmodule.exports = function(it){\n  var result     = getKeys(it)\n    , getSymbols = gOPS.f;\n  if(getSymbols){\n    var symbols = getSymbols(it)\n      , isEnum  = pIE.f\n      , i       = 0\n      , key;\n    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);\n  } return result;\n};","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys      = require('./_object-keys-internal')\n  , hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){\n  return $keys(O, hiddenKeys);\n};","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject')\n  , gOPN      = require('./_object-gopn').f\n  , toString  = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function(it){\n  try {\n    return gOPN(it);\n  } catch(e){\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it){\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var pIE            = require('./_object-pie')\n  , createDesc     = require('./_property-desc')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , has            = require('./_has')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , gOPD           = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P){\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if(IE8_DOM_DEFINE)try {\n    return gOPD(O, P);\n  } catch(e){ /* empty */ }\n  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\n};","'use strict';\n// ECMAScript 6 symbols shim\nvar global         = require('./_global')\n  , has            = require('./_has')\n  , DESCRIPTORS    = require('./_descriptors')\n  , $export        = require('./_export')\n  , redefine       = require('./_redefine')\n  , META           = require('./_meta').KEY\n  , $fails         = require('./_fails')\n  , shared         = require('./_shared')\n  , setToStringTag = require('./_set-to-string-tag')\n  , uid            = require('./_uid')\n  , wks            = require('./_wks')\n  , wksExt         = require('./_wks-ext')\n  , wksDefine      = require('./_wks-define')\n  , keyOf          = require('./_keyof')\n  , enumKeys       = require('./_enum-keys')\n  , isArray        = require('./_is-array')\n  , anObject       = require('./_an-object')\n  , toIObject      = require('./_to-iobject')\n  , toPrimitive    = require('./_to-primitive')\n  , createDesc     = require('./_property-desc')\n  , _create        = require('./_object-create')\n  , gOPNExt        = require('./_object-gopn-ext')\n  , $GOPD          = require('./_object-gopd')\n  , $DP            = require('./_object-dp')\n  , $keys          = require('./_object-keys')\n  , gOPD           = $GOPD.f\n  , dP             = $DP.f\n  , gOPN           = gOPNExt.f\n  , $Symbol        = global.Symbol\n  , $JSON          = global.JSON\n  , _stringify     = $JSON && $JSON.stringify\n  , PROTOTYPE      = 'prototype'\n  , HIDDEN         = wks('_hidden')\n  , TO_PRIMITIVE   = wks('toPrimitive')\n  , isEnum         = {}.propertyIsEnumerable\n  , SymbolRegistry = shared('symbol-registry')\n  , AllSymbols     = shared('symbols')\n  , OPSymbols      = shared('op-symbols')\n  , ObjectProto    = Object[PROTOTYPE]\n  , USE_NATIVE     = typeof $Symbol == 'function'\n  , QObject        = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n  return _create(dP({}, 'a', {\n    get: function(){ return dP(this, 'a', {value: 7}).a; }\n  })).a != 7;\n}) ? function(it, key, D){\n  var protoDesc = gOPD(ObjectProto, key);\n  if(protoDesc)delete ObjectProto[key];\n  dP(it, key, D);\n  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function(tag){\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){\n  return typeof it == 'symbol';\n} : function(it){\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D){\n  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if(has(AllSymbols, key)){\n    if(!D.enumerable){\n      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n      D = _create(D, {enumerable: createDesc(0, false)});\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P){\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P))\n    , i    = 0\n    , l = keys.length\n    , key;\n  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P){\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n  it  = toIObject(it);\n  key = toPrimitive(key, true);\n  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;\n  var D = gOPD(it, key);\n  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n  var names  = gOPN(toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n  var IS_OP  = it === ObjectProto\n    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif(!USE_NATIVE){\n  $Symbol = function Symbol(){\n    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function(value){\n      if(this === ObjectProto)$set.call(OPSymbols, value);\n      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString(){\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f   = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f  = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if(DESCRIPTORS && !require('./_library')){\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function(name){\n    return wrap(wks(name));\n  }\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});\n\nfor(var symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);\n\nfor(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function(key){\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(key){\n    if(isSymbol(key))return keyOf(SymbolRegistry, key);\n    throw TypeError(key + ' is not a symbol!');\n  },\n  useSetter: function(){ setter = true; },\n  useSimple: function(){ setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it){\n    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n    var args = [it]\n      , i    = 1\n      , replacer, $replacer;\n    while(arguments.length > i)args.push(arguments[i++]);\n    replacer = args[1];\n    if(typeof replacer == 'function')$replacer = replacer;\n    if($replacer || !isArray(replacer))replacer = function(key, value){\n      if($replacer)value = $replacer.call(this, key, value);\n      if(!isSymbol(value))return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);","require('./_wks-define')('asyncIterator');","require('./_wks-define')('observable');","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;","module.exports = { \"default\": require(\"core-js/library/fn/symbol\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _iterator = require(\"../core-js/symbol/iterator\");\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = require(\"../core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};","\"use strict\";\n\nexports.__esModule = true;\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object')\n  , anObject = require('./_an-object');\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', {setPrototypeOf: require('./_set-proto').set});","require('../../modules/es6.object.set-prototype-of');\nmodule.exports = require('../../modules/_core').Object.setPrototypeOf;","module.exports = { \"default\": require(\"core-js/library/fn/object/set-prototype-of\"), __esModule: true };","var $export = require('./_export')\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', {create: require('./_object-create')});","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D){\n  return $Object.create(P, D);\n};","module.exports = { \"default\": require(\"core-js/library/fn/object/create\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = require(\"../core-js/object/set-prototype-of\");\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = require(\"../core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = require(\"../helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = require('../util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar on = function on() {};\nif (_inDOM2.default) {\n  on = function () {\n\n    if (document.addEventListener) return function (node, eventName, handler, capture) {\n      return node.addEventListener(eventName, handler, capture || false);\n    };else if (document.attachEvent) return function (node, eventName, handler) {\n      return node.attachEvent('on' + eventName, function (e) {\n        e = e || window.event;\n        e.target = e.target || e.srcElement;\n        e.currentTarget = node;\n        handler.call(node, e);\n      });\n    };\n  }();\n}\n\nexports.default = on;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = require('../util/inDOM');\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar off = function off() {};\nif (_inDOM2.default) {\n  off = function () {\n    if (document.addEventListener) return function (node, eventName, handler, capture) {\n      return node.removeEventListener(eventName, handler, capture || false);\n    };else if (document.attachEvent) return function (node, eventName, handler) {\n      return node.detachEvent('on' + eventName, handler);\n    };\n  }();\n}\n\nexports.default = off;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable flowtype/require-valid-file-annotation */\n\nvar checkIndexBounds = function checkIndexBounds(props) {\n  var index = props.index,\n      children = props.children;\n\n\n  var childrenCount = _react.Children.count(children);\n\n  process.env.NODE_ENV !== \"production\" ? (0, _warning2.default)(index >= 0 && index <= childrenCount, 'react-swipeable-view: the new index: ' + index + ' is out of bounds: [0-' + childrenCount + '].') : void 0;\n};\n\nexports.default = checkIndexBounds;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//  weak\n\nexports.default = {\n  RESISTANCE_COEF: 0.6,\n\n  // This value is closed to what browsers are using internally to\n  // trigger a native scroll.\n  UNCERTAINTY_THRESHOLD: 3 // px\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = computeIndex;\n\nvar _react = require('react');\n\nvar _constant = require('./constant');\n\nvar _constant2 = _interopRequireDefault(_constant);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//  weak\n\nfunction computeIndex(params) {\n  var children = params.children,\n      startIndex = params.startIndex,\n      startX = params.startX,\n      pageX = params.pageX,\n      viewLength = params.viewLength,\n      resistance = params.resistance;\n\n\n  var indexMax = _react.Children.count(children) - 1;\n  var index = startIndex + (startX - pageX) / viewLength;\n  var newStartX = void 0;\n\n  if (!resistance) {\n    // Reset the starting point\n    if (index < 0) {\n      index = 0;\n      newStartX = (index - startIndex) * viewLength + pageX;\n    } else if (index > indexMax) {\n      index = indexMax;\n      newStartX = (index - startIndex) * viewLength + pageX;\n    }\n  } else if (index < 0) {\n    index = Math.exp(index * _constant2.default.RESISTANCE_COEF) - 1;\n  } else if (index > indexMax) {\n    index = indexMax + 1 - Math.exp((indexMax - index) * _constant2.default.RESISTANCE_COEF);\n  }\n\n  return {\n    index: index,\n    startX: newStartX\n  };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n//  weak\n\nvar getDisplaySameSlide = function getDisplaySameSlide(props, nextProps) {\n  var displaySameSlide = false;\n\n  if (props.children.length && nextProps.children.length) {\n    var oldChildren = props.children[props.index];\n    var oldKey = oldChildren ? oldChildren.key : 'empty';\n\n    if (oldKey !== null) {\n      var newChildren = nextProps.children[nextProps.index];\n      var newKey = newChildren ? newChildren.key : 'empty';\n\n      if (oldKey === newKey) {\n        displaySameSlide = true;\n      }\n    }\n  }\n\n  return displaySameSlide;\n};\n\nexports.default = getDisplaySameSlide;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable flowtype/require-valid-file-annotation */\n\nfunction mod(n, m) {\n  var q = n % m;\n  return q < 0 ? q + m : q;\n}\n\nexports.default = mod;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _checkIndexBounds = require('./checkIndexBounds');\n\nObject.defineProperty(exports, 'checkIndexBounds', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_checkIndexBounds).default;\n  }\n});\n\nvar _computeIndex = require('./computeIndex');\n\nObject.defineProperty(exports, 'computeIndex', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_computeIndex).default;\n  }\n});\n\nvar _constant = require('./constant');\n\nObject.defineProperty(exports, 'constant', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_constant).default;\n  }\n});\n\nvar _getDisplaySameSlide = require('./getDisplaySameSlide');\n\nObject.defineProperty(exports, 'getDisplaySameSlide', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_getDisplaySameSlide).default;\n  }\n});\n\nvar _mod = require('./mod');\n\nObject.defineProperty(exports, 'mod', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_mod).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nexports.getDomTreeShapes = getDomTreeShapes;\nexports.findNativeHandler = findNativeHandler;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _properties = require('dom-helpers/transition/properties');\n\nvar _properties2 = _interopRequireDefault(_properties);\n\nvar _on = require('dom-helpers/events/on');\n\nvar _on2 = _interopRequireDefault(_on);\n\nvar _off = require('dom-helpers/events/off');\n\nvar _off2 = _interopRequireDefault(_off);\n\nvar _reactSwipeableViewsCore = require('react-swipeable-views-core');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addEventListenerEnhanced(node, event, handler, options) {\n  (0, _on2.default)(node, event, handler, options);\n  return {\n    remove: function remove() {\n      (0, _off2.default)(node, event, handler, options);\n    }\n  };\n} //  weak\n\nvar styleInjected = false;\n\n// Support old version of iOS and IE 10.\n// To be deleted in 2019.\nfunction injectStyle() {\n  // Inject once for all the instances\n  if (!styleInjected) {\n    var style = document.createElement('style');\n    style.innerHTML = '\\n      .react-swipeable-view-container {\\n        display: -webkit-box;\\n        display: -ms-flexbox;\\n      }\\n      .react-swipeable-view-container > div {\\n        -ms-flex-negative: 0;\\n      }\\n    ';\n\n    if (document.body) {\n      document.body.appendChild(style);\n    }\n    styleInjected = true;\n  }\n}\n\nvar styles = {\n  container: {\n    direction: 'ltr',\n    display: 'flex'\n    // Cause an issue on Firefox. We can't enable it for now.\n    // willChange: 'transform',\n  },\n  slide: {\n    width: '100%',\n    WebkitFlexShrink: 0,\n    flexShrink: 0,\n    overflow: 'auto'\n  }\n};\n\nvar axisProperties = {\n  root: {\n    x: {\n      overflowX: 'hidden'\n    },\n    'x-reverse': {\n      overflowX: 'hidden'\n    },\n    y: {\n      overflowY: 'hidden'\n    },\n    'y-reverse': {\n      overflowY: 'hidden'\n    }\n  },\n  flexDirection: {\n    x: 'row',\n    'x-reverse': 'row-reverse',\n    y: 'column',\n    'y-reverse': 'column-reverse'\n  },\n  transform: {\n    x: function x(translate) {\n      return 'translate(' + -translate + '%, 0)';\n    },\n    'x-reverse': function xReverse(translate) {\n      return 'translate(' + translate + '%, 0)';\n    },\n    y: function y(translate) {\n      return 'translate(0, ' + -translate + '%)';\n    },\n    'y-reverse': function yReverse(translate) {\n      return 'translate(0, ' + translate + '%)';\n    }\n  },\n  length: {\n    x: 'width',\n    'x-reverse': 'width',\n    y: 'height',\n    'y-reverse': 'height'\n  },\n  rotationMatrix: {\n    x: {\n      x: [1, 0],\n      y: [0, 1]\n    },\n    'x-reverse': {\n      x: [-1, 0],\n      y: [0, 1]\n    },\n    y: {\n      x: [0, 1],\n      y: [1, 0]\n    },\n    'y-reverse': {\n      x: [0, -1],\n      y: [1, 0]\n    }\n  },\n  scrollPosition: {\n    x: 'scrollLeft',\n    'x-reverse': 'scrollLeft',\n    y: 'scrollTop',\n    'y-reverse': 'scrollTop'\n  },\n  scrollLength: {\n    x: 'scrollWidth',\n    'x-reverse': 'scrollWidth',\n    y: 'scrollHeight',\n    'y-reverse': 'scrollHeight'\n  },\n  clientLength: {\n    x: 'clientWidth',\n    'x-reverse': 'clientWidth',\n    y: 'clientHeight',\n    'y-reverse': 'clientHeight'\n  }\n};\n\nfunction createTransition(property, options) {\n  var duration = options.duration,\n      easeFunction = options.easeFunction,\n      delay = options.delay;\n\n\n  return property + ' ' + duration + ' ' + easeFunction + ' ' + delay;\n}\n\n// We are using a 2x2 rotation matrix.\nfunction applyRotationMatrix(touch, axis) {\n  var rotationMatrix = axisProperties.rotationMatrix[axis];\n\n  return {\n    pageX: rotationMatrix.x[0] * touch.pageX + rotationMatrix.x[1] * touch.pageY,\n    pageY: rotationMatrix.y[0] * touch.pageX + rotationMatrix.y[1] * touch.pageY\n  };\n}\n\nfunction adaptMouse(event) {\n  event.touches = [{ pageX: event.pageX, pageY: event.pageY }];\n  return event;\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    // We reach a Swipeable View, no need to look higher in the dom tree.\n    if (element.hasAttribute('data-swipeable')) {\n      break;\n    }\n\n    var style = window.getComputedStyle(element);\n\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push({\n        element: element,\n        scrollWidth: element.scrollWidth,\n        scrollHeight: element.scrollHeight,\n        clientWidth: element.clientWidth,\n        clientHeight: element.clientHeight,\n        scrollLeft: element.scrollLeft,\n        scrollTop: element.scrollTop\n      });\n    }\n\n    element = element.parentNode;\n  }\n\n  return domTreeShapes;\n}\n\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nvar nodeHowClaimedTheScroll = null;\n\nfunction findNativeHandler(params) {\n  var domTreeShapes = params.domTreeShapes,\n      pageX = params.pageX,\n      startX = params.startX,\n      axis = params.axis;\n\n\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = pageX >= startX;\n    if (axis === 'x' || axis === 'y') {\n      goingForward = !goingForward;\n    }\n\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      nodeHowClaimedTheScroll = shape.element;\n      return true;\n    }\n\n    return false;\n  });\n}\n\nvar SwipeableViews = function (_Component) {\n  (0, _inherits3.default)(SwipeableViews, _Component);\n\n  function SwipeableViews() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, SwipeableViews);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = SwipeableViews.__proto__ || (0, _getPrototypeOf2.default)(SwipeableViews)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.rootNode = null, _this.containerNode = null, _this.ignoreNextScrollEvents = false, _this.viewLength = 0, _this.startX = 0, _this.lastX = 0, _this.vx = 0, _this.startY = 0, _this.isSwiping = undefined, _this.started = false, _this.startIndex = 0, _this.transitionListener = null, _this.touchMoveListener = null, _this.activeSlide = null, _this.handleSwipeStart = function (event) {\n      var axis = _this.props.axis;\n\n      // Latency and rapid rerenders on some devices can leave\n      // a period where rootNode briefly equals null.\n\n      if (_this.rootNode === null) {\n        return;\n      }\n\n      var touch = applyRotationMatrix(event.touches[0], axis);\n\n      _this.viewLength = _this.rootNode.getBoundingClientRect()[axisProperties.length[axis]];\n      _this.startX = touch.pageX;\n      _this.lastX = touch.pageX;\n      _this.vx = 0;\n      _this.startY = touch.pageY;\n      _this.isSwiping = undefined;\n      _this.started = true;\n\n      var computedStyle = window.getComputedStyle(_this.containerNode);\n      var transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n\n      if (transform) {\n        var transformValues = transform.split('(')[1].split(')')[0].split(',');\n        var rootStyle = window.getComputedStyle(_this.rootNode);\n\n        var tranformNormalized = applyRotationMatrix({\n          pageX: parseInt(transformValues[4], 10),\n          pageY: parseInt(transformValues[5], 10)\n        }, axis);\n\n        _this.startIndex = -tranformNormalized.pageX / (_this.viewLength - parseInt(rootStyle.paddingLeft, 10) - parseInt(rootStyle.paddingRight, 10));\n      }\n    }, _this.handleSwipeMove = function (event) {\n      // The touch start event can be cancel.\n      // Makes sure we set a starting point.\n      if (!_this.started) {\n        _this.handleTouchStart(event);\n        return;\n      }\n\n      // Latency and rapid rerenders on some devices\n      // can leave a period where rootNode briefly equals null.\n      if (_this.rootNode === null) {\n        return;\n      }\n\n      // We are not supposed to hanlde this touch move.\n      if (nodeHowClaimedTheScroll !== null && nodeHowClaimedTheScroll !== _this.rootNode) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          axis = _this$props.axis,\n          children = _this$props.children,\n          ignoreNativeScroll = _this$props.ignoreNativeScroll,\n          onSwitching = _this$props.onSwitching,\n          resistance = _this$props.resistance;\n\n\n      var touch = applyRotationMatrix(event.touches[0], axis);\n\n      // We don't know yet.\n      if (_this.isSwiping === undefined) {\n        var dx = Math.abs(_this.startX - touch.pageX);\n        var dy = Math.abs(_this.startY - touch.pageY);\n\n        var isSwiping = dx > dy && dx > _reactSwipeableViewsCore.constant.UNCERTAINTY_THRESHOLD;\n\n        // We are likely to be swiping, let's prevent the scroll event.\n        if (dx > dy) {\n          event.preventDefault();\n        }\n\n        if (isSwiping === true || dy > _reactSwipeableViewsCore.constant.UNCERTAINTY_THRESHOLD) {\n          _this.isSwiping = isSwiping;\n          _this.startX = touch.pageX; // Shift the starting point.\n\n          return; // Let's wait the next touch event to move something.\n        }\n      }\n\n      if (_this.isSwiping !== true) {\n        return;\n      }\n\n      // We are swiping, let's prevent the scroll event.\n      event.preventDefault();\n\n      // Low Pass filter.\n      _this.vx = _this.vx * 0.5 + (touch.pageX - _this.lastX) * 0.5;\n      _this.lastX = touch.pageX;\n\n      var _computeIndex = (0, _reactSwipeableViewsCore.computeIndex)({\n        children: children,\n        resistance: resistance,\n        pageX: touch.pageX,\n        startIndex: _this.startIndex,\n        startX: _this.startX,\n        viewLength: _this.viewLength\n      }),\n          index = _computeIndex.index,\n          startX = _computeIndex.startX;\n\n      // Add support for native scroll elements.\n\n\n      if (nodeHowClaimedTheScroll === null && !ignoreNativeScroll) {\n        var domTreeShapes = getDomTreeShapes(event.target, _this.rootNode);\n        var hasFoundNativeHandler = findNativeHandler({\n          domTreeShapes: domTreeShapes,\n          startX: _this.startX,\n          pageX: touch.pageX,\n          axis: axis\n        });\n\n        // We abort the touch move handler.\n        if (hasFoundNativeHandler) {\n          return;\n        }\n      }\n\n      // We are moving toward the edges.\n      if (startX) {\n        _this.startX = startX;\n      } else if (nodeHowClaimedTheScroll === null) {\n        nodeHowClaimedTheScroll = _this.rootNode;\n      }\n\n      _this.setState({\n        displaySameSlide: false,\n        isDragging: true,\n        indexCurrent: index\n      }, function () {\n        if (onSwitching) {\n          onSwitching(index, 'move');\n        }\n      });\n    }, _this.handleSwipeEnd = function () {\n      nodeHowClaimedTheScroll = null;\n\n      // The touch start event can be cancel.\n      // Makes sure that a starting point is set.\n      if (!_this.started) {\n        return;\n      }\n\n      _this.started = false;\n\n      if (_this.isSwiping !== true) {\n        return;\n      }\n\n      var indexLatest = _this.state.indexLatest;\n      var indexCurrent = _this.state.indexCurrent;\n      var delta = indexLatest - indexCurrent;\n\n      var indexNew = void 0;\n\n      // Quick movement\n      if (Math.abs(_this.vx) > _this.props.threshold) {\n        if (_this.vx > 0) {\n          indexNew = Math.floor(indexCurrent);\n        } else {\n          indexNew = Math.ceil(indexCurrent);\n        }\n      } else if (Math.abs(delta) > _this.props.hysteresis) {\n        // Some hysteresis with indexLatest.\n        indexNew = delta > 0 ? Math.floor(indexCurrent) : Math.ceil(indexCurrent);\n      } else {\n        indexNew = indexLatest;\n      }\n\n      var indexMax = _react.Children.count(_this.props.children) - 1;\n\n      if (indexNew < 0) {\n        indexNew = 0;\n      } else if (indexNew > indexMax) {\n        indexNew = indexMax;\n      }\n\n      _this.setState({\n        indexCurrent: indexNew,\n        indexLatest: indexNew,\n        isDragging: false\n      }, function () {\n        if (_this.props.onSwitching) {\n          _this.props.onSwitching(indexNew, 'end');\n        }\n\n        if (_this.props.onChangeIndex && indexNew !== indexLatest) {\n          _this.props.onChangeIndex(indexNew, indexLatest);\n        }\n\n        // Manually calling handleTransitionEnd in that case as isn't otherwise.\n        if (indexCurrent === indexLatest) {\n          _this.handleTransitionEnd();\n        }\n      });\n    }, _this.handleTouchStart = function (event) {\n      if (_this.props.onTouchStart) {\n        _this.props.onTouchStart(event);\n      }\n      _this.handleSwipeStart(event);\n    }, _this.handleTouchEnd = function (event) {\n      if (_this.props.onTouchEnd) {\n        _this.props.onTouchEnd(event);\n      }\n      _this.handleSwipeEnd(event);\n    }, _this.handleMouseDown = function (event) {\n      if (_this.props.onMouseDown) {\n        _this.props.onMouseDown(event);\n      }\n      event.persist();\n      _this.handleSwipeStart(adaptMouse(event));\n    }, _this.handleMouseUp = function (event) {\n      if (_this.props.onMouseUp) {\n        _this.props.onMouseUp(event);\n      }\n      _this.handleSwipeEnd(adaptMouse(event));\n    }, _this.handleMouseLeave = function (event) {\n      if (_this.props.onMouseLeave) {\n        _this.props.onMouseLeave(event);\n      }\n\n      // Filter out events\n      if (_this.started) {\n        _this.handleSwipeEnd(adaptMouse(event));\n      }\n    }, _this.handleMouseMove = function (event) {\n      if (_this.props.onMouseMove) {\n        _this.props.onMouseMove(event);\n      }\n\n      // Filter out events\n      if (_this.started) {\n        _this.handleSwipeMove(adaptMouse(event));\n      }\n    }, _this.handleScroll = function (event) {\n      if (_this.props.onScroll) {\n        _this.props.onScroll(event);\n      }\n\n      // Ignore events bubbling up.\n      if (event.target !== _this.rootNode) {\n        return;\n      }\n\n      if (_this.ignoreNextScrollEvents) {\n        _this.ignoreNextScrollEvents = false;\n        return;\n      }\n\n      var indexLatest = _this.state.indexLatest;\n      var indexNew = Math.ceil(event.target.scrollLeft / event.target.clientWidth) + indexLatest;\n\n      _this.ignoreNextScrollEvents = true;\n      // Reset the scroll position.\n      event.target.scrollLeft = 0;\n\n      if (_this.props.onChangeIndex && indexNew !== indexLatest) {\n        _this.props.onChangeIndex(indexNew, indexLatest);\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n  // Added as an ads.\n\n\n  (0, _createClass3.default)(SwipeableViews, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      var _this2 = this;\n\n      return {\n        swipeableViews: {\n          slideUpdateHeight: function slideUpdateHeight() {\n            _this2.updateHeight();\n          }\n        }\n      };\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      if (process.env.NODE_ENV !== 'production') {\n        (0, _reactSwipeableViewsCore.checkIndexBounds)(this.props);\n      }\n\n      this.setState({\n        indexCurrent: this.props.index,\n        indexLatest: this.props.index,\n        isDragging: false,\n        isFirstRender: !this.props.disableLazyLoading,\n        heightLatest: 0\n      });\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      // Subscribe to transition end events.\n      this.transitionListener = addEventListenerEnhanced(this.containerNode, _properties2.default.end, function (event) {\n        if (event.target !== _this3.containerNode) {\n          return;\n        }\n\n        _this3.handleTransitionEnd();\n      });\n\n      // Block the thread to handle that event.\n      this.touchMoveListener = addEventListenerEnhanced(this.rootNode, 'touchmove', function (event) {\n        // Handling touch events is disabled.\n        if (_this3.props.disabled) {\n          return;\n        }\n        _this3.handleSwipeMove(event);\n      }, {\n        passive: false\n      });\n\n      /* eslint-disable react/no-did-mount-set-state */\n      this.setState({\n        isFirstRender: false\n      });\n      /* eslint-enable react/no-did-mount-set-state */\n\n      injectStyle();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var index = nextProps.index;\n\n\n      if (typeof index === 'number' && index !== this.props.index) {\n        if (process.env.NODE_ENV !== 'production') {\n          (0, _reactSwipeableViewsCore.checkIndexBounds)(nextProps);\n        }\n\n        this.setState({\n          // If true, we are going to change the children. We shoudn't animate it.\n          displaySameSlide: (0, _reactSwipeableViewsCore.getDisplaySameSlide)(this.props, nextProps),\n          indexCurrent: index,\n          indexLatest: index\n        });\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (!this.props.animateTransitions && prevState.indexCurrent !== this.state.indexCurrent) {\n        this.handleTransitionEnd();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.transitionListener.remove();\n      this.touchMoveListener.remove();\n    }\n  }, {\n    key: 'handleTransitionEnd',\n    value: function handleTransitionEnd() {\n      if (!this.props.onTransitionEnd) {\n        return;\n      }\n\n      // Filters out when changing the children\n      if (this.state.displaySameSlide) {\n        return;\n      }\n\n      // The rest callback is triggered when swiping. It's just noise.\n      // We filter it out.\n      if (!this.state.isDragging) {\n        this.props.onTransitionEnd();\n      }\n    }\n  }, {\n    key: 'updateHeight',\n    value: function updateHeight() {\n      if (this.activeSlide !== null) {\n        var child = this.activeSlide.children[0];\n        if (child !== undefined && child.offsetHeight !== undefined && this.state.heightLatest !== child.offsetHeight) {\n          this.setState({\n            heightLatest: child.offsetHeight\n          });\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props = this.props,\n          animateHeight = _props.animateHeight,\n          animateTransitions = _props.animateTransitions,\n          axis = _props.axis,\n          children = _props.children,\n          containerStyleProp = _props.containerStyle,\n          disabled = _props.disabled,\n          disableLazyLoading = _props.disableLazyLoading,\n          enableMouseEvents = _props.enableMouseEvents,\n          hysteresis = _props.hysteresis,\n          ignoreNativeScroll = _props.ignoreNativeScroll,\n          index = _props.index,\n          onChangeIndex = _props.onChangeIndex,\n          onSwitching = _props.onSwitching,\n          onTransitionEnd = _props.onTransitionEnd,\n          resistance = _props.resistance,\n          slideStyleProp = _props.slideStyle,\n          slideClassName = _props.slideClassName,\n          springConfig = _props.springConfig,\n          style = _props.style,\n          threshold = _props.threshold,\n          other = (0, _objectWithoutProperties3.default)(_props, ['animateHeight', 'animateTransitions', 'axis', 'children', 'containerStyle', 'disabled', 'disableLazyLoading', 'enableMouseEvents', 'hysteresis', 'ignoreNativeScroll', 'index', 'onChangeIndex', 'onSwitching', 'onTransitionEnd', 'resistance', 'slideStyle', 'slideClassName', 'springConfig', 'style', 'threshold']);\n      var _state = this.state,\n          displaySameSlide = _state.displaySameSlide,\n          heightLatest = _state.heightLatest,\n          indexCurrent = _state.indexCurrent,\n          isDragging = _state.isDragging,\n          isFirstRender = _state.isFirstRender;\n\n\n      var touchEvents = !disabled ? {\n        onTouchStart: this.handleTouchStart,\n        onTouchEnd: this.handleTouchEnd\n      } : {};\n\n      var mouseEvents = !disabled && enableMouseEvents ? {\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseMove: this.handleMouseMove\n      } : {};\n\n      // There is no point to animate if we are already providing a height.\n      process.env.NODE_ENV !== \"production\" ? (0, _warning2.default)(!animateHeight || !containerStyleProp || !containerStyleProp.height, 'react-swipeable-view: You are setting animateHeight to true but you are\\nalso providing a custom height.\\nThe custom height has a higher priority than the animateHeight property.\\nSo animateHeight is most likely having no effect at all.') : void 0;\n\n      var slideStyle = (0, _assign2.default)({}, styles.slide, slideStyleProp);\n\n      var transition = void 0;\n      var WebkitTransition = void 0;\n\n      if (isDragging || !animateTransitions || displaySameSlide) {\n        transition = 'all 0s ease 0s';\n        WebkitTransition = 'all 0s ease 0s';\n      } else {\n        transition = createTransition('transform', springConfig);\n        WebkitTransition = createTransition('-webkit-transform', springConfig);\n\n        if (heightLatest !== 0) {\n          var additionalTranstion = ', ' + createTransition('height', springConfig);\n          transition += additionalTranstion;\n          WebkitTransition += additionalTranstion;\n        }\n      }\n\n      var transform = axisProperties.transform[axis](indexCurrent * 100);\n      var containerStyle = {\n        WebkitTransform: transform,\n        transform: transform,\n        height: null,\n        WebkitFlexDirection: axisProperties.flexDirection[axis],\n        flexDirection: axisProperties.flexDirection[axis],\n        WebkitTransition: WebkitTransition,\n        transition: transition\n      };\n\n      if (animateHeight) {\n        containerStyle.height = heightLatest;\n      }\n\n      return _react2.default.createElement(\n        'div',\n        (0, _extends3.default)({\n          ref: function ref(node) {\n            _this4.rootNode = node;\n          },\n          style: (0, _assign2.default)({}, axisProperties.root[axis], style)\n        }, other, touchEvents, mouseEvents, {\n          onScroll: this.handleScroll\n        }),\n        _react2.default.createElement(\n          'div',\n          {\n            ref: function ref(node) {\n              _this4.containerNode = node;\n            },\n            style: (0, _assign2.default)({}, containerStyle, styles.container, containerStyleProp),\n            className: 'react-swipeable-view-container'\n          },\n          _react.Children.map(children, function (child, indexChild) {\n            if (isFirstRender && indexChild > 0) {\n              return null;\n            }\n\n            process.env.NODE_ENV !== \"production\" ? (0, _warning2.default)((0, _react.isValidElement)(child), 'react-swipeable-view: one of the children provided is invalid: ' + child + '.\\nWe are expecting a valid React Element') : void 0;\n\n            var ref = void 0;\n            var hidden = true;\n\n            if (indexChild === _this4.state.indexLatest) {\n              hidden = false;\n\n              if (animateHeight) {\n                ref = function ref(node) {\n                  _this4.activeSlide = node;\n                  _this4.updateHeight();\n                };\n                slideStyle.overflowY = 'hidden';\n              }\n            }\n\n            return _react2.default.createElement(\n              'div',\n              {\n                ref: ref,\n                style: slideStyle,\n                className: slideClassName,\n                'aria-hidden': hidden,\n                'data-swipeable': 'true'\n              },\n              child\n            );\n          })\n        )\n      );\n    }\n  }]);\n  return SwipeableViews;\n}(_react.Component);\n\nSwipeableViews.displayName = 'ReactSwipableView';\nSwipeableViews.defaultProps = {\n  animateHeight: false,\n  animateTransitions: true,\n  axis: 'x',\n  disabled: false,\n  disableLazyLoading: false,\n  enableMouseEvents: false,\n  hysteresis: 0.6,\n  ignoreNativeScroll: false,\n  index: 0,\n  threshold: 5,\n  springConfig: {\n    duration: '0.35s',\n    easeFunction: 'cubic-bezier(0.15, 0.3, 0.25, 1)',\n    delay: '0s'\n  },\n  resistance: false\n};\nSwipeableViews.childContextTypes = {\n  swipeableViews: _propTypes2.default.shape({\n    slideUpdateHeight: _propTypes2.default.func\n  })\n};\nSwipeableViews.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * If `true`, the height of the container will be animated to match the current slide height.\n   * Animating another style property has a negative impact regarding performance.\n   */\n  animateHeight: _propTypes2.default.bool,\n  /**\n   * If `false`, changes to the index prop will not cause an animated transition.\n   */\n  animateTransitions: _propTypes2.default.bool,\n  /**\n   * The axis on which the slides will slide.\n   */\n  axis: _propTypes2.default.oneOf(['x', 'x-reverse', 'y', 'y-reverse']),\n  /**\n   * Use this property to provide your slides.\n   */\n  children: _propTypes2.default.node.isRequired,\n  /**\n   * This is the inlined style that will be applied\n   * to each slide container.\n   */\n  containerStyle: _propTypes2.default.object,\n  /**\n   * If `true`, it will disable touch events.\n   * This is useful when you want to prohibit the user from changing slides.\n   */\n  disabled: _propTypes2.default.bool,\n  /**\n   * This is the config used to disable lazyloding,\n   * if `true` will render all the views in first rendering.\n   */\n  disableLazyLoading: _propTypes2.default.bool,\n  /**\n   * If `true`, it will enable mouse events.\n   * This will allow the user to perform the relevant swipe actions with a mouse.\n   */\n  enableMouseEvents: _propTypes2.default.bool,\n  /**\n   * Configure hysteresis between slides. This value determines how far\n   * should user swipe to switch slide.\n   */\n  hysteresis: _propTypes2.default.number,\n  /**\n   * If `true`, it will ignore native scroll container.\n   * It can be used to filter out false positive that blocks the swipe.\n   */\n  ignoreNativeScroll: _propTypes2.default.bool,\n  /**\n   * This is the index of the slide to show.\n   * This is useful when you want to change the default slide shown.\n   * Or when you have tabs linked to each slide.\n   */\n  index: _propTypes2.default.number,\n  /**\n   * This is callback prop. It's call by the\n   * component when the shown slide change after a swipe made by the user.\n   * This is useful when you have tabs linked to each slide.\n   *\n   * @param {integer} index This is the current index of the slide.\n   * @param {integer} indexLatest This is the oldest index of the slide.\n   */\n  onChangeIndex: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseDown: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseMove: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onMouseUp: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onScroll: _propTypes2.default.func,\n  /**\n   * This is callback prop. It's called by the\n   * component when the slide switching.\n   * This is useful when you want to implement something corresponding\n   * to the current slide position.\n   *\n   * @param {integer} index This is the current index of the slide.\n   * @param {string} type Can be either `move` or `end`.\n   */\n  onSwitching: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onTouchEnd: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onTouchMove: _propTypes2.default.func,\n  /**\n   * @ignore\n   */\n  onTouchStart: _propTypes2.default.func,\n  /**\n   * The callback that fires when the animation comes to a rest.\n   * This is useful to defer CPU intensive task.\n   */\n  onTransitionEnd: _propTypes2.default.func,\n  /**\n   * If `true`, it will add bounds effect on the edges.\n   */\n  resistance: _propTypes2.default.bool,\n  /**\n   * This is the className that will be applied\n   * on the slide component.\n   */\n  slideClassName: _propTypes2.default.string,\n  /**\n   * This is the inlined style that will be applied\n   * on the slide component.\n   */\n  slideStyle: _propTypes2.default.object,\n  /**\n   * This is the config used to create CSS transitions.\n   * This is useful to change the dynamic of the transition.\n   */\n  springConfig: _propTypes2.default.shape({\n    duration: _propTypes2.default.string,\n    easeFunction: _propTypes2.default.string,\n    delay: _propTypes2.default.string\n  }),\n  /**\n   * This is the inlined style that will be applied\n   * on the root component.\n   */\n  style: _propTypes2.default.object,\n  /**\n   * This is the threshold used for detecting a quick swipe.\n   * If the computed speed is above this value, the index change.\n   */\n  threshold: _propTypes2.default.number\n} : {};\nexports.default = SwipeableViews;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SwipeableViews = require('./SwipeableViews');\n\nvar _SwipeableViews2 = _interopRequireDefault(_SwipeableViews);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _SwipeableViews2.default; //  weak","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\n/**\n * This component is just a simple accessibility wrapper when using tabs. If you use the\n * `TabsContainer` component, you *should* not manually use this as the `TabsContainer`\n * generates this for you.\n */\nexport default class TabPanel extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the panel. This is used for a11y. This should equal the `controlsId`\n     * of whichever tab's children will be placed in here.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An id for the tab that owns this panel. This should equal the `id` of whichever\n     * tab's children will be placed in here.\n     */\n    controlledById: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The component to render the panel as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * Boolean if the panel is currently active. This is used to generated the `aria-hidden`\n     * attribute.\n     */\n    active: PropTypes.bool,\n\n    /**\n     * Any children to display.\n     */\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    component: 'div',\n  };\n\n  render() {\n    const {\n      component: Component,\n      id,\n      active,\n      className,\n      controlledById,\n      children,\n      ...props\n    } = this.props;\n\n    return (\n      <Component\n        {...props}\n        id={id}\n        className={cn('md-tab-panel', className)}\n        role=\"tabpanel\"\n        aria-hidden={!active}\n        aria-labelledby={controlledById}\n      >\n        {children}\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport between from '../utils/PropTypes/between';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport Paper from '../Papers/Paper';\nimport TabPanel from './TabPanel';\n\n/**\n * The `TabsContainer` component is used when you want to have your `Tabs` connected with\n * the `SwipeableViews`. This component will traverse the children subtree and extract out\n * the `children` from each tab, and render them in a swipeable container. However,\n * since this is using the `React.Children` traversal, You will have to keep the `Tabs`\n * and `Tab` component as a direct descendent. You are unable to make a separate component\n * that encompasses the `Tab` component.\n *\n * ```js\n * // valid\n * <TabsContainer>\n *   <Tabs>\n *     <Tab />\n *   </Tabs>\n * </TabsContainer>\n *\n * // invalid\n * <TabsContainer>\n *   <Tabs>\n *     <MyCustomTab />\n *   </Tabs>\n * </TabsContainer>\n * ```\n *\n * This is because it seems you are unable to access the `MyCustomTab`'s child Tab props correctly.\n * You can however have the tab's children as a separate component if you wish.\n */\nexport default class TabsContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to each `TabPanel` that gets generated. Each tab's children\n     * will get wrapped in a `TabPanel` component.\n     */\n    panelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to each each `TabPanel` that gets generated. Each tab's\n     * children will get wrapped in a `TabPanel` component.\n     */\n    panelClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the header component when the tabs are fixed to the top of the page.\n     * The optional toolbar and tabs get wrapped in a `Paper` component.\n     */\n    headerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the header component when the tabs are fixed to the top of the page.\n     * The optional toolbar and tabs get wrapped in a `Paper` component.\n     */\n    headerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `SwipeableViews`.\n     *\n     * @see https://github.com/oliviertassinari/react-swipeable-views#user-content-swipeableviews-\n     */\n    swipeableViewsStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `SwipeableViews` container.\n     */\n    swipeableViewsClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to each slide component or a function that returns such style.\n     *\n     * Default style and height of slide component will be passed in the function.\n     * The function should return a style that will be merged with default style, or `null`.\n     *\n     * @see https://github.com/oliviertassinari/react-swipeable-views#user-content-swipeableviews-\n     */\n    slideStyle: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n    ]),\n\n    /**\n     * The property that should be used to set height of a slide component.\n     */\n    slideHeightProp: PropTypes.oneOf(['height', 'minHeight', 'maxHeight']),\n\n    /**\n     * This should be a `Tabs` component with children of `Tab`. This is used to figure out which\n     * tab's content is currently visible.\n     */\n    children: PropTypes.element.isRequired,\n\n    /**\n     * The component to render the container as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * The component to render each `TabPanel` as.\n     */\n    panelComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]),\n\n    /**\n     * An optional toolbar to render above the tabs.\n     */\n    toolbar: PropTypes.element,\n\n    /**\n     * An optional active tab index to use. If this is defined, the component will be controlled\n     * and require the `onTabChange` prop to be defined.\n     */\n    activeTabIndex: controlled(PropTypes.number, 'onTabChange', 'defaultTabIndex'),\n\n    /**\n     * An optional function to call when a new tab is selected by swiping or clicking a tab. When\n     * a new tab has been clicked, the callback will include the active tab index, the tab's `id`,\n     * the tab's `controlsId`, the tab's `children`, and the click event.\n     *\n     * If the tab was changed by swiping, it will only contain the new active tab index.\n     *\n     * ```js\n     * onTabChange(newActiveTabIndex, tabId, tabControlsId, tabChildren, event);\n     * ```\n     */\n    onTabChange: PropTypes.func,\n\n    /**\n     * The default tab index to use when the component is uncontrolled.\n     */\n    defaultTabIndex: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the `toolbar` and `Tabs` should be cloned with `colored: true`.\n     */\n    colored: PropTypes.bool,\n\n    /**\n     * Boolean if the `toolbar` should be applied with the theme color. This _really_ only\n     * applies when you create a `fixed` tabs container.\n     */\n    themed: PropTypes.bool,\n\n    /**\n     * Boolean if the tabs and the optional toolbar should be fixed to the top of the page.\n     */\n    fixed: PropTypes.bool,\n\n    /**\n     * A boolean if a `fixed` `TabsContainer` has tabs with a label and an icon.\n     */\n    labelAndIcon: PropTypes.bool,\n\n    /**\n     * An optional component to render the fixed tabs header as.\n     */\n    headerComponent: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]),\n\n    /**\n     * The zDepth for the fixed tabs header.\n     */\n    headerZDepth: between(PropTypes.number, 0, 5),\n\n    /**\n     * Any additional props to apply to the SwipeableViews component. View the\n     * [SwipeableViews API](https://github.com/oliviertassinari/react-swipeable-views#api)\n     * for valid attributes.\n     *\n     * You will not be able to set the `style`, `className`, `slideStyle`, `index`,\n     * or `onChangeIndex` props for the SwipeableViews.\n     *\n     * The styling and classnames can be updated with the other TabsContainer props.\n     */\n    swipeableViewsProps: PropTypes.object,\n  };\n\n  static defaultProps = {\n    component: 'section',\n    defaultTabIndex: 0,\n    headerZDepth: 1,\n    slideHeightProp: 'height',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    if (typeof props.activeTabIndex === 'undefined') {\n      this.state.activeTabIndex = props.defaultTabIndex;\n    }\n  }\n\n  componentDidMount() {\n    this._resizePanel();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevIndex = getField(prevProps, prevState, 'activeTabIndex');\n    const currIndex = getField(this.props, this.state, 'activeTabIndex');\n\n    if (prevIndex !== currIndex) {\n      this._resizePanel();\n    }\n  }\n\n  _handleTabChange = (index, tabId, tabControlsId, tabChildren, event) => {\n    if (this.props.onTabChange) {\n      this.props.onTabChange(index, tabId, tabControlsId, tabChildren, event);\n    }\n\n    if (typeof this.props.activeTabIndex === 'undefined') {\n      this.setState({ activeTabIndex: index });\n    }\n  };\n\n  _handleSwipeChange = (activeTabIndex) => {\n    this._handleTabChange(activeTabIndex);\n  };\n\n  _setContainer = (container) => {\n    this._container = findDOMNode(container);\n  };\n\n  _resizePanel = () => {\n    if (!this._container) {\n      return;\n    }\n\n    const activePanel = this._container.querySelector('.md-tab-panel[aria-hidden=false]');\n    if (activePanel && this.state.panelHeight !== activePanel.scrollHeight) {\n      this.setState({ panelHeight: activePanel.scrollHeight });\n    }\n  };\n\n  render() {\n    const { panelHeight } = this.state;\n    const {\n      component: Component,\n      style,\n      className,\n      panelStyle,\n      panelClassName,\n      panelComponent,\n      headerStyle,\n      headerClassName,\n      slideStyle,\n      slideHeightProp,\n      swipeableViewsStyle,\n      swipeableViewsClassName,\n      headerComponent,\n      headerZDepth,\n      children,\n      colored,\n      fixed,\n      labelAndIcon,\n      swipeableViewsProps,\n      themed,\n      /* eslint-disable no-unused-vars */\n      toolbar: propToolbar,\n      activeTabIndex: propActiveTabeIndex,\n      onTabChange,\n      defaultTabIndex,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    let { toolbar } = this.props;\n\n    const activeTabIndex = getField(this.props, this.state, 'activeTabIndex');\n\n    const tabsEl = Children.only(children);\n    const tabId = tabsEl.props.tabId;\n    const content = Children.map(tabsEl.props.children, (tab, index) => {\n      if (!tab) {\n        return tab;\n      }\n\n      return (\n        <TabPanel\n          id={tab.props.controlsId || `${tabId}-panel-${index}`}\n          active={activeTabIndex === index}\n          style={panelStyle}\n          className={panelClassName}\n          component={panelComponent}\n          controlledById={tab.props.id || `${tabId}-${index}`}\n        >\n          <ResizeObserver watchHeight onResize={this._resizePanel} />\n          {tab.props.children}\n        </TabPanel>\n      );\n    });\n\n    const childrenProps = Children.only(children).props;\n    const tabs = cloneElement(children, {\n      colored: typeof childrenProps.colored !== 'undefined' ? childrenProps.colored : colored,\n      onTabChange: this._handleTabChange,\n      activeTabIndex,\n    });\n\n    let prominentToolbar = false;\n    if (toolbar) {\n      const toolbarProps = Children.only(toolbar).props;\n      toolbar = cloneElement(toolbar, {\n        component: toolbarProps.component || 'div',\n        colored: typeof toolbarProps.colored !== 'undefined' ? childrenProps.colored : colored,\n      });\n\n      prominentToolbar = toolbarProps.prominent || toolbarProps.prominentTitle;\n    }\n\n    let header;\n    if (fixed) {\n      header = (\n        <Paper\n          style={headerStyle}\n          className={cn('md-tabs-fixed-container', {\n            'md-toolbar--themed': themed,\n          }, headerClassName)}\n          zDepth={headerZDepth}\n          component={headerComponent}\n        >\n          {toolbar}\n          {tabs}\n        </Paper>\n      );\n    }\n\n    const baseSlideStyle = { [slideHeightProp]: panelHeight };\n\n    return (\n      <Component\n        style={style}\n        className={cn('md-tabs-container', className)}\n        {...props}\n        ref={this._setContainer}\n      >\n        {header}\n        {header ? null : toolbar}\n        {header ? null : tabs}\n        <SwipeableViews\n          {...swipeableViewsProps}\n          style={swipeableViewsStyle}\n          className={cn('md-tabs-content', {\n            'md-tabs-content--offset': !toolbar && !labelAndIcon && fixed,\n            'md-tabs-content--offset-icon': !toolbar && fixed && labelAndIcon,\n            'md-tabs-content--offset-toolbar': toolbar && fixed && !prominentToolbar && !labelAndIcon,\n            'md-tabs-content--offset-toolbar-prominent': toolbar && fixed && prominentToolbar && !labelAndIcon,\n            'md-tabs-content--offset-toolbar-icon': fixed && toolbar && labelAndIcon && !prominentToolbar,\n            'md-tabs-content--offset-toolbar-prominent-icon': fixed && toolbar && labelAndIcon && prominentToolbar,\n          }, swipeableViewsClassName)}\n          slideStyle={{\n            ...baseSlideStyle,\n            ...(typeof slideStyle === 'function' ? slideStyle(baseSlideStyle, panelHeight) : slideStyle),\n          }}\n          index={activeTabIndex}\n          onChangeIndex={this._handleSwipeChange}\n        >\n          {content}\n        </SwipeableViews>\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Motion, spring } from 'react-motion';\n\nexport default class TabIndicator extends PureComponent {\n  static propTypes = {\n    offset: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    visible: PropTypes.bool,\n  };\n\n  render() {\n    const { visible } = this.props;\n    return (\n      <Motion\n        style={{\n          x: spring(this.props.offset),\n          width: spring(this.props.width),\n          height: spring(visible ? 2 : 0),\n        }}\n      >\n        {({ x, height, width }) => {\n          const transform = `translate3d(${x}px, 0, 0)`;\n          return (\n            <span\n              style={{\n                height,\n                width,\n                WebkitTransform: transform,\n                MozTransform: transform,\n                msTransform: transform,\n                transform,\n              }}\n              className=\"md-tab-indicator\"\n            />\n          );\n        }}\n      </Motion>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport Menu from '../Menus/Menu';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport mapToListParts from '../utils/mapToListParts';\n\n/**\n * The `MenuTab` component is used when there are too many desktop tabs\n * to be displayed without any overflow. If the `Tabs` component is used,\n * this will automatically be included when the `menuOverflow` prop is true.\n */\nexport default class MenuTab extends PureComponent {\n  static propTypes = {\n    /**\n     * An id to give the tab's menu.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * The current active tab index. This is used to determine which list item\n     * is active in the menu, and if the styles for an active tab should be applied\n     * to the menu.\n     */\n    activeTabIndex: PropTypes.number.isRequired,\n\n    /**\n     * An tab index that caused the overflow to happen.\n     */\n    overflowAtIndex: PropTypes.number.isRequired,\n\n    /**\n     * A list of tabs that should be rendered in the menu once opened. This can either\n     * be:\n     *\n     * - a `ListItem`, `Divider`, or `Subheader` component\n     * - a string to use as the `primaryText` for a list item\n     * - an object that defines props to generate a `ListItem`, `Divider`, or `Subheader` component\n     */\n    tabs: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.string,\n      PropTypes.shape({\n        divider: PropTypes.bool,\n        subheader: PropTypes.bool,\n        primaryText: PropTypes.node,\n      }),\n    ])).isRequired,\n\n    /**\n     * An optional style to apply to the menu.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the menu.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the tab in the menu.\n     */\n    tabStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the tab in the menu.\n     */\n    tabClassName: PropTypes.string,\n\n    /**\n     * An optional function to call when the tab is clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * The label to display in the tab. This should normally be some text with\n     * a drop down arrow next to it.\n     */\n    label: PropTypes.node.isRequired,\n  };\n\n  state = { visible: false }\n\n  _toggleVisible = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this.setState({ visible: !this.state.visible });\n  };\n\n  _handleClose = () => {\n    this.setState({ visible: false });\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      tabStyle,\n      tabClassName,\n      tabs,\n      label,\n      activeTabIndex,\n      overflowAtIndex,\n      ...props\n    } = this.props;\n    const active = activeTabIndex >= overflowAtIndex;\n\n    const tab = (\n      <AccessibleFakeInkedButton\n        {...props}\n        onClick={this._toggleVisible}\n        style={tabStyle}\n        className={cn('md-tab md-tab--menu', tabClassName)}\n      >\n        {label}\n      </AccessibleFakeInkedButton>\n    );\n\n    return (\n      <Menu\n        id={id}\n        style={style}\n        className={cn('md-menu--tab', {\n          'md-tab--active': active,\n          'md-tab--inactive': !active,\n        }, className)}\n        toggle={tab}\n        visible={this.state.visible}\n        onClose={this._handleClose}\n      >\n        {tabs.map(mapToListParts)}\n      </Menu>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport Button from '../Buttons/Button';\n\nexport default class TabOverflowButton extends PureComponent {\n  static propTypes = {\n    left: PropTypes.bool,\n    icon: PropTypes.bool,\n  };\n\n  render() {\n    const { left, icon, ...props } = this.props;\n    return (\n      <Button\n        {...props}\n        icon\n        className={cn('md-icon--inherit md-btn--tab-overflow', {\n          'md-btn--tab-overflow-left': left,\n          'md-btn--tab-overflow-right': !left,\n          'md-btn--tab-overflow-icon': icon,\n        })}\n      />\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport TabIndicator from './TabIndicator';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport MenuTab from './MenuTab';\nimport TabOverflowButton from './TabOverflowButton';\n\nconst MOBILE_PADDING = 72;\nconst DESKTOP_PADDING = 80;\nconst MOBILE_TAB_MIN_WIDTH = 72;\nconst DESKTOP_TAB_MIN_WIDTH = 160;\n\n\n/**\n * The `Tabs` component is used to manage the state of which tab is currently active.\n */\nexport default class Tabs extends PureComponent {\n  static propTypes = {\n    /**\n     * A base id to use for each `Tab`. When the child tabs are created, they are cloned\n     * with some additional accessibility props. Each tab will get a prop with this and the\n     * current index of the tab.\n     */\n    tabId: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The className to use when a tab is currently active. The default className does not\n     * actually apply any styles.\n     *\n     * If this prop is set, it will override any `activeClassName` props applied to the child\n     * `Tab`s. Either set a custom `activeClassName` on each `Tab`, or use this prop to apply\n     * the same `activeClassName` to each `Tab`.\n     *\n     * @see {@link Tabs/Tab#activeClassName}\n     */\n    activeTabClassName: PropTypes.string,\n\n    /**\n     * The className to use when the tab is not active and not selected. By default,\n     * this will set inactive tabs' color to `$md-white-base`. This works great\n     * if the tabs are placed on a colored toolbar but fails when the tabs are not colored\n     * or on a white background. In these cases, it is recommended to change this value\n     * to `md-text--secondary` or some other class name.\n     *\n     * If this prop is set, it will override any `inactiveClassName` props applied to the child\n     * `Tab`s. Either set a custom `inactiveClassName` on each `Tab`, or use this prop to apply\n     * the same `inactiveClassName` to each `Tab`.\n     *\n     * @see {@link Tabs/Tab#inactiveClassName}\n     */\n    inactiveTabClassName: PropTypes.string,\n\n    /**\n     * The component to render the tabs in.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * This should either be a single `Tab` component or a list of `Tab` components. Unfortunately,\n     * the child *must* be exactly a `Tab` component because this is unable to extract the correct\n     * `label` and `children` from a custom `Tab` component.\n     */\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.arrayOf(PropTypes.element),\n    ]).isRequired,\n\n    /**\n     * Boolean if the tabs should be centered instead of aligned to the keyline. The tabs will\n     * only be aligned to the keyline when there are more than 3 tabs and the `alignToKeyline`\n     * prop is `false`.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the tabs should align to a toolbar's title keyline. If this is undefined,\n     * the tabs will try to align to the keyline when there are more than 3 tabs.\n     */\n    alignToKeyline: PropTypes.bool,\n\n    /**\n     * Boolean if the tabs should be colored with the primary color. If this is false or undefined,\n     * the tabs will be colored for the light or dark theme.\n     */\n    colored: PropTypes.bool,\n\n    /**\n     * A boolean if the overflow tabs on desktop displays should appear in a menu. If this is false,\n     * the additional tabs will be available by using pagination buttons.\n     */\n    overflowMenu: PropTypes.bool,\n\n    /**\n     * An optional function to call when the active tab is changed. The callback will include\n     * the new active tab index and a click event.\n     *\n     * ```js\n     * onTabChange(newTabIndex, event);\n     * ```\n     */\n    onTabChange: PropTypes.func,\n\n    /**\n     * An optional active tab index to use. If this is defined, it will make the component controlled\n     * and require the `onTabChange` prop to be defined.\n     */\n    activeTabIndex: controlled(PropTypes.number, 'onTabChange', 'defaultTabIndex'),\n\n    /**\n     * The default tab index to use when the component is uncontrolled.\n     */\n    defaultTabIndex: PropTypes.number.isRequired,\n\n    /**\n     * When the `overflowMenu` prop is false, this will be used to render the \"next slice of tabs\"\n     * when there are too many tabs to display at once on desktop screens.\n     */\n    nextIcon: PropTypes.element,\n\n    /**\n     * When the `overflowMenu` prop is false, this will be used to render the \"previous slice of tabs\"\n     * when there are too many tabs to display at once on desktop screens.\n     */\n    previousIcon: PropTypes.element,\n\n    /**\n     * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\n     * This will be to render the icon to the right of the label.\n     */\n    overflowMenuIcon: PropTypes.element,\n\n    /**\n     * When the `overflowMenu` prop is true, this will be used to render the `MenuTab` overflow menu.\n     * This will be the text that displays as a tab.\n     */\n    overflowMenuLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the tabs are currently rendered on a mobile or tablet device. This is used to calculate\n     * overflow/padding on the tabs.\n     */\n    mobile: PropTypes.bool,\n    defaultMedia: deprecated(PropTypes.oneOf(['mobile', 'tablet', 'desktop']), 'Use `mobile` instead'),\n    desktopMinWidth: deprecated(PropTypes.number, 'Use `mobile` instead'),\n    nextIconChildren: deprecated(PropTypes.node, 'Use the `nextIcon` prop instead'),\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\n    overflowMenuIconChildren: deprecated(PropTypes.node, 'Use the `overflowMenuIcon` prop instead'),\n    overflowMenuIconClassName: deprecated(PropTypes.string, 'Use the `overflowMenuIcon` prop instead'),\n  };\n\n  static defaultProps = {\n    component: 'ul',\n    defaultTabIndex: 0,\n    nextIcon: <FontIcon>keyboard_arrow_right</FontIcon>,\n    previousIcon: <FontIcon>keyboard_arrow_left</FontIcon>,\n    overflowMenuLabel: 'More',\n    overflowMenuIcon: <FontIcon>arrow_drop_down</FontIcon>,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const defaultTabIndex = typeof props.activeTabIndex === 'undefined' ? props.defaultTabIndex : props.activeTabIndex;\n    const indicatorWidth = props.mobile ? MOBILE_TAB_MIN_WIDTH : DESKTOP_TAB_MIN_WIDTH;\n    this.state = {\n      indicatorWidth,\n      indicatorOffset: indicatorWidth * defaultTabIndex,\n      indicatorVisible: true,\n      overflowIndex: 0,\n    };\n\n    if (typeof props.activeTabIndex === 'undefined') {\n      this.state.activeTabIndex = defaultTabIndex;\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.activeTabIndex !== nextProps.activeTabIndex) {\n      this.setState({\n        ...this._calcIndicatorPosition(this._container, 0, nextProps.activeTabIndex, this.state.overflowAtIndex),\n      }, this._scrollActiveIntoView);\n    } else if (!this._shouldAlign(nextProps) && this._shouldAlign(this.props)) {\n      this.setState({ paddingLeft: null });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this._shouldAlign(this.props) && this.state.overflowAtIndex !== prevState.overflowAtIndex) {\n      const paddingLeft = this._calcPaddingLeft(this._container, this.state.mobile);\n      // Have to wait for the overflow menus to appear, then wop\n      /* eslint-disable react/no-did-update-set-state */\n      this.setState({ paddingLeft });\n    } else {\n      const labels = Children.map(Children.toArray(this.props.children), ({ props: { label } }) => label);\n      const prevLabels = Children.map(Children.toArray(prevProps.children), ({ props: { label } }) => label);\n      if (labels.length !== prevLabels.length || labels.filter((_, i) => labels[i] !== prevLabels[i]).length) {\n        this.setState({\n          ...this._calcIndicatorPosition(this._container, 0, this.props.activeTabIndex, this.state.overflowAtIndex),\n        }, this._scrollActiveIntoView);\n      }\n    }\n  }\n\n  _shouldAlign(props) {\n    return typeof props.alignToKeyline === 'boolean'\n      ? props.alignToKeyline\n      : Children.toArray(props.children).filter(child => !!child).length > 3;\n  }\n\n  _calcPaddingLeft(container, mobile) {\n    const mediaPadding = mobile ? MOBILE_PADDING : DESKTOP_PADDING;\n    const tab = container.querySelector('.md-tab');\n    const { offsetLeft: labelOffset } = tab.querySelector('.md-tab-label');\n\n    return mediaPadding - labelOffset;\n  }\n\n  _calcOverflowIndex(container, paddingLeft = 0, menu) {\n    const containerWidth = container.offsetWidth;\n    let overflowIndex = 0;\n    if (containerWidth < container.scrollWidth) {\n      const tabs = Array.prototype.slice.call(container.querySelectorAll('.md-tab'));\n      let totalWidth = 0;\n      tabs.some((tab, i) => {\n        overflowIndex = i;\n        totalWidth += tab.offsetWidth;\n\n        return totalWidth > containerWidth;\n      });\n    }\n\n    return Math.max(0, overflowIndex - (menu ? 1 : 0));\n  }\n\n  _calcIndicatorPosition(container, paddingLeft = 0, activeTabIndex, overflowAtIndex) {\n    let activeItem;\n    if (typeof activeTabIndex === 'number') {\n      if (overflowAtIndex > 0 && activeTabIndex >= overflowAtIndex) {\n        activeItem = container.querySelector('.md-menu--tab');\n      } else {\n        activeItem = container.querySelectorAll('.md-tab')[activeTabIndex];\n      }\n    } else {\n      activeItem = container.querySelector('.md-tab--active');\n    }\n\n    if (!activeItem) {\n      return { indicatorVisible: false };\n    }\n\n    const { offsetWidth: indicatorWidth, offsetLeft: indicatorOffset } = activeItem;\n    return {\n      indicatorWidth,\n      indicatorOffset: indicatorOffset + paddingLeft,\n      indicatorVisible: !overflowAtIndex || overflowAtIndex > activeTabIndex,\n    };\n  }\n\n  _setContainer = (container) => {\n    this._container = container;\n    this._positionElements(this._container !== null);\n  };\n\n  _positionElements = (initialRender) => {\n    initialRender = typeof initialRender === 'boolean' && initialRender;\n    if (!this._container) {\n      return;\n    }\n\n    const { centered, overflowMenu } = this.props;\n    const { mobile } = this.props;\n\n    let paddingLeft;\n    if (!centered && this._shouldAlign(this.props)) {\n      paddingLeft = this._calcPaddingLeft(this._container, mobile);\n    }\n\n    let overflowAtIndex;\n    if (!mobile) {\n      overflowAtIndex = this._calcOverflowIndex(this._container, paddingLeft, overflowMenu);\n    }\n\n    const indicatorPosition = this._calcIndicatorPosition(this._container, initialRender ? paddingLeft : 0);\n\n    this.setState({ mobile, paddingLeft, overflowAtIndex, ...indicatorPosition }, this._scrollActiveIntoView);\n  };\n\n  _scrollActiveIntoView = () => {\n    if (!this._container || !this.state.mobile) {\n      return;\n    }\n\n    const active = this._container.querySelector('.md-tab--active');\n    if (!active) {\n      return;\n    }\n\n    const allTabs = Array.prototype.slice.call(this._container.querySelectorAll('.md-tab'));\n    if (allTabs[0] === active) {\n      this._container.scrollLeft = 0;\n      return;\n    }\n\n    const { offsetWidth: containerWidth, scrollLeft } = this._container;\n    const { offsetWidth: activeWidth, offsetLeft: activeOffset } = active;\n    const inFullViewLeft = activeOffset - scrollLeft >= 0;\n    const inFullViewRight = (activeOffset + activeWidth) - (containerWidth + scrollLeft) <= 0;\n    if (inFullViewLeft && inFullViewRight) {\n      return;\n    }\n\n    let offset = 0;\n    allTabs.some((tab, i) => {\n      if (i < this.props.activeTabIndex) {\n        offset += tab.offsetWidth;\n      }\n\n      return i < this.state.activeTabIndex;\n    });\n\n    this._container.scrollLeft = offset;\n  };\n\n  _handleTabChange = (index, tabId, tabControlsId, tabChildren, event) => {\n    if (this.props.onTabChange) {\n      this.props.onTabChange(index, tabId, tabControlsId, tabChildren, event);\n    }\n\n    if (typeof this.props.activeTabIndex === 'undefined') {\n      this.setState({\n        activeTabIndex: index,\n        ...this._calcIndicatorPosition(this._container, 0, index, this.state.overflowAtIndex),\n      });\n    }\n  };\n\n  _mapToOverflowTabProps = (tab, i) => {\n    const index = i + this.state.overflowAtIndex;\n    const active = getField(this.props, this.state, 'activeTabIndex') === index;\n    const tabEl = Children.only(tab);\n    const handleTabChange = this._handleTabChange;\n\n    return {\n      active,\n      primaryText: tabEl.props.label,\n      onClick: function handleClick(event) {\n        const { onClick, id, controlsId, children } = tabEl.props;\n        if (onClick) {\n          onClick(index, event);\n        }\n\n        handleTabChange(index, id, controlsId, children, event);\n      },\n    };\n  };\n\n  _nextIndexes = (increment) => {\n    const { overflowIndex, overflowAtIndex } = this.state;\n    const visibleAmt = (overflowAtIndex - overflowIndex) * (increment ? 1 : -1);\n\n    this.setState({\n      overflowIndex: overflowIndex + visibleAmt,\n      overflowAtIndex: overflowAtIndex + visibleAmt,\n    });\n  };\n\n  _showNextTabs = () => {\n    this._nextIndexes(true);\n  };\n\n  _showPreviousTabs = () => {\n    this._nextIndexes(false);\n  };\n\n  render() {\n    const {\n      indicatorOffset,\n      indicatorWidth,\n      indicatorVisible,\n      overflowIndex,\n      overflowAtIndex,\n      paddingLeft,\n    } = this.state;\n\n    const {\n      component: Component,\n      style,\n      className,\n      activeTabClassName,\n      inactiveTabClassName,\n      colored,\n      centered,\n      tabId,\n      overflowMenu,\n      overflowMenuLabel,\n      nextIcon,\n      previousIcon,\n      overflowMenuIcon,\n\n      // deprecated\n      overflowMenuIconChildren,\n      overflowMenuIconClassName,\n      nextIconChildren,\n      nextIconClassName,\n      previousIconChildren,\n      previousIconClassName,\n      /* eslint-disable no-unused-vars */\n      activeTabIndex: propActiveIndex,\n      defaultTabIndex,\n      onTabChange,\n      alignToKeyline,\n      mobile,\n\n      // Deprecated\n      defaultMedia,\n      desktopMinWidth,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const activeTabIndex = getField(this.props, this.state, 'activeTabIndex');\n\n    let icon = false;\n    let children = Children.map(Children.toArray(this.props.children), (tab, index) => {\n      const handleOnClick = (tabIndex, id, tabControlsId, tabChildren, event) => {\n        if (tab.props.onClick) {\n          tab.props.onClick(tabId, id, tabControlsId, tabChildren, event);\n        }\n\n        this._handleTabChange(tabIndex, id, tabControlsId, tabChildren, event);\n      };\n\n      if (tab.props.icon) {\n        icon = true;\n      }\n\n      return cloneElement(tab, {\n        index,\n        activeClassName: activeTabClassName,\n        inactiveClassName: inactiveTabClassName,\n        id: tab.props.id || `${tabId}-${index}`,\n        controlsId: tab.props.controlsId || `${tabId}-panel-${index}`,\n        active: index === activeTabIndex,\n        onClick: handleOnClick,\n      });\n    });\n\n    let overflow;\n    let nextControl;\n    let previousControl;\n    if (overflowAtIndex) {\n      const length = children.length;\n      if (overflowMenu) {\n        overflow = (\n          <MenuTab\n            id={`${tabId}-overflow-menu`}\n            activeTabIndex={activeTabIndex}\n            overflowAtIndex={overflowAtIndex}\n            label={(\n              <IconSeparator label={overflowMenuLabel}>\n                {getDeprecatedIcon(overflowMenuIconClassName, overflowMenuIconChildren, overflowMenuIcon)}\n              </IconSeparator>\n            )}\n            tabs={children.slice(overflowAtIndex, children.length).map(this._mapToOverflowTabProps)}\n          />\n        );\n      }\n\n      children = children.slice(overflowIndex, overflowAtIndex);\n\n      if (!overflowMenu && overflowIndex > 0) {\n        previousControl = (\n          <TabOverflowButton\n            left\n            icon={icon}\n            iconEl={getDeprecatedIcon(previousIconClassName, previousIconChildren, previousIcon)}\n            onClick={this._showPreviousTabs}\n          />\n        );\n      }\n\n      if (!overflowMenu && length > 3 && overflowAtIndex + overflowIndex <= length) {\n        nextControl = (\n          <TabOverflowButton\n            icon={icon}\n            onClick={this._showNextTabs}\n            iconEl={getDeprecatedIcon(nextIconClassName, nextIconChildren, nextIcon)}\n          />\n        );\n      }\n    }\n\n    return (\n      <Component\n        {...props}\n        style={{ ...style, paddingLeft }}\n        className={cn('md-tabs', {\n          'md-tabs--pagination': overflowAtIndex && !overflowMenu,\n          'md-tabs--centered': centered,\n          'md-background--primary': colored,\n        }, className)}\n        role=\"tablist\"\n      >\n        <ResizeObserver watchWidth watchHeight onResize={this._positionElements} elRef={this._setContainer} />\n        {previousControl}\n        {children}\n        {nextControl}\n        {overflow}\n        <TabIndicator offset={indicatorOffset} width={indicatorWidth} visible={indicatorVisible} />\n      </Component>\n    );\n  }\n}\n","import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport oneRequired from '../utils/PropTypes/oneRequired';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\n\n/**\n * The `Tab` component is used for rendering a single tab in the `Tabs` component.\n * It can optionally have either a `label`, an `icon` or both.\n */\nexport default class Tab extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the tab. This is required for a11y. If you use the `Tabs` component, this\n     * will automatically be generated for you and injected into this component.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An id for a `TabPanel` that holds the children from this tab. This is required for a11y.\n     * If you use the `Tabs` component, this will automatically be generated for you and injected\n     * into this component.\n     */\n    controlsId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The className to use when the tab is currently active. The default className does\n     * not actually apply any styles.\n     *\n     * @see {@link Tabs/Tabs#activeTabClassName}\n     */\n    activeClassName: PropTypes.string,\n\n    /**\n     * The className to use when the tab is not active. By default, this will set inactive\n     * tabs' color to `$md-white-base`. This works great if the tabs are placed on a\n     * colored toolbar but fails when the tabs are not colored or on a white background.\n     * In these cases, it is recommended to change this value to `md-text--secondary`\n     * or some other class name.\n     *\n     * @see {@link Tabs/Tabs#inactiveTabClassName}\n     */\n    inactiveClassName: PropTypes.string,\n\n    /**\n     * The component to render as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.object,\n    ]).isRequired,\n\n    /**\n     * Any children to display once the tab has been selected.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional icon to display in the tab. This can either be used alone, or it\n     * will be placed above the `label` if both are given.\n     */\n    icon: PropTypes.element,\n\n    /**\n     * An optional label to display in the tab. This can either be used alone, or it\n     * will be placed below the `icon` if both are given.\n     */\n    label: oneRequired(PropTypes.node, 'icon'),\n\n    /**\n     * An optional function to call when the tab is clicked. The callback includes this tab's index,\n     * id, controlsId, children, and finally click event. All the additional parameters are included\n     * if you are not using the `TabsContainer` component. The `id` and `controlsId` are mainly passed\n     * for accessibility.\n     *\n     * ```js\n     * onClick(index, id, controlsId, children, event);\n     * ```\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * Boolean if the tab is currently active. If you use the `Tabs` component, this is automatically\n     * injected.\n     */\n    active: PropTypes.bool,\n\n    /**\n     * Tab's index. If you use the `Tabs` component, this is automatically injected.\n     */\n    index: PropTypes.number,\n  };\n\n  static defaultProps = {\n    component: 'li',\n    activeClassName: 'md-tab--active',\n    inactiveClassName: 'md-tab--inactive',\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(this.props.index, this.props.id, this.props.controlsId, this.props.children, e);\n    }\n  };\n\n  render() {\n    const {\n      id,\n      controlsId,\n      className,\n      activeClassName,\n      inactiveClassName,\n      active,\n      /* eslint-disable no-unused-vars */\n      icon: propIcon,\n      label: propLabel,\n      index,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { icon, label } = this.props;\n    if (icon) {\n      const iconEl = Children.only(icon);\n      icon = cloneElement(icon, {\n        className: cn('md-icon--tab', iconEl.props.className),\n      });\n    }\n\n    if (isValidElement(label)) {\n      const labelEl = Children.only(label);\n      label = cloneElement(label, {\n        className: cn('md-tab-label', labelEl.props.className),\n      });\n    } else {\n      label = <div className=\"md-tab-label\">{label}</div>;\n    }\n    return (\n      <AccessibleFakeInkedButton\n        {...props}\n        id={id}\n        role=\"tab\"\n        onClick={this._handleClick}\n        className={cn('md-tab', {\n          'md-tab--icon': label && icon,\n          [activeClassName]: activeClassName && active,\n          [inactiveClassName]: inactiveClassName && !active,\n        }, className)}\n        aria-controls={controlsId}\n        aria-selected={active}\n      >\n        {icon}\n        {label}\n      </AccessibleFakeInkedButton>\n    );\n  }\n}\n","export default '1.9.0';\n"],"names":["makeEmptyFunction","arg","toObject","val","undefined","TypeError","Object","getField","props","state","field","omit","obj","keys","length","filter","indexOf","key","reduce","newProps","getTextWidth","text","el","canvas","cachedCanvas","document","createElement","context","getContext","styles","window","getComputedStyle","font","sizing","fontSize","lineHeight","fontFamily","fontStyle","fontVariant","fontWeight","measureText","width","themeColors","themeText","background","disabled","error","hint","primary","secondary","inherit","ink","card","hover","className","colors","cn","getCollapserStyles","flipped","suffix","suffixFlipped","classNames","closest","type","nodeType","toUpperCase","node","parentElement","nodeName","isFormPartRole","role","getAttribute","handleKeyboardAccessibility","e","onClick","listenToEnter","listenToSpace","which","keyCode","space","SPACE","enter","ENTER","tagName","target","match","preventDefault","form","submit","querySelector","click","getDisplayName","ComposedComponent","hoc","displayName","name","getPagePosition","direction","scroll","pageXOffset","compatMode","documentElement","body","calcPageOffset","left","right","rect","getBoundingClientRect","top","isValidClick","button","LEFT_MOUSE","shiftKey","setTouchEvent","add","eventType","callback","options","supportsPassive","passive","addTouchEvent","removeTouchEvent","captureNextEvent","cb","addEventListener","capture","stopPropagation","removeEventListener","calculateHypotenuse","a","b","Math","sqrt","getDeprecatedIcon","children","icon","React","iconClassName","handleWindowClickListeners","enabled","mobileSafari","ua","navigator","userAgent","iOS","webkit","style","cursor","getSelectedText","getSelection","toString","selection","createRange","getSelectedTextPosition","height","clientX","clientY","round","classList","contains","parseInt","rangeCount","range","getRangeAt","cloneRange","getClientRects","rects","span","appendChild","createTextNode","ZERO_WIDTH_CHARACTER","insertNode","spanParent","parentNode","removeChild","normalize","getScroll","scrollX","scrollY","x","y","scrollLeft","scrollTop","getScreenSize","position","viewport","bottom","isOutHorizontally","fixedTo","child","threshold","fixedLeft","fixedRight","childLeft","childRight","offset","offsetWidth","screenEdge","isOutVertically","toggle","fixedTop","fixedBottom","childTop","childBottom","offsetHeight","isOutOfBounds","verticalThreshold","horizontalThreshold","toFloat","value","parseFloat","getBordersSize","Array","prototype","slice","call","arguments","size","getPaddings","paddings","i","list","getSVGContentRect","bbox","getBBox","createRectInit","getHTMLElementContentRect","clientWidth","clientHeight","emptyRect","horizPad","vertPad","boxSizing","isDocumentElement","vertScrollbar","horizScrollbar","abs","getContentRect","isBrowser","isSVGGraphicsElement","createReadOnlyRect","ref","Constr","DOMRectReadOnly","create","defineConfigurable","isValued","v","addSuffix","str","trim","isBetween","num","min","max","getBtnStyles","flat","raised","floating","swapTheming","pressed","mini","fixed","fixedPosition","flatStyles","raisedStyles","textTheming","backgroundTheming","capitalizeFirst","charAt","substring","findTable","table","isValidFocusKeypress","event","additionalKeys","TAB","findFixedTo","firstChild","withTableFixes","cellIndex","_fixedTo","this","isIndexed","id","isFixed","column","findDOMNode","forceUpdate","columns","querySelectorAll","setState","rowId","propFixedTo","PureComponent","Positions","HorizontalAnchors","VerticalAnchors","contextTypes","PropTypes","oneOfType","number","string","mapToListParts","item","index","ListItem","primaryText","isValidElement","divider","subheader","nestedItems","remainingProps","component","Divider","Subheader","map","toggleScroll","scrollable","selector","queryable","remove","scrollTo","isTemporary","TEMPORARY","TEMPORARY_MINI","isPersistent","PERSISTENT","PERSISTENT_MINI","isPermanent","FULL_HEIGHT","CLIPPED","FLOATING","isMini","bem","base","modifiers","remaining","args","some","push","element","join","classes","getNonMiniType","pMini","DrawerTypes","toMiniListItem","itemProps","MiniListItem","isValidDate","d","getTime","addDay","date","amount","Date","setDate","getDate","getLastDay","getFullYear","getMonth","getDaysInMonth","day","addMonth","newMonthDate","setMonth","addYear","setFullYear","addDate","part","isSameYear","d1","d2","bothNullValue","isSameMonth","isSameDay","chunk","arr","chunks","stripTime","hours","setHours","toDayOfWeek","dow","getDay","diff","isMonthBefore","toCompare","formatTime","DateTimeFormat","locales","showSeconds","time","format","hour","minute","second","extractTimeParts","minutes","seconds","minuteSeparator","secondSeparator","formatted","timePeriod","isPointInCircle","cx","cy","r","pow","toDegrees","radians","PI","calcTimeFromPoint","point","center","innerRadius","hour12","degrees","atan2","sectors","sectorSize","isInCircle","addHours","t","getHours","minMaxLoop","current","next","calculateDistance","distance","calculateValueDistance","scale","step","decimals","String","split","corrector","modded","updateUnit","unit","fn","toUnit","updated","replace","isInvalidAnimate","fab","gcc","_animateForSnackbar","Tooltipped","setPosition","Children","only","targetProps","label","clonedProps","cloneElement","TooltipContainer","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","condition","c","f","Error","argIndex","framesToPop","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","assign","test1","getOwnPropertyNames","test2","fromCharCode","n","test3","forEach","letter","err","shouldUseNative","shim","propName","componentName","location","propFullName","secret","ReactPropTypesSecret","invariant","getShim","isRequired","ReactPropTypes","array","bool","func","object","symbol","any","arrayOf","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","module","require$$1","len","apply","exports","result","_react","prev","getValueForKey","nextKeysPending","pendingKeys","prevKey","childMapping","nextKey","pendingNextKey","_interopRequireDefault","__esModule","default","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_extends","source","_chainFunction2","_chainFunction","_react2","defaultProps","_propTypes","_warning","childFactory","TransitionGroup","_React$Component","_this","performAppear","currentlyTransitioningKeys","componentWillAppear","_handleDoneAppearing","bind","componentDidAppear","currentChildMapping","_ChildMapping","getChildMapping","performLeave","performEnter","componentWillEnter","_handleDoneEntering","componentDidEnter","componentWillLeave","_handleDoneLeaving","componentDidLeave","keysToEnter","newChildren","childRefs","componentWillMount","keysToLeave","componentDidMount","initialChildMapping","componentWillReceiveProps","nextProps","nextChildMapping","prevChildMapping","mergeChildMappings","hasPrev","_key","hasNext","componentDidUpdate","_this2","render","_this3","childrenToRender","isCallbackRef","factoryChild","_loop","transitionLeave","transitionName","transitionAppear","transitionEnter","transitionLeaveTimeout","transitionEnterTimeout","transitionAppearTimeout","Component","propTypes","defineProperty","_hasClass2","_hasClass","RegExp","vendors","cancel","raf","curr","ms","req","setTimeout","compatRaf","getKey","vendor","k","substr","_inDOM","rafKey","transform","prefix","transitionEnd","animationEnd","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationName","animationDuration","animationTiming","animationDelay","_getTransitionPropert","vendorMap","O","toLowerCase","Moz","Webkit","getTransitionProperties","end","property","timing","delay","duration","transitionType","timeoutPropName","enabledPropName","_propTypes2","leave","active","enterActive","leaveActive","appear","appearActive","addEndListener","listener","events","_addClass2","_addClass","_removeClass2","_removeClass","_requestAnimationFrame2","_requestAnimationFrame","_properties","CSSTransitionGroupChild","_temp","_ret","_len","concat","done","transition","appearTimeout","enterTimeout","leaveTimeout","classNameAndNodeQueue","transitionTimeouts","componentWillUnmount","unmounted","timeout","clearTimeout","animationType","finishCallback","_reactDom","activeClassName","timer","removeListeners","queueClassAndNode","finish","rafHandle","flushClassNameAndNodeQueue","_TransitionGroup2","_TransitionGroup","_CSSTransitionGroupChild2","_CSSTransitionGroupChild","_PropTypes","nameShape","transitionTimeout","CSSTransitionGroup","_wrapChild","argType","isArray","hasOwn","LEFT","UP","RIGHT","DOWN","INNER_LEFT","CENTER","INNER_RIGHT","TOP","OVERLAP","BOTTOM","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","BELOW","deprecated","validator","reason","componentNameSafe","propFullNameSafe","messageKey","_warning2","warned","_resetWarned","AccessibleFakeButton","tabFocused","focus","_node","blur","_setNode","_handleClick","_handleKeyDown","onKeyDown","_handleKeyUp","onKeyUp","onTabFocus","_handleBlur","onBlur","tabbedClassName","tabIndex","noFocusOutline","childElements","toArray","unshift","opts","aborted","_timeout","_abort","expanding","pulsing","leaving","transitionOverlap","expanded","TICK","pulse","onRemove","InkContainer","inks","createInk","pageX","pageY","_createInk","_removeTimeout","_removeInk","_getKeyboardContainer","_inkContainer","pageOffset","now","pop","_container","_setContainers","group","_initOrRemoveEvents","keyboardDiff","mouseDiff","touchDiff","mouseDisabled","_isListenerDisabled","disabledInteractions","touchDisabled","keyboardDisabled","_handleFocus","_handleSubmit","_stopPropagationToFocus","_handleMouseDown","_handleMouseUp","_handleTouchStart","_handleTouchEnd","_maybeDelayClick","waitForInkTransition","_handleRemove","_clicked","_skipNextMouse","_mouseLeave","_handleMouseLeave","_aborted","_handleTouchMove","changedTouches","lastInk","abortedInk","splice","activeElement","di","ndi","mouseDisabledDiff","_isListenerDisabledDiff","touchDisabledDiff","keyboardDisabledDiff","interaction","nextDisabledInteractions","ni","inkStyle","inkClassName","Ink","inkDisabled","composed","_composed","getComposedComponent","_setInkRef","inkContainer","_setComposedComponent","__SUPER_SECRET_REF__","inkTransitionOverlap","inkTransitionEnterTimeout","inkTransitionLeaveTimeout","inkContainerStyle","inkContainerClassName","inkDisabledInteractions","inkContextTypes","injectInk","ret","secondPerFrame","destX","precision","newV","newX","reusedTuple","getNanoSeconds","hrtime","loadTime","performance","process","hr","root","global","caf","last","queue","_now","cp","cancelled","handle","requestAnimationFrame","cancelAnimationFrame","currentStyle","currentVelocity","styleValue","_createClass","defineProperties","descriptor","protoProps","staticProps","_mapToZero2","_mapToZero","_stripStyle2","_stripStyle","_stepper4","_stepper3","_performanceNow2","_performanceNow","_raf2","_raf","_shouldStopAnimation2","_shouldStopAnimation","msPerFrame","Motion","wasAnimating","animationID","prevTime","accumulatedTime","unreadPropStyle","clearUnreadPropStyle","destStyle","dirty","_state","lastIdealStyle","lastIdealVelocity","startAnimationIfNecessary","timestamp","propsStyle","onRest","currentTime","timeDelta","currentFrameCompletion","floor","framesToCatchUp","newLastIdealStyle","newLastIdealVelocity","newCurrentStyle","newCurrentVelocity","newLastIdealStyleValue","newLastIdealVelocityValue","_stepper","stiffness","damping","_stepper2","nextIdealX","nextIdealV","defaultState","defaultStyle","_props","renderedChildren","shouldStopAnimationAll","currentStyles","currentVelocities","StaggeredMotion","unreadPropStyles","lastIdealStyles","lastIdealVelocities","someDirty","destStyles","newLastIdealStyles","newLastIdealVelocities","newCurrentStyles","newCurrentVelocities","j","defaultStyles","prevKeyIndex","nextKeyIndex","fill","sort","nextOrderA","nextOrderB","prevOrderA","prevOrderB","pivot","rehydrateStyles","mergedPropsStyles","plainStyles","cUnreadPropStyles","mergedPropsStyle","data","mergeAndSync","willEnter","willLeave","didLeave","oldMergedPropsStyles","oldCurrentStyles","oldCurrentVelocities","oldLastIdealStyles","oldLastIdealVelocities","newMergedPropsStyles","_mergeDiff2","oldIndex","oldMergedPropsStyle","leavingStyle","newMergedPropsStyleCell","foundOldIndex","plainStyle","velocity","_mergeDiff","TransitionMotion","unmounting","_mergeAndSync","propStyles","_mergeAndSync2","newMergedPropsStyle","styleThatEntered","defaultStyleCell","s","_mergeAndSync3","hydratedStyles","noWobble","gentle","wobbly","stiff","config","defaultConfig","_presets2","_presets","_interopRequire","_Motion","_StaggeredMotion","_TransitionMotion","_spring","_reorderKeys","Collapse","_setHeight","_child","paddingTop","paddingBottom","cs","getPropertyValue","minHeight","collapsed","initialOpen","nextValue","spring","motionStyle","springConfig","animate","nextStyle","inset","vertical","ICON_SIZE","FontIcon","_mergeStyles","forceSize","forceFontSize","TileAddon","avatar","avatarIcon","iconSized","ListItemText","primaryTextStyle","primaryTextClassName","secondaryText","secondaryTextStyle","secondaryTextClassName","threeLines","secondaryTextNode","List","listLevel","cascadingFixedTo","cascadingMenu","scrollHeight","ordered","inline","primarySubheader","cascadingZDepth","subheaderEl","childContextTypes","fixedToShape","MapShim","getIndex","entry","Map","anonymous","__entries__","prototypeAccessors","get","set","delete","entries","has","clear","ctx","requestAnimationFrame$1","trailingTimeout","throttle","resolvePending","leadingCall","trailingCall","proxy","timeoutCallback","timeStamp","lastCallTime","transitionKeys","isIE11","test","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","observe","attributes","childList","characterData","subtree","disconnect","propertyName","getInstance","instance_","SVGGraphicsElement","SVGElement","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","contentRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","WeakMap","ResizeObserver$1","method","ResizeObserver","_target","_observer","_height","_width","_scrollHeight","_scrollWidth","_measure","scrollWidth","_isHeightChange","_isWidthChange","onResize","watchHeight","watchWidth","_handleRef","container","_getTarget","ResizeObserverAPI","elRef","nextTarget","getElementById","aria-hidden","Layover","_lastXFix","_lastYFix","_initialX","_initialY","_initialTop","_initialLeft","_toggle","visible","sameWidth","centered","simplified","anchor","_getAnchor","_handleOutsideClick","_contextRect","_dialog","_manageFixedToListener","_inFixed","_init","_reset","visibileDiff","childStyle","prevProps","closeOnOutsideClick","prevEnabled","_clickTimeout","_manageWindowResizeListener","belowAnchor","animationPosition","block","fullWidth","fillViewportWidth","fillViewportHeight","onClose","repositionOnScroll","repositionOnResize","toggleQuery","yThreshold","xThreshold","onContextMenu","preventContextMenu","minLeft","minRight","minBottom","childId","_fixateChild","_handleResize","_setContainer","_handleContextMenu","_isCenteredDialog","_this4","_createStyles","dialogRect","_handleScroll","_windowResizeTimeout","_handleWindowResize","maxHeight","_initialWinX","_initialWinY","offsetParent","_initialFix","clone","cloneNode","webkitTransform","transfrom","webkitTransition","vp","childHeight","childWidth","toggleHeight","toggleWidth","addToTop","addToLeft","multiplier","_childComponent","_positionChild","_ticking","_handleTick","_attemptFix","winX","winY","toggleTop","innerHeight","newTop","scrollEl","Menu","_handleClose","close","_isIgnoreTarget","_isCloseTarget","persist","cascading","cascadingAnchor","listStyle","listClassName","listProps","listZDepth","listInline","listHeightRestricted","contained","isOpen","listId","autoclose","limitHeight","expanderIconChildren","expanderIconClassName","simple","below","listVisible","_warned","anchorShape","_tile","_setTile","tile","_tileNode","itemRef","_handleMouseOver","onMouseOver","onMouseLeave","onTouchStart","_touched","touchedAt","onTouchEnd","_touchTimeout","defined","initiallyOpen","defaultOpen","defaultVisible","renderChildrenOutside","tileStyle","tileClassName","contentStyle","contentClassName","leftNodeStyle","leftNodeClassName","rightNodeStyle","rightNodeClassName","nestedListStyle","nestedListClassName","nestedListHeightRestricted","leftIcon","leftAvatar","rightIcon","rightAvatar","prependNested","activeBoxStyle","activeBoxClassName","animateNestedItems","expanderIcon","expanderLeft","ItemComponent","itemComponent","tileProps","passPropsToItem","ariaSize","ariaPos","cascadingId","leftNode","rightNode","nestedList","collapser","icond","avatard","_renderChildrenIfInside","sharedProps","_renderChildrenIfOutside","FloatingLabel","htmlFor","iconOffset","customSize","Message","TextFieldMessage","errorText","helpText","_isMessageVisible","_anyChanges","p1","p2","changed","helpOnFocus","maxLength","currentLength","isMessageVisible","message","PasswordButton","keyboardFocus","_button","passwordVisible","TextArea","_field","getValue","_calcRowHeight","rows","rowHeight","_setMask","mask","_mask","_setField","_rowHeight","_syncHeightWithMask","maxRows","_handleChange","onChange","defaultValue","InputField","inlineIndicator","multiline","TextFieldDivider","lineDirection","DEFAULT_TEXT_FIELD_SIZE","WILL_RECEIVE_KEYS","DID_UPDATE_KEYS","TextField","_getLength","_canvas","resize","passwordInitiallyVisible","_calcWidth","nextState","_isErrored","_focus","stateful","dir","iconEl","inputStyle","inputClassName","required","leftIconStateful","rightIconStateful","paddedBlock","onDoubleClick","onTouchMove","onTouchCancel","onMouseDown","onMouseUp","toolbar","propPasswordIcon","passwordIcon","passwordIconChildren","passwordIconClassName","placeholder","onFocus","adjustMinWidth","floatingLabel","_cloneIcon","_togglePasswordField","rightIconed","md-text-field--toolbar","_handleContainerClick","div","_calcIconWidth","marginLeft","from","indicator","iconContainer","first","third","ceil","disableShrink","Autocomplete","dataLabel","showUnfilteredData","matches","dataDiff","menuFn","tabbed","suggestionStyle","textFieldStyle","textFieldClassName","inlineSuggestionStyle","inlineSuggestionClassName","menuId","simplifiedMenu","total","dataValue","deleteKeys","clearOnAutocomplete","autocompleteWithLabel","findInlineSuggestion","inlineSuggestionPadding","onAutocomplete","onMenuOpen","onMenuClose","focusInputOnAutocomplete","autocomplete","_handleTextFieldKeyDown","_toggleMenu","suggestion","_setMenu","_close","_handleMenuKeyDown","_mapToListItem","fuzzyFilter","haystack","needle","reg","hay","caseInsensitiveFilter","filterText","findIgnoreCase","hayStr","_findInlineSuggestions","hasValidValue","manualFocus","_handleInlineAutocomplete","suggestionIndex","_focusSuggestion","_menu","items","_handleItemClick","m","negative","matchIndex","l","datum","dataum","menu","Avatar","color","_setRandomColor","suffixes","random","src","alt","content","_getColor","Badge","single","_isSingleChild","_normalizeCount","badgeContent","count","Number","isNaN","badgeStyle","badgeClassName","defaultTheme","circular","badgeId","invisibleOnZero","useCircular","aria-describedby","badge","isReact16","createPortal","Portal","_portal","_applyStyles","_renderPortal","renderNode","lastChild","insertBefore","_removePortal","onOpen","Paper","zDepth","raiseOnHover","BottomNav","onNavChange","colored","iconChildren","labelClassName","md-bottom-nav-label--shifting-inactive","labelEl","BottomNavigation","initiallyVisible","activeIndex","defaultActiveIndex","dynamic","_addTouchEvents","_removeTouchEvents","onVisibilityChange","portalVisible","actions","portal","links","dynamicThreshold","containerStyle","containerClassName","navigation","action","_handleNavChange","_animateIn","_animateOut","_pageY","_scrolling","touchY","passedThreshold","IconSeparator","labelStyle","iconBefore","labelProps","Tooltip","entering","_delayedTimeout","_unlinkTarget","_showTooltip","_hideTooltip","_setTarget","_stopContextMenu","tooltipStyle","tooltipClassName","tooltip","tooltipLabel","tooltipDelay","tooltipPosition","tooltipContainerStyle","tooltipContainerClassName","tooltipTransitionEnterTimeout","tooltipTransitionLeaveTimeout","Button","_blur","_attemptedBlur","_handleMouseEnter","onMouseEnter","_snackbarTimeout","snackbar","snackbarType","href","forceIconSize","forceIconFontSize","svg","iconBtnType","visibleChildren","resolvedIconChildren","injectTooltip","Card","raise","_handleExpandClick","onExpanderClick","initiallyExpanded","defaultExpanded","expanderTooltipLabel","expanderTooltipDelay","expanderTooltipPosition","isExpanded","tableCard","expanderIndex","parts","isExpander","expander","expandable","CardExpander","onExpandClick","CardActions","stacked","CardTitleBlock","subtitle","title","CardTitle","avatarClassName","CardText","Chip","removable","rotateIcon","removeIconChildren","removeIconClassName","chipIconCN","DataTable","defaultSelectedRows","indeterminate","_allSelected","_removed","_initial","checkedIcon","uncheckedIcon","indeterminateIcon","plain","baseId","selectableRows","checkboxHeaderLabel","checkboxLabelTemplate","fixedHeader","fixedFooter","checkedIconChildren","checkedIconClassName","uncheckedIconChildren","uncheckedIconClassName","indeterminateIconChildren","indeterminateIconClassName","allSelected","selectedRows","_toggleSelectedRow","_createCheckbox","_removeCheckbox","all","checked","tableStyle","tableClassName","fixedWrapperStyle","fixedWrapperClassName","fixedScrollWrapperStyle","fixedScrollWrapperClassName","responsive","fixedDividers","fixedHeight","fixedWidth","headerHeight","footerHeight","onRowToggle","_setTable","borderTop","borderBot","header","footer","_table","selected","version","row","selectedCount","TableHeader","headerContextTypes","TableBody","uncontrolled","rowContextTypes","DISABLED_INTERACTIONS","SwitchThumb","AccessibleFakeInkedButton","SwitchTrack","ariaLabel","ariaLabelledBy","SelectionControl","_setInput","input","_input","_setControl","control","_control","_getIcon","defaultChecked","labelBefore","ariaDescribedBy","checkedCheckboxIcon","uncheckedCheckboxIcon","checkedRadioIcon","uncheckedRadioIcon","__superSecreteProp","checkedRadioIconChildren","checkedRadioIconClassName","uncheckedRadioIconChildren","uncheckedRadioIconClassName","checkedCheckboxIconChildren","checkedCheckboxIconClassName","uncheckedCheckboxIconChildren","uncheckedCheckboxIconClassName","isSwitch","labelId","TableCheckbox","_td","_header","_handleMount","td","rowIndex","createCheckbox","removeCheckbox","baseName","Cell","TableRow","_ignoreHoverState","_handleCheckboxClick","_row","onCheckboxClick","toggleSelectedRow","_setRow","selectable","autoAdjust","checkbox","col","adjusted","CELL_SCOPE","TableColumn","fixedStyle","fixedClassName","numeric","sorted","sortIcon","selectColumnHeader","grow","sortIconBefore","sortIconChildren","scope","sortIconClassName","sortable","displayedChildren","ariaSort","baseClassNames","mergedClassNames","SelectFieldInput","_transitionNewValue","transitionTime","activeLabel","dropdownIcon","visibleLabel","labelActive","SelectFieldToggle","ARIA_ACTIVE","SelectField","_getActive","_scrollActiveIntoView","_items","_activeItem","_deleteKeys","_getDeleteKeys","itemLabel","itemValue","menuItems","preferLabel","key1","key2","toggleStyle","toggleClassName","menuTransitionName","menuTransitionEnterTimeout","menuTransitionLeaveTimeout","getItemProps","stripActiveItem","keyboardMatchingTimeout","onMenuToggle","stretchList","menuStyle","menuClassName","noAutoAdjust","useSameWidth","_reduceItems","_getActiveItemLabel","_getItemPart","found","_attemptItemFocus","_setListItem","listRef","offsetTop","dataset","_selectItem","dataIndex","up","down","_advanceFocus","_selectItemByLetter","decrement","valued","itemStripped","lastIndex","nextIndex","charCode","isLetter","isKeypad","_matchingTimeout","lastSearch","_selectFirstMatch","search","activeItem","objectType","getProps","TableFooter","TablePagination","controlledPage","page","controlledRowsPerPage","rowsPerPage","defaultRowsPerPage","defaultPage","rpp","p","start","controlsMarginLeft","selectFieldStyle","selectFieldClassName","selectFieldInputStyle","selectFieldInputClassName","rowsPerPageLabel","rowsPerPageItems","incrementIcon","decrementIcon","incrementIconChildren","incrementIconClassName","decrementIconChildren","decrementIconClassName","incrementId","decrementId","onPagination","pagination","_throttledPosition","colSpan","_setControls","_setRowsPerPage","_decrement","_increment","controls","_controls","_position","newStart","nextPage","FOCUSABLE_QUERY","queryString","FocusContainer","_enableFocusTrap","_disableFocusTrap","_attemptInitialFocus","initialFocus","toFocus","_focusables","debugError","_containFocus","containerRef","focusOnMount","containFocus","_shifted","additionalFocusKeys","focusables","DialogTitle","FOOTER_PADDING","DialogFooter","maxWidth","_generateActions","_toElement","propStacked","stackedDefined","DIFF_KEYS","Dialog","_renderNode","_getStyles","contentStyles","onLeave","contentPadded","titleStyle","titleClassName","footerStyle","footerClassName","Content","contentComponent","contentProps","fullPage","autopadContent","paddedContent","autosizeContent","stackedActions","containerX","containerY","labelledBy","titleId","padDefined","dialogChildren","_setContent","_handleContentResize","_setRenderNode","dialog","_content","totalHeight","currentHeight","EditDialog","dialogStyle","dialogClassName","dialogContentStyle","dialogContentClassName","textFieldId","large","dialogZDepth","EditDialogColumn","_makeActions","_column","okLabel","okPrimary","okSecondary","okProps","cancelLabel","cancelPrimary","cancelSecondary","cancelProps","layoverStyle","layoverClassName","inlineIcon","simplifiedDialog","noIcon","inlineIconChildren","inlineIconClassName","dialogId","onOkClick","onCancelClick","okOnOutsideClick","scrollIntoView","scrollIntoViewPadding","visibleOnFocus","scrollThreshold","enforceMinWidth","inlineEditIcon","md-edit-dialog__blocked-field","dialogLabel","_handleOpen","_handleCancel","_handleOk","_skipNextOpen","offsetLeft","cancelValue","onOutsideClick","SelectFieldColumn","wrapperStyle","wrapperClassName","DropdownMenu","propChildren","MenuButton","buttonId","buttonChildren","onMenuClick","onMenuMouseDown","onMenuMouseUp","onMenuMouseEnter","onMenuMouseMove","onMenuMouseLeave","onMenuTouchStart","onMenuTouchMove","onMenuTouchCancel","onMenuTouchEnd","onMenuFocus","onMenuBlur","onMenuKeyDown","onMenuKeyUp","toggleChildren","MenuButtonColumn","DropdownMenuColumn","TableCardHeader","animating","nVisible","noAdjust","noClone","contextualTitleId","contextualChildren","noActionsAdjust","noChildrenAdjust","noLeftChildrenClone","leftChildren","contextualTitle","_cloneCellRight","_cloneLeftChildren","contextualHeader","mergedStyles","overflow","DialogContainer","dialogVisible","defaultVisibleTransitionable","_mountDialog","_pageX","_inTimeout","_activeElement","_mountPortal","closeOnEsc","_handleEscClose","modal","propVisible","onShow","onHide","disableScrollLocking","actionLeft","actionRight","_handleDialogMounting","_unmountPortal","Overlay","isInPortal","Drawer","defaultMedia","overlay","overlayActive","desktop","drawerActive","mobileMinWidth","tabletMinWidth","desktopMinWidth","mobileType","tabletType","desktopType","constantType","mobile","tablet","matchesMedia","media","matchMedia","_updateType","_updateMedia","_animate","_closeTimeout","navStyle","navClassName","navItems","clickableDesktopOverlay","overlayStyle","overlayClassName","navItemsId","onMediaTypeChange","autocloseAfterInk","onVisibilityToggle","closeOnNavItemClick","temporary","permanent","_setNavigation","_handleNavClick","overlayVisible","drawer","_closeDrawer","getCurrentMedia","diffType","diffMedia","prevVisible","_navigation","PanelContent","onSave","onCancel","saveProps","saveType","saveLabel","savePrimary","saveSecondary","cancelType","footerChildren","actionFooter","SINGLE_LINE_HEIGHT","ExpansionPanel","_determineIfTwoLine","twoLine","_isExpanded","onExpandToggle","_handleSave","closeOnSave","closeOnCancel","secondaryLabel","expandedSecondaryLabel","focused","columnWidths","headerStyle","headerClassName","overflown","expandIconChildren","expandIconClassName","animateContent","panelLabel","minWidth","ExpansionList","focusedIndex","_determineTabFocus","_calcColumnWidths","panels","_removeFocus","_isOverflown","widths","panel","collapserWidth","paddingLeft","paddingRight","w","_getColumnWidths","maxes","nextWidths","recalculateThreshold","prevState","FileInput","multiple","files","accept","allowDuplicates","labelChildren","FileUpload","abort","file","fileName","reader","_uploadFile","onAbort","onError","onLoad","onLoadStart","onLoadEnd","onProgress","readAs","fr","FileReader","onerror","onabort","onloadstart","onloadend","onload","onprogress","lengthComputable","loaded","readAsDataURL","readAsText","readAsArrayBuffer","_handleUpload","fileList","maxSize","onSizeError","errorFiles","fileReader","Grid","getClassName","noSpacing","gutter","spacing","align","order","phoneSize","phoneOrder","phoneOffset","phoneHidden","tabletSize","tabletOrder","tabletOffset","tabletHidden","desktopSize","desktopOrder","desktopOffset","desktopHidden","GridList","getClassNames","cellClassName","cellStyle","ListItemControl","primaryAction","secondaryAction","Media","forceAspect","aspectRatio","MediaOverlay","ToolbarTitle","prominent","fullClassName","titleEl","Toolbar","prominentTitle","themed","singleColor","nav","titleMenu","actionsRight","navEl","rightActions","JumpToContentLink","CloseButton","onCloseClick","closeIcon","NavigationDrawer","initialDrawerType","drawerType","mobileDrawerType","tabletDrawerType","desktopDrawerType","constantDrawerType","others","persistentIcon","contentId","jumpLabel","persistentIconChildren","persistentIconClassName","closeIconChildren","closeIconClassName","_toggleVisibility","toolbarStyle","toolbarClassName","drawerStyle","drawerClassName","miniDrawerStyle","miniDrawerClassName","miniNavStyle","miniNavClassName","miniDrawerId","miniNavItemsId","drawerId","drawerTitle","drawerZDepth","drawerChildren","drawerHeaderChildren","drawerTransitionDuration","toolbarId","toolbarTitle","toolbarTitleMenu","toolbarTitleStyle","toolbarTitleClassName","toolbarActions","toolbarProminent","toolbarProminentTitle","toolbarThemeType","toolbarSingleColor","toolbarChildren","toolbarZDepth","extractMini","miniDrawerHeader","miniDrawerChildren","includeDrawerHeader","temporaryIcon","temporaryIconChildren","temporaryIconClassName","menuIconChildren","menuIconClassName","drawerHeader","onDrawerChange","contentActive","persistent","clipped","toolbarRelative","closeButton","miniDrawer","miniList","_handleVisibility","_handleTypeChange","DrawerType","_msg","mediaState","Intl","formatOptions","toLocaleString","PickerControl","DatePickerHeader","_selectYear","changeCalendarMode","_selectCalendar","_getFormattedDate","calendarTempDate","year","weekday","month","calendarMode","isYearMode","CalendarDate","_setFocus","btn","_setActive","desktopActive","_setInactive","today","getDateClassName","dateRenderer","fullyActive","generatedClassName","display","CalendarMonth","calendarDate","onCalendarDateClick","minDate","maxDate","firstDayOfWeek","disableWeekEnds","dateClassName","showAllDays","outerDateClassName","disableOuterDates","days","firstDay","lastDay","currentDate","endDate","activeDateTime","todayTime","currentMonth","isMinDateDisabled","isMaxDateDisabled","isWeekendDisabled","weeks","week","CalendarHeader","_createState","titleFormat","weekdayClassName","weekdayFormat","formatter","dows","onPreviousClick","previousIcon","onNextClick","nextIcon","isPreviousDisabled","isNextDisabled","DatePickerCalendar","Year","_setActiveFocus","md-year--active","YearPicker","_getYearRange","yearsDisplayed","_getFullYear","startYear","endYear","currentYear","years","onCalendarYearClick","DatePicker","displayMode","calendarClassName","yearPickerClassName","calendarDateClassName","calendarOuterDateClassName","calendarTitleClassName","calendarTitleFormat","calendarWeekdayClassName","calendarWeekdayFormat","picker","DatePickerContainer","_getDate","_validateDateRange","defaultCalendarDate","initialCalendarDate","initialCalendarMode","defaultCalendarMode","minEqual","maxEqual","_closeOnEsc","pickerStyle","pickerClassName","pickerHeaderClassName","pickerContentClassName","pickerFooterClassName","animateInline","propNextIcon","propPreviousIcon","previousIconChildren","previousIconClassName","nextIconChildren","nextIconClassName","readOnly","_handleCancelClick","_handleOkClick","_changeCalendarMode","_previousMonth","_nextMonth","_setCalendarTempDate","_setCalendarTempYear","md-pointer--hover","_toggleOpen","_getFormattedValue","userLanguage","language","onPreviousMonth","onNextMonth","autoOk","nextDate","nextTemp","onYearSelected","closeYearOnSelect","CLOCK_PADDING","ClockTime","onKeyboardFocus","_setTime","_time","_setPosition","radius","timeRadians","outerRadius","sin","cos","ClockHand","timeAt0Deg","coords","_calcCurrentDegrees","invisibleMinute","rotateTransform","ClockFace","_setFace","face","_face","_setPositioning","_center","_left","_top","hoverMode","_enableMouseMoving","_disableMouseMoving","_handleMouseMove","moving","_calcNewTime","onTimeChosen","interval","times","_","clockTime","TimePeriods","_setAM","setTempTime","tempTime","_setPM","TimePickerHeader","_setHour","setTimeMode","_setMinute","_setSecond","timeMode","timePeriods","secondsControl","TimePicker","_updateTime","newTime","timePart","isAM","is12","setMinutes","setSeconds","_handleTimeChosen","hoursInt","minutesInt","secondsInt","TimePickerContainer","initialDate","_getTimeParts","initialTimeMode","defaultTimeMode","_setTimeMode","_setTempTime","_getTextFieldValue","CircularProgress","determinateDashoffset","isDeterminate","circleStyle","svgStyle","rotate","ROATE_DISTANCE","WebkitTransform","MozTransform","accessibilityProps","LinearProgress","progressClassName","progressStyle","query","md-block-centered","SelectionControlGroup","_setGroup","_group","currentValue","existsIndex","dec","inc","radios","_activeIndex","radio","groupValue","controlValue","controlStyle","controlClassName","LabelComponent","labelComponent","ControlComponent","controlComponent","_isChecked","controlProps","Checkbox","unchecked","Radio","Switch","toggled","defaultToggled","SliderLabel","TrackFill","trackFillWidth","dragging","Thumb","on","off","thumbLeft","discrete","ThumbMask","maskInked","DiscreteValue","valuePrecision","valueStr","toFixed","half","Track","trackFillStyle","trackFillClassName","discreteValueStyle","discreteValueClassName","maskLeaving","thumbStyle","thumbClassName","onThumbFocus","onThumbKeyUp","onThumbKeyDown","tickWidth","discreteTicks","ticks","amt","Slider","_calcDistance","_calcLeft","trackWidth","editable","_dragAdded","_calcTrackWidth","manualIncrement","_blurOnOutsideClick","_focusThumb","addDrag","_handleDragMove","_handleDragEnd","rm","_inkTimeout","_focusTimeout","invalid","cl","trackStyle","trackClassName","inputWidth","onDragChange","discreteInkTransitionTime","stepPrecision","rightChildren","_handleTextFieldChange","_handleDragStart","_setTrack","_isTextField","_updatePosition","_track","isNewValue","_isInTextField","isDiscreteValue","_isValidClassList","track","_handleIncrement","incrementedValue","disableTransition","newValue","_animateDiscreteInk","wait","_thumb","Snackbar","onDismiss","toast","_fab","_clearTimeout","_handleAutohide","autohide","autohideTimeout","_handleWindowBlur","_eventType","_handleWindowFocus","onAppear","autoFocusAction","btnProps","CHAINED_TOAST_DELAY","SnackbarContainer","_isMultiline","innerHTML","_initAndToast","_initTimeout","_createLeaveTimer","_leaveTimeout","_createSwapTimer","_swapTimeout","toasts","_dismissTimeout","dismiss","SVGIcon","_getIds","use","labels","desc","descId","titleAttr","xlinkHref","Function","__g","core","__e","it","that","aFunction","isObject","exec","require$$0","is","require$$2","S","valueOf","dP","P","Attributes","anObject","toPrimitive","IE8_DOM_DEFINE","bitmap","createDesc","$export","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","B","IS_WRAP","W","expProto","C","virtual","R","hide","U","cof","IObject","toInteger","store","px","shared","uid","arrayIndexOf","IS_INCLUDES","$this","fromIndex","toIObject","toLength","toIndex","IE_PROTO","names","$keys","enumBugKeys","$assign","A","Symbol","K","T","aLen","getSymbols","gOPS","isEnum","pIE","getKeys","_assign2","_assign","ObjectProto","getPrototypeOf","KEY","exp","fails","$getPrototypeOf","$Object","_defineProperty2","_defineProperty","Properties","Empty","createDict","iframeDocument","iframe","contentWindow","open","write","lt","dPs","USE_SYMBOL","def","TAG","tag","stat","IteratorPrototype","NAME","setToStringTag","ITERATOR","BUGGY","returnThis","Base","DEFAULT","IS_SET","FORCED","$iterCreate","methods","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","Iterators","values","redefine","$at","TO_STRING","pos","charCodeAt","iterated","_t","_i","_k","Arguments","TO_STRING_TAG","collections","Collection","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","meta","NEED","fastKey","getWeak","onFreeze","$Symbol","wksExt","symbols","hiddenKeys","gOPN","windowNames","getWindowNames","gOPD","getOwnPropertyDescriptor","$GOPD","$DP","gOPNExt","$JSON","JSON","_stringify","stringify","HIDDEN","wks","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","USE_NATIVE","QObject","setter","findChild","setSymbolDesc","DESCRIPTORS","$fails","_create","D","protoDesc","wrap","sym","isSymbol","iterator","$defineProperty","$defineProperties","enumKeys","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","$set","require$$3","wksDefine","for","keyFor","keyOf","useSetter","useSimple","replacer","$replacer","require$$5","require$$4","_iterator2","_iterator","_symbol2","_symbol","_typeof","_typeof3","_typeof2","check","buggy","_setPrototypeOf2","_setPrototypeOf","_create2","eventName","handler","attachEvent","srcElement","currentTarget","detachEvent","RESISTANCE_COEF","UNCERTAINTY_THRESHOLD","params","startIndex","startX","viewLength","resistance","indexMax","newStartX","_constant2","_constant","displaySameSlide","oldChildren","oldKey","q","_checkIndexBounds","_computeIndex","_getDisplaySameSlide","_mod","addEventListenerEnhanced","_on2","_off2","injectStyle","styleInjected","createTransition","easeFunction","applyRotationMatrix","touch","axis","rotationMatrix","axisProperties","adaptMouse","touches","getDomTreeShapes","rootNode","domTreeShapes","hasAttribute","findNativeHandler","goingForward","scrollPosition","areNotAtStart","areNotAtEnd","clientLength","scrollLength","nodeHowClaimedTheScroll","_extends3","_extends2","_objectWithoutProperties3","_objectWithoutProperties2","_getPrototypeOf2","_getPrototypeOf","_classCallCheck3","_classCallCheck2","_createClass3","_createClass2","_possibleConstructorReturn3","_possibleConstructorReturn2","_inherits3","_inherits2","_properties2","_on","_off","slide","WebkitFlexShrink","flexShrink","overflowX","x-reverse","overflowY","y-reverse","flexDirection","translate","SwipeableViews","_Component","_ref","containerNode","ignoreNextScrollEvents","lastX","vx","startY","isSwiping","started","transitionListener","touchMoveListener","activeSlide","handleSwipeStart","computedStyle","transformValues","rootStyle","tranformNormalized","handleSwipeMove","_this$props","ignoreNativeScroll","onSwitching","dx","dy","_reactSwipeableViewsCore","constant","computeIndex","isDragging","indexCurrent","handleTouchStart","handleSwipeEnd","indexLatest","delta","indexNew","hysteresis","onChangeIndex","handleTransitionEnd","handleTouchEnd","handleMouseDown","handleMouseUp","handleMouseLeave","handleMouseMove","onMouseMove","handleScroll","onScroll","swipeableViews","slideUpdateHeight","updateHeight","isFirstRender","disableLazyLoading","heightLatest","getDisplaySameSlide","animateTransitions","onTransitionEnd","animateHeight","containerStyleProp","enableMouseEvents","slideStyleProp","slideStyle","slideClassName","other","touchEvents","mouseEvents","WebkitTransition","additionalTranstion","WebkitFlexDirection","indexChild","hidden","data-swipeable","_SwipeableViews2","_SwipeableViews","TabPanel","controlledById","TabsContainer","_handleTabChange","tabId","tabControlsId","tabChildren","onTabChange","activeTabIndex","_handleSwipeChange","_resizePanel","activePanel","panelHeight","defaultTabIndex","panelStyle","panelClassName","panelComponent","slideHeightProp","swipeableViewsStyle","swipeableViewsClassName","headerComponent","headerZDepth","labelAndIcon","swipeableViewsProps","tabsEl","tab","controlsId","childrenProps","tabs","prominentToolbar","toolbarProps","baseSlideStyle","TabIndicator","MenuTab","_toggleVisible","tabStyle","tabClassName","overflowAtIndex","TabOverflowButton","MOBILE_TAB_MIN_WIDTH","DESKTOP_TAB_MIN_WIDTH","Tabs","_positionElements","initialRender","overflowMenu","_shouldAlign","_calcPaddingLeft","_calcOverflowIndex","indicatorPosition","_calcIndicatorPosition","allTabs","containerWidth","activeWidth","activeOffset","inFullViewRight","_mapToOverflowTabProps","tabEl","handleTabChange","_nextIndexes","increment","overflowIndex","visibleAmt","_showNextTabs","_showPreviousTabs","indicatorWidth","prevLabels","alignToKeyline","totalWidth","indicatorVisible","indicatorOffset","activeTabClassName","inactiveTabClassName","overflowMenuLabel","overflowMenuIcon","overflowMenuIconChildren","overflowMenuIconClassName","nextControl","previousControl","Tab","inactiveClassName"],"mappings":"2XAWA,SAASA,EAAkBC,GACzB,OAAO,WACL,OAAOA,GCDX,SAASC,EAASC,GACjB,GAAY,OAARA,QAAwBC,IAARD,EACnB,MAAM,IAAIE,UAAU,yDAGrB,OAAOC,OAAOH,GCJf,SAASH,EAAkBC,GACzB,OAAO,WACL,OAAOA,GCHX,SAAwBM,EAASC,EAAOC,OAAOC,yDAAQ,oBACtB,IAAjBF,EAAME,GAAyBF,EAAME,GAASD,EAAMC,GCJpE,SAAwBC,EAAKC,EAAKC,UAC3BD,EAEOC,GAASA,EAAKC,OAInBR,OAAOO,KAAKD,GAAKG,OAAO,mBAA8B,IAAvBF,EAAKG,QAAQC,KAAaC,OAAO,SAACC,EAAUF,YACvEA,GAAOL,EAAIK,GAEbE,OANAP,KCMX,SAAwBQ,EAAaC,EAAMC,EAAIC,OACxCD,SACI,KAGJC,IACEC,QACYC,SAASC,cAAc,aAG/BF,QAGLG,EAAUJ,EAAOK,WAAW,UAC7BD,SACI,SAGHE,EAASC,OAAOC,iBAAiBT,GACnCU,EAAOH,EAAOG,SAGbA,EAAM,KAEHC,EAAYJ,EAAOK,eAAcL,EAAOM,eAAcN,EAAOO,aACzDP,EAAOQ,cAAaR,EAAOS,gBAAeT,EAAOU,eAAcN,WAGnED,KAAOA,EACRL,EAAQa,YAAYnB,GAAMoB,MC5BnC,SAAwBC,wEACtBC,UAAAA,oBACAtB,KAAAA,oBACAuB,WAAAA,oBACAC,SAAAA,oBACAC,MAAAA,oBACAC,KAAAA,oBACAC,QAAAA,oBACAC,UAAAA,oBACAC,QAAAA,oBACAC,IAAAA,oBACAC,KAAAA,oBACAC,MAAAA,gBACMC,eACFC,EAAS,YACTZ,EACEE,EACO,oBACAC,EACA,iBACAI,EACA,mBAEAM,cACInC,IAAS2B,IAAYC,IAAcF,uBACxBA,4BACKA,GAAQC,8BACND,GAAQE,oBAClBE,GAAOH,sBACLG,GAAOF,IAIvBO,oBACUZ,IAAeI,IAAYC,IAAcG,wBACnCA,2BACGJ,iCACMA,GAAWK,6BACfJ,mCACMA,GAAaI,IAI5CG,GAAGD,EAAQD,GC1DpB,SAAwBG,eAAqBC,IAAAA,QAASC,IAAAA,OAAQC,IAAAA,iCAAoBC,0DACzEL,iBAAG,2CACiBE,KAAaE,IAAkBD,0BACtCA,EAAWA,yBACXA,aAAmBA,GAAUD,GAAWE,cACtDC,ICCR,SAAwBC,EAAQxC,EAAIyC,MACR,mBAAfzC,EAAGwC,eACLxC,EAAGwC,QAAQC,WAGdC,EAAWD,EAAKE,cAClBC,EAAO5C,EAAG6C,cACPD,GAAQA,EAAKC,eAAe,IAC7BD,EAAKE,WAAaJ,SACbE,IAGFA,EAAKC,qBAGP,KCVT,SAAwBE,EAAe/C,OAChCA,SACI,EACF,GAAoB,UAAhBA,EAAG8C,gBACL,MAGHE,EAAOhD,EAAGiD,aAAa,cACb,aAATD,GAAgC,UAATA,GAA6B,YAATA,ECGpD,SAAwBE,EAA4BC,EAAGC,OAASC,6DAAsBC,6DAC9E3D,EAAMwD,EAAEI,OAASJ,EAAEK,QACnBC,EAAQH,GAAiB3D,IAAQ+D,GACjCC,EAAQhE,IAAQiE,GAEdC,EAAYV,EAAEW,OAAdD,WAEJJ,IAAUI,EAAQE,MAAM,2BAA0E,SAA7CZ,EAAEW,OAAOb,aAAa,sBAE3Ee,iBAGAL,GAASZ,EAAeI,EAAEW,QAAS,KAC/BG,EAAOzB,EAAQW,EAAEW,OAAQ,QACzBI,EAASD,EAAOA,EAAKE,cAAc,oBAAsB,YAC3DD,KACKE,SAGF,WAGJT,GAASN,GAAkBI,OACtBN,IAED,GC3CX,SAAwBkB,EAAeC,EAAmBC,gBAG1CA,WAFED,EAAkBE,aAAeF,EAAkBG,MAAQ,kBCA7E,SAAwBC,EAAgBC,OAChCC,YAAgC,MAAdD,EAAoB,OAAS,mBACnB,IAAvBnE,OAAOqE,YACTrE,cAAcmE,EAAUhC,wBACU,gBAA/BxC,SAAS2E,YAAc,IAC1B3E,SAAS4E,gBAAgBH,GAEzBzE,SAAS6E,KAAKJ,GCJzB,SAAwBK,EAAejF,OAChCA,SACMkF,KAAM,KAAMC,MAAO,UAGxBC,EAAOpF,EAAGqF,oCAERD,EAAKF,KAAOR,EAAgB,SAC7BU,EAAKE,IAAMZ,EAAgB,MCVpC,SAAwBa,EAAapC,UAC5BA,EAAEqC,SAAWC,KACdtC,EAAEuC,SCUV,SAAgBC,EAAcC,EAAK5F,EAAI6F,EAAWC,EAAUC,UACnD/F,GAAM4F,EAAM,MAAQ,mCACjBC,EACRC,IACAE,QAAoBC,SAAS,GAASF,IAa1C,SAAgBG,EAAclG,EAAIyC,EAAMqD,EAAUC,UACzCJ,GAAc,EAAM3F,EAAIyC,EAAMqD,EAAUC,GAYjD,SAAgBI,EAAiBnG,EAAIyC,EAAMqD,EAAUC,UAC5CJ,GAAc,EAAO3F,EAAIyC,EAAMqD,EAAUC,GCxClD,SAAwBK,EAAiB3D,EAAMqB,EAAQgC,OAC/C9F,EAAuB,mBAAX8D,GAAyBA,EAASA,EAAStD,OACvD6F,EAAuB,mBAAXvC,EAAwBA,EAASgC,IAWhDQ,iBAAiB7D,EATJ,SAAV8D,OACFC,kBACEH,KACClD,KAGFsD,oBAAoBhE,EAAM8D,GAAS,KAGL,GClBrC,SAAwBG,EAAoBC,EAAGC,UACtCC,KAAKC,KAAMH,EAAIA,EAAMC,EAAIA,GCGlC,SAASlI,EAAkBC,GACzB,OAAO,WACL,OAAOA,GCZI,SAASoI,EAAkB/E,EAAWgF,EAAUC,UACzDjF,GAAagF,EACRE,qBAAUC,cAAenF,MAG3BiF,ECMT,SAAwBG,EAA2Bf,OAAIgB,kEACzB,IAAjBC,IAAkD,oBAAX9G,OAAwB,KAClE+G,EAAK/G,OAAOgH,UAAUC,UACtBC,EAAMH,EAAGxD,MAAM,gBACf4D,EAASJ,EAAGxD,MAAM,eACT2D,GAAOC,IAAWJ,EAAGxD,MAAM,sBAG/BiB,KAAK4C,MAAMC,OAAS,cAIhBrH,QAAU6G,EAAU,MAAQ,4BACpC,QAAShB,GClBpB,SAAwByB,gBACa,IAAxBtH,OAAOuH,aACTvH,OAAOuH,eAAeC,gBACU,IAAvB7H,SAAS8H,WAAyD,SAA5B9H,SAAS8H,UAAUxF,KAClEtC,SAAS8H,UAAUC,cAAcnI,KAGnC,GCHT,SAAwBoI,EAAwBhF,OAC1CiF,SACItE,EAA6BX,EAA7BW,OAAQuE,EAAqBlF,EAArBkF,QAASC,EAAYnF,EAAZmF,QACnBvI,EAAO+H,IACP3G,EAAQ0F,KAAK0B,MAAMzI,EAAaC,EAAM+D,IAAW,OAClD/D,GAAQ+D,EAAO0E,UAAUC,SAAS,0BAC5BC,SAASlI,OAAOC,iBAAiBqD,GAAQlD,SAAU,2BAIpDyH,EAAUlH,MACXmH,MAKL9H,OAAOuH,aAAc,KACjBE,EAAYzH,OAAOuH,kBACrBE,EAAUU,WAAY,KAClBC,EAAQX,EAAUY,WAAW,GAAGC,aAClC1D,EAAO,QACPwD,EAAMG,eAAgB,KAClBC,EAAQJ,EAAMG,iBAChBC,EAAMxJ,OAAS,MACVwJ,EAAM,QAIZ5D,EAAM,KACH6D,EAAO9I,SAASC,cAAc,UAC/B8I,YAAY/I,SAASgJ,eAAeC,OACnCC,WAAWJ,KACVA,EAAK5D,4BAENiE,EAAaL,EAAKM,aACbC,YAAYP,KACZQ,mBAGNrE,UAIJ,KC9CT,SAAwBsE,EAAU1J,eACN,IAAfA,EAAG2J,cAAiD,IAAf3J,EAAG4J,SACxCC,EAAG7J,EAAG2J,QAASG,EAAG9J,EAAG4J,cACI,IAAlB5J,EAAG+J,iBAAsD,IAAjB/J,EAAGgK,WAClDH,EAAG7J,EAAG+J,WAAYD,EAAG9J,EAAGgK,YAG1BH,EAAG,EAAGC,EAAG,GCRpB,SAAwBG,EAAcC,UAQ7B1J,eAAe0J,IAAe/J,SAAS4E,yBAAyBmF,GCJzE,SAAwBC,EAASnK,OAC1BA,eAICoF,EAAOpF,EAAGqF,wBACVC,EAAMF,EAAKE,KAAO,EAClBH,EAAQC,EAAKD,OAAS8E,EAAc,SACpCG,EAAShF,EAAKgF,QAAUH,EAAc,UACtC/E,EAAOE,EAAKF,MAAQ,SAEnBI,GAAOH,GAASiF,GAAUlF,IAAUI,MAAKH,QAAOiF,SAAQlF,QCtBjE,SAESmF,EAAkBC,EAASC,EAAOC,SACMF,EAAQjF,wBAAzCoF,IAANvF,KAAwBwF,IAAPvF,QACsBoF,EAAMlF,wBAAvCsF,IAANzF,KAAwB0F,IAAPzF,MACnB0F,EAASN,EAAMO,YAAcN,EAE7BtF,EAAOyF,EAAYE,EACnB1F,EAAQyF,EAAaC,EAErBE,EAA2B,IAAdJ,GAAmBV,EAAc,WAAaW,SAC1DH,EAAYvF,GAAQwF,EAAavF,GAAS4F,EAGnD,SAASC,EAAgBV,EAASC,EAAOU,EAAQT,SACAF,EAAQjF,wBAA1C6F,IAAL5F,IAAuB6F,IAARf,SACwBG,EAAMlF,wBAAxC+F,IAAL9F,IAAuB+F,IAARjB,OACjBS,EAASI,EAAOK,aAAed,EAE/BO,EAA0B,IAAbK,GAAkBnB,EAAc,YAAcoB,SAC1DH,EAAWE,EAAWP,GAAUM,EAAcC,EAAWP,GAAUE,EAc5E,SAAwBQ,EAAcjB,EAASC,EAAOU,EAAQO,EAAmBC,MAC3EnB,IAAY9J,cACP,EACF,GAAI8J,EAAQT,GAAKS,EAAQR,EAAG,KACzBD,EAASS,EAATT,EAAGC,EAAMQ,EAANR,UACDA,GAAKkB,EAAgBlB,EAAGS,EAAOU,EAAQO,MAC5C3B,GAAKQ,EAAkBR,EAAGU,EAAOkB,UAGjCT,EAAgBV,EAASC,EAAOU,EAAQO,IAC7CnB,EAAkBC,EAASC,EAAOkB,GC2btC,SAASC,EAAQC,GACb,OAAOC,WAAWD,IAAU,EAUhC,SAASE,EAAetL,GAGpB,OAFgBuL,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,GAErCtM,OAAO,SAAUuM,EAAMjC,GAGpC,OAAOiC,EAAOT,EAFFnL,EAAO,UAAY2J,EAAW,YAG3C,GASP,SAASkC,EAAY7L,GAIjB,IAAK,IAFD8L,KAEKC,EAAI,EAAGC,GAHC,MAAO,QAAS,SAAU,QAGTD,EAAIC,EAAK/M,OAAQ8M,GAAK,EAAG,CACvD,IAAIpC,EAAWqC,EAAKD,GAEhBX,EAAQpL,EAAO,WAAa2J,GAEhCmC,EAASnC,GAAYwB,EAAQC,GAGjC,OAAOU,EAUX,SAASG,EAAkB1I,GACvB,IAAI2I,EAAO3I,EAAO4I,UAElB,OAAOC,EAAe,EAAG,EAAGF,EAAKtL,MAAOsL,EAAKrE,QASjD,SAASwE,EAA0B9I,GAG/B,IAAI+I,EAAc/I,EAAO+I,YACrBC,EAAehJ,EAAOgJ,aAU1B,IAAKD,IAAgBC,EACjB,OAAOC,GAGX,IAAIxM,EAASE,iBAAiBqD,GAC1BuI,EAAWD,EAAY7L,GACvByM,EAAWX,EAASnH,KAAOmH,EAASlH,MACpC8H,EAAUZ,EAAS/G,IAAM+G,EAASjC,OAMlCjJ,EAAQuK,EAAQnL,EAAOY,OACvBiH,EAASsD,EAAQnL,EAAO6H,QAwB5B,GApByB,eAArB7H,EAAO2M,YAOHrG,KAAK0B,MAAMpH,EAAQ6L,KAAcH,IACjC1L,GAAS0K,EAAetL,EAAQ,OAAQ,SAAWyM,GAGnDnG,KAAK0B,MAAMH,EAAS6E,KAAaH,IACjC1E,GAAUyD,EAAetL,EAAQ,MAAO,UAAY0M,KAQvDE,EAAkBrJ,GAAS,CAK5B,IAAIsJ,EAAgBvG,KAAK0B,MAAMpH,EAAQ6L,GAAYH,EAC/CQ,EAAiBxG,KAAK0B,MAAMH,EAAS6E,GAAWH,EAOpB,IAA5BjG,KAAKyG,IAAIF,KACTjM,GAASiM,GAGoB,IAA7BvG,KAAKyG,IAAID,KACTjF,GAAUiF,GAIlB,OAAOV,EAAeN,EAASnH,KAAMmH,EAAS/G,IAAKnE,EAAOiH,GA4B9D,SAAS+E,EAAkBrJ,GACvB,OAAOA,IAAW3D,SAAS4E,gBAS/B,SAASwI,EAAezJ,GACpB,OAAK0J,GAIDC,GAAqB3J,GACd0I,EAAkB1I,GAGtB8I,EAA0B9I,GAPtBiJ,GAiBf,SAASW,EAAmBC,GACxB,IAAI9D,EAAI8D,EAAI9D,EACRC,EAAI6D,EAAI7D,EACR3I,EAAQwM,EAAIxM,MACZiH,EAASuF,EAAIvF,OAGbwF,EAAmC,oBAAnBC,gBAAiCA,gBAAkB7O,OACnEoG,EAAOpG,OAAO8O,OAAOF,EAAO7B,WAWhC,OARAgC,GAAmB3I,GACfyE,EAAGA,EAAGC,EAAGA,EAAG3I,MAAOA,EAAOiH,OAAQA,EAClC9C,IAAKwE,EACL3E,MAAO0E,EAAI1I,EACXiJ,OAAQhC,EAAS0B,EACjB5E,KAAM2E,IAGHzE,EAaX,SAASuH,EAAe9C,EAAGC,EAAG3I,EAAOiH,GACjC,OAASyB,EAAGA,EAAGC,EAAGA,EAAG3I,MAAOA,EAAOiH,OAAQA,GClsB/C,SAAwB4F,EAASC,UAClB,IAANA,KAAaA,ECEtB,SAAwBC,EAAUC,EAAK9L,UAChC8L,GAAsB,iBAARA,IAIa,IAAzBA,EAAIzO,QAAQ2C,GACZ8L,EAAIC,WAAU/L,EAJZ8L,ECHX,SAAwBE,EAAUC,EAAKC,EAAKC,UACnCF,GAAOC,GAAOD,GAAOE,ECJ9B,SAAwBC,eACtBC,IAAAA,KACAC,IAAAA,OACA1H,IAAAA,KACA2H,IAAAA,SACArN,IAAAA,SACAG,IAAAA,QACAC,IAAAA,UACAI,IAAAA,MACA8M,IAAAA,YACAC,IAAAA,QACAC,IAAAA,KACAC,IAAAA,MACAC,IAAAA,cAEMC,EAAaR,GAAQzH,EACrBkI,EAAeR,GAAUC,EACzBQ,EAAeF,IAAeL,GAAiBM,GAAgBN,EAC/DQ,IAAuB9N,GAAY4N,IAAiBN,GACpDK,GAAcL,KACdnN,GAAWC,sBANbY,0DAQGL,iBAAG,4BACQwM,GAASnN,GAAYoN,oBAClBpN,GAAYoN,iBACf1H,GAAQ2H,qBACJA,iBACJF,GAAQC,mBACNpN,GAAYQ,4BACHR,GAAYoN,4BACZpN,GAAY4N,GAAgBL,kBACtCE,yBACCC,EAAkBL,GAAYI,QAChD,wBAAyBJ,GAAYG,QACrC,gCAAiCxN,GAAYG,GAAWK,GAASqN,QACjE,kCAAmC7N,GAAYI,GAAaI,GAASqN,QACrE,qBAAsB7N,QACtB,wBAAyBA,GAAYqN,QACrC,eAAgBrN,GAAYqN,GAAYE,MACvC1N,SACM6F,IAAS2H,IAAaS,aACjBA,0CAIL,OACF,YACA9M,IC7CT,SAAwB+M,EAAgBnB,UACjCA,EAEqB,IAAfA,EAAI3O,OACN2O,EAAIxL,iBAGHwL,EAAIoB,OAAO,GAAG5M,cAAgBwL,EAAIqB,UAAU,EAAGrB,EAAI3O,QALpD2O,ECJX,SAAwBsB,EAAUzP,WAC5B0P,SACA9M,EAAO5C,EACJ4C,GAAQA,EAAK2G,YAAY,IAC1B3G,EAAK4F,aACH5F,EAAK4F,UAAUC,SAAS,mBAClB7F,MACH,CAAA,GAAIA,EAAK4F,UAAUC,SAAS,oCAC1B7F,EACF,GAAIA,EAAK4F,UAAUC,SAAS,wCAE1B7F,EAAK2G,WAAWA,WAClB,GAAImG,SACFA,IAIJ9M,EAAK2G,kBAGP,KChBT,SAAwBoG,EAAqBC,EAAOC,OAC5ClQ,EAAMiQ,EAAMrM,OAASqM,EAAMpM,eAC1B7D,IAAQmQ,IACZD,IAAmD,IAAjCA,EAAenQ,QAAQC,GCd/B,SAASoQ,EAAYL,UAC9BA,GAASA,EAAMM,WAAWA,WAAWxH,UAAUC,SAAS,oCAErDiH,IACAA,EAAMM,WAAWA,YAIjBN,ECiBT,SAAwBO,EAAe3L,EAAmBjC,yOAsBtDlD,OAAU+Q,eAAWpR,KA0BrBqR,SAAW,sFAvB0BC,KAAKlR,MAAhCgR,IAAAA,UAAW5F,IAAAA,QACb+F,MADsBC,IACY,IAAdJ,KAAqBA,EACzCK,EAAsB,OAAZjG,KAAsBA,MAClC+F,IAAaE,OAKXC,EAASC,cAAYL,MACrBV,EAAQD,EAAUe,WACnBL,SAAWJ,EAAYL,GAIvBW,EAGMD,KAAKD,eAETO,kBALS,KACRC,KAAa3E,MAAMC,KAAKuE,EAAOjH,WAAWqH,iBAAiB,eAC5DC,UAAWX,UAAWS,EAAQjR,QAAQ8Q,4CAUrCM,EAAUV,KAAK/P,QAAfyQ,QAQJV,KAAKlR,MAJE6R,KADTT,KACAhG,SAGGpL,KAFHgR,8CAKII,EAAOF,KAAKlR,MAAZoR,GACAhG,EAA4B,OAAlB8F,KAAKD,UAAqBY,EAAcA,EAAcX,KAAKD,SACrED,EAAYjR,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,oBAC9CmR,MACKQ,MAASZ,MAAa7N,GAGzB6E,iBAAC5C,QAAsBpF,GAAOoR,GAAIA,EAAIhG,QAASA,YAnEjB0G,mBAChCC,UAAY3M,EAAkB2M,YAC9BC,kBAAoB5M,EAAkB4M,oBACtCC,gBAAkB7M,EAAkB6M,kBACpC3M,YAAcH,EAAeC,EAAmB,gBAUhD8M,oBACEC,GAAUC,WACfD,GAAUE,OACVF,GAAUG,YCVlB,SAAwBC,GAAeC,EAAMC,MACvB,iBAATD,GAAqC,iBAATA,SAC9BtR,gBAAcwR,IAAYjS,IAAK+R,EAAMG,YAAaH,IACpD,GAAII,iBAAeJ,UACjBA,MAGDK,EAAuDL,EAAvDK,QAASC,EAA8CN,EAA9CM,UAAWC,EAAmCP,EAAnCO,YAAgBC,KAAmBR,yCAC3DS,WACAJ,EACUK,GACHJ,EACGK,GAEAT,OAGR1S,QAAagT,GAAgBvS,IAAK+R,EAAK/R,KAAOgS,WAChDM,MACIA,YAAcA,EAAYK,IAAIb,KAG/BrR,gBAAc+R,EAAWjT,GCrClC,SAAwBqT,GAAaC,EAAYC,OAAUzQ,yDAAY,eAC/D0Q,GAAaD,GAAgC,iBAAbA,EAClCzS,cACA0S,EACGD,EAAWtS,SAASgE,cAAcsO,GAAYtS,SAASgE,cAAc,QAErEsO,UAOmB,IAAfD,OACKxS,EAAGwI,UAAUC,SAASzG,IAGlCwQ,IAAexS,EAAGwI,UAAUC,SAASzG,KACpC4F,MAAMtC,SAAUoN,EAAYhO,EAAgB,KAAO1E,EAAGgK,kBACtDxB,UAAU5C,IAAI5D,QACZ,IAAKwQ,GAAcxS,EAAGwI,UAAUC,SAASzG,GAAY,KACpDgI,EAAYnD,KAAKyG,IAAI5E,SAAS1I,EAAG4H,MAAMtC,IAAK,OAC/CkD,UAAUmK,OAAO3Q,KACjB4F,MAAMtC,IAAM,KAEVmN,IAGAzI,UAAYA,SAFR4I,SAAS,EAAG5I,ICjCzB,SAAgB6I,GAAYpQ,UAC4B,KAA9CqQ,GAAWC,IAAgBrT,QAAQ+C,GAG7C,SAAgBuQ,GAAavQ,UAC6B,KAAhDwQ,GAAYC,IAAiBxT,QAAQ+C,GAG/C,SAAgB0Q,GAAY1Q,UACiC,KAAnD2Q,GAAaC,GAASC,IAAU5T,QAAQ+C,GAGlD,SAAgB8Q,GAAO9Q,UACuC,KAApDyQ,GAAiBH,IAAgBrT,QAAQ+C,GCGnD,SAAwB+Q,aAChBC,KACFC,EAAY,KACZC,GAAa,qBAHYC,2CAIxBC,KAAK,SAAClV,EAAK2N,MACV3N,EAAK,KACD8D,WAAc9D,iBAAAA,GACP,WAAT8D,GAA8B,WAATA,IAClBqR,KAAKnV,GACQ,WAAT8D,MACG9D,IACA2N,EAAI,UAGboH,QAGHK,EAAUN,EAAKO,KAAK,MACtBN,MACU1U,OAAOO,KAAKmU,GAAW9T,OAAO,SAACN,EAAKK,YACvCoU,OAAYpU,GAAS+T,EAAU/T,GAC/BL,YAGL2U,EAAUN,GAAa,EAAIC,EAAK5H,MAAM2H,GAAa,YAClDzR,GAAG6R,EAASL,EAAWO,GAAS7F,OClCzC,SAKS8F,GAAezR,OACG0R,EAAiCC,GAAlDlB,uBAC8B,KAAjCiB,EADqDC,GAA1BrB,gBACbrT,QAAQ+C,GAClBA,EAGF0R,IAAU1R,EAAO2R,GAAYnB,WAAamB,GAAYtB,UAG/D,SAASuB,GAAe3C,EAAMC,MACxBG,iBAAeJ,UACVA,MAGDK,EAA0CL,EAA1CK,QAASC,EAAiCN,EAAjCM,UAAWrS,EAAsB+R,EAAtB/R,IAAQ2U,KAAc5C,wCAC9CK,GAAWC,EACN,KAGF9K,iBAACqN,OAAa5U,IAAKA,GAAOgS,GAAW2C,IC9B9C,SAAwBE,GAAYC,WAGzBA,GAA0B,mBAAdA,EAAEC,SAA0BD,EAAEC,YAAcD,EAAEC,UCHrE,SAAwBC,GAAOC,EAAMC,OAC9BL,GAAYI,UACR,SAGHH,EAAI,IAAIK,KAAKF,YACjBG,QAAQN,EAAEO,UAAYH,GACjBJ,ECXT,SAAwBQ,GAAWL,UAC5BJ,GAAYI,GAIV,IAAIE,KAAKF,EAAKM,cAAeN,EAAKO,WAAa,EAAG,GAHhD,KCDX,SAAwBC,GAAeR,OAC/BS,EAAMJ,GAAWL,UACR,OAARS,GAAgB,EAAIA,EAAIL,UCSjC,SAAwBM,GAASV,EAAMC,EAAQU,OACxCf,GAAYI,UACR,KACF,GAAe,IAAXC,SACF,IAAIC,KAAKF,GAGbW,MACYX,EAAKI,eAGhBP,EAAI,IAAIK,KAAKF,YACjBG,QAAQ,KACRS,SAASf,EAAEU,WAAaN,GAEL,IAAjBU,GAAsBA,GAAgBH,GAAeX,MAErDM,QAAQQ,GAGLd,EC5BT,SAAwBgB,GAAQb,EAAMC,OAC/BL,GAAYI,UACR,SAGHH,EAAI,IAAIK,KAAKF,YACjBc,YAAYjB,EAAES,cAAgBL,GAEzBJ,ECLT,SAAwBkB,GAAQf,EAAMC,EAAQe,EAAML,UAC1CK,OACD,WACIjB,GAAOC,EAAMC,OACjB,WACIS,GAASV,EAAMC,EAAQU,OAC3B,WACIE,GAAQb,EAAMC,kBAEdD,GCZb,SAAwBiB,GAAWC,EAAIC,OAAIC,iEACpCF,GAAOC,KAEAvB,GAAYsB,KAAQtB,GAAYuB,KAIrCD,EAAGZ,gBAAkBa,EAAGb,cALtBc,ECDX,SAAwBC,GAAYH,EAAIC,OAAIC,iEACrCF,GAAOC,EAILF,GAAWC,EAAIC,EAAIC,IAAkBF,EAAGX,aAAeY,EAAGZ,WAHxDa,ECFX,SAAwBE,GAAUJ,EAAIC,OAAIC,iEACnCF,GAAOC,EAILE,GAAYH,EAAIC,EAAIC,IAAkBF,EAAGd,YAAce,EAAGf,UAHxDgB,ECJX,SAAwBG,GAAMC,EAAKjK,UAC5BiK,EAGEA,EAAIxW,OAAO,SAACyW,EAAQ3E,EAAMC,UAC/BA,EAAQxF,GAAS,eACTkK,IAAQD,EAAIpK,MAAM2F,EAAOA,EAAQxF,KACrCkK,UCPR,SAAwBC,GAAU1B,OAAM2B,yDAAQ,MACzC/B,GAAYI,UACR,SAGHH,EAAI,IAAIK,KAAKF,YACjB4B,SAASD,EAAO,EAAG,EAAG,GAEjB9B,ECFT,SAAwBgC,GAAY7B,OAAM8B,yDAAM,MACzClC,GAAYI,UACR,SAGHH,EAAI,IAAIK,KAAKF,GACbS,EAAMT,EAAK+B,SACXC,EAAQnC,EAAEO,UAAYK,EAAOqB,SAC5B,IAAI5B,KAAKL,EAAEM,QAAQ6B,IChB5B,SAAwBC,GAAcjC,EAAMkC,YACrCtC,GAAYI,KAAUJ,GAAYsC,KAI5B,IAAIhC,KAAKF,EAAKM,cAAeN,EAAKO,WAAY,GAC9C,IAAIL,KAAKgC,EAAU5B,cAAe4B,EAAU3B,WAAa,EAAG,GCJzE,SAAwB4B,GAAWC,EAAgBC,EAASC,EAAaC,OACnEC,mBACgB,IAAhBF,GACSG,KAAM,UAAWC,OAAQ,UAAWC,OAAQ,YAE5CF,KAAM,UAAWC,OAAQ,WAG/B,IAAIN,EAAeC,EAASG,GAAQA,OAAOD,GCNpD,SAAwBK,GAAiBR,EAAgBC,EAASC,EAAaC,OACzEZ,SACAkB,SACAC,SACAC,SACAC,SACAjE,SACEkE,EAAYd,GAAWC,EAAgBC,EAASC,EAAaC,OAI/C,IAAhBD,EAAsB,OACIW,EAAU9T,MAAM,gDACO8T,EAAU9T,MAAM,sDAC9D,OACc8T,EAAU9T,MAAM,yCACD8T,EAAU9T,MAAM,+CAGhD+T,gBACAnE,GAAaA,EAAUnU,WACZmU,EAAUK,KAAK,IAAI5F,SAGd,IAAhB8I,mBAGSS,EAAkBF,UAClBG,EAAkBF,iCAOpBC,EAAkBF,gBC9C/B,SAASM,GAAgBC,EAAIC,EAAIC,EAAGrO,EAAGC,UACpBjD,KAAKsR,IAAIH,EAAKnO,EAAG,GAAKhD,KAAKsR,IAAIF,EAAKnO,EAAG,IACrCjD,KAAKsR,IAAID,EAAG,GAGjC,SAASE,GAAUC,UACVA,GAAW,IAAMxR,KAAKyR,IAmB/B,SAAwBC,GAAkBC,EAAOC,EAAQC,EAAajB,EAASkB,OACvE9O,EAAI2O,EAAM3O,EAAI4O,EAAO5O,EACrBC,EAAI0O,EAAM1O,EAAI2O,EAAO3O,EACrB8O,EAAUR,GAAUvR,KAAKgS,MAAM/O,EAAGD,IAClCiP,EAAUrB,EAAU,GAAK,GACzBsB,EAAa,IAAMD,EACrB3B,EAAOtQ,KAAK0B,MAAMqQ,EAAUG,UAIvBtB,EAAU,GAAK,GAGb,OACDqB,IAMLrB,IAAYkB,EAAQ,KACjBK,EAAajB,GAAgB,EAAG,EAAGW,EAAa7O,EAAGC,IAE3C,IAATqN,IAAe6B,GAAyB,IAAT7B,GAAc6B,QACxC,WAIL7B,EC9CT,SAAwB8B,GAAS9B,EAAMZ,OAC/B2C,EAAI,IAAIpE,KAAKqC,EAAKzC,oBACtB8B,SAAS0C,EAAEC,WAAa5C,GACnB2C,ECET,SAAwBE,GAAWC,EAAS9K,EAAKC,OAC3C8K,EAAOD,8DAAuB,GAAK,UACnC7K,EAAM8K,IACD/K,EACE+K,EAAO/K,MACTC,GAGF8K,ECJT,SAASC,GAAkB1P,EAAG1I,EAAO+D,EAAMuE,OACnC+P,EAAW3S,KAAK0H,IACpBpN,EACA0F,KAAK2H,IAAI,EAAG3E,EAAI3E,WAGXuE,EAAY+P,EAAWA,EAAWrY,EAAQ,IAuBnD,SAAwBsY,GAAuB5P,EAAG1I,EAAO+D,EAAMwU,EAAOC,EAAMpL,EAAKC,EAAK/E,OAChFkC,SACA6N,EAAWD,GAAkB1P,EAAG1I,EAAO+D,EAAMuE,MAC7CA,EAAW,MACL5C,KAAK0B,MAAMiR,GAAYrY,EAAQuY,IACnCC,EAAO,EAAG,KACNC,EAAWC,OAAOF,GAAMG,MAAM,KAAK,GACnCC,OAAgC,IAAbH,GAA4BA,EAASpa,OAAS,EACnEqH,KAAKsR,IAAI,GAAIyB,EAASpa,QACtB,EAEEwa,EAAUrO,EAAQoO,GAAcJ,EAAOI,GAC9B,IAAXC,GAAgBA,GAAUL,EAAO,KACzBA,EAAOK,EACG,IAAXA,OACAA,KAIFrO,EAAQ+N,EAAQ,MAClB/N,EAAQgO,EAAQpL,SAEjBA,EAAMoL,EAAO9S,KAAK0B,MAAMiR,EAAW,IAAME,mBAIvC7S,KAAK2H,IAAI,EAAG3H,KAAK0H,IAAI,IAAKiL,UAC7B3S,KAAK2H,IAAID,EAAK1H,KAAK0H,IAAIC,EAAK7C,KCxDvC,SAAwBsO,GAAWC,EAAMC,EAAIC,OACrCC,EAAUF,EAAGzR,SAASwR,EAAM,WAEd,iBAATA,EACFE,KACAC,EAAUD,EACbC,KAGIA,EAAUH,EAAKI,QAAQ,SAAU,ICtB7C,SAAwBC,GAAiBC,SACZ,mBAAbA,EAAIC,KACW,mBAApBD,EAAIC,MAAOA,KAC+B,mBAA1CD,EAAIC,MAAOA,MAAOC,oBCK7B,SAAShc,GAAkBC,GACzB,OAAO,WACL,OAAOA,GC4BX,SAAwBgc,UAAa3T,IAAAA,SAAU4T,IAAAA,YAAgB1b,mCACzD4E,EAASoD,GAAM2T,SAASC,KAAK9T,GAC3B+T,EAAcjX,EAAO5E,SAEvBA,EAAM8b,MAAO,KACXC,EAAcF,EACdH,YAEGK,eACSA,EAAYrT,OAAOsC,SAAU,kBAIpChD,GAAMgU,aAAapX,EAAQmX,GAClCF,EAAY/T,SACZE,iBAACiU,OAAiBxb,IAAI,oBAAuBT,aAI1C4E,wKjExCLsX,GAAgB,aAEpBA,GAAcC,YAAc3c,EAC5B0c,GAAcE,iBAAmB5c,GAAkB,GACnD0c,GAAcG,gBAAkB7c,GAAkB,GAClD0c,GAAcI,gBAAkB9c,EAAkB,MAClD0c,GAAcK,gBAAkB,WAC9B,OAAOrL,MAETgL,GAAcM,oBAAsB,SAAU/c,GAC5C,OAAOA,GAGT,OAAiByc,ekEJEO,EAAWvE,EAAQzQ,EAAGC,EAAGgV,EAAGnH,EAAGtR,EAAG0Y,GACnD,IAEKF,EAAW,CACd,IAAIna,EACJ,QAAe1C,IAAXsY,EACF5V,EAAQ,IAAIsa,MAAM,qIACb,CACL,IAAIlI,GAAQjN,EAAGC,EAAGgV,EAAGnH,EAAGtR,EAAG0Y,GACvBE,EAAW,GACfva,EAAQ,IAAIsa,MAAM1E,EAAOkD,QAAQ,MAAO,WACtC,OAAO1G,EAAKmI,SAERtX,KAAO,sBAIf,MADAjD,EAAMwa,YAAc,EACdxa,IjExCNya,GAAwBjd,OAAOid,sBAC/BC,GAAiBld,OAAO+M,UAAUmQ,eAClCC,GAAmBnd,OAAO+M,UAAUqQ,yBAUxC,WACC,IACC,IAAKpd,OAAOqd,OACX,OAAO,EAMR,IAAIC,EAAQ,IAAIzC,OAAO,OAEvB,GADAyC,EAAM,GAAK,KACkC,MAAzCtd,OAAOud,oBAAoBD,GAAO,GACrC,OAAO,EAKR,IAAK,IADDE,KACKlQ,EAAI,EAAGA,EAAI,GAAIA,IACvBkQ,EAAM,IAAM3C,OAAO4C,aAAanQ,IAAMA,EAKvC,GAAwB,eAHXtN,OAAOud,oBAAoBC,GAAOlK,IAAI,SAAUoK,GAC5D,OAAOF,EAAME,KAEH1I,KAAK,IACf,OAAO,EAIR,IAAI2I,KAIJ,MAHA,uBAAuB7C,MAAM,IAAI8C,QAAQ,SAAUC,GAClDF,EAAME,GAAUA,IAGf,yBADE7d,OAAOO,KAAKP,OAAOqd,UAAWM,IAAQ3I,KAAK,IAM9C,MAAO8I,GAER,OAAO,GAIQC,IAAoB/d,OAAOqd,OkEvDjB,mDCIV,WACf,SAASW,EAAK9d,EAAO+d,EAAUC,EAAeC,EAAUC,EAAcC,GAChEA,IAAWC,IAIfC,IACE,EACA,mLAMJ,SAASC,IACP,OAAOR,EAFTA,EAAKS,WAAaT,EAMlB,IAAIU,GACFC,MAAOX,EACPY,KAAMZ,EACNa,KAAMb,EACNzL,OAAQyL,EACRc,OAAQd,EACRxL,OAAQwL,EACRe,OAAQf,EAERgB,IAAKhB,EACLiB,QAAST,EACTzJ,QAASiJ,EACTkB,WAAYV,EACZ5a,KAAMoa,EACNmB,SAAUX,EACVY,MAAOZ,EACPlM,UAAWkM,EACXa,MAAOb,EACPc,MAAOd,GAMT,OAHAE,EAAea,eAAiBnD,GAChCsC,EAAerM,UAAYqM,EAEpBA,oBC9BPc,UAAiBC,OnEFfrD,GAAgB,aAEpBA,GAAcC,YAAc3c,EAC5B0c,GAAcE,iBAAmB5c,GAAkB,GACnD0c,GAAcG,gBAAkB7c,GAAkB,GAClD0c,GAAcI,gBAAkB9c,EAAkB,MAClD0c,GAAcK,gBAAkB,WAC9B,OAAOrL,MAETgL,GAAcM,oBAAsB,SAAU/c,GAC5C,OAAOA,GAGT,OAAiByc,eoEJEO,EAAWvE,EAAQzQ,EAAGC,EAAGgV,EAAGnH,EAAGtR,EAAG0Y,GACnD,IAEKF,EAAW,CACd,IAAIna,EACJ,QAAe1C,IAAXsY,EACF5V,EAAQ,IAAIsa,MAAM,qIACb,CACL,IAAIlI,GAAQjN,EAAGC,EAAGgV,EAAGnH,EAAGtR,EAAG0Y,GACvBE,EAAW,GACfva,EAAQ,IAAIsa,MAAM1E,EAAOkD,QAAQ,MAAO,WACtC,OAAO1G,EAAKmI,SAERtX,KAAO,sBAIf,MADAjD,EAAMwa,YAAc,EACdxa,OCvCiB,kDCIV,WACf,SAASwb,EAAK9d,EAAO+d,EAAUC,EAAeC,EAAUC,EAAcC,GAChEA,IAAWC,IAIfC,IACE,EACA,mLAMJ,SAASC,IACP,OAAOR,EAFTA,EAAKS,WAAaT,EAMlB,IAAIU,GACFC,MAAOX,EACPY,KAAMZ,EACNa,KAAMb,EACNzL,OAAQyL,EACRc,OAAQd,EACRxL,OAAQwL,EACRe,OAAQf,EAERgB,IAAKhB,EACLiB,QAAST,EACTzJ,QAASiJ,EACTkB,WAAYV,EACZ5a,KAAMoa,EACNmB,SAAUX,EACVY,MAAOZ,EACPlM,UAAWkM,EACXa,MAAOb,GAMT,OAHAE,EAAea,eAAiBnD,GAChCsC,EAAerM,UAAYqM,EAEpBA,oBC7BPc,UAAiBC,UC3BF,WAIf,IAAK,IAHDC,EAAMxS,UAAU1M,OAChBoU,KAEKtH,EAAI,EAAGA,EAAIoS,EAAKpS,IACvBsH,EAAKtH,GAAKJ,UAAUI,GAItB,GAAoB,KAFpBsH,EAAOA,EAAKnU,OAAO,SAAS0a,GAAK,OAAa,MAANA,KAE/B3a,OACT,OAAoB,IAAhBoU,EAAKpU,OAAqBoU,EAAK,GAE5BA,EAAKhU,OAAO,SAASyZ,EAASC,GACnC,OAAO,WACLD,EAAQsF,MAAMvO,KAAMlE,WACpBoN,EAAKqF,MAAMvO,KAAMlE,kBCET,gCChBd0S,cAAqB,EACrBA,kBAWA,SAAyB5X,GACvB,IAAKA,EACH,OAAOA,EAET,IAAI6X,KAMJ,OALAC,GAAOjE,SAASvI,IAAItL,EAAU,SAAUuD,GACtC,OAAOA,IACNqS,QAAQ,SAAUrS,GACnBsU,EAAOtU,EAAM5K,KAAO4K,IAEfsU,GApBTD,qBAwCA,SAA4BG,EAAMzF,GAIhC,SAAS0F,EAAerf,GACtB,OAAI2Z,EAAK4C,eAAevc,GACf2Z,EAAK3Z,GAGPof,EAAKpf,GARdof,EAAOA,MACPzF,EAAOA,MAYP,IAAI2F,KAEAC,KACJ,IAAK,IAAIC,KAAWJ,EACdzF,EAAK4C,eAAeiD,GAClBD,EAAY1f,SACdyf,EAAgBE,GAAWD,EAC3BA,MAGFA,EAAYpL,KAAKqL,GAIrB,IAAI7S,OAAI,EACJ8S,KACJ,IAAK,IAAIC,KAAW/F,EAAM,CACxB,GAAI2F,EAAgB/C,eAAemD,GACjC,IAAK/S,EAAI,EAAGA,EAAI2S,EAAgBI,GAAS7f,OAAQ8M,IAAK,CACpD,IAAIgT,EAAiBL,EAAgBI,GAAS/S,GAC9C8S,EAAaH,EAAgBI,GAAS/S,IAAM0S,EAAeM,GAG/DF,EAAaC,GAAWL,EAAeK,GAIzC,IAAK/S,EAAI,EAAGA,EAAI4S,EAAY1f,OAAQ8M,IAClC8S,EAAaF,EAAY5S,IAAM0S,EAAeE,EAAY5S,IAG5D,OAAO8S,kCCjET,SAASG,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAEvF,SAASogB,EAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAI7gB,UAAU,qCAEhH,SAAS8gB,EAA2BC,EAAM7T,GAAQ,IAAK6T,EAAQ,MAAM,IAAIC,eAAe,6DAAgE,OAAO9T,GAAyB,iBAATA,GAAqC,mBAATA,EAA8B6T,EAAP7T,EAElO,SAAS+T,EAAUC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAInhB,UAAU,kEAAoEmhB,GAAeD,EAASlU,UAAY/M,OAAO8O,OAAOoS,GAAcA,EAAWnU,WAAaoU,aAAexU,MAAOsU,EAAUG,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeJ,IAAYlhB,OAAOuhB,eAAiBvhB,OAAOuhB,eAAeN,EAAUC,GAAcD,EAASO,UAAYN,GA5BjetB,cAAqB,EAErB,IAAI6B,EAAWzhB,OAAOqd,QAAU,SAAUvY,GAAU,IAAK,IAAIwI,EAAI,EAAGA,EAAIJ,UAAU1M,OAAQ8M,IAAK,CAAE,IAAIoU,EAASxU,UAAUI,GAAI,IAAK,IAAI3M,KAAO+gB,EAAc1hB,OAAO+M,UAAUmQ,eAAejQ,KAAKyU,EAAQ/gB,KAAQmE,EAAOnE,GAAO+gB,EAAO/gB,IAAY,OAAOmE,GAInP6c,EAAkBpB,EAAuBqB,IAIzCC,EAAUtB,EAAuBT,IA0BjCgC,GAtBcvB,EAAuBwB,IAIzBxB,EAAuByB,KAmBrC7O,UAAW,OACX8O,aAAc,SAAsB1W,GAClC,OAAOA,KAIP2W,EAAkB,SAAUC,GAG9B,SAASD,EAAgBhiB,EAAOmB,GAC9Bqf,EAAgBtP,KAAM8Q,GAEtB,IAAIE,EAAQvB,EAA2BzP,KAAM+Q,EAAiBlV,KAAKmE,KAAMlR,EAAOmB,IA2FhF,OAzFA+gB,EAAMC,cAAgB,SAAU1hB,EAAKwS,GACnCiP,EAAME,2BAA2B3hB,IAAO,EAEpCwS,EAAUoP,oBACZpP,EAAUoP,oBAAoBH,EAAMI,qBAAqBC,KAAKL,EAAOzhB,EAAKwS,IAE1EiP,EAAMI,qBAAqB7hB,EAAKwS,IAIpCiP,EAAMI,qBAAuB,SAAU7hB,EAAKwS,GACtCA,EAAUuP,oBACZvP,EAAUuP,4BAGLN,EAAME,2BAA2B3hB,GAExC,IAAIgiB,GAAsB,EAAIC,GAAcC,iBAAiBT,EAAMliB,MAAM8H,UAEpE2a,GAAwBA,EAAoBzF,eAAevc,IAE9DyhB,EAAMU,aAAaniB,EAAKwS,IAI5BiP,EAAMW,aAAe,SAAUpiB,EAAKwS,GAClCiP,EAAME,2BAA2B3hB,IAAO,EAEpCwS,EAAU6P,mBACZ7P,EAAU6P,mBAAmBZ,EAAMa,oBAAoBR,KAAKL,EAAOzhB,EAAKwS,IAExEiP,EAAMa,oBAAoBtiB,EAAKwS,IAInCiP,EAAMa,oBAAsB,SAAUtiB,EAAKwS,GACrCA,EAAU+P,mBACZ/P,EAAU+P,2BAGLd,EAAME,2BAA2B3hB,GAExC,IAAIgiB,GAAsB,EAAIC,GAAcC,iBAAiBT,EAAMliB,MAAM8H,UAEpE2a,GAAwBA,EAAoBzF,eAAevc,IAE9DyhB,EAAMU,aAAaniB,EAAKwS,IAI5BiP,EAAMU,aAAe,SAAUniB,EAAKwS,GAClCiP,EAAME,2BAA2B3hB,IAAO,EAEpCwS,EAAUgQ,mBACZhQ,EAAUgQ,mBAAmBf,EAAMgB,mBAAmBX,KAAKL,EAAOzhB,EAAKwS,IAKvEiP,EAAMgB,mBAAmBziB,EAAKwS,IAIlCiP,EAAMgB,mBAAqB,SAAUziB,EAAKwS,GACpCA,EAAUkQ,mBACZlQ,EAAUkQ,2BAGLjB,EAAME,2BAA2B3hB,GAExC,IAAIgiB,GAAsB,EAAIC,GAAcC,iBAAiBT,EAAMliB,MAAM8H,UAErE2a,GAAuBA,EAAoBzF,eAAevc,GAE5DyhB,EAAMkB,YAAYxO,KAAKnU,GAEvByhB,EAAMvQ,SAAS,SAAU1R,GACvB,IAAIojB,EAAc9B,KAAathB,EAAM6H,UAErC,cADOub,EAAY5iB,IACVqH,SAAUub,MAKzBnB,EAAMoB,UAAYxjB,OAAO8O,OAAO,MAEhCsT,EAAMjiB,OACJ6H,UAAU,EAAI4a,GAAcC,iBAAiB3iB,EAAM8H,WAE9Coa,EAoHT,OApNApB,EAAUkB,EAAiBC,GAmG3BD,EAAgBnV,UAAU0W,mBAAqB,WAC7CrS,KAAKkR,8BACLlR,KAAKkS,eACLlS,KAAKsS,gBAGPxB,EAAgBnV,UAAU4W,kBAAoB,WAC5C,IAAIC,EAAsBxS,KAAKjR,MAAM6H,SACrC,IAAK,IAAIrH,KAAOijB,EACVA,EAAoBjjB,IACtByQ,KAAKiR,cAAc1hB,EAAKyQ,KAAKoS,UAAU7iB,KAK7CuhB,EAAgBnV,UAAU8W,0BAA4B,SAAmCC,GACvF,IAAIC,GAAmB,EAAInB,GAAcC,iBAAiBiB,EAAU9b,UAChEgc,EAAmB5S,KAAKjR,MAAM6H,SAElCoJ,KAAKS,UACH7J,UAAU,EAAI4a,GAAcqB,oBAAoBD,EAAkBD,KAGpE,IAAK,IAAIpjB,KAAOojB,EAAkB,CAChC,IAAIG,EAAUF,GAAoBA,EAAiB9G,eAAevc,IAC9DojB,EAAiBpjB,IAASujB,GAAY9S,KAAKkR,2BAA2B3hB,IACxEyQ,KAAKkS,YAAYxO,KAAKnU,GAI1B,IAAK,IAAIwjB,KAAQH,EAAkB,CACjC,IAAII,EAAUL,GAAoBA,EAAiB7G,eAAeiH,IAC9DH,EAAiBG,IAAUC,GAAYhT,KAAKkR,2BAA2B6B,IACzE/S,KAAKsS,YAAY5O,KAAKqP,KAO5BjC,EAAgBnV,UAAUsX,mBAAqB,WAC7C,IAAIC,EAASlT,KAETkS,EAAclS,KAAKkS,YACvBlS,KAAKkS,eACLA,EAAY1F,QAAQ,SAAUjd,GAC5B,OAAO2jB,EAAOvB,aAAapiB,EAAK2jB,EAAOd,UAAU7iB,MAGnD,IAAI+iB,EAActS,KAAKsS,YACvBtS,KAAKsS,eACLA,EAAY9F,QAAQ,SAAUjd,GAC5B,OAAO2jB,EAAOxB,aAAaniB,EAAK2jB,EAAOd,UAAU7iB,OAIrDuhB,EAAgBnV,UAAUwX,OAAS,WACjC,IAAIC,EAASpT,KAITqT,KAiCJ,IAAK,IAAI9jB,KAAOyQ,KAAKjR,MAAM6H,UA/Bf,SAAerH,GACzB,IAAI4K,EAAQiZ,EAAOrkB,MAAM6H,SAASrH,GAClC,GAAI4K,EAAO,CACT,IAAImZ,EAAqC,iBAAdnZ,EAAMoD,IAC7BgW,EAAeH,EAAOtkB,MAAM+hB,aAAa1W,GACzCoD,EAAM,SAAauK,GACrBsL,EAAOhB,UAAU7iB,GAAOuY,GAStByL,IAAiBpZ,GAASmZ,IAC5B/V,GAAM,EAAIgT,EAAgBlB,SAASlV,EAAMoD,IAAKA,IAQhD8V,EAAiB3P,KAAK+M,EAAQpB,QAAQvE,aAAayI,GACjDhkB,IAAKA,EACLgO,IAAKA,MAMTiW,CAAMjkB,GAIR,IAAIT,EAAQuhB,KAAarQ,KAAKlR,OAW9B,cAVOA,EAAM2kB,uBACN3kB,EAAM4kB,sBACN5kB,EAAM6kB,wBACN7kB,EAAM8kB,uBACN9kB,EAAM+hB,oBACN/hB,EAAM+kB,8BACN/kB,EAAMglB,8BACNhlB,EAAMilB,+BACNjlB,EAAMiT,UAEN0O,EAAQpB,QAAQrf,cAAcgQ,KAAKlR,MAAMiT,UAAWjT,EAAOukB,IAG7DvC,EArNa,CAsNpBL,EAAQpB,QAAQ2E,WAElBlD,EAAgB1c,YAAc,kBAG9B0c,EAAgBmD,aAChBnD,EAAgBJ,aAAeA,EAE/BlC,UAAkBsC,EAClB1C,UAAiBI,EAAiB,sCC1QlC5f,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAETiT,UACA,SAAkB7K,EAAS/R,GACzB,OAAI+R,EAAQvL,YAAoBxG,GAAa+R,EAAQvL,UAAUC,SAASzG,IAA2F,KAAnE,IAAM+R,EAAQ/R,UAAY,KAAKtC,QAAQ,IAAMsC,EAAY,MAE3Jwc,UAAiBI,EAAiB,uCCPlC5f,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAETiT,UAQA,SAAkB7K,EAAS/R,GACrB+R,EAAQvL,UAAWuL,EAAQvL,UAAU5C,IAAI5D,IAAqB,EAAIuiB,EAAW9E,SAAS1L,KAAUA,EAAQ/R,UAAY+R,EAAQ/R,UAAY,IAAMA,IALpJ,IAAIuiB,EAEJ,SAAgCjlB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAFtEigB,CAAuBiF,IAOxChG,UAAiBI,EAAiB,gBCdlC,OAAiB,SAAqB7K,EAAS/R,GACzC+R,EAAQvL,UAAWuL,EAAQvL,UAAUmK,OAAO3Q,GAAgB+R,EAAQ/R,UAAY+R,EAAQ/R,UAAUsY,QAAQ,IAAImK,OAAO,UAAYziB,EAAY,YAAa,KAAM,MAAMsY,QAAQ,OAAQ,KAAKA,QAAQ,aAAc,wBCDvNtb,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAETiT,YAAuC,oBAAXpe,SAA0BA,OAAOL,WAAYK,OAAOL,SAASC,eACzFoe,UAAiBI,EAAiB,uCCJlC5f,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAKT,IAII+Y,GAAW,GAAI,SAAU,MAAO,IAAK,MACrCC,EAAS,eACTC,EAsBJ,SAAkBzK,GAChB,IAAI0K,GAAO,IAAI/P,MAAOJ,UAClBoQ,EAAKje,KAAK2H,IAAI,EAAG,IAAMqW,EAAO9F,IAC9BgG,EAAMC,WAAW7K,EAAI2K,GAGzB,OADA/F,EAAO8F,EACAE,GA3BLE,OAAY,EAEZC,EAAS,SAAgBC,EAAQC,GACnC,OAAOD,GAAWA,EAAaC,EAAE,GAAGziB,cAAgByiB,EAAEC,OAAO,GAAlCD,GAAwC,mBARrE,SAAgC9lB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,IAFzEigB,CAAuB+F,IAazB7F,SACViF,EAAQ7Q,KAAK,SAAUsR,GACrB,IAAII,EAASL,EAAOC,EAAQ,WAE5B,GAAII,KAAU/kB,OAEZ,OADAmkB,EAASO,EAAOC,EAAQ,UACjBP,EAAM,SAAave,GACxB,OAAO7F,OAAO+kB,GAAQlf,MAO9B,IAAI0Y,GAAO,IAAIjK,MAAOJ,WAUtBuQ,EAAY,SAAmB5e,GAC7B,OAAOue,EAAIve,KAEHse,OAAS,SAAUrU,GAC3B9P,OAAOmkB,IAAqC,mBAAnBnkB,OAAOmkB,IAA0BnkB,OAAOmkB,GAAQrU,IAE3EsO,UAAkBqG,EAClBzG,UAAiBI,EAAiB,uCClDlC5f,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAETiT,eAAuBA,iBAAyBA,kBAA0BA,oBAA4BA,gBAAwBA,gBAAwBA,qBAA6BA,kBAA0BA,mBAA2BA,qBAA6BA,iBAAoB9f,EAIzR,IAII0mB,EAAY,YACZC,OAAS,EACTC,OAAgB,EAChBC,OAAe,EACfC,OAAqB,EACrBC,OAAqB,EACrBC,OAAmB,EACnBC,OAAkB,EAClBC,OAAgB,EAChBC,OAAoB,EACpBC,OAAkB,EAClBC,OAAiB,EAErB,GAfA,SAAgC7mB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAFzEigB,CAAuB+F,IAiBzB7F,QAAS,CACnB,IAAI2G,EAwCN,WAwBE,IAAK,IAvBDxe,EAAQzH,SAASC,cAAc,OAAOwH,MAEtCye,GACFC,EAAG,SAAWnjB,GACZ,MAAO,IAAMA,EAAEojB,eAEjBC,IAAK,SAAarjB,GAChB,OAAOA,EAAEojB,eAEXE,OAAQ,SAAgBtjB,GACtB,MAAO,SAAWA,GAEpB2hB,GAAI,SAAY3hB,GACd,MAAO,KAAOA,IAIduhB,EAAU1lB,OAAOO,KAAK8mB,GAEtBX,OAAgB,EAChBC,OAAe,EACfF,EAAS,GAEJnZ,EAAI,EAAGA,EAAIoY,EAAQllB,OAAQ8M,IAAK,CACvC,IAAI6Y,EAAST,EAAQpY,GAErB,GAAI6Y,EAAS,uBAAwBvd,EAAO,CAC1C6d,EAAS,IAAMN,EAAOoB,cACtBb,EAAgBW,EAAUlB,GAAQ,iBAClCQ,EAAeU,EAAUlB,GAAQ,gBACjC,OAUJ,OANKO,GAAiB,uBAAwB9d,IAAO8d,EAAgB,kBAEhEC,GAAgB,kBAAmB/d,IAAO+d,EAAe,gBAE9D/d,EAAQ,MAEC+d,aAAcA,EAAcD,cAAeA,EAAeD,OAAQA,GAjF/CiB,GAE5BjB,EAASW,EAAsBX,OAC/B7G,gBAAwB8G,EAAgBU,EAAsBV,cAC9D9G,eAAuB+G,EAAeS,EAAsBT,aAG5D/G,YAAoB4G,EAAYC,EAAS,IAAMD,EAC/C5G,qBAA6BgH,EAAqBH,EAAS,uBAC3D7G,qBAA6BiH,EAAqBJ,EAAS,uBAC3D7G,kBAA0BmH,EAAkBN,EAAS,oBACrD7G,mBAA2BkH,EAAmBL,EAAS,8BAEvD7G,gBAAwBoH,EAAgBP,EAAS,kBACjD7G,oBAA4BqH,EAAoBR,EAAS,sBACzD7G,kBAA0BsH,EAAkBT,EAAS,mBACrD7G,iBAAyBuH,EAAiBV,EAAS,6BAGrD7G,YAAoB4G,EACpB5G,qBAA6BgH,EAC7BhH,mBAA2BkH,EAC3BlH,kBAA0BmH,EAC1BnH,qBAA6BiH,EAC7BjH,gBAAwB8G,EACxB9G,gBAAwBoH,EACxBpH,oBAA4BqH,EAC5BrH,kBAA0BsH,EAC1BtH,iBAAyBuH,EACzBvH,eAAuB+G,EACvB/G,WACE4G,UAAWA,EACXmB,IAAKjB,EACLkB,SAAUhB,EACViB,OAAQf,EACRgB,MAAOf,EACPgB,SAAUlB,kCCjDZ,SAAStG,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAZvFsf,cAAqB,EACrBA,iBAAoB9f,EACpB8f,oBAYA,SAA2BoI,GACzB,IAAIC,EAAkB,aAAeD,EAAiB,UAClDE,EAAkB,aAAeF,EAErC,OAAO,SAAU9nB,GAEf,GAAIA,EAAMgoB,GAAkB,CAE1B,GAA8B,MAA1BhoB,EAAM+nB,GACR,OAAO,IAAInL,MAAMmL,EAAkB,sNAG9B,GAAsC,iBAA3B/nB,EAAM+nB,GACtB,OAAO,IAAInL,MAAMmL,EAAkB,uCAIvC,OAAO,OAzBG1H,EAAuBT,IAArC,IAIIqI,EAAc5H,EAAuBwB,IAyBzBnC,YAAoBuI,EAAY1H,QAAQnO,WAAW6V,EAAY1H,QAAQjO,OAAQ2V,EAAY1H,QAAQpB,OACjH1a,MAAOwjB,EAAY1H,QAAQjO,OAC3B4V,MAAOD,EAAY1H,QAAQjO,OAC3B6V,OAAQF,EAAY1H,QAAQjO,SAC1B2V,EAAY1H,QAAQpB,OACtB1a,MAAOwjB,EAAY1H,QAAQjO,OAC3B8V,YAAaH,EAAY1H,QAAQjO,OACjC4V,MAAOD,EAAY1H,QAAQjO,OAC3B+V,YAAaJ,EAAY1H,QAAQjO,OACjCgW,OAAQL,EAAY1H,QAAQjO,OAC5BiW,aAAcN,EAAY1H,QAAQjO,0CCfpC,SAAS+N,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAEvF,SAASogB,EAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAI7gB,UAAU,qCAEhH,SAAS8gB,EAA2BC,EAAM7T,GAAQ,IAAK6T,EAAQ,MAAM,IAAIC,eAAe,6DAAgE,OAAO9T,GAAyB,iBAATA,GAAqC,mBAATA,EAA8B6T,EAAP7T,EAElO,SAAS+T,EAAUC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAInhB,UAAU,kEAAoEmhB,GAAeD,EAASlU,UAAY/M,OAAO8O,OAAOoS,GAAcA,EAAWnU,WAAaoU,aAAexU,MAAOsU,EAAUG,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeJ,IAAYlhB,OAAOuhB,eAAiBvhB,OAAOuhB,eAAeN,EAAUC,GAAcD,EAASO,UAAYN,GAMje,SAASwH,EAAe9kB,EAAM+kB,GAS5B,OARIC,EAAOpoB,OACTooB,EAAOhL,QAAQ,SAAUzZ,GACvB,OAAOP,EAAK0D,iBAAiBnD,EAAGwkB,GAAU,KAG5C3C,WAAW2C,EAAU,GAGhB,WACAC,EAAOpoB,QACZooB,EAAOhL,QAAQ,SAAUzZ,GACvB,OAAOP,EAAK6D,oBAAoBtD,EAAGwkB,GAAU,MAtDnD/I,cAAqB,EAErB,IAAI6B,EAAWzhB,OAAOqd,QAAU,SAAUvY,GAAU,IAAK,IAAIwI,EAAI,EAAGA,EAAIJ,UAAU1M,OAAQ8M,IAAK,CAAE,IAAIoU,EAASxU,UAAUI,GAAI,IAAK,IAAI3M,KAAO+gB,EAAc1hB,OAAO+M,UAAUmQ,eAAejQ,KAAKyU,EAAQ/gB,KAAQmE,EAAOnE,GAAO+gB,EAAO/gB,IAAY,OAAOmE,GAInP+jB,EAAatI,EAAuBuI,IAIpCC,EAAgBxI,EAAuByI,IAIvCC,EAA0B1I,EAAuB2I,IAMjDrH,EAAUtB,EAAuBT,IAkBjC8I,GAdcrI,EAAuBwB,QAerCoH,GAAYzC,eAAekC,EAAO9T,KAAKqU,GAAYzC,eACnDyC,GAAYxC,cAAciC,EAAO9T,KAAKqU,GAAYxC,cAmBtD,IAeIyC,EAA0B,SAAUjH,GAGtC,SAASiH,IACP,IAAIC,EAAOjH,EAAOkH,EAElB5I,EAAgBtP,KAAMgY,GAEtB,IAAK,IAAIG,EAAOrc,UAAU1M,OAAQoU,EAAO9H,MAAMyc,GAAOpF,EAAO,EAAGA,EAAOoF,EAAMpF,IAC3EvP,EAAKuP,GAAQjX,UAAUiX,GAGzB,OAAekF,EAASjH,EAAQvB,EAA2BzP,KAAM+Q,EAAiBlV,KAAK0S,MAAMwC,GAAmB/Q,MAAMoY,OAAO5U,KAAiBwN,EAAMG,oBAAsB,SAAUkH,GAC9KrH,EAAMliB,MAAMsoB,OACdpG,EAAMsH,WAAW,SAAUD,EAAMrH,EAAMliB,MAAMypB,eAE7CF,KAEDrH,EAAMY,mBAAqB,SAAUyG,GAClCrH,EAAMliB,MAAMyE,MACdyd,EAAMsH,WAAW,QAASD,EAAMrH,EAAMliB,MAAM0pB,cAE5CH,KAEDrH,EAAMe,mBAAqB,SAAUsG,GAClCrH,EAAMliB,MAAMkoB,MACdhG,EAAMsH,WAAW,QAASD,EAAMrH,EAAMliB,MAAM2pB,cAE5CJ,KAhBGH,EAkBJD,EAAQxI,EAA2BuB,EAAOkH,GAiH/C,OA9IAtI,EAAUoI,EAAyBjH,GAgCnCiH,EAAwBrc,UAAU0W,mBAAqB,WACrDrS,KAAK0Y,yBACL1Y,KAAK2Y,uBAGPX,EAAwBrc,UAAUid,qBAAuB,WACvD5Y,KAAK6Y,WAAY,EAEb7Y,KAAK8Y,SACPC,aAAa/Y,KAAK8Y,SAEpB9Y,KAAK2Y,mBAAmBnM,QAAQ,SAAUsM,GACxCC,aAAaD,KAGf9Y,KAAK0Y,sBAAsBtpB,OAAS,GAGtC4oB,EAAwBrc,UAAU2c,WAAa,SAAoBU,EAAeC,EAAgBH,GAChG,IAAItmB,GAAO,EAAI0mB,GAAU7Y,aAAaL,MAEtC,GAAKxN,EAAL,CAOA,IAAIZ,EAAYoO,KAAKlR,MAAMuF,KAAK2kB,IAAkBhZ,KAAKlR,MAAMuF,KAAO,IAAM2kB,EACtEG,EAAkBnZ,KAAKlR,MAAMuF,KAAK2kB,EAAgB,WAAapnB,EAAY,UAC3EwnB,EAAQ,KACRC,OAAkB,GAEtB,EAAI5B,EAAWpI,SAAS7c,EAAMZ,GAG9BoO,KAAKsZ,kBAAkBH,EAAiB3mB,GAGxC,IAAI+mB,EAAS,SAAgBxmB,GACvBA,GAAKA,EAAEW,SAAWlB,IAItBumB,aAAaK,GACTC,GAAiBA,KAErB,EAAI1B,EAActI,SAAS7c,EAAMZ,IACjC,EAAI+lB,EAActI,SAAS7c,EAAM2mB,GAE7BE,GAAiBA,IAIjBJ,GACFA,MAIAH,GACFM,EAAQxE,WAAW2E,EAAQT,GAC3B9Y,KAAK2Y,mBAAmBjV,KAAK0V,IACpBrB,GAAYzC,gBACrB+D,EAAkB/B,EAAe9kB,EAAM+mB,SAzCnCN,GACFA,KA4CNjB,EAAwBrc,UAAU2d,kBAAoB,SAA2B1nB,EAAWY,GAC1F,IAAI0gB,EAASlT,KAEbA,KAAK0Y,sBAAsBhV,MACzB9R,UAAWA,EACXY,KAAMA,IAGHwN,KAAKwZ,YACRxZ,KAAKwZ,WAAY,EAAI3B,EAAwBxI,SAAS,WACpD,OAAO6D,EAAOuG,iCAKpBzB,EAAwBrc,UAAU8d,2BAA6B,WACxDzZ,KAAK6Y,WACR7Y,KAAK0Y,sBAAsBlM,QAAQ,SAAUtd,GAI3CA,EAAIsD,KAAKoH,WAET,EAAI6d,EAAWpI,SAASngB,EAAIsD,KAAMtD,EAAI0C,aAG1CoO,KAAK0Y,sBAAsBtpB,OAAS,EACpC4Q,KAAKwZ,UAAY,MAGnBxB,EAAwBrc,UAAUwX,OAAS,WACzC,IAAIrkB,EAAQuhB,KAAarQ,KAAKlR,OAS9B,cAROA,EAAMuF,YACNvF,EAAMsoB,cACNtoB,EAAMyE,aACNzE,EAAMkoB,aACNloB,EAAMypB,qBACNzpB,EAAM0pB,oBACN1pB,EAAM2pB,oBACN3pB,EAAM8H,SACN6Z,EAAQpB,QAAQvE,aAAa2F,EAAQpB,QAAQ5E,SAASC,KAAK1K,KAAKlR,MAAM8H,UAAW9H,IAGnFkpB,EA/IqB,CAgJ5BvH,EAAQpB,QAAQ2E,WAElBgE,EAAwB5jB,YAAc,0BAGtC4jB,EAAwB/D,aAExBzF,UAAkBwJ,EAClB5J,UAAiBI,EAAiB,yCC5MlC,SAASW,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAEvF,SAASogB,EAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAI7gB,UAAU,qCAEhH,SAAS8gB,EAA2BC,EAAM7T,GAAQ,IAAK6T,EAAQ,MAAM,IAAIC,eAAe,6DAAgE,OAAO9T,GAAyB,iBAATA,GAAqC,mBAATA,EAA8B6T,EAAP7T,EAElO,SAAS+T,EAAUC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAInhB,UAAU,kEAAoEmhB,GAAeD,EAASlU,UAAY/M,OAAO8O,OAAOoS,GAAcA,EAAWnU,WAAaoU,aAAexU,MAAOsU,EAAUG,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeJ,IAAYlhB,OAAOuhB,eAAiBvhB,OAAOuhB,eAAeN,EAAUC,GAAcD,EAASO,UAAYN,GA5BjetB,cAAqB,EAErB,IAAI6B,EAAWzhB,OAAOqd,QAAU,SAAUvY,GAAU,IAAK,IAAIwI,EAAI,EAAGA,EAAIJ,UAAU1M,OAAQ8M,IAAK,CAAE,IAAIoU,EAASxU,UAAUI,GAAI,IAAK,IAAI3M,KAAO+gB,EAAc1hB,OAAO+M,UAAUmQ,eAAejQ,KAAKyU,EAAQ/gB,KAAQmE,EAAOnE,GAAO+gB,EAAO/gB,IAAY,OAAOmE,GAInP+c,EAAUtB,EAAuBT,IAIjCqI,EAAc5H,EAAuBwB,IAIrC+I,EAAoBvK,EAAuBwK,IAI3CC,EAA4BzK,EAAuB0K,IAuBnDnJ,GAVcoJ,GAAWC,UAAU1M,WAEnB0J,EAAY1H,QAAQ7B,KACrBuJ,EAAY1H,QAAQ7B,KACpBuJ,EAAY1H,QAAQ7B,MACZ,EAAIsM,GAAWE,mBAAmB,WACnC,EAAIF,GAAWE,mBAAmB,UAClC,EAAIF,GAAWE,mBAAmB,UAI1DrG,kBAAkB,EAClBC,iBAAiB,EACjBH,iBAAiB,IAGfwG,EAAqB,SAAUlJ,GAGjC,SAASkJ,IACP,IAAIhC,EAAOjH,EAAOkH,EAElB5I,EAAgBtP,KAAMia,GAEtB,IAAK,IAAI9B,EAAOrc,UAAU1M,OAAQoU,EAAO9H,MAAMyc,GAAOpF,EAAO,EAAGA,EAAOoF,EAAMpF,IAC3EvP,EAAKuP,GAAQjX,UAAUiX,GAGzB,OAAekF,EAASjH,EAAQvB,EAA2BzP,KAAM+Q,EAAiBlV,KAAK0S,MAAMwC,GAAmB/Q,MAAMoY,OAAO5U,KAAiBwN,EAAMkJ,WAAa,SAAU/f,GACzK,OAAOsW,EAAQpB,QAAQrf,cAAc4pB,EAA0BvK,SAC7Dhb,KAAM2c,EAAMliB,MAAM4kB,eAClB0D,OAAQpG,EAAMliB,MAAM6kB,iBACpBpgB,MAAOyd,EAAMliB,MAAM8kB,gBACnBoD,MAAOhG,EAAMliB,MAAM2kB,gBACnB8E,cAAevH,EAAMliB,MAAMilB,wBAC3ByE,aAAcxH,EAAMliB,MAAMglB,uBAC1B2E,aAAczH,EAAMliB,MAAM+kB,wBACzB1Z,IATE+d,EAUJD,EAAQxI,EAA2BuB,EAAOkH,GAY/C,OAjCAtI,EAAUqK,EAAoBlJ,GA6B9BkJ,EAAmBte,UAAUwX,OAAS,WACpC,OAAO1C,EAAQpB,QAAQrf,cAAc0pB,EAAkBrK,QAASgB,KAAarQ,KAAKlR,OAAS+hB,aAAc7Q,KAAKka,eAGzGD,EAlCgB,CAmCvBxJ,EAAQpB,QAAQ2E,WAElBiG,EAAmB7lB,YAAc,qBAGjC6lB,EAAmBhG,aACnBgG,EAAmBvJ,aAAeA,EAElClC,UAAkByL,EAClB7L,UAAiBI,EAAiB,6BCtFjC,WAKA,SAASrc,IAGR,IAAK,IAFD0R,KAEK3H,EAAI,EAAGA,EAAIJ,UAAU1M,OAAQ8M,IAAK,CAC1C,IAAI3N,EAAMuN,UAAUI,GACpB,GAAK3N,EAAL,CAEA,IAAI4rB,SAAiB5rB,EAErB,GAAgB,WAAZ4rB,GAAoC,WAAZA,EAC3BtW,EAAQH,KAAKnV,QACP,GAAImN,MAAM0e,QAAQ7rB,GACxBsV,EAAQH,KAAKvR,EAAWoc,MAAM,KAAMhgB,SAC9B,GAAgB,WAAZ4rB,EACV,IAAK,IAAI5qB,KAAOhB,EACX8rB,EAAOxe,KAAKtN,EAAKgB,IAAQhB,EAAIgB,IAChCsU,EAAQH,KAAKnU,IAMjB,OAAOsU,EAAQD,KAAK,KAxBrB,IAAIyW,KAAYvO,eA2BqBsC,EAAOI,QAC3CJ,UAAiBjc,EAOjB/B,OAAO+B,WAAaA,EAtCtB,y5FlFLIrC,UmFFSuF,GAAa,EAGbqK,GAAM,EACNlM,GAAQ,GAERF,GAAQ,GAKRgnB,GAAO,GACPC,GAAK,GACLC,GAAQ,GACRC,GAAO,GCNd3Z,SAKE,kBAMM,oBAMJ,eAMD,oBAMM,eC7BTC,QAKC,aAMG,iBAMC,iBAMD,aC3BKE,GAAUgN,SACpBhN,GAAU+M,OACXlN,GAAkBwZ,KAClBxZ,GAAkB4Z,WAClB5Z,GAAkB6Z,OAClB7Z,GAAkB0Z,MAClB1Z,GAAkB8Z,cACjBvN,aACApM,GAAU+M,OACXjN,GAAgB8Z,IAChB9Z,GAAgB4Z,OAChB5Z,GAAgB+Z,QAChB/Z,GAAgBga,SACf1N,gBCfUpM,GAAUC,WACvBD,GAAUyM,OACVzM,GAAUgN,SACLhN,GAAUyM,SACVzM,GAAUyM,WCEX7M,aAKM,eAMC,iBAME,kBAMC,WAMP,SClCMI,GAAUC,WACvBD,GAAU+M,OACRnN,GAAUma,SACVna,GAAUoa,UACVpa,GAAUqa,YACVra,GAAUsa,aACVta,GAAUua,QAEZna,GAAUG,2BCEZ,SAASia,EAAWC,EAAWC,GAC7B,OAAO,SAAkBzsB,EAAO+d,EAAUC,EAAeC,EAAUC,GACjE,IAAIwO,EAAoB1O,GAAiB,gBACrC2O,EAAmBzO,GAAgBH,EAEvC,GAAuB,MAAnB/d,EAAM+d,GAAmB,CAC3B,IAAI6O,EAAa5O,EAAgB,IAAMD,GAEvC,EAAI8O,EAAUtM,SAASuM,EAAOF,GAAa,OAAS3O,EAAW,KAAO0O,EAAmB,SAAiBD,EAAoB,oBAAsBD,EAAS,KAE7JK,EAAOF,IAAc,EAGvB,IAAK,IAAIvD,EAAOrc,UAAU1M,OAAQoU,EAAO9H,MAAMyc,EAAO,EAAIA,EAAO,EAAI,GAAIpF,EAAO,EAAGA,EAAOoF,EAAMpF,IAC9FvP,EAAKuP,EAAO,GAAKjX,UAAUiX,GAG7B,OAAOuI,EAAU/M,WAAM7f,GAAYI,EAAO+d,EAAUC,EAAeC,EAAUC,GAAcoL,OAAO5U,KA5BtGgL,cAAqB,EACrBA,UAAkB6M,EAIlB,IAAIM,EAEJ,SAAgCzsB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAFvEigB,CAAuByB,IAInCgL,KA4BJP,EAAWQ,aAJX,WACED,aCpBmBE,sNA8GnB/sB,OAAU2P,SAAS,EAAOqd,YAAY,KAKtCC,MAAQ,WACFhL,EAAKiL,SACFA,MAAMD,WAOfE,KAAO,WACDlL,EAAKiL,SACFA,MAAMC,UAIfC,SAAW,SAAC3pB,GACNA,MACGypB,MAAQ5b,cAAY7N,OAI7B4pB,aAAe,SAACrpB,GACVie,EAAKliB,MAAMqC,WAIX6f,EAAKliB,MAAMkE,WACRlE,MAAMkE,QAAQD,KAGhBkpB,MAAMD,UACNvb,UAAW/B,SAAUsS,EAAKjiB,MAAM2P,cAGvC2d,eAAiB,SAACtpB,SAC8Cie,EAAKliB,MAA3DqC,IAAAA,SAAUmrB,IAAAA,UAAWrpB,IAAAA,cAAeC,IAAAA,cACxC/B,IAIAmrB,KACQvpB,KAGgBA,EAAGie,EAAKoL,aAAcnpB,EAAeC,OAGnEqpB,aAAe,SAACxpB,SACkBie,EAAKliB,MAA7B0tB,IAAAA,QAASC,IAAAA,WACbD,KACMzpB,IAGLA,EAAEI,OAASJ,EAAEK,WAAasM,KACzB+c,KACS1pB,KAGR0N,UAAWsb,YAAY,QAIhCW,YAAc,SAAC3pB,GACTie,EAAKliB,MAAM6tB,UACR7tB,MAAM6tB,OAAO5pB,GAGhBie,EAAKjiB,MAAMgtB,cACRtb,UAAWsb,YAAY,2EAwB1B/b,KAAKlR,MAlBIklB,IAAXjS,UACAnL,IAAAA,SACAhF,IAAAA,UACAgrB,IAAAA,gBACAzrB,IAAAA,SACA0rB,IAAAA,SACAprB,IAAAA,IACAqrB,IAAAA,eAUGhuB,KARH6tB,SACA3pB,UACAwpB,UACAF,YACAG,aACAxpB,gBACAC,+MAKE6pB,EAAgBnmB,SAChBnF,MACcgZ,WAASuS,QAAQpmB,IACnBqmB,QAAQxrB,GAItBqF,yBACMhI,OACCkR,KAAKmc,mBACCrqB,GAAG,uCACUX,4BACK2rB,GAC1BF,EAAkBA,GAAmB5c,KAAKjR,MAAMgtB,YAChDnqB,YACOT,WACAA,EAAW,KAAO0rB,SACpB7c,KAAK0c,oBACJ1c,KAAKoc,qBACLpc,KAAKuc,uBACHvc,KAAKqc,8BACFrc,KAAKjR,MAAM2P,oBAtOiBkC,iBAA7Bkb,GAqGZpL,wBACM,eACD,OACJ,yBACU,iBACD,iBACA,GjF1HnB,IAAI9a,UACJ,QACQsnB,GAAOtuB,OAAOslB,kBAAmB,8BAEjB,YAGfhe,iBAAiB,OAAQ,KAAMgnB,IACtC,MAAOnqB,OACW,EkFPpB,OAAe,6BCkBDjE,8EACJA,aAEDC,eACK,YACE,WACD,WACA,0EAIa2jB,IACnB1S,KAAKlR,MAAMquB,SAAWzK,EAAUyK,UAC/Bnd,KAAKod,uBACMpd,KAAKod,UAGhBpd,KAAKqd,aACFA,cAGF5c,UAAWwW,QAAQ,EAAOqG,WAAW,EAAOC,SAAS,EAAOC,SAAS,oDAKxExd,KAAKod,uBACMpd,KAAKod,qDAIHnnB,iBACb+J,KAAKlR,MAAMquB,uBAKuCnd,KAAKlR,MAAnD2uB,IAAAA,kBAAmB3J,IAAAA,4BACtBuJ,OAASpnB,OAETmnB,SAAWxI,WAAW,aACpBwI,SAAWxI,WAAW,aACpBwI,SAAW,OACXC,OAAS,UAGbvJ,EAAyB2J,KAEvBhd,UAAWid,UAAU,KACzBC,SAEEld,UAAWwW,QAAQ,4DAIpBjX,KAAKlR,MAAM8uB,aACRR,SAAWxI,WAAW,aACpBwI,SAAW,OAEX3c,UAAW8c,SAAS,KACxBvd,KAAKlR,MAAMglB,oEAIC7d,cACb+J,KAAKlR,MAAMquB,aAKXnd,KAAKod,uBACMpd,KAAKod,eAGfC,OAASpnB,OACTmnB,SAAWxI,WAAW,aACpBwI,SAAW,UAGfpd,KAAKlR,MAAM+kB,6BAGTpT,UAAW8c,SAAS,EAAOC,SAAS,kDAIpCxd,KAAKlR,MAAMquB,SAAWnd,KAAKlR,MAAM+uB,eAC/B/uB,MAAM+uB,kDAWT7d,KAAKlR,MALP0I,IAAAA,MACA5F,IAAAA,UACAkD,IAAAA,KACAI,IAAAA,IACA6G,IAAAA,OAE6CiE,KAAKjR,MAA5CkoB,IAAAA,OAAQyG,IAAAA,SAAUH,IAAAA,QAASC,IAAAA,eAGjC1mB,+BACSlI,OAAOqd,UAAWzU,uBAGfuE,QACDA,cAEEjK,GAAG,2BACMmlB,qBACEyG,oBACDH,oBACAC,GAClB5rB,YAjIsBgP,iBCkBZkd,sNAoBnB/uB,OAAUgvB,WAuCVC,UAAY,SAACC,EAAOC,KACbC,WAAWF,EAAOC,KAClBE,eAAiBxJ,WAAW,aAC1BwJ,eAAiB,OACjBC,cACJrN,EAAKliB,MAAM2uB,sBAMhBzB,MAAQ,aACDsC,wBAAwBtC,WAwB/BmC,WAAa,SAACF,EAAOC,SACmBlN,EAAKuN,cAAnC7jB,IAAAA,YAAaQ,IAAAA,aAEjBzB,SACAC,iBACiB,IAAVukB,QAA0C,IAAVC,EAAuB,KAC1DM,EAAa3pB,EAAemc,EAAKuN,iBAEnCN,EAAQO,EAAW1pB,OACnBopB,EAAQM,EAAWtpB,WAEnBwF,EAAc,IACdQ,EAAe,MAGf4M,EAAIrR,KAAK2H,IACb9H,EAAoBmD,EAAGC,GACvBpD,EAAoBoE,EAAcjB,EAAGC,GACrCpD,EAAoBoE,EAAcjB,EAAGyB,EAAexB,GACpDpD,EAAoBmD,EAAGyB,EAAexB,IAGlCjI,QACEgI,EAAIqO,MACLpO,EAAIoO,OACC,EAAJA,MACDpD,KAAK+Z,OAGNV,EAAO/M,EAAKjiB,MAAMgvB,KAAKniB,UACxB8H,KAAKjS,KACLgP,UAAWsd,YAMlBM,WAAa,eACLN,EAAO/M,EAAKjiB,MAAMgvB,KAAKniB,UACxB8iB,QAEAje,UAAWsd,YAOlBO,sBAAwB,kBAClBtN,EAAK2N,WAAWvmB,UAAUC,SAAS,2BAC9B2Y,EAAK2N,WAAW5qB,cAAc,kBAGhCid,EAAK2N,cAOdC,eAAiB,SAACC,GACF,OAAVA,MACGN,cAAgBle,cAAYwe,KAC5BF,WAAa3N,EAAKuN,cAAc9rB,cAEjCue,EAAK2N,cACFG,oBAAoB9N,EAAKliB,WAiBpCgwB,oBAAsB,SAAChwB,OAAOiwB,6DAAqBC,6DAAkBC,6DAC7DC,EAAgBlO,EAAKmO,oBAAoB,QAASrwB,EAAMswB,sBACxDC,EAAgBrO,EAAKmO,oBAAoB,QAASrwB,EAAMswB,sBACxDE,EAAmBtO,EAAKmO,oBAAoB,WAAYrwB,EAAMswB,yBAEhEL,EAAc,KACVhV,GAAQuV,EAAmB,SAAW,yBACvChB,wBAAwBvU,GAAI,QAASiH,EAAKuO,gBAC1CjB,wBAAwBvU,GAAI,UAAWiH,EAAKqL,gBAEJ,WAAzCrL,EAAK2N,WAAW9rB,aAAa,gBACxBkX,GAAI,SAAUiH,EAAKwO,eAGxBR,KACGL,YAAeO,EAAwB,SAAR,wBAAiC,YAAalO,EAAKyO,yBAGrFR,MACaI,EAAerO,EAAK2N,WAAY,QAAS3N,EAAKyO,4BAI7DT,EAAW,KACPjV,GAAQmV,EAAgB,SAAW,yBACpCP,WAAW5U,GAAI,YAAaiH,EAAK0O,oBACjCf,WAAW5U,GAAI,UAAWiH,EAAK2O,gBAGlCV,OACaI,EAAerO,EAAK2N,WAAY,QAAS3N,EAAK4O,sBAC9CP,EAAerO,EAAK2N,WAAY,MAAO3N,EAAK6O,qBAI/DC,iBAAmB,WACZ9O,EAAKliB,MAAMixB,wBAIC,QAAS/O,EAAK2N,eAGjCqB,cAAgB,WACVhP,EAAKiP,UAAYjP,EAAKliB,MAAMixB,iCAInB,aACJpB,WAAW3qB,SACf,KAGAisB,UAAW,KAGlB5D,eAAiB,SAACtpB,OACVxD,EAAMwD,EAAEI,OAASJ,EAAEK,QACnBG,EAAQhE,IAAQiE,IACRjE,IAAQ+D,IAERC,IAAUZ,EAAeI,EAAEW,UAAYX,EAAEW,OAAOK,cAAc,cACrEksB,UAAW,IACXjC,cACA8B,uBAITP,aAAe,WACTvO,EAAKiP,aAIJ9B,eACAG,wBAAwBpoB,iBAAiB,OAAQ8a,EAAK0L,iBAG7DA,YAAc,aACP4B,wBAAwBjoB,oBAAoB,OAAQ2a,EAAK0L,eACzD2B,gBAGPqB,iBAAmB,SAAC3sB,KACbktB,UAAW,EACX9qB,EAAapC,KAAMie,EAAKkP,kBAKxBC,aAAc,IACdxB,WAAWzoB,iBAAiB,aAAc8a,EAAKoP,qBAC/CjC,WAAWprB,EAAEkrB,MAAOlrB,EAAEmrB,UANpBgC,gBAAiB,KAS1BE,kBAAoB,aACbzB,WAAWtoB,oBAAoB,aAAc2a,EAAKoP,qBAClDD,aAAc,IACd9B,gBAGPsB,eAAiB,WACX3O,EAAKmP,gBAIJL,qBACAnB,WAAWtoB,oBAAoB,aAAc2a,EAAKoP,qBAClD/B,iBAGPuB,kBAAoB,SAAC7sB,KACdstB,UAAW,IACXJ,UAAW,IACXC,gBAAiB,IACR9vB,OAAQ,OAAQ4gB,EAAKsP,wBAEVvtB,EAAEwtB,eAAe,GAAlCtC,IAAAA,MAAOC,IAAAA,QACVC,WAAWF,EAAOC,MAGzBoC,iBAAmB,aACAlwB,OAAQ,OAAQ4gB,EAAKsP,sBAChCE,EAAUxP,EAAKjiB,MAAMgvB,KAAK/M,EAAKjiB,MAAMgvB,KAAK3uB,OAAS,OACpDoxB,GAAW9b,KAAK+Z,MAAS+B,EAAQjxB,IAAM,MACrC8wB,UAAW,WAIZtC,EAAO/M,EAAKjiB,MAAMgvB,KAAKniB,QACvB2F,EAAQwc,EAAK3uB,OAAS,EAEtBqxB,EAAa7xB,OAAOqd,UAAWuU,GAAWrD,SAAS,MACpDuD,OAAOnf,EAAO,EAAGkf,KAEjBJ,UAAW,IACX5f,UAAWsd,QAAQ/M,EAAKqN,gBAG/BwB,gBAAkB,aACXK,gBAAiB,EAElBlP,EAAKqP,aAGUjwB,OAAQ,OAAQ4gB,EAAKsP,oBAGnCjC,iBASPmB,cAAgB,SAACzsB,GACXhD,SAAS4wB,gBAAkB3P,EAAK2N,YAAe5rB,EAAEW,OAAO2E,SAAS2Y,EAAK2N,gBAIrEmB,qBACA9B,gBAGPyB,wBAA0B,SAAC1sB,UACjBA,EAAEV,UACH,eACWjC,OAAQ,MAAO4gB,EAAKyO,yBAA2BtpB,SAAS,cAEnE,aACc/F,OAAQ,MAAO4gB,EAAKyO,yBAA2BtpB,SAAS,cAEtE,mBACID,iBAAiB,UAAW8a,EAAKyO,yBAAyB,aAE9D,iBACIppB,oBAAoB,UAAW2a,EAAKyO,yBAAyB,sFA7UhD/M,OACMkO,EAAO5gB,KAAKlR,MAAlCswB,qBACsByB,EAAQnO,EAA9B0M,wBACJwB,IAAOC,GAAQ7gB,KAAK2e,gBAIlBmC,EAAoB9gB,KAAK+gB,wBAAwB,QAASH,EAAIC,GAC9DG,EAAoBhhB,KAAK+gB,wBAAwB,QAASH,EAAIC,GAC9DI,EAAuBjhB,KAAK+gB,wBAAwB,WAAYH,EAAIC,QACrE/B,oBAAoBpM,EAAWuO,EAAsBH,EAAmBE,mDAIzEhhB,KAAKoe,6BACMpe,KAAKoe,gBAGhBpe,KAAK2e,kBACFG,qBAAsBM,sBAAuB,WAAY,QAAS,gBAClEd,wBAAwBjoB,oBAAoB,OAAQ2J,KAAK0c,8DAgC1CwE,EAAa9B,EAAsB+B,OACnDjlB,EAAIkjB,EAAqB9vB,QAAQ4xB,GACjCE,EAAKD,EAAyB7xB,QAAQ4xB,UAEpChlB,EAAI,GAAKklB,GAAM,GAAOllB,GAAK,GAAKklB,EAAK,8CAG3BF,EAAa9B,UACxBA,IAAuE,IAA/CA,EAAqB9vB,QAAQ4xB,iDAiSxDlhB,KAAKlR,MARP0I,IAAAA,MACA5F,IAAAA,UACAyvB,IAAAA,SACAC,IAAAA,aACA7D,IAAAA,kBACA3J,IAAAA,uBACAD,IAAAA,uBACA+J,IAAAA,MAEIG,EAAO/d,KAAKjR,MAAMgvB,KAAK7b,IAAI,mBAC/BpL,iBAACyqB,SACKzyB,SACG8uB,QACAyD,YACIC,WACDpO,EAAK8M,gCACIvC,yBACK3J,yBACAD,cAK1B/c,+BACY,YACHU,YACI1F,GAAG,mBAAoBF,OAC7BoO,KAAK4e,0BAtYwBhe,iBAArBkd,GAcZpN,gCACc,2BACK,2BACA,KCvC5B,oBACezP,GAAUuM,6BACEvM,GAAU4M,QAAQ5M,GAAU+M,OAAO,WAAY,QAAS,iQC2IjFgQ,UAAY,SAACC,EAAOC,IACdlN,EAAKuN,eAAkBvN,EAAKliB,MAAMqC,UAAa6f,EAAKliB,MAAM0yB,eACvDjD,cAAcP,UAAUC,EAAOC,MAaxClC,MAAQ,cACFhL,EAAKliB,MAAM0yB,YAAa,KACpBC,EAAWphB,cAAY2Q,EAAK0Q,WAC9BD,KACOzF,aAEFhL,EAAKuN,iBACTA,cAAcvC,WAgBvB2F,qBAAuB,kBAAM3Q,EAAK0Q,aAElCE,WAAY,SAACC,GACPA,MACGtD,cAAgBsD,MAIzBC,sBAAwB,SAAC/f,KAClB2f,UAAY3f,kFA1EaxE,EAAQyC,KAAKlR,MAAnCizB,qBAEJxkB,KACEyC,yDAKwBzC,EAAQyC,KAAKlR,MAAnCizB,qBAEJxkB,KACE,6CAiFFyC,KAAKlR,MAbe2uB,IAAtBuE,qBAC2BlO,IAA3BmO,0BAC2BpO,IAA3BqO,0BACAb,IAAAA,SACAC,IAAAA,aACAa,IAAAA,kBACAC,IAAAA,sBACArC,IAAAA,qBACAX,IAAAA,qBACAxB,IAAAA,MAGG9uB,KAFH0yB,cACAO,8QAIIP,EAAc3yB,EAASmR,KAAKlR,MAAOkR,KAAK/P,QAAS,eACjDoyB,OAA0D,IAAzBjD,EACnCA,EACApf,KAAK/P,QAAQoyB,+BAEXvzB,EAAMqC,UAAYqwB,MAChB/vB,IACJqF,iBAACgnB,QACM9d,KAAK4hB,eACN,sBACGhE,QACAuE,YACIC,WACDf,eACIC,uBACQe,oBACH5E,yBACK3J,yBACAD,uBACFkM,OAKtBxiB,IAAMyC,KAAK8hB,sBAEVhrB,iBAAC5C,EAAsBpF,UA/M+B8R,mBACxDxM,YAAcH,EAAeC,EAAmB,SA6EhDwc,mCACiB,8BACK,8BACA,OAGtB1P,aAAeshB,SC9GTC,GAAUzG,uBCEzBtN,cAAqB,EACrBA,EAAiB,QAEjB,SAAmBtf,GACjB,IAAIszB,KACJ,IAAK,IAAIjzB,KAAOL,EACVN,OAAO+M,UAAUmQ,eAAejQ,KAAK3M,EAAKK,KAC5CizB,EAAIjzB,GAAO,GAGf,OAAOizB,GAGTpU,UAAiBI,EAAiB,uCCZlCA,cAAqB,EACrBA,EAAiB,QAEjB,SAAoBhX,GAClB,IAAIgrB,KACJ,IAAK,IAAIjzB,KAAOiI,EACT5I,OAAO+M,UAAUmQ,eAAejQ,KAAKrE,EAAOjI,KAGjDizB,EAAIjzB,GAA6B,iBAAfiI,EAAMjI,GAAoBiI,EAAMjI,GAAOiI,EAAMjI,GAAKd,KAEtE,OAAO+zB,GAGTpU,UAAiBI,EAAiB,uCCblCA,cAAqB,EACrBA,EAAiB,QAIjB,SAAiBiU,EAAgBhpB,EAAGoE,EAAG6kB,EAAO1N,EAAGxe,EAAGmsB,GAKlD,IAUIC,EAAO/kB,IAVImX,GAAKvb,EAAIipB,IAGTlsB,EAAIqH,GAOA4kB,EACfI,EAAOppB,EAAImpB,EAAOH,EAEtB,OAAIhsB,KAAKyG,IAAI0lB,GAAQD,GAAalsB,KAAKyG,IAAI2lB,EAAOH,GAASC,GACzDG,EAAY,GAAKJ,EACjBI,EAAY,GAAK,EACVA,IAGTA,EAAY,GAAKD,EACjBC,EAAY,GAAKF,EACVE,IA5BT,IAAIA,GAAe,EAAG,GA+BtB1U,UAAiBI,EAAiB,gBClClC,IAAI,sBCNJ,WACE,IAAIuU,EAAgBC,EAAQC,EAEA,oBAAhBC,aAA+C,OAAhBA,aAAyBA,YAAYzE,IAC9ErQ,UAAiB,WACf,OAAO8U,YAAYzE,OAEQ,oBAAZ0E,SAAuC,OAAZA,SAAqBA,QAAQH,QACzE5U,UAAiB,WACf,OAAQ2U,IAAmBE,GAAY,KAEzCD,EAASG,QAAQH,OAMjBC,GALAF,EAAiB,WACf,IAAIK,EAEJ,OAAe,KADfA,EAAKJ,KACK,GAAWI,EAAG,QAGjB1e,KAAK+Z,KACdrQ,UAAiB,WACf,OAAO1J,KAAK+Z,MAAQwE,GAEtBA,EAAWve,KAAK+Z,QAEhBrQ,UAAiB,WACf,OAAO,IAAI1J,MAAOJ,UAAY2e,GAEhCA,GAAW,IAAIve,MAAOJ,aAGvBzI,KAAKmE,MD/BJqjB,GACyB,oBAAXjzB,OAAyBkzB,GAASlzB,OAChDkkB,IAAW,MAAO,UAClBriB,GAAS,iBACTuiB,GAAM6O,GAAK,UAAYpxB,IACvBsxB,GAAMF,GAAK,SAAWpxB,KAAWoxB,GAAK,gBAAkBpxB,IAEpDiK,GAAI,GAAIsY,IAAOtY,GAAIoY,GAAQllB,OAAQ8M,KACzCsY,GAAM6O,GAAK/O,GAAQpY,IAAK,UAAYjK,IACpCsxB,GAAMF,GAAK/O,GAAQpY,IAAK,SAAWjK,KAC5BoxB,GAAK/O,GAAQpY,IAAK,gBAAkBjK,IAI7C,IAAIuiB,KAAQ+O,GAAK,CACf,IAAIC,GAAO,EACPtjB,GAAK,EACLujB,MAGJjP,GAAM,SAAS9e,GACb,GAAoB,IAAjB+tB,GAAMr0B,OAAc,CACrB,IAAIs0B,EAAOjF,KACPvV,EAAOzS,KAAK2H,IAAI,EALJ,IAAO,IAKiBslB,EAAOF,KAC/CA,GAAOta,EAAOwa,EACd9O,WAAW,WACT,IAAI+O,EAAKF,GAAM7nB,MAAM,GAIrB6nB,GAAMr0B,OAAS,EACf,IAAI,IAAI8M,EAAI,EAAGA,EAAIynB,EAAGv0B,OAAQ8M,IAC5B,IAAIynB,EAAGznB,GAAG0nB,UACR,IACED,EAAGznB,GAAGxG,SAAS8tB,IACf,MAAMzwB,GACN6hB,WAAW,WAAa,MAAM7hB,GAAK,KAIxC0D,KAAK0B,MAAM+Q,IAOhB,OALAua,GAAM/f,MACJmgB,SAAU3jB,GACVxK,SAAUA,EACVkuB,WAAW,IAEN1jB,IAGTqjB,GAAM,SAASM,GACb,IAAI,IAAI3nB,EAAI,EAAGA,EAAIunB,GAAMr0B,OAAQ8M,IAC5BunB,GAAMvnB,GAAG2nB,SAAWA,IACrBJ,GAAMvnB,GAAG0nB,WAAY,IAM7B,OAAiB,SAAS7Z,GAIxB,OAAOyK,GAAI3Y,KAAKwnB,GAAMtZ,cAEA,WACtBwZ,GAAIhV,MAAM8U,GAAMvnB,wBAEQ,WACxBunB,GAAKS,sBAAwBtP,GAC7B6O,GAAKU,qBAAuBR,2BEhE9B/U,cAAqB,EACrBA,EAAiB,QAEjB,SAA6BwV,EAAcxsB,EAAOysB,GAChD,IAAK,IAAI10B,KAAOiI,EACd,GAAK5I,OAAO+M,UAAUmQ,eAAejQ,KAAKrE,EAAOjI,GAAjD,CAIA,GAA6B,IAAzB00B,EAAgB10B,GAClB,OAAO,EAGT,IAAI20B,EAAmC,iBAAf1sB,EAAMjI,GAAoBiI,EAAMjI,GAAOiI,EAAMjI,GAAKd,IAG1E,GAAIu1B,EAAaz0B,KAAS20B,EACxB,OAAO,EAIX,OAAO,GAGT9V,UAAiBI,EAAiB,gB1FNlC,IAAIxD,GAAgB,aAEpBA,GAAcC,YAAc3c,EAC5B0c,GAAcE,iBAAmB5c,GAAkB,GACnD0c,GAAcG,gBAAkB7c,GAAkB,GAClD0c,GAAcI,gBAAkB9c,EAAkB,MAClD0c,GAAcK,gBAAkB,WAC9B,OAAOrL,MAETgL,GAAcM,oBAAsB,SAAU/c,GAC5C,OAAOA,GAGT,OAAiByc,e2FJEO,EAAWvE,EAAQzQ,EAAGC,EAAGgV,EAAGnH,EAAGtR,EAAG0Y,GACnD,IAEKF,EAAW,CACd,IAAIna,EACJ,QAAe1C,IAAXsY,EACF5V,EAAQ,IAAIsa,MAAM,qIACb,CACL,IAAIlI,GAAQjN,EAAGC,EAAGgV,EAAGnH,EAAGtR,EAAG0Y,GACvBE,EAAW,GACfva,EAAQ,IAAIsa,MAAM1E,EAAOkD,QAAQ,MAAO,WACtC,OAAO1G,EAAKmI,SAERtX,KAAO,sBAIf,MADAjD,EAAMwa,YAAc,EACdxa,OCvCiB,kDCIV,WACf,SAASwb,EAAK9d,EAAO+d,EAAUC,EAAeC,EAAUC,EAAcC,GAChEA,IAAWC,IAIfC,IACE,EACA,mLAMJ,SAASC,IACP,OAAOR,EAFTA,EAAKS,WAAaT,EAMlB,IAAIU,GACFC,MAAOX,EACPY,KAAMZ,EACNa,KAAMb,EACNzL,OAAQyL,EACRc,OAAQd,EACRxL,OAAQwL,EACRe,OAAQf,EAERgB,IAAKhB,EACLiB,QAAST,EACTzJ,QAASiJ,EACTkB,WAAYV,EACZ5a,KAAMoa,EACNmB,SAAUX,EACVY,MAAOZ,EACPlM,UAAWkM,EACXa,MAAOb,GAMT,OAHAE,EAAea,eAAiBnD,GAChCsC,EAAerM,UAAYqM,EAEpBA,oBC7BPc,UAAiBC,0BCpBnB,SAASc,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAAWngB,GAEzF,SAASogB,EAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAI7gB,UAAU,qCAEhH,SAASihB,EAAUC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAInhB,UAAU,kEAAoEmhB,GAAeD,EAASlU,UAAY/M,OAAO8O,OAAOoS,GAAcA,EAAWnU,WAAaoU,aAAexU,MAAOsU,EAAUG,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeJ,IAAYlhB,OAAOuhB,eAAiBvhB,OAAOuhB,eAAeN,EAAUC,GAAcD,EAASO,UAAYN,GAVjetB,cAAqB,EAErB,IAAI6B,EAAWzhB,OAAOqd,QAAU,SAAUvY,GAAU,IAAK,IAAIwI,EAAI,EAAGA,EAAIJ,UAAU1M,OAAQ8M,IAAK,CAAE,IAAIoU,EAASxU,UAAUI,GAAI,IAAK,IAAI3M,KAAO+gB,EAAc1hB,OAAO+M,UAAUmQ,eAAejQ,KAAKyU,EAAQ/gB,KAAQmE,EAAOnE,GAAO+gB,EAAO/gB,IAAY,OAAOmE,GAEnPywB,EAAe,WAAe,SAASC,EAAiB1wB,EAAQ5E,GAAS,IAAK,IAAIoN,EAAI,EAAGA,EAAIpN,EAAMM,OAAQ8M,IAAK,CAAE,IAAImoB,EAAav1B,EAAMoN,GAAImoB,EAAWrU,WAAaqU,EAAWrU,aAAc,EAAOqU,EAAWnU,cAAe,EAAU,UAAWmU,IAAYA,EAAWpU,UAAW,GAAMrhB,OAAOslB,eAAexgB,EAAQ2wB,EAAW90B,IAAK80B,IAAiB,OAAO,SAAU7U,EAAa8U,EAAYC,GAAiJ,OAA9HD,GAAYF,EAAiB5U,EAAY7T,UAAW2oB,GAAiBC,GAAaH,EAAiB5U,EAAa+U,GAAqB/U,GAA9gB,GAUfgV,EAAcrV,EAAuBsV,IAIrCC,EAAevV,EAAuBwV,IAItCC,EAAYzV,EAAuB0V,IAInCC,EAAmB3V,EAAuB4V,IAI1CC,EAAQ7V,EAAuB8V,IAI/BC,EAAwB/V,EAAuBgW,IAI/C1U,EAAUtB,EAAuBT,IAIjCqI,EAAc5H,EAAuBwB,IAErCyU,EAAa,IAAO,GAEpBC,EAAS,SAAWtU,GAetB,SAASsU,EAAOv2B,GACd,IAAIkiB,EAAQhR,KAEZsP,EAAgBtP,KAAMqlB,GAEtBtU,EAAiBlV,KAAKmE,KAAMlR,GAC5BkR,KAAKslB,cAAe,EACpBtlB,KAAKulB,YAAc,KACnBvlB,KAAKwlB,SAAW,EAChBxlB,KAAKylB,gBAAkB,EACvBzlB,KAAK0lB,gBAAkB,KAEvB1lB,KAAK2lB,qBAAuB,SAAUC,GACpC,IAAIC,GAAQ,EACRC,EAAS9U,EAAMjiB,MACfi1B,EAAe8B,EAAO9B,aACtBC,EAAkB6B,EAAO7B,gBACzB8B,EAAiBD,EAAOC,eACxBC,EAAoBF,EAAOE,kBAE/B,IAAK,IAAIz2B,KAAOq2B,EACd,GAAKh3B,OAAO+M,UAAUmQ,eAAejQ,KAAK+pB,EAAWr2B,GAArD,CAIA,IAAI20B,EAAa0B,EAAUr2B,GACD,iBAAf20B,IACJ2B,IACHA,GAAQ,EACR7B,EAAe3T,KAAa2T,GAC5BC,EAAkB5T,KAAa4T,GAC/B8B,EAAiB1V,KAAa0V,GAC9BC,EAAoB3V,KAAa2V,IAGnChC,EAAaz0B,GAAO20B,EACpBD,EAAgB10B,GAAO,EACvBw2B,EAAex2B,GAAO20B,EACtB8B,EAAkBz2B,GAAO,GAIzBs2B,GACF7U,EAAMvQ,UAAWujB,aAAcA,EAAcC,gBAAiBA,EAAiB8B,eAAgBA,EAAgBC,kBAAmBA,KAItIhmB,KAAKimB,0BAA4B,WAG/BjV,EAAMuU,YAAcP,EAAe,QAAE,SAAUkB,GAE7C,IAAIC,EAAanV,EAAMliB,MAAM0I,MAC7B,GAAI0tB,EAA+B,QAAElU,EAAMjiB,MAAMi1B,aAAcmC,EAAYnV,EAAMjiB,MAAMk1B,iBASrF,OARIjT,EAAMsU,cAAgBtU,EAAMliB,MAAMs3B,QACpCpV,EAAMliB,MAAMs3B,SAIdpV,EAAMuU,YAAc,KACpBvU,EAAMsU,cAAe,OACrBtU,EAAMyU,gBAAkB,GAI1BzU,EAAMsU,cAAe,EAErB,IAAIe,EAAcH,GAAapB,EAA0B,UACrDwB,EAAYD,EAAcrV,EAAMwU,SAQpC,GAPAxU,EAAMwU,SAAWa,EACjBrV,EAAMyU,gBAAkBzU,EAAMyU,gBAAkBa,EAE5CtV,EAAMyU,gBAA+B,GAAbL,IAC1BpU,EAAMyU,gBAAkB,GAGI,IAA1BzU,EAAMyU,gBAIR,OAFAzU,EAAMuU,YAAc,UACpBvU,EAAMiV,4BAIR,IAAIM,GAA0BvV,EAAMyU,gBAAkBhvB,KAAK+vB,MAAMxV,EAAMyU,gBAAkBL,GAAcA,GAAcA,EACjHqB,EAAkBhwB,KAAK+vB,MAAMxV,EAAMyU,gBAAkBL,GAErDsB,KACAC,KACAC,KACAC,KAEJ,IAAK,IAAIt3B,KAAO42B,EACd,GAAKv3B,OAAO+M,UAAUmQ,eAAejQ,KAAKsqB,EAAY52B,GAAtD,CAIA,IAAI20B,EAAaiC,EAAW52B,GAC5B,GAA0B,iBAAf20B,EACT0C,EAAgBr3B,GAAO20B,EACvB2C,EAAmBt3B,GAAO,EAC1Bm3B,EAAkBn3B,GAAO20B,EACzByC,EAAqBp3B,GAAO,MACvB,CAGL,IAAK,IAFDu3B,EAAyB9V,EAAMjiB,MAAMg3B,eAAex2B,GACpDw3B,EAA4B/V,EAAMjiB,MAAMi3B,kBAAkBz2B,GACrD2M,EAAI,EAAGA,EAAIuqB,EAAiBvqB,IAAK,CACxC,IAAI8qB,EAAWpC,EAAmB,QAAEQ,EAAa,IAAM0B,EAAwBC,EAA2B7C,EAAWz1B,IAAKy1B,EAAW+C,UAAW/C,EAAWgD,QAAShD,EAAWvB,WAE/KmE,EAAyBE,EAAS,GAClCD,EAA4BC,EAAS,GAGvC,IAAIG,EAAYvC,EAAmB,QAAEQ,EAAa,IAAM0B,EAAwBC,EAA2B7C,EAAWz1B,IAAKy1B,EAAW+C,UAAW/C,EAAWgD,QAAShD,EAAWvB,WAE5KyE,EAAaD,EAAU,GACvBE,EAAaF,EAAU,GAE3BP,EAAgBr3B,GAAOu3B,GAA0BM,EAAaN,GAA0BP,EACxFM,EAAmBt3B,GAAOw3B,GAA6BM,EAAaN,GAA6BR,EACjGG,EAAkBn3B,GAAOu3B,EACzBH,EAAqBp3B,GAAOw3B,GAIhC/V,EAAMuU,YAAc,KAEpBvU,EAAMyU,iBAAmBgB,EAAkBrB,EAE3CpU,EAAMvQ,UACJujB,aAAc4C,EACd3C,gBAAiB4C,EACjBd,eAAgBW,EAChBV,kBAAmBW,IAGrB3V,EAAM0U,gBAAkB,KAExB1U,EAAMiV,+BAIVjmB,KAAKjR,MAAQiR,KAAKsnB,eAsDpB,OAjNA1X,EAAUyV,EAAQtU,GAElBoT,EAAakB,EAAQ,OACnB91B,IAAK,YACLgM,OAEEgsB,aAAcxQ,EAAqB,QAAEhJ,SAASgJ,EAAqB,QAAE5V,QACrE3J,MAAOuf,EAAqB,QAAEhJ,SAASgJ,EAAqB,QAAE7V,WAAW6V,EAAqB,QAAE5V,OAAQ4V,EAAqB,QAAErJ,UAAUL,WACzIzW,SAAUmgB,EAAqB,QAAEtJ,KAAKJ,WACtC+Y,OAAQrP,EAAqB,QAAEtJ,MAEjCuC,YAAY,KAmJdqV,EAAO1pB,UAAU2rB,aAAe,WAC9B,IAAIE,EAASxnB,KAAKlR,MACdy4B,EAAeC,EAAOD,aACtB/vB,EAAQgwB,EAAOhwB,MAEfwsB,EAAeuD,GAAgB7C,EAAsB,QAAEltB,GACvDysB,EAAkBO,EAAqB,QAAER,GAC7C,OACEA,aAAcA,EACdC,gBAAiBA,EACjB8B,eAAgB/B,EAChBgC,kBAAmB/B,IAUvBoB,EAAO1pB,UAAU4W,kBAAoB,WACnCvS,KAAKwlB,SAAWV,EAA0B,UAC1C9kB,KAAKimB,6BAGPZ,EAAO1pB,UAAU8W,0BAA4B,SAAmC3jB,GAClD,MAAxBkR,KAAK0lB,iBAEP1lB,KAAK2lB,qBAAqB3lB,KAAK0lB,iBAGjC1lB,KAAK0lB,gBAAkB52B,EAAM0I,MACL,MAApBwI,KAAKulB,cACPvlB,KAAKwlB,SAAWV,EAA0B,UAC1C9kB,KAAKimB,8BAITZ,EAAO1pB,UAAUid,qBAAuB,WACd,MAApB5Y,KAAKulB,cACPP,EAAe,QAAEzQ,OAAOvU,KAAKulB,aAC7BvlB,KAAKulB,YAAc,OAIvBF,EAAO1pB,UAAUwX,OAAS,WACxB,IAAIsU,EAAmBznB,KAAKlR,MAAM8H,SAASoJ,KAAKjR,MAAMi1B,cACtD,OAAOyD,GAAoBhX,EAAiB,QAAEhG,SAASC,KAAK+c,IAGvDpC,EAlNI,CAmNV5U,EAAiB,QAAEuD,WAEtBxF,EAAiB,QAAI6W,EACrBjX,UAAiBI,EAAiB,uCC9PlC,SAASW,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAAWngB,GAEzF,SAASogB,EAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAI7gB,UAAU,qCAEhH,SAASihB,EAAUC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAInhB,UAAU,kEAAoEmhB,GAAeD,EAASlU,UAAY/M,OAAO8O,OAAOoS,GAAcA,EAAWnU,WAAaoU,aAAexU,MAAOsU,EAAUG,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeJ,IAAYlhB,OAAOuhB,eAAiBvhB,OAAOuhB,eAAeN,EAAUC,GAAcD,EAASO,UAAYN,GAoCje,SAAS4X,EAAuBC,EAAex3B,EAAQy3B,GACrD,IAAK,IAAI1rB,EAAI,EAAGA,EAAIyrB,EAAcv4B,OAAQ8M,IACxC,IAAKgpB,EAA+B,QAAEyC,EAAczrB,GAAI/L,EAAO+L,GAAI0rB,EAAkB1rB,IACnF,OAAO,EAGX,OAAO,EApDTsS,cAAqB,EAErB,IAAI6B,EAAWzhB,OAAOqd,QAAU,SAAUvY,GAAU,IAAK,IAAIwI,EAAI,EAAGA,EAAIJ,UAAU1M,OAAQ8M,IAAK,CAAE,IAAIoU,EAASxU,UAAUI,GAAI,IAAK,IAAI3M,KAAO+gB,EAAc1hB,OAAO+M,UAAUmQ,eAAejQ,KAAKyU,EAAQ/gB,KAAQmE,EAAOnE,GAAO+gB,EAAO/gB,IAAY,OAAOmE,GAEnPywB,EAAe,WAAe,SAASC,EAAiB1wB,EAAQ5E,GAAS,IAAK,IAAIoN,EAAI,EAAGA,EAAIpN,EAAMM,OAAQ8M,IAAK,CAAE,IAAImoB,EAAav1B,EAAMoN,GAAImoB,EAAWrU,WAAaqU,EAAWrU,aAAc,EAAOqU,EAAWnU,cAAe,EAAU,UAAWmU,IAAYA,EAAWpU,UAAW,GAAMrhB,OAAOslB,eAAexgB,EAAQ2wB,EAAW90B,IAAK80B,IAAiB,OAAO,SAAU7U,EAAa8U,EAAYC,GAAiJ,OAA9HD,GAAYF,EAAiB5U,EAAY7T,UAAW2oB,GAAiBC,GAAaH,EAAiB5U,EAAa+U,GAAqB/U,GAA9gB,GAUfgV,EAAcrV,EAAuBsV,IAIrCC,EAAevV,EAAuBwV,IAItCC,EAAYzV,EAAuB0V,IAInCC,EAAmB3V,EAAuB4V,IAI1CC,EAAQ7V,EAAuB8V,IAI/BC,EAAwB/V,EAAuBgW,IAI/C1U,EAAUtB,EAAuBT,IAIjCqI,EAAc5H,EAAuBwB,IAErCyU,EAAa,IAAO,GAWpByC,EAAkB,SAAW9W,GAc/B,SAAS8W,EAAgB/4B,GACvB,IAAIkiB,EAAQhR,KAEZsP,EAAgBtP,KAAM6nB,GAEtB9W,EAAiBlV,KAAKmE,KAAMlR,GAC5BkR,KAAKulB,YAAc,KACnBvlB,KAAKwlB,SAAW,EAChBxlB,KAAKylB,gBAAkB,EACvBzlB,KAAK8nB,iBAAmB,KAExB9nB,KAAK2lB,qBAAuB,SAAUmC,GAQpC,IAAK,IAPDhC,EAAS9U,EAAMjiB,MACf44B,EAAgB7B,EAAO6B,cACvBC,EAAoB9B,EAAO8B,kBAC3BG,EAAkBjC,EAAOiC,gBACzBC,EAAsBlC,EAAOkC,oBAE7BC,GAAY,EACP/rB,EAAI,EAAGA,EAAI4rB,EAAiB14B,OAAQ8M,IAAK,CAChD,IAAIwpB,EAAkBoC,EAAiB5rB,GACnC2pB,GAAQ,EAEZ,IAAK,IAAIt2B,KAAOm2B,EACd,GAAK92B,OAAO+M,UAAUmQ,eAAejQ,KAAK6pB,EAAiBn2B,GAA3D,CAIA,IAAI20B,EAAawB,EAAgBn2B,GACP,iBAAf20B,IACJ2B,IACHA,GAAQ,EACRoC,GAAY,EACZN,EAAczrB,GAAKmU,KAAasX,EAAczrB,IAC9C0rB,EAAkB1rB,GAAKmU,KAAauX,EAAkB1rB,IACtD6rB,EAAgB7rB,GAAKmU,KAAa0X,EAAgB7rB,IAClD8rB,EAAoB9rB,GAAKmU,KAAa2X,EAAoB9rB,KAE5DyrB,EAAczrB,GAAG3M,GAAO20B,EACxB0D,EAAkB1rB,GAAG3M,GAAO,EAC5Bw4B,EAAgB7rB,GAAG3M,GAAO20B,EAC1B8D,EAAoB9rB,GAAG3M,GAAO,IAKhC04B,GACFjX,EAAMvQ,UAAWknB,cAAeA,EAAeC,kBAAmBA,EAAmBG,gBAAiBA,EAAiBC,oBAAqBA,KAIhJhoB,KAAKimB,0BAA4B,WAG/BjV,EAAMuU,YAAcP,EAAe,QAAE,SAAUkB,GAC7C,IAAIgC,EAAalX,EAAMliB,MAAMqB,OAAO6gB,EAAMjiB,MAAMg5B,iBAGhD,GAAIL,EAAuB1W,EAAMjiB,MAAM44B,cAAeO,EAAYlX,EAAMjiB,MAAM64B,mBAI5E,OAFA5W,EAAMuU,YAAc,UACpBvU,EAAMyU,gBAAkB,GAI1B,IAAIY,EAAcH,GAAapB,EAA0B,UACrDwB,EAAYD,EAAcrV,EAAMwU,SAQpC,GAPAxU,EAAMwU,SAAWa,EACjBrV,EAAMyU,gBAAkBzU,EAAMyU,gBAAkBa,EAE5CtV,EAAMyU,gBAA+B,GAAbL,IAC1BpU,EAAMyU,gBAAkB,GAGI,IAA1BzU,EAAMyU,gBAIR,OAFAzU,EAAMuU,YAAc,UACpBvU,EAAMiV,4BAYR,IAAK,IARDM,GAA0BvV,EAAMyU,gBAAkBhvB,KAAK+vB,MAAMxV,EAAMyU,gBAAkBL,GAAcA,GAAcA,EACjHqB,EAAkBhwB,KAAK+vB,MAAMxV,EAAMyU,gBAAkBL,GAErD+C,KACAC,KACAC,KACAC,KAEKpsB,EAAI,EAAGA,EAAIgsB,EAAW94B,OAAQ8M,IAAK,CAC1C,IAAI0pB,EAAYsC,EAAWhsB,GACvB0qB,KACAC,KACAH,KACAC,KAEJ,IAAK,IAAIp3B,KAAOq2B,EACd,GAAKh3B,OAAO+M,UAAUmQ,eAAejQ,KAAK+pB,EAAWr2B,GAArD,CAIA,IAAI20B,EAAa0B,EAAUr2B,GAC3B,GAA0B,iBAAf20B,EACT0C,EAAgBr3B,GAAO20B,EACvB2C,EAAmBt3B,GAAO,EAC1Bm3B,EAAkBn3B,GAAO20B,EACzByC,EAAqBp3B,GAAO,MACvB,CAGL,IAAK,IAFDu3B,EAAyB9V,EAAMjiB,MAAMg5B,gBAAgB7rB,GAAG3M,GACxDw3B,EAA4B/V,EAAMjiB,MAAMi5B,oBAAoB9rB,GAAG3M,GAC1Dg5B,EAAI,EAAGA,EAAI9B,EAAiB8B,IAAK,CACxC,IAAIvB,EAAWpC,EAAmB,QAAEQ,EAAa,IAAM0B,EAAwBC,EAA2B7C,EAAWz1B,IAAKy1B,EAAW+C,UAAW/C,EAAWgD,QAAShD,EAAWvB,WAE/KmE,EAAyBE,EAAS,GAClCD,EAA4BC,EAAS,GAGvC,IAAIG,EAAYvC,EAAmB,QAAEQ,EAAa,IAAM0B,EAAwBC,EAA2B7C,EAAWz1B,IAAKy1B,EAAW+C,UAAW/C,EAAWgD,QAAShD,EAAWvB,WAE5KyE,EAAaD,EAAU,GACvBE,EAAaF,EAAU,GAE3BP,EAAgBr3B,GAAOu3B,GAA0BM,EAAaN,GAA0BP,EACxFM,EAAmBt3B,GAAOw3B,GAA6BM,EAAaN,GAA6BR,EACjGG,EAAkBn3B,GAAOu3B,EACzBH,EAAqBp3B,GAAOw3B,GAIhCsB,EAAiBnsB,GAAK0qB,EACtB0B,EAAqBpsB,GAAK2qB,EAC1BsB,EAAmBjsB,GAAKwqB,EACxB0B,EAAuBlsB,GAAKyqB,EAG9B3V,EAAMuU,YAAc,KAEpBvU,EAAMyU,iBAAmBgB,EAAkBrB,EAE3CpU,EAAMvQ,UACJknB,cAAeU,EACfT,kBAAmBU,EACnBP,gBAAiBI,EACjBH,oBAAqBI,IAGvBpX,EAAM8W,iBAAmB,KAEzB9W,EAAMiV,+BAIVjmB,KAAKjR,MAAQiR,KAAKsnB,eAkDpB,OAvNA1X,EAAUiY,EAAiB9W,GAE3BoT,EAAa0D,EAAiB,OAC5Bt4B,IAAK,YACLgM,OAEEitB,cAAezR,EAAqB,QAAElJ,QAAQkJ,EAAqB,QAAEhJ,SAASgJ,EAAqB,QAAE5V,SACrGhR,OAAQ4mB,EAAqB,QAAEtJ,KAAKJ,WACpCzW,SAAUmgB,EAAqB,QAAEtJ,KAAKJ,YAExC2C,YAAY,KA8Jd6X,EAAgBlsB,UAAU2rB,aAAe,WACvC,IAAIE,EAASxnB,KAAKlR,MACd05B,EAAgBhB,EAAOgB,cACvBr4B,EAASq3B,EAAOr3B,OAEhBw3B,EAAgBa,GAAiBr4B,IAAS+R,IAAIwiB,EAAsB,SACpEkD,EAAoBD,EAAczlB,IAAI,SAAU8hB,GAClD,OAAOQ,EAAqB,QAAER,KAEhC,OACE2D,cAAeA,EACfC,kBAAmBA,EACnBG,gBAAiBJ,EACjBK,oBAAqBJ,IAIzBC,EAAgBlsB,UAAU4W,kBAAoB,WAC5CvS,KAAKwlB,SAAWV,EAA0B,UAC1C9kB,KAAKimB,6BAGP4B,EAAgBlsB,UAAU8W,0BAA4B,SAAmC3jB,GAC1D,MAAzBkR,KAAK8nB,kBAEP9nB,KAAK2lB,qBAAqB3lB,KAAK8nB,kBAGjC9nB,KAAK8nB,iBAAmBh5B,EAAMqB,OAAO6P,KAAKjR,MAAMg5B,iBACxB,MAApB/nB,KAAKulB,cACPvlB,KAAKwlB,SAAWV,EAA0B,UAC1C9kB,KAAKimB,8BAIT4B,EAAgBlsB,UAAUid,qBAAuB,WACvB,MAApB5Y,KAAKulB,cACPP,EAAe,QAAEzQ,OAAOvU,KAAKulB,aAC7BvlB,KAAKulB,YAAc,OAIvBsC,EAAgBlsB,UAAUwX,OAAS,WACjC,IAAIsU,EAAmBznB,KAAKlR,MAAM8H,SAASoJ,KAAKjR,MAAM44B,eACtD,OAAOF,GAAoBhX,EAAiB,QAAEhG,SAASC,KAAK+c,IAGvDI,EAxNa,CAyNnBpX,EAAiB,QAAEuD,WAEtBxF,EAAiB,QAAIqZ,EACrBzZ,UAAiBI,EAAiB,uCCjQlCA,cAAqB,EACrBA,EAAiB,QAEjB,SAAmBG,EAAMzF,EAAM2U,GAK7B,IAAK,IADD4K,KACKvsB,EAAI,EAAGA,EAAIyS,EAAKvf,OAAQ8M,IAC/BusB,EAAa9Z,EAAKzS,GAAG3M,KAAO2M,EAG9B,IAAK,IADDwsB,KACKxsB,EAAI,EAAGA,EAAIgN,EAAK9Z,OAAQ8M,IAC/BwsB,EAAaxf,EAAKhN,GAAG3M,KAAO2M,EAO9B,IAAK,IADDsmB,KACKtmB,EAAI,EAAGA,EAAIgN,EAAK9Z,OAAQ8M,IAC/BsmB,EAAItmB,GAAKgN,EAAKhN,GAEhB,IAASA,EAAI,EAAGA,EAAIyS,EAAKvf,OAAQ8M,IAC/B,IAAKtN,OAAO+M,UAAUmQ,eAAejQ,KAAK6sB,EAAc/Z,EAAKzS,GAAG3M,KAAM,CAGpE,IAAIo5B,EAAO9K,EAAS3hB,EAAGyS,EAAKzS,IAChB,MAARysB,GACFnG,EAAI9e,KAAKilB,GAMf,OAAOnG,EAAIoG,KAAK,SAAUryB,EAAGC,GAC3B,IAAIqyB,EAAaH,EAAanyB,EAAEhH,KAC5Bu5B,EAAaJ,EAAalyB,EAAEjH,KAC5Bw5B,EAAaN,EAAalyB,EAAEhH,KAC5By5B,EAAaP,EAAajyB,EAAEjH,KAEhC,GAAkB,MAAds5B,GAAoC,MAAdC,EAExB,OAAOJ,EAAanyB,EAAEhH,KAAOm5B,EAAalyB,EAAEjH,KACvC,GAAkB,MAAdw5B,GAAoC,MAAdC,EAE/B,OAAOP,EAAalyB,EAAEhH,KAAOk5B,EAAajyB,EAAEjH,KACvC,GAAkB,MAAds5B,EAAoB,CAO7B,IAAS3sB,EAAI,EAAGA,EAAIgN,EAAK9Z,OAAQ8M,IAE/B,GADI+sB,EAAQ/f,EAAKhN,GAAG3M,IACfX,OAAO+M,UAAUmQ,eAAejQ,KAAK4sB,EAAcQ,GAAxD,CAIA,GAAIJ,EAAaH,EAAaO,IAAUD,EAAaP,EAAaQ,GAChE,OAAQ,EACH,GAAIJ,EAAaH,EAAaO,IAAUD,EAAaP,EAAaQ,GACvE,OAAO,EAIX,OAAO,EAGT,IAAK,IAAI/sB,EAAI,EAAGA,EAAIgN,EAAK9Z,OAAQ8M,IAAK,CACpC,IAAI+sB,EAAQ/f,EAAKhN,GAAG3M,IACpB,GAAKX,OAAO+M,UAAUmQ,eAAejQ,KAAK4sB,EAAcQ,GAAxD,CAGA,GAAIH,EAAaJ,EAAaO,IAAUF,EAAaN,EAAaQ,GAChE,OAAO,EACF,GAAIH,EAAaJ,EAAaO,IAAUF,EAAaN,EAAaQ,GACvE,OAAQ,GAIZ,OAAQ,KAIZ7a,UAAiBI,EAAiB,uCClGlC,SAASW,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAAWngB,GAEzF,SAASogB,EAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAI7gB,UAAU,qCAEhH,SAASihB,EAAUC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAInhB,UAAU,kEAAoEmhB,GAAeD,EAASlU,UAAY/M,OAAO8O,OAAOoS,GAAcA,EAAWnU,WAAaoU,aAAexU,MAAOsU,EAAUG,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeJ,IAAYlhB,OAAOuhB,eAAiBvhB,OAAOuhB,eAAeN,EAAUC,GAAcD,EAASO,UAAYN,GA+Cje,SAASoZ,EAAgBC,EAAmBrB,EAAkBsB,GAG5D,IAAIC,EAAoBvB,EACxB,OAAyB,MAArBuB,EACKF,EAAkBjnB,IAAI,SAAUonB,EAAkBptB,GACvD,OACE3M,IAAK+5B,EAAiB/5B,IACtBg6B,KAAMD,EAAiBC,KACvB/xB,MAAO4xB,EAAYltB,MAIlBitB,EAAkBjnB,IAAI,SAAUonB,EAAkBptB,GACvD,IAAK,IAAIqsB,EAAI,EAAGA,EAAIc,EAAkBj6B,OAAQm5B,IAC5C,GAAIc,EAAkBd,GAAGh5B,MAAQ+5B,EAAiB/5B,IAChD,OACEA,IAAK85B,EAAkBd,GAAGh5B,IAC1Bg6B,KAAMF,EAAkBd,GAAGgB,KAC3B/xB,MAAO4xB,EAAYltB,IAIzB,OAAS3M,IAAK+5B,EAAiB/5B,IAAKg6B,KAAMD,EAAiBC,KAAM/xB,MAAO4xB,EAAYltB,MAIxF,SAASwrB,EAAuBC,EAAeO,EAAYN,EAAmBuB,GAC5E,GAAIA,EAAkB/5B,SAAW84B,EAAW94B,OAC1C,OAAO,EAGT,IAAS8M,EAAI,EAAGA,EAAIitB,EAAkB/5B,OAAQ8M,IAC5C,GAAIitB,EAAkBjtB,GAAG3M,MAAQ24B,EAAWhsB,GAAG3M,IAC7C,OAAO,EAOX,IAAK,IAAI2M,EAAI,EAAGA,EAAIitB,EAAkB/5B,OAAQ8M,IAC5C,IAAKgpB,EAA+B,QAAEyC,EAAczrB,GAAIgsB,EAAWhsB,GAAG1E,MAAOowB,EAAkB1rB,IAC7F,OAAO,EAIX,OAAO,EAkBT,SAASstB,EAAaC,EAAWC,EAAWC,EAAUC,EAAsB1B,EAAY2B,EAAkBC,EAAsBC,EAAoBC,GAkBlJ,IAAK,IAjBDC,EAAuBC,EAAqB,QAAEN,EAAsB1B,EAAY,SAAUiC,EAAUC,GACtG,IAAIC,EAAeX,EAAUU,GAC7B,OAAoB,MAAhBC,GACFV,GAAWp6B,IAAK66B,EAAoB76B,IAAKg6B,KAAMa,EAAoBb,OAC5D,MAELrE,EAA+B,QAAE2E,EAAiBM,GAAWE,EAAcP,EAAqBK,KAClGR,GAAWp6B,IAAK66B,EAAoB76B,IAAKg6B,KAAMa,EAAoBb,OAC5D,OAEAh6B,IAAK66B,EAAoB76B,IAAKg6B,KAAMa,EAAoBb,KAAM/xB,MAAO6yB,KAG5EhC,KACAC,KACAH,KACAC,KACKlsB,EAAI,EAAGA,EAAI+tB,EAAqB76B,OAAQ8M,IAAK,CAGpD,IAAK,IAFDouB,EAA0BL,EAAqB/tB,GAC/CquB,EAAgB,KACXhC,EAAI,EAAGA,EAAIqB,EAAqBx6B,OAAQm5B,IAC/C,GAAIqB,EAAqBrB,GAAGh5B,MAAQ+6B,EAAwB/6B,IAAK,CAC/Dg7B,EAAgBhC,EAChB,MAIJ,GAAqB,MAAjBgC,EAAuB,CACzB,IAAIC,EAAaf,EAAUa,GAC3BjC,EAAiBnsB,GAAKsuB,EACtBrC,EAAmBjsB,GAAKsuB,EAExB,IAAIC,EAAWjG,EAAqB,QAAE8F,EAAwB9yB,OAC9D8wB,EAAqBpsB,GAAKuuB,EAC1BrC,EAAuBlsB,GAAKuuB,OAE5BpC,EAAiBnsB,GAAK2tB,EAAiBU,GACvCpC,EAAmBjsB,GAAK6tB,EAAmBQ,GAC3CjC,EAAqBpsB,GAAK4tB,EAAqBS,GAC/CnC,EAAuBlsB,GAAK8tB,EAAuBO,GAIvD,OAAQN,EAAsB5B,EAAkBC,EAAsBH,EAAoBC,GAtK5F5Z,cAAqB,EAErB,IAAI6B,EAAWzhB,OAAOqd,QAAU,SAAUvY,GAAU,IAAK,IAAIwI,EAAI,EAAGA,EAAIJ,UAAU1M,OAAQ8M,IAAK,CAAE,IAAIoU,EAASxU,UAAUI,GAAI,IAAK,IAAI3M,KAAO+gB,EAAc1hB,OAAO+M,UAAUmQ,eAAejQ,KAAKyU,EAAQ/gB,KAAQmE,EAAOnE,GAAO+gB,EAAO/gB,IAAY,OAAOmE,GAEnPywB,EAAe,WAAe,SAASC,EAAiB1wB,EAAQ5E,GAAS,IAAK,IAAIoN,EAAI,EAAGA,EAAIpN,EAAMM,OAAQ8M,IAAK,CAAE,IAAImoB,EAAav1B,EAAMoN,GAAImoB,EAAWrU,WAAaqU,EAAWrU,aAAc,EAAOqU,EAAWnU,cAAe,EAAU,UAAWmU,IAAYA,EAAWpU,UAAW,GAAMrhB,OAAOslB,eAAexgB,EAAQ2wB,EAAW90B,IAAK80B,IAAiB,OAAO,SAAU7U,EAAa8U,EAAYC,GAAiJ,OAA9HD,GAAYF,EAAiB5U,EAAY7T,UAAW2oB,GAAiBC,GAAaH,EAAiB5U,EAAa+U,GAAqB/U,GAA9gB,GAUfgV,EAAcrV,EAAuBsV,IAIrCC,EAAevV,EAAuBwV,IAItCC,EAAYzV,EAAuB0V,IAInCqF,EAAc/a,EAAuBub,IAIrC5F,EAAmB3V,EAAuB4V,IAI1CC,EAAQ7V,EAAuB8V,IAI/BC,EAAwB/V,EAAuBgW,IAI/C1U,EAAUtB,EAAuBT,IAIjCqI,EAAc5H,EAAuBwB,IAErCyU,EAAa,IAAO,GAyHpBuF,EAAmB,SAAW5Z,GAsChC,SAAS4Z,EAAiB77B,GACxB,IAAIkiB,EAAQhR,KAEZsP,EAAgBtP,KAAM2qB,GAEtB5Z,EAAiBlV,KAAKmE,KAAMlR,GAC5BkR,KAAK4qB,YAAa,EAClB5qB,KAAKulB,YAAc,KACnBvlB,KAAKwlB,SAAW,EAChBxlB,KAAKylB,gBAAkB,EACvBzlB,KAAK8nB,iBAAmB,KAExB9nB,KAAK2lB,qBAAuB,SAAUmC,GASpC,IAAK,IARD+C,EAAgBrB,EAAaxY,EAAMliB,MAAM26B,UAAWzY,EAAMliB,MAAM46B,UAAW1Y,EAAMliB,MAAM66B,SAAU3Y,EAAMjiB,MAAMo6B,kBAAmBrB,EAAkB9W,EAAMjiB,MAAM44B,cAAe3W,EAAMjiB,MAAM64B,kBAAmB5W,EAAMjiB,MAAMg5B,gBAAiB/W,EAAMjiB,MAAMi5B,qBAErPmB,EAAoB0B,EAAc,GAClClD,EAAgBkD,EAAc,GAC9BjD,EAAoBiD,EAAc,GAClC9C,EAAkB8C,EAAc,GAChC7C,EAAsB6C,EAAc,GAE/B3uB,EAAI,EAAGA,EAAI4rB,EAAiB14B,OAAQ8M,IAAK,CAChD,IAAIwpB,EAAkBoC,EAAiB5rB,GAAG1E,MACtCquB,GAAQ,EAEZ,IAAK,IAAIt2B,KAAOm2B,EACd,GAAK92B,OAAO+M,UAAUmQ,eAAejQ,KAAK6pB,EAAiBn2B,GAA3D,CAIA,IAAI20B,EAAawB,EAAgBn2B,GACP,iBAAf20B,IACJ2B,IACHA,GAAQ,EACR8B,EAAczrB,GAAKmU,KAAasX,EAAczrB,IAC9C0rB,EAAkB1rB,GAAKmU,KAAauX,EAAkB1rB,IACtD6rB,EAAgB7rB,GAAKmU,KAAa0X,EAAgB7rB,IAClD8rB,EAAoB9rB,GAAKmU,KAAa2X,EAAoB9rB,IAC1DitB,EAAkBjtB,IAChB3M,IAAK45B,EAAkBjtB,GAAG3M,IAC1Bg6B,KAAMJ,EAAkBjtB,GAAGqtB,KAC3B/xB,MAAO6Y,KAAa8Y,EAAkBjtB,GAAG1E,SAG7CmwB,EAAczrB,GAAG3M,GAAO20B,EACxB0D,EAAkB1rB,GAAG3M,GAAO,EAC5Bw4B,EAAgB7rB,GAAG3M,GAAO20B,EAC1B8D,EAAoB9rB,GAAG3M,GAAO,EAC9B45B,EAAkBjtB,GAAG1E,MAAMjI,GAAO20B,IAQxClT,EAAMvQ,UACJknB,cAAeA,EACfC,kBAAmBA,EACnBuB,kBAAmBA,EACnBpB,gBAAiBA,EACjBC,oBAAqBA,KAIzBhoB,KAAKimB,0BAA4B,WAC3BjV,EAAM4Z,aAMV5Z,EAAMuU,YAAcP,EAAe,QAAE,SAAUkB,GAM7C,IAAIlV,EAAM4Z,WAAV,CAIA,IAAIE,EAAa9Z,EAAMliB,MAAMqB,OACzB+3B,EAAmC,mBAAf4C,EAA4BA,EAAW5B,EAAgBlY,EAAMjiB,MAAMo6B,kBAAmBnY,EAAM8W,iBAAkB9W,EAAMjiB,MAAMg5B,kBAAoB+C,EAGtK,GAAIpD,EAAuB1W,EAAMjiB,MAAM44B,cAAeO,EAAYlX,EAAMjiB,MAAM64B,kBAAmB5W,EAAMjiB,MAAMo6B,mBAI3G,OAFAnY,EAAMuU,YAAc,UACpBvU,EAAMyU,gBAAkB,GAI1B,IAAIY,EAAcH,GAAapB,EAA0B,UACrDwB,EAAYD,EAAcrV,EAAMwU,SAQpC,GAPAxU,EAAMwU,SAAWa,EACjBrV,EAAMyU,gBAAkBzU,EAAMyU,gBAAkBa,EAE5CtV,EAAMyU,gBAA+B,GAAbL,IAC1BpU,EAAMyU,gBAAkB,GAGI,IAA1BzU,EAAMyU,gBAIR,OAFAzU,EAAMuU,YAAc,UACpBvU,EAAMiV,4BAeR,IAAK,IAXDM,GAA0BvV,EAAMyU,gBAAkBhvB,KAAK+vB,MAAMxV,EAAMyU,gBAAkBL,GAAcA,GAAcA,EACjHqB,EAAkBhwB,KAAK+vB,MAAMxV,EAAMyU,gBAAkBL,GAErD2F,EAAiBvB,EAAaxY,EAAMliB,MAAM26B,UAAWzY,EAAMliB,MAAM46B,UAAW1Y,EAAMliB,MAAM66B,SAAU3Y,EAAMjiB,MAAMo6B,kBAAmBjB,EAAYlX,EAAMjiB,MAAM44B,cAAe3W,EAAMjiB,MAAM64B,kBAAmB5W,EAAMjiB,MAAMg5B,gBAAiB/W,EAAMjiB,MAAMi5B,qBAEhPiC,EAAuBc,EAAe,GACtC1C,EAAmB0C,EAAe,GAClCzC,EAAuByC,EAAe,GACtC5C,EAAqB4C,EAAe,GACpC3C,EAAyB2C,EAAe,GAEnC7uB,EAAI,EAAGA,EAAI+tB,EAAqB76B,OAAQ8M,IAAK,CACpD,IAAI8uB,EAAsBf,EAAqB/tB,GAAG1E,MAC9CovB,KACAC,KACAH,KACAC,KAEJ,IAAK,IAAIp3B,KAAOy7B,EACd,GAAKp8B,OAAO+M,UAAUmQ,eAAejQ,KAAKmvB,EAAqBz7B,GAA/D,CAIA,IAAI20B,EAAa8G,EAAoBz7B,GACrC,GAA0B,iBAAf20B,EACT0C,EAAgBr3B,GAAO20B,EACvB2C,EAAmBt3B,GAAO,EAC1Bm3B,EAAkBn3B,GAAO20B,EACzByC,EAAqBp3B,GAAO,MACvB,CAGL,IAAK,IAFDu3B,EAAyBqB,EAAmBjsB,GAAG3M,GAC/Cw3B,EAA4BqB,EAAuBlsB,GAAG3M,GACjDg5B,EAAI,EAAGA,EAAI9B,EAAiB8B,IAAK,CACxC,IAAIvB,EAAWpC,EAAmB,QAAEQ,EAAa,IAAM0B,EAAwBC,EAA2B7C,EAAWz1B,IAAKy1B,EAAW+C,UAAW/C,EAAWgD,QAAShD,EAAWvB,WAE/KmE,EAAyBE,EAAS,GAClCD,EAA4BC,EAAS,GAGvC,IAAIG,EAAYvC,EAAmB,QAAEQ,EAAa,IAAM0B,EAAwBC,EAA2B7C,EAAWz1B,IAAKy1B,EAAW+C,UAAW/C,EAAWgD,QAAShD,EAAWvB,WAE5KyE,EAAaD,EAAU,GACvBE,EAAaF,EAAU,GAE3BP,EAAgBr3B,GAAOu3B,GAA0BM,EAAaN,GAA0BP,EACxFM,EAAmBt3B,GAAOw3B,GAA6BM,EAAaN,GAA6BR,EACjGG,EAAkBn3B,GAAOu3B,EACzBH,EAAqBp3B,GAAOw3B,GAIhCoB,EAAmBjsB,GAAKwqB,EACxB0B,EAAuBlsB,GAAKyqB,EAC5B0B,EAAiBnsB,GAAK0qB,EACtB0B,EAAqBpsB,GAAK2qB,EAG5B7V,EAAMuU,YAAc,KAEpBvU,EAAMyU,iBAAmBgB,EAAkBrB,EAE3CpU,EAAMvQ,UACJknB,cAAeU,EACfT,kBAAmBU,EACnBP,gBAAiBI,EACjBH,oBAAqBI,EACrBe,kBAAmBc,IAGrBjZ,EAAM8W,iBAAmB,KAEzB9W,EAAMiV,iCAIVjmB,KAAKjR,MAAQiR,KAAKsnB,eA2GpB,OAxUA1X,EAAU+a,EAAkB5Z,GAE5BoT,EAAawG,EAAkB,OAC7Bp7B,IAAK,YACLgM,OACEitB,cAAezR,EAAqB,QAAElJ,QAAQkJ,EAAqB,QAAE9I,OACnE1e,IAAKwnB,EAAqB,QAAE3V,OAAOiM,WACnCkc,KAAMxS,EAAqB,QAAEnJ,IAC7BpW,MAAOuf,EAAqB,QAAEhJ,SAASgJ,EAAqB,QAAE5V,QAAQkM,cAExEld,OAAQ4mB,EAAqB,QAAE7V,WAAW6V,EAAqB,QAAEtJ,KAAMsJ,EAAqB,QAAElJ,QAAQkJ,EAAqB,QAAE9I,OAC3H1e,IAAKwnB,EAAqB,QAAE3V,OAAOiM,WACnCkc,KAAMxS,EAAqB,QAAEnJ,IAC7BpW,MAAOuf,EAAqB,QAAEhJ,SAASgJ,EAAqB,QAAE7V,WAAW6V,EAAqB,QAAE5V,OAAQ4V,EAAqB,QAAErJ,UAAUL,gBACrIA,WACNzW,SAAUmgB,EAAqB,QAAEtJ,KAAKJ,WACtCoc,UAAW1S,EAAqB,QAAEtJ,KAClCic,UAAW3S,EAAqB,QAAEtJ,KAClCkc,SAAU5S,EAAqB,QAAEtJ,MAEnCuC,YAAY,IAEZzgB,IAAK,eACLgM,OACEkuB,UAAW,SAAmBwB,GAC5B,OAAOvG,EAAsB,QAAEuG,EAAiBzzB,QAIlDkyB,UAAW,WACT,OAAO,MAETC,SAAU,cAEZ3Z,YAAY,KA8Ld2a,EAAiBhvB,UAAU2rB,aAAe,WACxC,IAAIE,EAASxnB,KAAKlR,MACd05B,EAAgBhB,EAAOgB,cACvBr4B,EAASq3B,EAAOr3B,OAChBs5B,EAAYjC,EAAOiC,UACnBC,EAAYlC,EAAOkC,UACnBC,EAAWnC,EAAOmC,SAElBzB,EAA+B,mBAAX/3B,EAAwBA,EAAOq4B,GAAiBr4B,EAMpEy5B,OAAuBl7B,EAEzBk7B,EADmB,MAAjBpB,EACqBN,EAEAM,EAActmB,IAAI,SAAUgpB,GAEjD,IAAK,IAAIhvB,EAAI,EAAGA,EAAIgsB,EAAW94B,OAAQ8M,IACrC,GAAIgsB,EAAWhsB,GAAG3M,MAAQ27B,EAAiB37B,IACzC,OAAO24B,EAAWhsB,GAGtB,OAAOgvB,IAGX,IAAIrB,EAAoC,MAAjBrB,EAAwBN,EAAWhmB,IAAI,SAAUipB,GACtE,OAAOzG,EAAsB,QAAEyG,EAAE3zB,SAC9BgxB,EAActmB,IAAI,SAAUipB,GAC/B,OAAOzG,EAAsB,QAAEyG,EAAE3zB,SAE/BsyB,EAAwC,MAAjBtB,EAAwBN,EAAWhmB,IAAI,SAAUipB,GAC1E,OAAO3G,EAAqB,QAAE2G,EAAE3zB,SAC7BgxB,EAActmB,IAAI,SAAUipB,GAC/B,OAAO3G,EAAqB,QAAE2G,EAAE3zB,SAG9B4zB,EAAiB5B,EAIrBC,EAAWC,EAAWC,EAAUC,EAAsB1B,EAAY2B,EAAkBC,EAAsBD,EAC1GC,GAEIX,EAAoBiC,EAAe,GAOvC,OACEzD,cAPkByD,EAAe,GAQjCxD,kBAPsBwD,EAAe,GAQrCrD,gBAPoBqD,EAAe,GAQnCpD,oBAPwBoD,EAAe,GAQvCjC,kBAAmBA,IAQvBwB,EAAiBhvB,UAAU4W,kBAAoB,WAC7CvS,KAAKwlB,SAAWV,EAA0B,UAC1C9kB,KAAKimB,6BAGP0E,EAAiBhvB,UAAU8W,0BAA4B,SAAmC3jB,GACpFkR,KAAK8nB,kBAEP9nB,KAAK2lB,qBAAqB3lB,KAAK8nB,kBAGjC,IAAI33B,EAASrB,EAAMqB,OAEjB6P,KAAK8nB,iBADe,mBAAX33B,EACeA,EAAO+4B,EAAgBlpB,KAAKjR,MAAMo6B,kBAAmBnpB,KAAK8nB,iBAAkB9nB,KAAKjR,MAAMg5B,kBAEvF53B,EAGF,MAApB6P,KAAKulB,cACPvlB,KAAKwlB,SAAWV,EAA0B,UAC1C9kB,KAAKimB,8BAIT0E,EAAiBhvB,UAAUid,qBAAuB,WAChD5Y,KAAK4qB,YAAa,EACM,MAApB5qB,KAAKulB,cACPP,EAAe,QAAEzQ,OAAOvU,KAAKulB,aAC7BvlB,KAAKulB,YAAc,OAIvBoF,EAAiBhvB,UAAUwX,OAAS,WAClC,IAAIkY,EAAiBnC,EAAgBlpB,KAAKjR,MAAMo6B,kBAAmBnpB,KAAK8nB,iBAAkB9nB,KAAKjR,MAAM44B,eACjGF,EAAmBznB,KAAKlR,MAAM8H,SAASy0B,GAC3C,OAAO5D,GAAoBhX,EAAiB,QAAEhG,SAASC,KAAK+c,IAGvDkD,EAzUc,CA0UpBla,EAAiB,QAAEuD,WAEtBxF,EAAiB,QAAImc,EACrBvc,UAAiBI,EAAiB,uCCtflCA,cAAqB,EACrBA,EAAiB,SACf8c,UAAYrE,UAAW,IAAKC,QAAS,IACrCqE,QAAUtE,UAAW,IAAKC,QAAS,IACnCsE,QAAUvE,UAAW,IAAKC,QAAS,IACnCuE,OAASxE,UAAW,IAAKC,QAAS,KAEpC9Y,UAAiBI,EAAiB,uCCPlCA,cAAqB,EAErB,IAAI6B,EAAWzhB,OAAOqd,QAAU,SAAUvY,GAAU,IAAK,IAAIwI,EAAI,EAAGA,EAAIJ,UAAU1M,OAAQ8M,IAAK,CAAE,IAAIoU,EAASxU,UAAUI,GAAI,IAAK,IAAI3M,KAAO+gB,EAAc1hB,OAAO+M,UAAUmQ,eAAejQ,KAAKyU,EAAQ/gB,KAAQmE,EAAOnE,GAAO+gB,EAAO/gB,IAAY,OAAOmE,GAEvP8a,EAAiB,QAYjB,SAAgB/f,EAAKi9B,GACnB,OAAOrb,KAAasb,EAAeD,GAAUj9B,IAAKA,KAPpD,IAAIm9B,EAJJ,SAAgC18B,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAAWngB,GAIzEigB,CAAuB0c,IAEnCF,EAAgBtb,KAAaub,EAAmB,QAAEN,UACpD3I,UAAW,MAObvU,UAAiBI,EAAiB,uCCpBlCA,cAAqB,EACrBA,EAAiB,QAEjB,aAWAJ,UAAiBI,EAAiB,uCCZlC,SAASsd,EAAgB58B,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,EAAa,QAAIA,EAFhFsf,cAAqB,EAMrBA,SAAiBsd,EAAgBC,IAIjCvd,kBAA0Bsd,EAAgBE,IAI1Cxd,mBAA2Bsd,EAAgBG,IAI3Czd,SAAiBsd,EAAgBI,IAIjC1d,UAAkBsd,EAAgBD,IAIlCrd,aAAqBsd,EAAgBnH,IAMrCnW,cAAsBsd,EAAgBK,0CCvBjBC,0BA8CPt9B,8EACJA,aA4BRu9B,WAAa,SAAClyB,GACR6W,EAAKsb,QAAqC,mBAApBtb,EAAKsb,OAAO/uB,OAC/B+uB,OAAO/uB,IAAIpD,OAGdnC,EAAS,EACTu0B,EAAa,EACbC,EAAgB,KACN,OAAVryB,EAAgB,KACZ3H,EAAO6N,cAAYlG,GACnBsyB,EAAKr8B,OAAOC,iBAAiBmC,KAC1BA,EAAK0I,eACD5C,SAASm0B,EAAGC,iBAAiB,eAAgB,MAC1Cp0B,SAASm0B,EAAGC,iBAAiB,kBAAmB,MAGzDj2B,KAAK2H,IAAI4S,EAAKliB,MAAM69B,UAAW30B,KAEnCyI,UAAWzI,SAAQu0B,aAAYC,mBA5C/B19B,EAAM89B,YAGJ79B,cACKD,EAAM69B,qBACF,gBACG,KALZ59B,OAAU89B,aAAa,0EAUNna,GACpB1S,KAAKjR,MAAM89B,aAAena,EAAUka,gBACjCnsB,UAAWosB,aAAa,oCAIzBD,EAAWC,EAAatxB,EAAOmwB,OAAQvtB,yDAAM,EAC7C2uB,EAAaF,EAAmCzuB,EAAvB1H,KAAK2H,IAAID,EAAK5C,UACzCsxB,IAAgBD,EACXE,EAGFC,GAAOD,EAAWpB,iDAyBkC1rB,KAAKjR,MAAxDiJ,IAAAA,OAAQu0B,IAAAA,WAAYC,IAAAA,cAAeK,IAAAA,cASvC7sB,KAAKlR,MAPP8H,IAAAA,SACAg2B,IAAAA,UACArF,IAAAA,aACOyF,IAAPx1B,MACAy1B,IAAAA,aACAC,IAAAA,QACAP,IAAAA,iBAGGO,EAKHp2B,iCAEOk2B,UACKhtB,KAAKksB,QAAQU,EAAWC,EAAa70B,EAAQi1B,EAAcN,cACvD3sB,KAAKksB,QAAQU,EAAWC,EAAaN,EAAYU,iBAC9CjtB,KAAKksB,QAAQU,EAAWC,EAAaL,EAAeS,wBAGhE1F,2DAOCqF,IAAcp1B,EAAMQ,cACf,SAGHmC,EAAQsQ,WAASC,KAAK9T,KACvB01B,OAASnyB,MACVgzB,EAAYhzB,EAAMrL,MAAM0I,cACvBo1B,GAAeD,GAAan1B,EAAMQ,SAAW20B,IAAen1B,EAAMQ,SAAWA,YAE3EmC,EAAMrL,MAAM0I,MACZA,YACO,YAGPsT,eAAa3Q,OACZyyB,EAA8B,KAAlB1Z,EAAKmZ,iBAChBc,MAnCNP,EAAY,KAAOh2B,SA7GMgK,iBAAjBwrB,GAsCZ1b,uBACI,0BAEI,cAEF,OC9CM1O,+KA0BgChC,KAAKlR,MAA9C8C,IAAAA,UAAWw7B,IAAAA,MAAOC,IAAAA,SAAav+B,yCAEjCklB,EAAYqZ,EAAW,MAAQ,YAGnCv2B,iBAACkd,QACKllB,aACOgD,GAAG,qCACYu7B,sBACHD,GACpBx7B,aApC0BgP,iBCF/B0sB,GAAY,GAmBGC,0BA8EPz+B,yFAaZ0+B,aAAe,gBAAGh2B,IAAAA,MAAOi2B,IAAAA,UAAWC,IAAAA,cAC9Bv9B,EAASqH,QACY,kBAAdi2B,eAECH,SACDA,YACGI,EAAgBJ,QAAY5+B,GACnC8I,GAEyB,iBAAdi2B,iBAENA,QACDA,WACGC,EAAgBD,OAAY/+B,GACnC8I,IAIArH,KA5BFpB,OAAUoB,OAAQ6gB,EAAKwc,aAAa1+B,2EAGjB4jB,SACoB1S,KAAKlR,MAAzC0I,IAAAA,MAAOi2B,IAAAA,UAAWC,IAAAA,cACtBl2B,IAAUkb,EAAUlb,OAASi2B,IAAc/a,EAAU+a,WAAaC,IAAkBhb,EAAUgb,oBAC3FjtB,UAAWtQ,OAAQ6P,KAAKwtB,aAAa9a,0CA0BpCviB,EAAW6P,KAAKjR,MAAhBoB,SAgBJ6P,KAAKlR,MAdPiI,IAAAA,cACAnF,IAAAA,UACAgF,IAAAA,SACAzF,IAAAA,SACAG,IAAAA,QACAC,IAAAA,UACAH,IAAAA,MACAI,IAAAA,QAMG1C,KAJH0I,QACAi2B,YACAC,qJAKI7pB,EAAU/R,GAAG,UAAWiF,EAAe/F,wDAMzCY,UAGFkF,2BAAOhI,GAAO0I,MAAOrH,EAAQyB,UAAWiS,cA5IRjD,iBAAjB2sB,GA0EZ7c,4BACU,sBC5FEid,+KAWmD3tB,KAAKlR,MAAjE+H,IAAAA,KAAM+2B,IAAAA,OAAQ3W,IAAAA,OAAQkC,IAAAA,gBAAiB3hB,IAAAA,MAAO5F,IAAAA,cACjDiF,IAAS+2B,SACL,SAGLC,GAAa,SACbD,GACkB92B,GAAM2T,SAASC,KAAKkjB,GACxB9+B,MAAMg/B,eACP,GAIfh3B,8BACSU,YACI1F,GAAG,0CACW+E,GAAQg3B,0BACND,IAAWC,GACnC1U,EAAkBlC,GAClBrlB,OAEMg8B,UAhCsBhtB,iBCElBmtB,+KA6Bb/tB,KAAKlR,MAZPmoB,IAAAA,OACAkC,IAAAA,gBACAhoB,IAAAA,SACAsQ,IAAAA,YACAusB,IAAAA,iBACAC,IAAAA,qBACAC,IAAAA,cACAC,IAAAA,mBACAC,IAAAA,uBACAx8B,IAAAA,UACAy8B,IAAAA,WACGv/B,+LAGDw/B,gBACAJ,MAEAp3B,8BACSq3B,YACIr8B,GAAG,uDACiBu8B,GAC5Br9B,GAAcG,WAAUE,MAAOF,IAAai9B,QAQnDt3B,6BAAShI,GAAO8C,UAAWE,GAAG,kBAAmBF,mCAEtCo8B,YACIl8B,GAAG,8BACXqnB,GAAmBhoB,GAAY8lB,GAC/BjmB,GAAcG,WAAUxB,MAAOsnB,IAAWgX,iBAnDbrtB,iBCDrBqB,+KAyDbjC,KAAKlR,MAPIklB,IAAXjS,UACAqrB,IAAAA,MACA97B,IAAAA,QACAmQ,IAAAA,YACA7P,IAAAA,UACAgF,IAAAA,SACG9H,oFAIHgI,yBACMhI,aACOgD,GAAG,sCACWs7B,GACtBp8B,GAAcM,UAASD,MAAOC,IAAYM,iBAhEdgP,iBAAlBqB,GA4CZyO,wBACM,UCzCM6d,sNA8CnBx/B,wFAGoCiR,KAAK/P,QAA/Bu+B,IAAAA,UAAcv+B,sBAChBw+B,EAAmB5/B,EAASmR,KAAKjR,MAAOiR,KAAK/P,QAAS,iCAEvDA,qCAE6B,IAAdu+B,EACd,EACAA,EAAY,mDAKdxuB,KAAK/P,QAAQy+B,cAAe,KACxBvyB,EAAOkE,cAAYL,SACrB7D,EAAKjB,aAAeiB,EAAKwyB,aAAc,KACnCF,GAAqB/0B,EAAG2G,cAAYL,YACrCS,UAAWguB,gEAchBzuB,KAAKlR,MAPP8C,IAAAA,UACAg9B,IAAAA,QACAh4B,IAAAA,SACAgL,IAAAA,UACAitB,IAAAA,OACAC,IAAAA,iBACGhgC,qFAEiDkR,KAAK/P,QAAnDy+B,IAAAA,cAAeK,IAAAA,gBAAiBP,IAAAA,UAEpCQ,SACAptB,MACY9K,iBAACmL,IAAU1S,IAAI,YAAYkS,YAAaG,EAAWtQ,QAASw9B,SAGtE9a,EAAY4a,EAAU,KAAO,YAEjC93B,yBACMhI,aACOgD,GAAG,gCACO+8B,4BACQH,8BACJK,EAAoBA,GAAmBL,GAAiBF,EAAY,2BACvEA,EAAcA,IAAcE,MAC/C98B,iBAhGuBgP,iBAAb2tB,GAgCZU,6BACMhuB,GAAUE,qBACNF,GAAUuM,sBACP0hB,mBACDjuB,GAAUE,QApCVotB,GAuCZvtB,wBACMC,GAAUE,qBACNF,GAAUuM,sBACP0hB,mBACDjuB,GAAUE,0BCtD/BqN,cAAqB,EACrBA,UACA,SAA2B8M,GACzB,OAAO,SAAkBxsB,EAAO+d,EAAUC,EAAeC,EAAUC,GACjE,IAAIwO,EAAoB1O,GAAiB,gBACrC2O,EAAmBzO,GAAgBH,EAEvC,GAAuB,MAAnB/d,EAAM+d,GACR,OAAO,IAAInB,MAAM,OAASqB,EAAW,KAAO0O,EAAmB,0BAAkCD,EAAoB,4EAGvH,IAAK,IAAIrD,EAAOrc,UAAU1M,OAAQoU,EAAO9H,MAAMyc,EAAO,EAAIA,EAAO,EAAI,GAAIpF,EAAO,EAAGA,EAAOoF,EAAMpF,IAC9FvP,EAAKuP,EAAO,GAAKjX,UAAUiX,GAG7B,OAAOuI,EAAU/M,WAAM7f,GAAYI,EAAO+d,EAAUC,EAAeC,EAAUC,GAAcoL,OAAO5U,S5GhBtG,IAAItM,UEGE8B,GAAuB,IKGzBm2B,GAAU,WAYV,SAASC,EAASppB,EAAKzW,GACnB,IAAIkf,GAAU,EAYd,OAVAzI,EAAIvC,KAAK,SAAU4rB,EAAO9tB,GACtB,OAAI8tB,EAAM,KAAO9/B,IACbkf,EAASlN,GAEF,KAMRkN,EAxBX,MAAkB,oBAAP6gB,IACAA,IA0BH,WACJ,SAASC,IACLvvB,KAAKwvB,eAGT,IAAIC,GAAuB1zB,SAgF3B,OA3EA0zB,EAAmB1zB,KAAK2zB,IAAM,WAC1B,OAAO1vB,KAAKwvB,YAAYpgC,QAO5BmgC,EAAU5zB,UAAU+zB,IAAM,SAAUngC,GAChC,IAAIgS,EAAQ6tB,EAASpvB,KAAKwvB,YAAajgC,GACnC8/B,EAAQrvB,KAAKwvB,YAAYjuB,GAE7B,OAAO8tB,GAASA,EAAM,IAQ1BE,EAAU5zB,UAAUg0B,IAAM,SAAUpgC,EAAKgM,GACrC,IAAIgG,EAAQ6tB,EAASpvB,KAAKwvB,YAAajgC,IAElCgS,EACDvB,KAAKwvB,YAAYjuB,GAAO,GAAKhG,EAE7ByE,KAAKwvB,YAAY9rB,MAAMnU,EAAKgM,KAQpCg0B,EAAU5zB,UAAUi0B,OAAS,SAAUrgC,GACnC,IAAIsgC,EAAU7vB,KAAKwvB,YACfjuB,EAAQ6tB,EAASS,EAAStgC,IAEzBgS,GACDsuB,EAAQnP,OAAOnf,EAAO,IAQ9BguB,EAAU5zB,UAAUm0B,IAAM,SAAUvgC,GAChC,SAAU6/B,EAASpvB,KAAKwvB,YAAajgC,IAMzCggC,EAAU5zB,UAAUo0B,MAAQ,WACxB/vB,KAAKwvB,YAAY9O,OAAO,IAQ5B6O,EAAU5zB,UAAU6Q,QAAU,SAAU9W,EAAUs6B,QACjC,IAARA,IAAiBA,EAAM,MAE5B,IAAK,IAAI9zB,EAAI,EAAGC,EAAO6D,KAAKwvB,YAAatzB,EAAIC,EAAK/M,OAAQ8M,GAAK,EAAG,CAC9D,IAAImzB,EAAQlzB,EAAKD,GAEjBxG,EAASmG,KAAKm0B,EAAKX,EAAM,GAAIA,EAAM,MAI3CzgC,OAAOw1B,iBAAkBmL,EAAU5zB,UAAW8zB,GAEvCF,KAjHD,GAwHVnyB,GAA6B,oBAAVhN,QAA4C,oBAAZL,UAA2BK,OAAOL,WAAaA,SAQlGkgC,GACqC,mBAA1BnM,sBACAA,sBAGJ,SAAUpuB,GAAY,OAAOkf,WAAW,WAAc,OAAOlf,EAASgP,KAAK+Z,QAAW,IAAO,KAIpGyR,GAAkB,EAUlBC,GAAW,SAAUz6B,EAAUghB,GAW/B,SAAS0Z,IACDC,IACAA,GAAc,EAEd36B,KAGA46B,GACAC,IAWR,SAASC,IACLP,GAAwBG,GAQ5B,SAASG,IACL,IAAIE,EAAY/rB,KAAK+Z,MAErB,GAAI4R,EAAa,CAEb,GAAII,EAAYC,EAAeR,GAC3B,OAOJI,GAAe,OAEfD,GAAc,EACdC,GAAe,EAEf1b,WAAW4b,EAAiB9Z,GAGhCga,EAAeD,EA3DnB,IAAIJ,GAAc,EACdC,GAAe,EACfI,EAAe,EA4DnB,OAAOH,GAQPI,IAAkB,MAAO,QAAS,SAAU,OAAQ,QAAS,SAAU,OAAQ,UAG/EC,GAA6B,oBAAbx5B,WAA4B,mBAAmBy5B,KAAKz5B,UAAUC,WAO9Ey5B,GAAuD,oBAApBC,mBAAoCH,GAKvEI,GAA2B,WAM3BhxB,KAAKixB,YAAa,EAOlBjxB,KAAKkxB,sBAAuB,EAO5BlxB,KAAKmxB,mBAAqB,KAO1BnxB,KAAKoxB,cAELpxB,KAAKqxB,iBAAmBrxB,KAAKqxB,iBAAiBhgB,KAAKrR,MACnDA,KAAKsxB,QAAUnB,GAASnwB,KAAKsxB,QAAQjgB,KAAKrR,MAjD1B,KA0DpBgxB,GAAyBr1B,UAAU41B,YAAc,SAAUC,IACjDxxB,KAAKoxB,WAAW9hC,QAAQkiC,IAC1BxxB,KAAKoxB,WAAW1tB,KAAK8tB,GAIpBxxB,KAAKixB,YACNjxB,KAAKyxB,YAUbT,GAAyBr1B,UAAU+1B,eAAiB,SAAUF,GAC1D,IAAIG,EAAY3xB,KAAKoxB,WACjB7vB,EAAQowB,EAAUriC,QAAQkiC,IAGzBjwB,GACDowB,EAAUjR,OAAOnf,EAAO,IAIvBowB,EAAUviC,QAAU4Q,KAAKixB,YAC1BjxB,KAAK4xB,eAUbZ,GAAyBr1B,UAAU21B,QAAU,WACnBtxB,KAAK6xB,oBAKvB7xB,KAAKsxB,WAYbN,GAAyBr1B,UAAUk2B,iBAAmB,WAElD,IAAIC,EAAkB9xB,KAAKoxB,WAAW/hC,OAAO,SAAUmiC,GACnD,OAAOA,EAASO,eAAgBP,EAASQ,cAU7C,OAFAF,EAAgBtlB,QAAQ,SAAUglB,GAAY,OAAOA,EAASS,oBAEvDH,EAAgB1iC,OAAS,GASpC4hC,GAAyBr1B,UAAU81B,SAAW,WAGrCr0B,KAAa4C,KAAKixB,aAOvBlhC,SAASmG,iBAAiB,gBAAiB8J,KAAKqxB,kBAEhDjhC,OAAO8F,iBAAiB,SAAU8J,KAAKsxB,SAEnCR,IACA9wB,KAAKmxB,mBAAqB,IAAIJ,iBAAiB/wB,KAAKsxB,SAEpDtxB,KAAKmxB,mBAAmBe,QAAQniC,UAC5BoiC,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,SAAS,MAGbviC,SAASmG,iBAAiB,qBAAsB8J,KAAKsxB,SAErDtxB,KAAKkxB,sBAAuB,GAGhClxB,KAAKixB,YAAa,IAStBD,GAAyBr1B,UAAUi2B,YAAc,WAGxCx0B,IAAc4C,KAAKixB,aAIxBlhC,SAASsG,oBAAoB,gBAAiB2J,KAAKqxB,kBACnDjhC,OAAOiG,oBAAoB,SAAU2J,KAAKsxB,SAEtCtxB,KAAKmxB,oBACLnxB,KAAKmxB,mBAAmBoB,aAGxBvyB,KAAKkxB,sBACLnhC,SAASsG,oBAAoB,qBAAsB2J,KAAKsxB,SAG5DtxB,KAAKmxB,mBAAqB,KAC1BnxB,KAAKkxB,sBAAuB,EAC5BlxB,KAAKixB,YAAa,IAUtBD,GAAyBr1B,UAAU01B,iBAAmB,SAAU9zB,GACxD,IAAIi1B,EAAej1B,EAAIi1B,aAGJ7B,GAAeltB,KAAK,SAAUlU,GACjD,SAAUijC,EAAaljC,QAAQC,MAI/ByQ,KAAKsxB,WASbN,GAAyByB,YAAc,WAKnC,OAJKzyB,KAAK0yB,YACN1yB,KAAK0yB,UAAY,IAAI1B,IAGlBhxB,KAAK0yB,WAQhB1B,GAAyB0B,UAAY,KASrC,IAAI/0B,YAAgCjK,EAAQ5E,GACxC,IAAK,IAAIoN,EAAI,EAAGC,EAAOvN,OAAOO,KAAKL,GAAQoN,EAAIC,EAAK/M,OAAQ8M,GAAK,EAAG,CAChE,IAAI3M,EAAM4M,EAAKD,GAEftN,OAAOslB,eAAexgB,EAAQnE,GAC1BgM,MAAOzM,EAAMS,GACbygB,YAAY,EACZC,UAAU,EACVC,cAAc,IAItB,OAAOxc,GAIPiJ,GAAYJ,EAAe,EAAG,EAAG,EAAG,GAwJpCc,GAGiC,oBAAtBs1B,mBACA,SAAUj/B,GAAU,OAAOA,aAAkBi/B,oBAMjD,SAAUj/B,GAAU,OAAOA,aAAkBk/B,YAAwC,mBAAnBl/B,EAAO4I,SA8EhFu2B,GAAoB,SAASn/B,GAM7BsM,KAAK8yB,eAAiB,EAOtB9yB,KAAK+yB,gBAAkB,EAOvB/yB,KAAKgzB,aAAez2B,EAAe,EAAG,EAAG,EAAG,GAO5CyD,KAAKtM,OAASA,GASlBm/B,GAAkBl3B,UAAUs3B,SAAW,WACnC,IAAIj+B,EAAOmI,EAAe6C,KAAKtM,QAI/B,OAFAsM,KAAKgzB,aAAeh+B,EAEbA,EAAKjE,QAAUiP,KAAK8yB,gBAAkB99B,EAAKgD,SAAWgI,KAAK+yB,iBAStEF,GAAkBl3B,UAAUu3B,cAAgB,WACxC,IAAIl+B,EAAOgL,KAAKgzB,aAKhB,OAHAhzB,KAAK8yB,eAAiB99B,EAAKjE,MAC3BiP,KAAK+yB,gBAAkB/9B,EAAKgD,OAErBhD,GAGX,IAAIm+B,GAAsB,SAASz/B,EAAQ0/B,GACvC,IAAIC,EAAc/1B,EAAmB81B,GAQrCz1B,GAAmBqC,MAAQtM,OAAQA,EAAQ2/B,YAAaA,KAGxDC,GAAoB,SAAS59B,EAAU69B,EAAYC,GACnD,GAAwB,mBAAb99B,EACP,MAAM,IAAI/G,UAAU,2DASxBqR,KAAKyzB,uBAOLzzB,KAAK0zB,cAAgB,IAAIvE,GAOzBnvB,KAAK2zB,UAAYj+B,EAOjBsK,KAAK4zB,YAAcL,EAQnBvzB,KAAK6zB,aAAeL,GASxBF,GAAkB33B,UAAUu2B,QAAU,SAAUx+B,GAC5C,IAAKoI,UAAU1M,OACX,MAAM,IAAIT,UAAU,4CAIxB,GAAuB,oBAAZmlC,SAA6BA,mBAAmBllC,OAA3D,CAIA,KAAM8E,aAAkBogC,SACpB,MAAM,IAAInlC,UAAU,yCAGxB,IAAIolC,EAAe/zB,KAAK0zB,cAGpBK,EAAajE,IAAIp8B,KAIrBqgC,EAAapE,IAAIj8B,EAAQ,IAAIm/B,GAAkBn/B,IAE/CsM,KAAK4zB,YAAYrC,YAAYvxB,MAG7BA,KAAK4zB,YAAYtC,aASrBgC,GAAkB33B,UAAUq4B,UAAY,SAAUtgC,GAC9C,IAAKoI,UAAU1M,OACX,MAAM,IAAIT,UAAU,4CAIxB,GAAuB,oBAAZmlC,SAA6BA,mBAAmBllC,OAA3D,CAIA,KAAM8E,aAAkBogC,SACpB,MAAM,IAAInlC,UAAU,yCAGxB,IAAIolC,EAAe/zB,KAAK0zB,cAGnBK,EAAajE,IAAIp8B,KAItBqgC,EAAanE,OAAOl8B,GAEfqgC,EAAah4B,MACdiE,KAAK4zB,YAAYlC,eAAe1xB,SASxCszB,GAAkB33B,UAAU42B,WAAa,WACrCvyB,KAAKi0B,cACLj0B,KAAK0zB,cAAc3D,QACnB/vB,KAAK4zB,YAAYlC,eAAe1xB,OASpCszB,GAAkB33B,UAAUo2B,aAAe,WACnC,IAAImC,EAASl0B,KAEjBA,KAAKi0B,cAELj0B,KAAK0zB,cAAclnB,QAAQ,SAAU2nB,GAC7BA,EAAYlB,YACZiB,EAAOT,oBAAoB/vB,KAAKywB,MAW5Cb,GAAkB33B,UAAUs2B,gBAAkB,WAE1C,GAAKjyB,KAAKgyB,YAAV,CAIA,IAAIhC,EAAMhwB,KAAK6zB,aAGXhE,EAAU7vB,KAAKyzB,oBAAoBvxB,IAAI,SAAUiyB,GACjD,OAAO,IAAIhB,GAAoBgB,EAAYzgC,OAAQygC,EAAYjB,mBAGnElzB,KAAK2zB,UAAU93B,KAAKm0B,EAAKH,EAASG,GAClChwB,KAAKi0B,gBAQTX,GAAkB33B,UAAUs4B,YAAc,WACtCj0B,KAAKyzB,oBAAoB/S,OAAO,IAQpC4S,GAAkB33B,UAAUq2B,UAAY,WACpC,OAAOhyB,KAAKyzB,oBAAoBrkC,OAAS,GAM7C,IAAIuiC,GAA8B,oBAAXyC,QAAyB,IAAIA,QAAY,IAAIjF,GAMhEkF,GAAmB,SAAS3+B,GAC5B,KAAMsK,gBAAgBq0B,IAClB,MAAM,IAAI1lC,UAAU,qCAGxB,IAAKmN,UAAU1M,OACX,MAAM,IAAIT,UAAU,4CAGxB,IAAI4kC,EAAavC,GAAyByB,cACtCjB,EAAW,IAAI8B,GAAkB59B,EAAU69B,EAAYvzB,MAE3D2xB,GAAUhC,IAAI3vB,KAAMwxB,KAIvB,UAAW,YAAa,cAAchlB,QAAQ,SAAU8nB,GACrDD,GAAiB14B,UAAU24B,GAAU,WACjC,OAAQ/2B,EAAMo0B,GAAUjC,IAAI1vB,OAAOs0B,GAAQ/lB,MAAMhR,EAAKzB,WACtD,IAAIyB,KAIZ,IAAIgE,GAE6B,oBAAlBgzB,eAEAA,eAGJF,GsGv+BUE,sNA6EnB5V,WAAa,OACb6V,QAAU,OACVC,UAAY,OACZC,QAAU,OACVC,OAAS,OACTC,cAAgB,OAChBC,aAAe,OAwBfC,SAAW,SAACjF,MACL7e,EAAKyjB,WAAczjB,EAAKwjB,gDAIT3E,iDAAS,KAAlBR,cACJA,eAIqBA,EAAMgE,YAAxBr7B,IAAAA,OAAQjH,IAAAA,QACsBs+B,EAAM37B,OAApCi7B,IAAAA,aAAcoG,IAAAA,aAClB/jB,EAAKgkB,gBAAgBh9B,EAAQ22B,IAAiB3d,EAAKikB,eAAelkC,EAAOgkC,QACtEL,QAAU18B,IACV28B,OAAS5jC,IACT6jC,cAAgBjG,IAChBkG,aAAeE,IACfjmC,MAAMomC,UAAWl9B,SAAQjH,QAAO49B,eAAcoG,cAAanlC,GAAIy/B,EAAM37B,6FAKhFshC,gBAAkB,SAACh9B,EAAQ22B,UAAiB3d,EAAKliB,MAAMqmC,cACjDn9B,IAAWgZ,EAAK0jB,SAAW/F,IAAiB3d,EAAK4jB,kBACvDK,eAAiB,SAAClkC,EAAOgkC,UAAgB/jB,EAAKliB,MAAMsmC,aAC9CrkC,IAAUigB,EAAK2jB,QAAUI,IAAgB/jB,EAAK6jB,iBAEpDQ,WAAa,SAACC,GACRA,KACG3W,WAAa2W,IACbd,QAAUxjB,EAAKukB,WAAWD,EAAWtkB,EAAKliB,MAAM4E,UAChD+gC,UAAY,IAAIe,GAAkBxkB,EAAK8jB,UAExC9jB,EAAKwjB,WACFC,UAAUvC,QAAQlhB,EAAKwjB,WAG1BxjB,EAAKyjB,aACFA,UAAUlC,eAGZ5T,WAAa,OACb6V,QAAU,OACVC,UAAY,OACZC,QAAU,OACVC,OAAS,OACTC,cAAgB,OAChBC,aAAe,MAGlB7jB,EAAKliB,MAAM2mC,SACR3mC,MAAM2mC,MAAMzkB,EAAKwjB,2FA/FA9hB,OAChBhf,EAAWsM,KAAKlR,MAAhB4E,OACFgiC,EAAahjB,EAAUhf,OACzBA,IAAWgiC,GAEJA,IACL11B,KAAKw0B,cACFC,UAAUT,UAAUh0B,KAAKw0B,cAE3BA,QAAUx0B,KAAKu1B,WAAWv1B,KAAK2e,WAAY+W,QAC3CjB,UAAUvC,QAAQlyB,KAAKw0B,6CAYrBc,EAAW5hC,MACL,OAAXA,GAAoBA,GAA4B,iBAAXA,SAChCA,MAGLoV,EAAI,YACJpV,EACE3D,SAAS4lC,eAAejiC,IAAW3D,SAASgE,cAAcL,GAE1D4hC,EAAUn8B,kBAIR,IAAIuS,MACR,6LAC8FhY,eAI3FoV,uCA2DYkL,EAAchU,KAAKlR,MAA9BiT,iBACDjL,iBAACkd,GAAUzW,IAAKyC,KAAKq1B,WAAYO,0BApKAh1B,iBAAvB2zB,GAyDZ7jB,2BACQ,cACD,YACD,YChDMmlB,0BAqVP/mC,+FAGJqL,EAAQrD,GAAM2T,SAASC,KAAK5b,EAAM8H,mBACnC7H,cACI,SACA,SACCoL,EAAMrL,MAAM0I,SAGjBs+B,UAAY,OACZC,UAAY,OACZC,UAAY,OACZC,UAAY,OACZC,YAAc,OACdC,aAAe,OACf7J,OAAS,OACT8J,QAAU,4EAU+Cp2B,KAAKlR,MAA3DunC,IAAAA,QAASn8B,IAAAA,QAASo8B,IAAAA,UAAWC,IAAAA,SAAUC,IAAAA,WACzCC,EAASz2B,KAAK02B,WAAW12B,KAAKlR,UAChCunC,EAAS,MACgBr2B,KAAK22B,qBAAqB,GAGjDH,aAIExhC,EAAOgL,KAAK42B,cAAgB52B,KAAKo2B,QAAQnhC,wBAC3C+K,KAAK62B,aACFC,uBAAuB92B,KAAK62B,SAAS,GAChC72B,KAAK+2B,eACVD,uBAAuB58B,GAAS,QAGlC88B,MAAM98B,EAASu8B,EAAQH,EAAWC,EAAUvhC,sDAI3B0d,OAChBxY,EAAgEwY,EAAhExY,QAASm8B,EAAuD3jB,EAAvD2jB,QAASz/B,EAA8C8b,EAA9C9b,SAAU0/B,EAAoC5jB,EAApC4jB,UAAWC,EAAyB7jB,EAAzB6jB,SAAUC,EAAe9jB,EAAf8jB,cACrDA,EACEx2B,KAAKlR,MAAM0nC,aAAeA,QACvBS,kBAKHR,EAASz2B,KAAK02B,WAAWhkB,GACzBwkB,EAAeb,IAAYr2B,KAAKlR,MAAMunC,QACtCc,EAAargC,GAAM2T,SAASC,KAAK9T,GAAU9H,MAAM0I,SAEnD0/B,KACGb,EAEE,KAECrhC,EAAOgL,KAAK42B,cAAgB52B,KAAKo2B,QAAQnhC,wBAC3C+K,KAAK62B,aACFC,uBAAuB92B,KAAK62B,SAAS,GAChC72B,KAAK+2B,eACVD,uBAAuB58B,GAAS,QAGlC88B,MAAM98B,EAASu8B,EAAQH,EAAWC,EAAUvhC,aAV5CiiC,cAYE/8B,IAAY8F,KAAKlR,MAAMoL,SAAWm8B,QAEtCS,uBAAuB92B,KAAKlR,MAAMoL,SAAS,QAC3C48B,uBAAuB58B,GAAS,IAC5Bi9B,IAAergC,GAAM2T,SAASC,KAAK1K,KAAKlR,MAAM8H,UAAU9H,MAAM0I,YAGlEiJ,UAAWtQ,aAAa6P,KAAKjR,MAAMoB,OAAWgnC,iDAIpCC,gBACwBp3B,KAAKlR,MAAtCunC,IAAAA,QAASgB,IAAAA,oBACXpgC,EAAUo/B,GAAWgB,EACrBC,EAAcF,EAAUf,SAAWe,EAAUC,oBAC/CpgC,IAAYqgC,IACVt3B,KAAKu3B,6BACMv3B,KAAKu3B,oBACbA,cAAgB,WAMlBA,cAAgB3iB,WAAW,aACzB2iB,cAAgB,OACMnkB,EAAKujB,oBAAqB1/B,IACpDA,EAAU,IAAM,mDAKjB+I,KAAKu3B,6BACMv3B,KAAKu3B,oBACbA,cAAgB,QAEIv3B,KAAK22B,qBAAqB,GAEhD32B,KAAKlR,MAAM0nC,kBACTM,uBAAuB92B,KAAKlR,MAAMoL,SAAS,QAC3Cs9B,6BAA4B,8CAIxBf,IAAAA,OAAQgB,IAAAA,qBAAaC,oBACH7B,EAAQh1B,UAAUua,OAASqc,GAAehB,yCAsnBnEz2B,KAAKlR,MA9BP8C,IAAAA,UACA+lC,IAAAA,MACA98B,IAAAA,OACAw7B,IAAAA,QACAz/B,IAAAA,SACAghC,IAAAA,UACAF,IAAAA,kBACAlB,IAAAA,WACAqB,IAAAA,kBACAC,IAAAA,mBAoBGhpC,KAlBH2nC,SACAgB,cACAM,UACAC,qBACAC,qBACA3B,YACAC,WACAr8B,UACAg+B,cACAC,aACAC,aACAC,gBACAC,qBACAjB,sBACAkB,UACAC,WACAC,2YAKEt+B,SACAu+B,SACArC,OACMv/B,GAAM2T,SAASC,KAAK9T,IAClB9H,MAAMoR,KACJ/F,EAAMrL,MAAMoR,GACbpR,EAAMoR,OACFpR,EAAMoR,iBAGbpJ,GAAMgU,aAAalU,OACpBoJ,KAAK24B,gBACND,QACGlC,EAAar8B,EAAMrL,MAAM0I,MAAQwI,KAAKjR,MAAMoB,iBACxC2B,yCAAyC4lC,kCAClBlB,GAC/Br8B,EAAMrL,MAAM8C,kBAIf4/B,EAAW,YACVgF,GAAgBqB,GAAsBC,MAEvChhC,iBAACy9B,gBACcsD,eACCC,SACN93B,KAAKssB,gBACHtsB,KAAK44B,iBAMnB9hC,0BACMhI,aACOgD,GAAG,uCACc0kC,qBACNmB,IAAUC,kBACbA,GAChBhmC,OACEoO,KAAK64B,6CAECH,kBACIrC,kBACmC,IAAjCvnC,EAAMglB,uCAC2B,IAAjChlB,EAAM+kB,qCACR7T,KAAK84B,mCAnnCSl4B,iBAAhBi1B,GACZ/0B,kBAAoBA,GADR+0B,GAEZ90B,gBAAkBA,GAFN80B,GAGZh1B,UAAYA,GAHAg1B,GAuTZnlB,wBAEAmlB,GAAQ/0B,kBAAkB4Z,aAC1Bmb,GAAQ90B,gBAAgB+Z,wBAGxB+a,GAAQ/0B,kBAAkB6Z,SAC1Bkb,GAAQ90B,gBAAgBga,0BAEV8a,GAAQh1B,UAAUua,0BACjB,sBACA,YACT,cACgB,oBAAXhrB,OAAyBA,sBAC5B,oFACG,oCACQ,2BACA,eACZ,eACA,yBACS,sBACD,cACR,UACH,WACC,YACC,qBACQ,sBACC,qCA8HtB2oC,kBAAoB,kBAAMC,EAAKnC,SAAWmC,EAAKnC,QAAQz+B,UAAUC,SAAS,6BAE1E4gC,cAAgB,SAACxC,EAAQF,EAAUp8B,EAAOnF,OAChCyE,EAASg9B,EAATh9B,EAAGC,EAAM+8B,EAAN/8B,EACHgB,EAA8BP,EAA9BO,YAAaQ,EAAiBf,EAAjBe,aAEjBpG,SACAI,YACAuE,IAAMqH,GAAkB6Z,SACnB3lB,EAAKF,KAAQE,EAAKjE,MAAQ,EAAM2J,EAAc,EAC5CjB,IAAMqH,GAAkB8Z,cAC1B5lB,EAAKD,MAAQ2F,EACXjB,IAAMqH,GAAkBwZ,OAC1BtlB,EAAKF,KAAO4F,EACVjB,IAAMqH,GAAkB0Z,UAC1BxlB,EAAKD,OAGVwhC,GAAY98B,IAAMqH,GAAkB6Z,QAAUjhB,IAAMqH,GAAgB4Z,SAChE3lB,EAAKE,IAAOgG,EAAe,EAAMlG,EAAKgD,OAAS,EAC5C0B,IAAMqH,GAAgB8Z,MACzB7lB,EAAKE,IAAMgG,EACRxB,IAAMqH,GAAgB4Z,SACzB3lB,EAAKE,IAAMF,EAAKgD,OAAS,EACtB0B,IAAMqH,GAAgBga,WACzB/lB,EAAKgF,QAGTg/B,EAAKD,oBAAqB,KACtBG,EAAaF,EAAKnC,QAAQ5hC,2BACxBikC,EAAWpkC,QACZokC,EAAWhkC,QAGdsC,YACFtC,MACIA,IAAMA,GAGVJ,MACIA,KAAOA,GAGR0C,QAaTs/B,uBAAyB,SAAC58B,EAAS1E,OAC3B+hB,GAAc/hB,EAAM,MAAQ,6BAC9B0E,IAAY9J,SAAW8J,EAAQT,GAAKS,EAAQR,GAAI,KAC1CD,EAASS,EAATT,EAAGC,EAAMQ,EAANR,EACPD,IACA8d,GAAU,SAAUyhB,EAAKG,sBAEpB5hB,GAAU,SAAUyhB,EAAKG,eAG9Bz/B,IACA6d,GAAU,SAAUyhB,EAAKG,eACjB1/B,UAEH8d,GAAU,SAAUyhB,EAAKG,eAG9Bz/B,GAAKA,IAAMtJ,QAAUqJ,GAAKA,IAAMrJ,eAC3BmnB,GAAU,SAAUyhB,EAAKG,sBAG1B5hB,GAAU,SAAUyhB,EAAKG,eAE7Bj/B,IAAY9J,eACPmnB,GAAU,SAAUyhB,EAAKG,qBAKtC3B,4BAA8B,SAACvgC,GACzB+hC,EAAKI,oCACMJ,EAAKI,wBACbA,qBAAuB,MAG1BniC,IAEGmiC,qBAAuBxkB,WAAW,aAChCwkB,qBAAuB,YACrBljC,iBAAiB,SAAU8iC,EAAKK,sBACtC,YAEIhjC,oBAAoB,SAAU2iC,EAAKK,2BAQ9C7L,aAAe,SAACh2B,SAOVwhC,EAAKlqC,MALPypC,IAAAA,QACAC,IAAAA,SACAC,IAAAA,UACAZ,IAAAA,kBACAC,IAAAA,0BAEED,KACI/iC,KAAOyjC,IACPxjC,MAAQyjC,IAEVhhC,EAAM1C,SACFA,KAAO2B,KAAK2H,IAAIm6B,EAAS/gC,EAAM1C,OAGnC0C,EAAMzC,UACFA,MAAQ0B,KAAK2H,IAAIo6B,EAAUhhC,EAAMzC,SAIvC+iC,KACI99B,OAASy+B,IACTa,UAAY,WAIZt/B,OAAS,OACTs/B,UAAY,YAIfN,EAAKjqC,MAAMoB,OACXqH,EACAV,GAAM2T,SAASC,KAAKsuB,EAAKlqC,MAAM8H,UAAU9H,MAAM0I,aAQtDw/B,MAAQ,SAAC98B,EAASu8B,EAAQH,EAAWC,EAAUvhC,OACzCgkC,EAAK1M,YAMDt0B,EAAkBhD,EAAlBgD,OAAQjH,EAAUiE,EAAVjE,MACVmE,EAAqBF,EAArBE,IAAKJ,EAAgBE,EAAhBF,KAAMC,EAAUC,EAAVD,MACb0E,SACAC,YACAs/B,EAAKnC,QAAS,KACVriC,EAAS8E,EAAU0/B,EAAKnC,cAC1BriC,EAAOiF,IACPjF,EAAOkF,EAEPs/B,EAAKD,oBAAqB,KACtBG,EAAaF,EAAKnC,QAAQ5hC,2BACxBikC,EAAWpkC,QACZokC,EAAWhkC,OACTgkC,EAAWnkC,YAEjB,GAAImF,IAAY9J,SAAW8J,EAAQR,GAAKQ,EAAQT,KACjDH,EAAUY,EAAQT,GAAKrJ,QAAQqJ,IAC/BH,EAAUY,EAAQR,GAAKtJ,QAAQsJ,MAC9B,KACClF,EAAS8E,EAAUY,KACrB1F,EAAOiF,IACPjF,EAAOkF,OAGRs8B,UAAYv8B,IACZw8B,UAAYv8B,IACZy8B,aAAerhC,IACfohC,YAAchhC,EAEfuhC,EAAOh9B,IAAMqH,GAAkB8Z,cAC5Bub,aAAerhC,EAAO/D,EAClB0lC,EAAOh9B,IAAMqH,GAAkB0Z,UACnC2b,aAAephC,KAOfghC,UAJFQ,EAIc,KAHAE,EAAO/8B,IAAMqH,GAAgB8Z,IAAM,SAAW,MAK7D4b,EAAOh9B,IAAMqH,GAAkBwZ,MAAQmc,EAAOh9B,IAAMqH,GAAkB4Z,aACnEob,UAAY,QACRW,EAAOh9B,IAAMqH,GAAkB0Z,OAASic,EAAOh9B,IAAMqH,GAAkB8Z,cAC3Ekb,UAAY,SAGZA,UAAY,KAGfW,EAAO/8B,IAAMqH,GAAgBga,WAC1Bmb,YAAchhC,EAAM8C,GAGvBkC,IAAY9J,SAAW8J,EAAQR,IAAMQ,EAAQT,EAAG,KAC5CjF,EAAS8E,EAAUlJ,UACpBmpC,aAAe/kC,EAAOiF,IACtB+/B,aAAehlC,EAAOkF,MAGvBvJ,EAAS6oC,EAAKxL,mBACZwL,EAAK7C,iBACN6C,EAAK9C,iCACOxnC,QACV4nC,EAAYvlC,OAAQrC,MAGxB+R,UAAWtQ,kBAGlB8mC,OAAS,eAAG/8B,0DAAY8+B,EAAKlqC,OAAjBoL,UAEL47B,UAAY,OACZC,UAAY,OACZC,UAAY,OACZC,UAAY,OACZC,YAAc,OACdC,aAAe,KAEf6C,EAAKjC,WACJiC,EAAKnC,WACFC,uBAAuBkC,EAAKnC,SAAS,KAGvCC,uBAAuB58B,GAAS,UAIzC2+B,cAAgB,SAACvD,QACV3W,WAAate,cAAYi1B,KACzBc,QAAU,KACV4C,EAAKra,kBAI6Bqa,EAAKlqC,MAApCopC,IAAAA,cAAaG,mBAEdjC,QADoB,mBAAhB8B,EACMA,IACiB,iBAAhBA,EACDc,EAAKra,WAAW5qB,cAAcmkC,GAE9BA,EAGZc,EAAK5C,SAAN,EAA0E,KACtEhlC,EAAQ,IAAIsa,MAChB,6GACsBwsB,eAElBA,YAAcA,IACdr9B,OAASm+B,EAAKlqC,MAAM+L,OAEpBzJ,UAGJoB,EAAOwmC,EAAKra,WACTnsB,GAAM,KACLoM,EAAmD,UAA3CxO,OAAOC,iBAAiBmC,GAAMsH,YACxC8E,GAASpM,EAAKZ,UAAU+B,MAAM,iDAC3BkjC,QAAUrkC,GAEV,GAAIoM,IAAUpM,EAAK4F,UAAUC,SAAS,kCACtC0+B,UAAW,KAIXvkC,EAAKinC,qBAShBC,YAAc,eAENC,EAAQX,EAAK1M,OAAOsN,WAAU,KAC9BpiC,MAAMqiC,gBAAkB,SACxBriC,MAAMsiC,UAAY,SAClBtiC,MAAMuiC,iBAAmB,SACzBviC,MAAM8gB,WAAa,SAEpBgU,OAAOnzB,WAAWL,YAAY6gC,OAC7BK,EAAKjgC,EAAS4/B,GACEM,EAAyCN,EAAvDz+B,aAAwCg/B,EAAeP,EAA5Bj/B,iBAC9B4xB,OAAOnzB,WAAWC,YAAYugC,IAExB,IAAPK,GAAgBhB,EAAK5C,SAAY4C,EAAK1M,cAIzB0M,EAAKtC,WAAWsC,EAAKlqC,OAA9B2K,IAAAA,EAAGC,IAAAA,EACPygC,SACAC,SACApB,EAAKpC,gBACQoC,EAAKpC,aAAa5+B,SACnBghC,EAAKpC,aAAa7lC,UAEjBioC,EAAK5C,QAAQl7B,eACd89B,EAAK5C,QAAQ17B,iBAGzB2/B,EAAW,EACXC,EAAY,OAKXtB,EAAKlqC,MAAMgpC,oBAAwBkC,EAAG9kC,KAAQ8kC,EAAGhgC,QAAS,KACvDugC,EAAaP,EAAG9kC,KAAO,EAAI,EAC5B8kC,EAAGhgC,QAAUN,IAAMqH,GAAgB+Z,QAE7BphB,IAAMqH,GAAgB8Z,KAAOnhB,IAAMqH,GAAgBga,YAC/Cwf,EAAaJ,MAFdA,KAKDI,EAAaN,IAErBlE,UAAYiE,EAAG9kC,IAAM,SAAW,MAGlC8jC,EAAKlqC,MAAM+oC,mBAAqBp+B,IAAMqH,GAAkB6Z,QAAYqf,EAAGllC,MAASklC,EAAGjlC,QACjFilC,EAAGllC,MAAQ2E,IAAMqH,GAAkBwZ,KAG5B0f,EAAGllC,MAAQ2E,IAAMqH,GAAkB4Z,WAGnCsf,EAAGjlC,OAAS0E,IAAMqH,GAAkB0Z,MAGpCwf,EAAGjlC,OAAS0E,IAAMqH,GAAkB8Z,iBACjCwf,IACRtE,UAAY,aAJHsE,EAAcF,IACvBpE,UAAY,aAJJsE,IACRtE,UAAY,YAJJsE,EAAcF,IACtBpE,UAAY,SAaJ,IAAbuE,GAAgC,IAAdC,MACfpE,aAAemE,IACflE,cAAgBmE,IAEhB75B,UAAWtQ,OAAQ6oC,EAAKxL,cAAet4B,IAAK8jC,EAAK9C,YAAaphC,KAAMkkC,EAAK7C,yBAQlFwC,aAAe,SAACx+B,QACTmyB,OAASjsB,cAAYlG,GAEN,OAAhB6+B,EAAK1M,OAAiB,MACnBkO,gBAAkB1jC,GAAM2T,SAASC,KAAKsuB,EAAKlqC,MAAM8H,UAGd,mBAA7BoiC,EAAKwB,gBAAgBj9B,OACzBi9B,gBAAgBj9B,IAAIpD,GAGvB6+B,EAAKlqC,MAAM0nC,aAAewC,EAAK1M,SAAY0M,EAAK5C,UAAY4C,EAAKpC,uBAIjEoC,EAAKnC,SAAWmC,EAAKnC,QAAQz+B,UAAUC,SAAS,gCAI/Cm/B,6BAA4B,KAC5BiD,sBACIzB,EAAKwB,iBAAuD,mBAA7BxB,EAAKwB,gBAAgBj9B,OACxDi9B,gBAAgBj9B,IAAIpD,SAI7BsgC,eAAiB,eACPlE,EAAayC,EAAKlqC,MAAlBynC,SACFE,EAASuC,EAAKtC,WAAWsC,EAAKlqC,OAC9BkG,EAAOgkC,EAAKpC,cAAgBoC,EAAK5C,QAAQnhC,0BAC1Cy/B,QAAU1/B,EAAKgD,SACf28B,OAAS3/B,EAAKjE,UACbZ,EAAS6oC,EAAKC,cAAcxC,EAAQF,EAAUyC,EAAK1M,OAAQt3B,GAC7D7E,EAAO+E,KAAO/E,EAAO2E,QAClBqhC,aAAehmC,EAAO2E,MAAQkkC,EAAK7C,eACnCD,YAAc/lC,EAAO+E,KAAO8jC,EAAK9C,cACjCz1B,UAAWtQ,OAAQ6oC,EAAKxL,aAAar9B,IAAW6oC,EAAKU,gBAErDA,oBAITd,cAAgB,WACVI,EAAKlqC,MAAMunC,WACRoE,uBAITtB,cAAgB,SAACpmC,GACVimC,EAAKlqC,MAAMkpC,uBACTlB,uBAAuBkC,EAAKlqC,MAAMoL,SAAS,KAC3CpL,MAAMipC,QAAQhlC,IAGhBimC,EAAK0B,gCACc,kBAAM1B,EAAK2B,YAAY5nC,OAG1C2nC,UAAW,QAQlBC,YAAc,SAAC5nC,SAC+BimC,EAAKlqC,MAAzCoL,IAAAA,QAASk+B,IAAAA,WAAYD,IAAAA,WACvB6B,EAAKjgC,EAASi/B,EAAK1M,YACd,IAAP0N,GAAeA,EAAGllC,MAAQklC,EAAGjlC,OAChBikC,EAAKpC,cAAgBoC,EAAK4B,YAAYZ,OAE9ClrC,MAAMipC,QAAQhlC,KACd2nC,UAAW,QAIb,GACLv/B,EAAcjB,EAAS8+B,EAAK1M,OAAQ0M,EAAK5C,QAAS+B,EAAYC,YAEzDtpC,MAAMipC,QAAQhlC,UACd2nC,UAAW,OAIdjhC,SACAC,YACAs/B,EAAKnC,QAAS,KACVriC,EAAS8E,EAAU0/B,EAAKnC,WAC1BriC,EAAOiF,IACPjF,EAAOkF,OACN,GAAIQ,IAAY9J,SAAW8J,EAAQT,GAAKS,EAAQR,KACjDJ,EAAUY,EAAQT,GAAKrJ,QAAQqJ,IAC/BH,EAAUY,EAAQR,GAAKtJ,QAAQsJ,MAC9B,KACClF,EAAS8E,EAAUY,KACrB1F,EAAOiF,IACPjF,EAAOkF,MAGTmhC,SACAC,YAGA5gC,IAAY9J,SAAW8J,EAAQT,IAAMS,EAAQR,EAAG,KAC5ClF,EAAS8E,EAAUlJ,UAClBoE,EAAOiF,IACPjF,EAAOkF,MAGRvJ,EAAW6oC,EAAKjqC,MAAhBoB,OACF2E,EAAc3E,EAAd2E,KAAMI,EAAQ/E,EAAR+E,IACR8jC,EAAKhD,YAAcv8B,MACbu/B,EAAKhD,UAAYv8B,EAAKu/B,EAAK7C,cAGjC0E,GAAQ7B,EAAKO,eAAiBsB,MACxB7B,EAAKO,aAAesB,EAAQ7B,EAAKhD,WAGvCgD,EAAK/C,YAAcv8B,MACds/B,EAAK/C,UAAYv8B,EAAKs/B,EAAK9C,aAGhC4E,GAAQ9B,EAAKQ,eAAiBsB,MACzB9B,EAAKQ,aAAesB,EAAQ9B,EAAK9C,aAAe8C,EAAK/C,UAAYv8B,IAGtEvJ,EAAO+E,MAAQA,GAAO/E,EAAO2E,OAASA,IACnC2L,UAAWtQ,OAAQ6oC,EAAKxL,cAAe14B,OAAMI,SAAU,aACrDwlC,UAAW,MAGbA,UAAW,SAIpB/D,oBAAsB,SAAC5jC,IAElBimC,EAAKpC,cAAgBoC,EAAK1M,SAAW0M,EAAK1M,OAAOj0B,SAAStF,EAAEW,SAC5DslC,EAAKra,aAAeqa,EAAKra,WAAWtmB,SAAStF,EAAEW,YAE3C5E,MAAMipC,QAAQhlC,SAIvBsmC,oBAAsB,SAACtmC,SACmBimC,EAAKlqC,MAArCipC,IAAAA,UAASE,qBAEVW,mBAEG7lC,KACHykC,6BAA4B,UAWrCoD,YAAc,SAACZ,SACIhB,EAAKtC,WAAWsC,EAAKlqC,OAA9B2K,IAAAA,EAAGC,IAAAA,KACMD,IAAMqH,GAAkB6Z,QAAUjhB,IAAMqH,GAAgB4Z,QAAUqe,EAAKlqC,MAAMynC,UAC1D,QAAnByC,EAAKjD,YAAwBiE,EAAG9kC,KAA4B,WAAnB8jC,EAAKjD,YAA2BiE,EAAGhgC,cACpF,MAGH+gC,EAAY/B,EAAK5C,QAAQnhC,wBAAwBC,IACjCilC,EAAiBnB,EAAK5C,QAApCl7B,aACc++B,EAAgBjB,EAAK1M,OAAnCpxB,gBAGJ6/B,EAAYZ,EAAeF,EAAc7pC,OAAO4qC,mBAC3C,MAGD9lC,EAAQ8jC,EAAK1M,OAAOr3B,wBAApBC,IACJ+lC,EAASjC,EAAK9C,YACdmE,EAAWJ,GAAeD,EAAG9kC,KAAO,EAAI,MACxCwE,IAAMqH,GAAgB+Z,YACVkf,EAAG9kC,IAAM,GAAK,GAAKilC,EACxBzgC,IAAMqH,GAAgB8Z,KAAOnhB,IAAMqH,GAAgBga,aAC3B,QAAnBie,EAAKjD,WAAuB,EAAI,GAAKoE,GAGpC,IAAbE,MACOnlC,EAAMmlC,IACVtE,UAAYiE,EAAG9kC,IAAM,SAAW,OAGnC+lC,IAAWjC,EAAK9C,YAAa,GAC1BA,YAAc+E,MACX/gC,EAAY8+B,EAAKlqC,MAAjBoL,QACJghC,EAAWhhC,SACXA,IAAY9J,SAAW8J,EAAQR,GAAKQ,EAAQT,OACnCS,EAAQR,GAAKtJ,UAGrB6lC,UAAY38B,EAAU4hC,GAAUxhC,IAEhC+G,UAAWtQ,OAAQ6oC,EAAKxL,cAAet4B,IAAK8jC,EAAK9C,eAAkB,aACjEwE,UAAW,KAEX,SAGF,QAGT5B,mBAAqB,SAAC/lC,OACd0jC,EAASuC,EAAKtC,WAAWsC,EAAKlqC,SACiDkqC,EAAKlqC,MAAlFupC,IAAAA,cAAeC,IAAAA,mBAAoBp+B,IAAAA,QAASo8B,IAAAA,UAAWC,IAAAA,SAAUF,IAAAA,QACpEgC,MAIAzB,aAAe7+B,EAAwBhF,IACxCulC,GAAwBU,EAAK1M,QAAW0M,EAAK1M,OAAOj0B,SAAStF,EAAEW,WAC/DE,mBAGUb,GACVsjC,KACGW,MAAM98B,EAASu8B,EAAQH,EAAWC,EAAUyC,EAAKpC,iBCriCvCuE,sNAqZnBC,aAAe,SAACroC,SACaie,EAAKliB,MAAxBusC,IAAAA,MAAOtD,IAAAA,SACXsD,GAAStD,KACVsD,GAAStD,GAAShlC,MAsBvBqpB,aAAe,SAACrpB,GACVie,EAAKliB,MAAMkE,WACRlE,MAAMkE,QAAQD,WAGjBP,EAAOO,EAAEW,OACNsd,EAAK2N,YAAc3N,EAAK2N,WAAWtmB,SAAS7F,IAAO,IACpDwe,EAAKsqB,gBAAgB9oC,UAElB,GAAIwe,EAAKuqB,eAAe/oC,YAC3BgpC,iBAEGpe,SAAWxI,WAAW,aACpBwI,SAAW,OACXge,aAAaroC,IACjB4qB,OAKEnrB,EAAK2G,eAIhBkjB,eAAiB,SAACtpB,GACZie,EAAKliB,MAAMwtB,aACRxtB,MAAMwtB,UAAUvpB,KAGKA,EAAGie,EAAKoL,cAAc,GAAM,mFAhFJpc,KAAKlR,MAAjD2sC,IAAAA,UAAWv7B,IAAAA,GAAIhG,IAAAA,QAASwhC,IAAAA,gBAC1BlN,EAAYxuB,KAAK/P,QAAQu+B,WAAa,iCAO1BtuB,aAAYsuB,EAAY,sBANC,IAAdiN,EAA4BA,EAAYz7B,KAAK/P,QAAQy+B,gDAC1D7/B,EAASmR,KAAK/P,QAAS+P,KAAKlR,MAAO,yCACf,IAAZoL,EAA0BA,EAAU8F,KAAK/P,QAAQw+B,mEAa5E9P,WAAate,cAAYL,qDAI1BA,KAAKod,uBACMpd,KAAKod,iDAeP1pB,UACNA,EAAO0E,UAAUC,SAAS,kBAC3B3E,EAAO0E,UAAUC,SAAS,0EAOlB3E,UAC6B,OAApCA,EAAOb,aAAa,aACtBa,EAAO0E,UAAUC,SAAS,4DAoE3B2H,KAAKlR,MA/BPoR,IAAAA,GACAtO,IAAAA,UACA+pC,IAAAA,UACAC,IAAAA,cACAvF,IAAAA,QACAz/B,IAAAA,SACAilC,IAAAA,UACAC,IAAAA,WACAC,IAAAA,WACAC,IAAAA,qBACAP,IAAAA,UACAnF,IAAAA,UACAE,IAAAA,WACAyF,IAAAA,UACAC,IAAAA,OAESv7B,IAATzG,QAcGpL,KAbHqtC,SACAT,kBACA3M,kBACAgJ,UACAj+B,WAGAuhC,QACAe,YACAC,cACAC,uBACAC,uXAKyBv8B,KAAKlR,MAA1BqtC,IAAAA,OAAQriC,IAAAA,SACTqiC,MACSj8B,eAIRs8B,GAAUf,IAAc3sC,EAAMupC,eAA8B,YAAbv+B,GAA0B08B,EAC9D,YAAb18B,MACSqhC,EAAKt6B,UAAUua,WAGtBqhB,EAAQ3iC,IAAaqhC,EAAKt6B,UAAUua,MACpClhB,OAAiC,IAAhByG,EAA8BA,EAAcX,KAAK/P,QAAQw+B,iBAC1EiO,OAAgC,IAAXR,EAAyBA,EAAS7F,SAE3Dv/B,0BACMhI,MACAoR,YACOpO,GAAG,qDACqB0kC,GAAciG,GAC9C7qC,cACS4qC,YACDP,GAAa3F,UACfp8B,UACA8F,KAAKoc,uBACHpc,KAAKqc,uBACPrc,KAAKo7B,+BACKthC,UACV4iC,qCAEMA,cACJP,8BAGLN,MACAM,MACA,kBACGR,YACI7pC,GAAG,+CACgBkqC,4BACDxF,IAAeF,GAAa2F,0BACrCniC,EAAa08B,8BACRsF,EAAeA,MACrCF,UACKG,eA7hBgBn7B,iBAAbu6B,GACZr6B,kBAAoB+0B,GAAQ/0B,kBADhBq6B,GAEZp6B,gBAAkB80B,GAAQ90B,gBAFdo6B,GAGZt6B,oBAEKg1B,GAAQh1B,UAAUma,mBACjB6a,GAAQh1B,UAAUoa,sBAChB4a,GAAQh1B,UAAUqa,yBACjB2a,GAAQh1B,UAAUsa,mBACzB0a,GAAQh1B,UAAUua,eAChB,uBAEFpb,KAAK28B,iBAEAvrC,MACN,wMAOCurC,SAAU,EACR,YAvBQxB,GAgVZzqB,wBAEAmlB,GAAQ/0B,kBAAkB8Z,cAC1Bib,GAAQ90B,gBAAgB+Z,4BAGxB+a,GAAQ/0B,kBAAkB0Z,QAC1Bqb,GAAQ90B,gBAAgB+Z,kBAEnB+a,GAAQh1B,UAAUoa,kBACD,oBAAX7qB,OAAyBA,qBAC7B,wBACU,kBACL,sBACG,sBACA,cACR,GAhWK+qC,GAmWZn6B,wBACMC,GAAUE,mBACRF,GAAUC,WACrBD,GAAUG,OACVH,GAAUE,uBAEGF,GAAUuM,qBACRovB,mBACA37B,GAAUE,QA3WVg6B,GA8WZlM,6BACMhuB,GAAUE,mBACRF,GAAUC,WACrBD,GAAUG,OACVH,GAAUE,uBAEGF,GAAUuM,sBACP0hB,mBACD0N,mBACA37B,GAAUE,YCjXVK,0BA2XP1S,8EACJA,SA6BRktB,MAAQ,WACFhL,EAAK6rB,SACFA,MAAM7gB,WAOfE,KAAO,WACDlL,EAAK6rB,SACFA,MAAM3gB,UAIf4gB,SAAW,SAACC,GACNA,MACGF,MAAQE,IACRC,UAAY38B,cAAY08B,OAIjClE,cAAgB,SAACvD,OACP2H,EAAYjsB,EAAKliB,MAAjBmuC,QACJ3H,MACG3W,WAAate,cAAYi1B,IAE5B2H,KACM3H,EAAYtkB,EAAK2N,WAAa,SAI1CgY,oBAAsB,SAAC5jC,GACjBie,EAAK2N,aAAe3N,EAAK2N,WAAWtmB,SAAStF,EAAEW,iBAC1C2C,oBAAoB,QAAS2a,EAAK2lB,uBACpCl2B,UAAWwW,QAAQ,QAI5BmF,aAAe,SAACrpB,GACVie,EAAKliB,MAAMkE,WACRlE,MAAMkE,QAAQD,QAGa,IAAvBie,EAAKjiB,MAAMsnC,WACf51B,UAAW41B,SAAUrlB,EAAKjiB,MAAMsnC,aAIzC6G,iBAAmB,SAACnqC,GACdie,EAAKliB,MAAMquC,eACRruC,MAAMquC,YAAYpqC,GAGpBie,EAAKliB,MAAMqC,YACTsP,UAAWwW,QAAQ,OAI5BmJ,kBAAoB,SAACrtB,GACfie,EAAKliB,MAAMsuC,gBACRtuC,MAAMsuC,aAAarqC,GAGrBie,EAAKliB,MAAMqC,YACTsP,UAAWwW,QAAQ,OAI5B2I,kBAAoB,SAAC7sB,GACfie,EAAKliB,MAAMuuC,gBACRvuC,MAAMuuC,aAAatqC,KAGrBuqC,UAAW,IAEX78B,UAAWwW,QAAQ,EAAMsmB,UAAW74B,KAAK+Z,WAGhDoB,gBAAkB,SAAC9sB,GACbie,EAAKliB,MAAM0uC,cACR1uC,MAAM0uC,WAAWzqC,OAGlBgU,EAAOrC,KAAK+Z,MAAQzN,EAAKjiB,MAAMwuC,YAChCE,cAAgB7oB,WAAW,aACzB6oB,cAAgB,OAEhBh9B,UAAWwW,QAAQ,KACvBlQ,EAAO,IAAM,EAAI,IAAMA,MAG5BwV,aAAe,SAACxpB,GACVie,EAAKliB,MAAM0tB,WACR1tB,MAAM0tB,QAAQzpB,IAGhBA,EAAEI,OAASJ,EAAEK,WAAasM,YACtBxJ,iBAAiB,QAAS8a,EAAK2lB,uBACjCl2B,UAAWwW,QAAQ,QAI5BoF,eAAiB,SAACtpB,GACZie,EAAKliB,MAAMwtB,aACRxtB,MAAMwtB,UAAUvpB,IAGlBA,EAAEI,OAASJ,EAAEK,WAAasM,YACtBrJ,oBAAoB,QAAS2a,EAAK2lB,uBACpCl2B,UAAWwW,QAAQ,QAzIrBloB,OAAUkoB,QAAQ,QAEK,IAAjBnoB,EAAMotC,aAAmD,IAAlBptC,EAAMunC,QAAyB,KACzEqH,EAAU,wBAAkB,IAAN7/B,KAC2BmT,EAAKliB,MAApD6uC,IAAAA,cAAeC,IAAAA,YAAaC,IAAAA,eAChCxH,EAAUqH,EAAQC,GAAiBA,EAAgBE,SAC7CH,EAAQE,GAAeA,EAAcvH,KAG1CtnC,MAAMsnC,QAAUA,6EAKnBr2B,KAAKjR,MAAMkoB,eACN5gB,oBAAoB,QAAS2J,KAAK22B,qBAGvC32B,KAAKy9B,4BACMz9B,KAAKy9B,uEA2HwBz9B,KAAKlR,MAAzC8H,IAAAA,kBAAUknC,sBAEyB,KAAXlnC,2DAIYoJ,KAAKlR,MAAzC8H,IAAAA,kBAAUknC,sBAIdhnC,wBAAKlF,UAAU,uCACZoQ,IAAQqrB,YAASz7B,UAAU,2DACvBA,UAAU,qCAOd,8CA+DHoO,KAAKlR,MA1DP0I,IAAAA,MACA5F,IAAAA,UACAmsC,IAAAA,UACAC,IAAAA,cACAC,IAAAA,aACAC,IAAAA,iBACAC,IAAAA,cACAC,IAAAA,kBACAC,IAAAA,eACAC,IAAAA,mBACAtQ,IAAAA,iBACAC,IAAAA,qBACAE,IAAAA,mBACAC,IAAAA,uBACAmQ,IAAAA,gBACAC,IAAAA,oBACAC,IAAAA,2BACAttC,IAAAA,SACAutC,IAAAA,SACAC,IAAAA,WACAvR,IAAAA,MACAwR,IAAAA,UACAC,IAAAA,YACAp9B,IAAAA,YACAysB,IAAAA,cACAG,IAAAA,WACAxsB,IAAAA,YACAi9B,IAAAA,cACA7nB,IAAAA,OACAkC,IAAAA,gBACA4lB,IAAAA,eACAC,IAAAA,mBACAC,IAAAA,mBACAC,IAAAA,aACAC,IAAAA,aACAp9B,IAAAA,UACeq9B,IAAfC,cACAn7B,IAAAA,UACAo7B,IAAAA,UACAC,IAAAA,gBACgBC,IAAhB,gBACiBC,IAAjB,iBACA3B,IAAAA,sBAGA5B,IAAAA,OACAI,IAAAA,qBACAC,IAAAA,sBAUGztC,KARHunC,UACAwH,iBACAZ,UAGAW,cACAD,qpBAfA,eACA,wKAmBwE39B,KAAK/P,QAAvEyvC,KAAAA,YAAahR,KAAAA,cAAegN,KAAAA,gBAAiBjN,KAAAA,iBACjD4H,GAAUxnC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,gBACzB,IAAXmtC,OACCA,OAGRyD,GACF7oC,iBAAC62B,QACK,mBACGwQ,YACIC,SACHnnB,kBACSkC,OACXulB,SACEC,IAIRiB,GACF9oC,iBAAC62B,QACK,oBACG0Q,YACIC,SACHrnB,kBACSkC,OACXylB,SACEC,IAIRgB,aACAh+B,EAAa,CACV6sB,QAED53B,qBAAU81B,WAAYyJ,GAASnJ,QAAS+R,wBAChCznC,MAAO+mC,EAAiB3sC,UAAW4sC,YAKzC3nC,GAAOC,GAAM2T,SAASC,KAAK/T,EAAkB4lC,EAAuBD,EAAsB4C,IAC1FY,GACJhpC,iBAAC62B,QACK,sBACE72B,GAAMgU,aAAajU,cACZ9E,GAAqBC,QAASqkC,IAAWx/B,GAAK/H,MAAM8C,oBAEzD,OAIRutC,EACGT,GAAaC,OACLmB,IAEHlB,GAAcC,OACZiB,QAIVC,KAAUrB,KAAcE,KAAe/8B,EACvCm+B,KAAYrB,KAAgBE,EAE5B9B,GACJjmC,0BACMwoC,EACCC,OAAkB7wC,EAAYI,aACxBiT,uBACW/B,KAAK88B,aACvB,eACK98B,KAAKoc,yBACDpc,KAAKk9B,8BACJl9B,KAAKogB,+BACLpgB,KAAK4f,6BACP5f,KAAK6f,0BACN7f,KAAKqc,uBACPrc,KAAKuc,sBACJprB,QACH4sC,YACIjsC,GAAG,uCACYkO,KAAKjR,MAAMkoB,SAAWjX,KAAKs9B,+BAC5BpP,GAAiB6R,KAAUC,2BACzB9R,GAAiB8R,6BACf9R,IAAkBG,8BAChBH,GAAiBG,wBACvBjB,IAAUsR,IAAaC,8BACjBb,GAC5B9sC,GAAcG,WAAUxB,MAAM,IAASquC,mBAC3B6B,KAAenR,GAAgB2H,GAAU,2BAGvDtI,WACS9W,kBACSkC,WACPhoB,cACGsQ,gBACEysB,aACHG,QACL4P,YACInsC,iCACqB4sC,GAAYS,GAAgBt9B,iCAC1B88B,mCACEC,GAAaC,GAC9CX,oBACelQ,uBACIC,qBACFE,yBACIC,YAGpB6R,2BAIJC,SACDh8B,EACCq7B,EAAkBzwC,OAAQJ,SACvBE,OAAOqd,UAAWzU,EAAOyf,EAAS8nB,EAAiB,gBAC/CjtC,GAAG,oDACsB+P,QACjCm9B,EAAqBA,GAAsB/nB,QAC5C,qBAAsB6mB,MACrBlsC,kBACa4tC,kBACCC,MACZz/B,KAAK64B,uBAERnK,IAAiB7sB,EAEjB/K,2BACM4oC,WACKrJ,WACAr2B,KAAKoc,oBACN2gB,wBAEI,SACJrB,eACK,cACHP,GAAKt6B,UAAUua,gBACdgkB,YACAb,gBACIC,uBACOC,GAClByB,YACKzR,QAQb33B,wBACmB+oC,GAAa,aAExBM,6BACW,KAAON,WA5vBMj/B,iBAAjBY,GAwWZkP,kCACe,kBACH,mCACN,oBACI,kBACD5Z,uEACS,GA9WN0K,GAiXZR,0BACQC,GAAUC,WACrBD,GAAUE,OACVF,GAAUG,uBAEGH,GAAUuM,qBACRovB,oBACC1N,QC5YDkR,iLA0BbpgC,KAAKlR,MAVP8b,IAAAA,MACAy1B,IAAAA,QACAzuC,IAAAA,UACA4M,IAAAA,SACAyY,IAAAA,OACA7lB,IAAAA,MACAD,IAAAA,SACAmvC,IAAAA,WACAC,IAAAA,WACGzxC,gHAGA8b,EAKH9T,+BACMhI,WACKuxC,YACEvuC,GAAG,uDACoB0M,uCACMA,IAAa+hC,8BAC5BA,EAAeA,uCACNA,EAAeA,IAAe/hC,QAC9D,8BAA+BA,QAC/B,iCAAkC8hC,MACjCtvC,4BAGMimB,UACEA,GACRrlB,SAnBE,YA7B8BgP,iBCFtB4/B,+KAQuBxgC,KAAKlR,MAArCmoB,IAAAA,OAAQrgB,IAAAA,SAAUhF,IAAAA,iBAErBgF,EAKHE,uCACgBmgB,YACHnlB,GACT,mDAC0BmlB,EAAS,GAAK,eACxCrlB,OATG,YAXwBgP,iBCGhB6/B,0BAeP3xC,8EACJA,aAGDC,eACOD,EAAMsC,OAAStC,EAAM4xC,WAAc5xC,EAAM6xC,UAAY7xC,EAAM4xC,2BACnD1vB,EAAK4vB,kBAAkB9xC,2EAInB4jB,OAClBvjB,GAAQ,SAAU,QAAS,cAAe,WAAY,aACxD6Q,KAAK6gC,YAAY1xC,EAAM6Q,KAAKlR,MAAO4jB,SAChCjS,2BACeT,KAAK4gC,kBAAkBluB,WAC/BA,EAAUthB,OAASshB,EAAUguB,WAAchuB,EAAUiuB,UAAYjuB,EAAUguB,gDAK/EvxC,EAAM2xC,EAAIC,OAChBC,GAAU,WACTv9B,KAAK,mBACJq9B,EAAGvxC,KAASwxC,EAAGxxC,QACP,GAGLyxC,IAGFA,4CAGSlyC,OACRsC,EAAoDtC,EAApDsC,MAAOsvC,EAA6C5xC,EAA7C4xC,UAAWC,EAAkC7xC,EAAlC6xC,SAAUM,EAAwBnyC,EAAxBmyC,YAAahqB,EAAWnoB,EAAXmoB,gBAC7C7lB,IAASsvC,OAIHC,GAAcM,IAAehqB,0CAenCjX,KAAKlR,MAVPoyC,IAAAA,UACA9vC,IAAAA,MACAQ,IAAAA,UACA8uC,IAAAA,UACAC,IAAAA,SACAQ,IAAAA,cACAzC,IAAAA,SACAE,IAAAA,UACAjH,IAAAA,MACA1gB,IAAAA,SAEoCjX,KAAKjR,MAAnCqyC,IAAAA,iBAAkBC,IAAAA,cAEJ,cAAlBF,IAAmCR,GAAaD,GAAcQ,GAKhEpqC,kCACahF,GAAG,kFACoCuvC,IAAYD,sDACP1C,uDACCE,mBACpCjH,GACjB3mC,GAAcI,QAAOD,UAAWC,IAAUQ,yBAEpCrC,IAAI,UAAU0nB,OAAQmqB,2BACtB7xC,IAAI,UAAUqC,UAAU,iCAAiCqlB,OAAQA,KACxDkqB,QAAmBD,EAAc,OAd9C,YAzEiCtgC,iBCAzB0gC,sNASnBvyC,OAAUwyC,eAAe,KAEzB5K,oBAAsB,SAAC5jC,GACjBie,EAAKwwB,UAAYxwB,EAAKwwB,QAAQnpC,SAAStF,EAAEW,iBACpC2C,oBAAoB,QAAS2a,EAAK2lB,uBACpCl2B,UAAW8gC,eAAe,QAInC7kB,YAAc,WACR1L,EAAKjiB,MAAMwyC,iBACR9gC,UAAW8gC,eAAe,OAInChlB,aAAe,SAACxpB,IACFA,EAAEI,OAASJ,EAAEK,WACbsM,MACLe,UAAW8gC,eAAe,yEAKzBA,EAAkBvhC,KAAKjR,MAAvBwyC,gBAQJvhC,KAAKlR,MANPmoB,IAAAA,OACAwqB,IAAAA,gBACA9J,IAAAA,MACAn5B,IAAAA,SACA3H,IAAAA,KACG/H,sEAIHgI,gCACMhI,UACIkR,KAAK0c,oBACJ1c,KAAKuc,kBACT,mBACMzqB,GAAG,6FACcyvC,+BACItqB,IAAWwqB,6CACGjjC,0CACHm5B,GACxC3mC,GAAcG,UAAW8lB,EAAQ5lB,KAAM4lB,iBArDNrW,iBCGvB8gC,sNAenB3yC,OAAUiJ,OAAQ,QAiBlBnJ,SAAW,kBAAMmiB,EAAK2wB,UAEtBC,SAAW,kBAAM5wB,EAAK2wB,OAAOpmC,SAE7BygB,MAAQ,aACD2lB,OAAO3lB,WAGdE,KAAO,aACAylB,OAAOzlB,UAGd2lB,eAAiB,eAAGC,0DAAS9wB,EAAKliB,OAAdgzC,SACb9wB,EAAK2wB,cACD,OAGH3pC,EAASgZ,EAAK2wB,OAAOnqC,MAAMQ,SAC5B2pC,OAAOnqC,MAAMQ,OAAS,WACrB+pC,EAAY/wB,EAAK2wB,OAAOzmC,aAAe4mC,WACxCH,OAAOnqC,MAAMQ,OAASA,EACpB+pC,KAGTC,SAAW,SAACC,KACLC,MAAQD,KAGfE,UAAY,SAACnzC,KACN2yC,OAAS3yC,KAGhB4pC,cAAgB,aACTwJ,WAAapxB,EAAK6wB,mBAClBQ,yBAGPA,oBAAsB,SAAC9mC,MAEhByV,EAAKkxB,YAIIxzC,IAAV6M,MACG2mC,MAAM3mC,MAAQA,OAGjBvD,EAASgZ,EAAKkxB,MAAMvT,qBACTjgC,IAAXsJ,SAIsBgZ,EAAKliB,MAAvBgzC,IAAAA,KAAMQ,IAAAA,QACVA,GAAWA,EAAU,MACd7rC,KAAK0H,IAAInG,EAAQgZ,EAAKoxB,WAAaE,MAGrC7rC,KAAK2H,IAAI4S,EAAKoxB,WAAaN,EAAM9pC,KACrCyI,UAAWzI,gBAGlBuqC,cAAgB,SAACxvC,KACVsvC,oBAAoBtvC,EAAEW,OAAO6H,MAAOxI,GAErCie,EAAKliB,MAAM0zC,YACR1zC,MAAM0zC,SAASzvC,oFA/EjBqvC,WAAapiC,KAAK6hC,sBAClBQ,wEAGmB3vB,GACpB1S,KAAKlR,MAAMgzC,OAASpvB,EAAUovB,YAC3BM,WAAapiC,KAAK6hC,eAAenvB,IAGpC1S,KAAKlR,MAAMyM,QAAUmX,EAAUnX,OAASyE,KAAKlR,MAAMwzC,UAAY5vB,EAAU4vB,cACtED,oBAAoB3vB,EAAUnX,4CA0E7BvD,EAAWgI,KAAKjR,MAAhBiJ,SAcJgI,KAAKlR,MAXP0I,IAAAA,MACAirC,IAAAA,aACAlnC,IAAAA,MACA3J,IAAAA,UACAgZ,IAAAA,MACA+sB,IAAAA,MAKG7oC,KAHHwzC,UACAE,yGAMA1rC,+BACWkB,OAAQA,GAAUA,EAAS,aACzBlG,GAAG,8DACc8Y,IAAU+sB,mCACF/sB,IAAU+sB,sBAG7CpD,IAAea,cAAWF,SAAUl1B,KAAK44B,iDAEnC54B,KAAKgiC,mBACClwC,GAAGF,EAAW,kDAEnB9C,EAAMgzC,eACD,QACJtqC,eACOirC,yBAEPlnC,sCAGHzM,OACCkR,KAAKmiC,gBACHvzC,OAAOqd,UAAWzU,GAASQ,qBACvBpG,eACG6wC,QACPlnC,WACGyE,KAAKuiC,yBAjJa3hC,iBCAjB8hC,sNAqBnB7zC,SAAW,uBACyB,IAApBmiB,EAAKliB,MAAMgzC,KACrB9wB,EAAK2wB,OACL3wB,EAAK2wB,OAAO9yC,cAGlB+yC,SAAW,uBACsB,IAApB5wB,EAAKliB,MAAMgzC,KACb9wB,EAAK2wB,OAAOpmC,MAGdyV,EAAK2wB,OAAOC,cAGrB5lB,MAAQ,aACD2lB,OAAO3lB,WAGdE,KAAO,aACAylB,OAAOzlB,UAGdimB,UAAY,SAACnzC,KACN2yC,OAAS3yC,2EAgBVgR,KAAKlR,MAXP8C,IAAAA,UACAkwC,IAAAA,KACAl3B,IAAAA,MACA21B,IAAAA,WACA3I,IAAAA,UACAvlC,IAAAA,KACAovC,IAAAA,gBACA9J,IAAAA,MACAgL,IAAAA,gBACAL,IAAAA,QACGxzC,2HAGC8zC,OAA4B,IAATd,EACnB9tB,EAAY4uB,EAAYlB,GAAW,eACpCkB,KAGGh4B,MAAQA,IACR+sB,MAAQA,IACR2K,QAAUA,KAJVjwC,KAAOovC,EAAkB,OAASpvC,EAOnCrC,gBAAcgkB,QAChBllB,cAEEkR,KAAKmiC,oBACCrwC,GAAG,sDACuB6wC,IAAqBC,GAAsB,aAATvwC,6BACzCuwC,2BACFjL,IAAUiL,IAAch4B,oCACf+sB,IAAUiL,GAAah4B,0BACvC21B,EAAeA,QAClC,gBAAiB3I,MAChB5mC,GAAcG,SAAUrC,EAAMqC,SAAUxB,MAAOb,EAAMqC,UAAYS,cAnFlCgP,iBCLnBiiC,+KAU6C7iC,KAAKlR,MAA3DmoB,IAAAA,OAAQ7lB,IAAAA,MAAO0xC,IAAAA,cAAelxC,IAAAA,UAAc9C,8DAElDgI,iBAACkL,SACKlT,aACOgD,qDAAqDgxC,qCAC3B7rB,mCACD7lB,GAAS6lB,iCACX7lB,GAC/BQ,aAlBmCgP,iBCgBxCmiC,GAA0B,IAE1BC,IAAqB,QAAS,QAAS,UACvCC,IAAmB,WAAY,YAAa,eAAgB,mBAU7CC,0BAiWPp0C,8EACJA,mBAEAqyC,EAAgBnwB,EAAKmyB,gBAAkC,IAAhBr0C,EAAMyM,MAAwBzM,EAAMyM,MAAQzM,EAAM2zC,gBAE1FW,QAAU,SACXryC,EAAQ,iBACgB,IAAjBjC,EAAMu0C,WACqB,iBAArBv0C,EAAMu0C,OAAOllC,IAAmBrP,EAAMu0C,OAAOllC,IAAM4kC,MAG/Dh0C,eACK,UACDD,EAAMoyC,WAAYpyC,EAAMoyC,UAAYC,WACjCvjC,EAAS9O,EAAM2zC,eAAiB7kC,EAAS9O,EAAMyM,uBACxCzM,EAAMw0C,gDAEfvyC,MAAUA,SAAUjC,EAAM0I,OAAU1I,EAAM0I,8EAKLwI,KAAKlR,MAA5CyM,IAAAA,MAAOknC,IAAAA,aAAcY,IAAAA,OAAQ7rC,IAAAA,MAC/BqG,OAAqB,IAAVtC,EAAwBA,EAAQknC,EAE7CY,QACG5iC,UAAWtQ,WAAUY,MAAOiP,KAAKujC,WAAW1lC,EAAGmC,KAAKlR,QAAW0I,uDAI9Ckb,cAChBnX,EAAyBmX,EAAzBnX,MAAO8nC,EAAkB3wB,EAAlB2wB,OAAQ7rC,EAAUkb,EAAVlb,MACjBgsC,QACFjoC,IAAUyE,KAAKlR,MAAMyM,UACbnK,MAAQ4O,KAAKyjC,WAAW/wB,KACxBlU,SAAWwB,KAAK0jC,QAAU9lC,EAASrC,KACnC4lC,cAAgBnhC,KAAKmjC,WAAW5nC,IAGxCynC,GAAkBv/B,KAAK,mBAAOyP,EAAKpkB,MAAMS,KAASmjB,EAAUnjB,QACzD8zC,EAEE,KACCtyC,EAAQiP,KAAKujC,WAAWhoC,EAAOmX,KAC3BviB,WAAWY,SAAUyG,UAHrBrH,OAASqH,OAOlBiJ,SAAS+iC,8CAGGpM,gBACgBp3B,KAAKlR,MAA9Bu0C,IAAAA,OAAQ9nC,IAAAA,MAAO/D,IAAAA,SACnB6rC,GAAUJ,GAAgBx/B,KAAK,mBAAO2P,EAAKtkB,MAAMS,KAAS6nC,EAAU7nC,KAAO,KACvEwB,EAAQiP,KAAKujC,WAAWhoC,EAAOyE,KAAKlR,YACrC2R,UAAWtQ,WAAUY,SAAUyG,0CAwDjCmqC,OAAOzlB,0CAGHrlB,EAAMogB,EAAQ7lB,EAAOD,EAAUwyC,EAAUhM,EAAOiM,OACpD/sC,SACIA,UAIDgtC,EAASp5B,WAASC,KAAK7T,UACtBiU,eAAa+4B,OACbA,EAAOt0C,aAAeq0C,WACjBD,EAAWxyC,OAAWzC,UACvBi1C,GAAYvyC,GAAS6lB,OAASvoB,QAChCi1C,EAAWvyC,OAAQ1C,YACfoD,GAAG,wDACuB6lC,GAClCkM,EAAO/0C,MAAM8C,aAElB,MAAOmB,UACA8D,0CA6K0CmJ,KAAKjR,MAAhDoyC,IAAAA,cAAeM,IAAAA,gBAAiBtxC,IAAAA,SA0DpC6P,KAAKlR,MAxDPoR,IAAAA,GACA7N,IAAAA,KACAT,IAAAA,UACAkyC,IAAAA,WACAC,IAAAA,eACApM,IAAAA,MACAC,IAAAA,UACAoM,IAAAA,SACAzD,IAAAA,WACAW,IAAAA,UACAR,IAAAA,UACAC,IAAAA,SACAM,IAAAA,YACA9vC,IAAAA,SACA8yC,IAAAA,iBACAC,IAAAA,kBACApB,IAAAA,cACAqB,IAAAA,YACAC,IAAAA,cACA/G,IAAAA,aACAgH,IAAAA,YACAC,IAAAA,cACA9G,IAAAA,WACA+G,IAAAA,YACAC,IAAAA,UACArH,IAAAA,YACAC,IAAAA,aACA3rC,IAAAA,IACAkxC,IAAAA,gBACA8B,IAAAA,QACcC,IAAdC,aAGA9tC,IAAAA,KACA+tC,IAAAA,qBACAC,IAAAA,sBAoBG/1C,KAlBH0I,QACAoT,QACAk6B,cACA1zC,QACA6lB,SACAzY,WACAkgC,WACAE,YACA5rC,UACAwvC,WACA7lB,SACAooB,UACA1B,SAGA2B,iBACAC,uoBAaEjlC,KAAKlR,MAPP8b,IAAAA,MACAk6B,IAAAA,YACA1zC,IAAAA,MACA6lB,IAAAA,OACAzY,IAAAA,SACAkgC,IAAAA,SACAE,IAAAA,YAEO3nB,GAAUjX,KAAKjR,MAAMkoB,SACtB7lB,GAAS4O,KAAKjR,MAAMqC,QACjBoN,GAAYwB,KAAKjR,MAAMyP,SAE9BwlC,IACEp5B,MACM9M,EAAU8M,EAAO,MAGvBk6B,IAAgBl6B,MACJ9M,EAAUgnC,EAAa,OAIrCl6B,IAAUpM,MACE,QAGLwB,KAAKklC,WAAWruC,GAAQ6nC,EAAUznB,EAAQ7lB,EAAOD,EAAU8yC,EAAkBtM,EAAO,YACzFgN,EAAehuC,EAAkBkuC,EAAuBD,EAAsBF,MAC/D,OAAjBC,GAAkC,aAATtyC,GAAwBlB,EAY9C,GAAIwxC,EAAiB,KACpB/yC,EAAK6a,WAASC,KAAKi4B,KACb73B,eAAa63B,OAClB,uBACM7wC,GAAG,6EACgC8Y,0CACH+sB,GACxC/nC,EAAGd,MAAM8C,oBAGFoO,KAAKklC,WAAWtG,EAAW3nB,EAAQ7lB,EAAOD,EAAU+yC,EAAmBvM,EAAO,gBApBxF7gC,iBAACwqC,QACK,uBACKthC,KAAKmlC,4BACNluB,kBACSwqB,OACXkD,QACChN,aACK/sB,QAeZw6B,IAAgBxG,GAAsB,aAATvsC,IAAwBswC,EAErDsC,GACJnuC,iBAACspC,QACK,cACGx1B,UACE1K,SACD+W,QACD7lB,WACGoN,aACE+hC,WACFpvC,eACIutC,IAIZ2C,GACJvqC,iBAAC2pC,QACK,iBACIxpB,QACD7lB,YACIsvC,WACDC,cACGM,QACNtJ,YACIuJ,aACCxC,cACCE,gBACEuC,IAIbnyC,GACJ8H,iBAAC4rC,SACK5zC,YACMk1C,MACN,YACChkC,KAAKmiC,aACNjiC,OACE7N,QACCuY,QACAk5B,YACIhyC,IAAKuzC,yBAA0BZ,GAAWV,YAC3C5yC,aACEovC,YACD3I,kBACM6J,cACJqD,QACNnN,UACE33B,KAAKuf,oBACNvf,KAAK0c,qBACH1c,KAAKuiC,gCACII,KAInBhhC,UACCg2B,OAED7gC,iBAAC+rC,QACK,sBACI5rB,QACD7lB,gBACQ0xC,SAKjBlsC,cAqBQquC,MApBRvG,GAAY0G,EAEZtuC,wBAAKvH,IAAI,eAAeqC,UAAU,8DAG1B,8BACOE,GAAG,2EAC6B8lC,gBAUrC8G,EAAU1vC,GAAO2S,GAASi9B,GAGHyC,QAE/BuB,QAAkC,IAAf9zC,EAAMgzC,YAE7BhrC,8BACS3G,YACI2B,GAAG,8CACQ8lC,IAAcD,kBACjBA,GAASC,sCACWzmC,oCACFyxC,0CACKjL,IAAUiL,wCACZA,8CACMA,IAAajL,0CAChBA,GAASwM,GACjDvyC,WACMoO,KAAKslC,oCACClB,cACFjH,eACCC,cACDmH,YACFC,eACGnH,aACFG,gBACG8G,cACFD,MACRrkC,KAAK64B,0DArbP74B,KAAKnR,WAAW0M,aAhcYqF,iBAAlBsiC,GAwVZxyB,mBACC,qBACS,oBACD5Z,6DACI,qBACC,aACR,qCA0EbjI,SAAW,kBAAMmqC,EAAK2I,OAAO9yC,iBAa7BmtB,MAAQ,aACD2lB,OAAO3lB,cAkDdmnB,WAAa,SAACtlC,UACRD,EAASC,GACJ4L,OAAO5L,GAAGzO,OAGZ,QAGTypC,cAAgB,SAAC0M,KACV5mB,WAAa4mB,QAGpBpD,UAAY,SAACnzC,GACG,OAAVA,MACG2yC,OAAS3yC,SAQlBw2C,eAAiB,SAAC3uC,OACVW,EAAQpH,OAAOC,iBAAiBwG,UAE/BA,EAAK5B,wBAAwBlE,MAChCuH,SAASd,EAAMiuC,WAAY,UAGjClC,WAAa,SAAChoC,OAAOzM,yDAAQkqC,EAAKlqC,MAC5Ba,EAAO4L,EAEQ,aAAfzM,EAAMuD,SACDqJ,MAAMgqC,KAAKhqC,MAAMH,EAAMnM,SAASI,OAAO,mBAAQ27B,OAAW,SAG7Dn8B,EAAQgqC,EAAK2I,QAAU3I,EAAK2I,OAAO9yC,YACpC+O,EAASjO,IAASX,MACdA,EAAMuM,WAGT4C,EAAMtP,EAASC,EAAMu0C,QAAUllC,IAAK4kC,IAA2B,OACjEhyC,EAAQrB,EAAaC,EAAMX,MACjB,OAAV+B,IAAmB/B,SAEd+B,GAASoN,MAGVC,EAAQtP,EAAMu0C,OAAdjlC,OAEJ46B,EAAKra,WAAY,KACbgnB,EAAY3M,EAAKra,WAAW5qB,cAAc,mCAC5C4xC,OACOA,EAAU1wC,wBAAwBlE,WAGvC60C,EAAgB5M,EAAKra,WAAW5qB,cAAc,oCAChD6xC,EAAe,UAGcA,EAAchvC,YAAtCivC,OAAO1+B,OAAQ2+B,OAClBD,EAAMztC,UAAUC,SAAS,eAClBwtC,EAAM5wC,wBAAwBlE,SAC9BuH,SAASlI,OAAOC,iBAAiB8W,GAAQs+B,WAAY,IAE1DK,OACO9M,EAAKwM,eAAeM,KAEtB3+B,OACA6xB,EAAKwM,eAAer+B,YAK5B1Q,KAAKsvC,KAAKtvC,KAAK0H,IAAIC,EAAK3H,KAAK2H,IAAID,EAAKpN,WAG/C0yC,WAAa,wEAAkCzK,EAAKlqC,MAApCyM,IAAAA,MAAO2lC,IAAAA,UAAW8C,IAAAA,SAC1B5yC,EAAU4nC,EAAKjqC,MAAfqC,MACA+vC,EAAgBnI,EAAKmK,WAAW5nC,UAClCyoC,GAAY5yC,OACLwM,EAASrC,IAGhB2lC,MACM9vC,GAAS+vC,EAAgBD,GAG5B9vC,QAGTk0C,sBAAwB,SAACvyC,GACnBimC,EAAKlqC,MAAMkE,WACRlE,MAAMkE,QAAQD,GAGhBimC,EAAKlqC,MAAMqC,YACT6qB,cAITU,YAAc,SAAC3pB,KACR2wC,QAAS,QAC0B1K,EAAKlqC,MAArCk1C,IAAAA,SAAU9C,IAAAA,UAAWvkB,IAAAA,OACzBA,KACK5pB,OAGDwI,EAAUxI,EAAEW,OAAZ6H,MACFxM,WACI,QACAi1C,IAAapmC,EAASrC,IAAY2lC,GAAaz3B,OAAOlO,GAAOnM,OAAS8xC,GAG3ElI,EAAKlqC,MAAM6oC,UACRn5B,SAAWZ,EAASrC,MAGvBkF,SAAS1R,SAGhBwwB,aAAe,SAACxsB,KACT2wC,QAAS,QACa1K,EAAKlqC,MAAxBi2C,IAAAA,QAASpN,IAAAA,MACboN,KACMhyC,OAGJhE,GAAUkoB,QAAQ,GACnB0gB,MACGn5B,UAAW,KAGdiC,SAAS1R,SAGhBwzC,cAAgB,SAACxvC,SACmCimC,EAAKlqC,MAA/C0zC,IAAAA,SAAUtB,IAAAA,UAAW8C,IAAAA,SAAUX,IAAAA,OAC/B9nC,EAAUxI,EAAEW,OAAZ6H,MACJinC,KACOzvC,EAAEW,OAAO6H,MAAOxI,OAGrBouC,EAAgB5lC,EAAMnM,OACxBL,iBACqB,IAAdmyC,KACCC,gBAAe/vC,MAAO+vC,EAAgBD,GACvC8C,GAAYhL,EAAKjqC,MAAMqC,WACtBA,OAAQ+vC,SAGY,IAArBnI,EAAKlqC,MAAMyM,OAAyB8nC,EAAQ,KAC/CtyC,EAAQioC,EAAKuK,WAAWhoC,KACzB8nC,EAAO2C,gBAAkBhN,EAAKjqC,MAAMoB,QAAUY,EAAQioC,EAAKjqC,MAAMoB,OAAOY,YACnEhC,OACFoB,aAAc6oC,EAAKjqC,MAAMoB,QAAQY,WAIvChC,KACG0R,SAAS1R,SAIlBo2C,qBAAuB,aAChB1kC,UAAWghC,iBAAkBzI,EAAKjqC,MAAM0yC,iBAAmBzI,EAAKhd,SCnpBpDiqB,0BAsePn3C,8EACJA,mBAGJ2zC,EAKE3zC,EALF2zC,aACAlZ,EAIEz6B,EAJFy6B,KACA2c,EAGEp3C,EAHFo3C,UACA72C,EAEEP,EAFFO,OACA82C,EACEr3C,EADFq3C,mBAGEC,YACA3D,GAAgBpzC,IACRA,EAAOk6B,EAAMkZ,EAAcyD,GAC3B72C,IAAU82C,MACV5c,KAGPx6B,aACI0zC,qBAEE,cACI,eACA,aACD,oBACM,0EAII/vB,OACToa,EAAuCpa,EAA9CnX,MAAkBguB,EAA4B7W,EAA5B6W,KAAMl6B,EAAsBqjB,EAAtBrjB,OAAQ62C,EAAcxzB,EAAdwzB,UAClCG,EAAW9c,IAASvpB,KAAKlR,MAAMy6B,QACjCuD,IAAc9sB,KAAKlR,MAAMyM,OAAS8qC,EAAU,OACnBrmC,KAAKjR,MAA1BsnC,IAAAA,QAAS+P,IAAAA,QACT7qC,EAAQ1M,EAAS6jB,EAAW1S,KAAKjR,MAAO,SAE1CM,IACQA,EAAOk6B,EAAMhuB,EAAO2qC,GACrBG,MACC9c,GAGRvpB,KAAKjR,MAAMitB,YACDoqB,EAAQh3C,aAGjBqR,UAAW2lC,UAAS/P,yDAIT3jB,EAAW8wB,MACzBxjC,KAAKjR,MAAMsnC,UAAYmN,EAAUnN,QAAS,KACtCiQ,EAAS5zB,YAAmB8wB,EAAUnN,QAAU,OAAS,UAC3DiQ,+CA2XuDtmC,KAAKjR,MAA1DsnC,IAAAA,QAAS+P,IAAAA,QAASG,IAAAA,OAAQvqB,IAAAA,MAAOwqB,IAAAA,kBA+DrCxmC,KAAKlR,MA7DP8oC,IAAAA,UACAD,IAAAA,MACAngC,IAAAA,MACA5F,IAAAA,UACA+pC,IAAAA,UACAC,IAAAA,cACA6K,IAAAA,eACAC,IAAAA,mBACAC,IAAAA,sBACAC,IAAAA,0BACAC,IAAAA,OACAhY,IAAAA,OACA4H,IAAAA,OACAgB,IAAAA,YACA39B,IAAAA,SACAI,IAAAA,QACAiiC,IAAAA,OACAJ,IAAAA,WACAD,IAAAA,WACAE,IAAAA,qBACA5D,IAAAA,WACAD,IAAAA,WACAd,IAAAA,oBACA3jB,IAAAA,eACAI,IAAAA,uBACAD,IAAAA,uBACA0iB,IAAAA,SACAD,IAAAA,UACA0B,IAAAA,mBACAC,IAAAA,mBACA6O,IAAAA,eACAvO,IAAAA,QACAC,IAAAA,SACAC,IAAAA,UACAZ,IAAAA,kBACAC,IAAAA,mBAyBGhpC,KAvBHyM,QACAwrC,QACAtsC,SACApL,SACAk6B,OACA2c,YACAc,YACAC,aACAxE,eACAyE,sBACAC,wBACAC,uBACAC,0BACAC,iBACAC,aACAC,cACA7qB,SACAooB,UACAzoB,YACAioB,cACA/B,WACA2D,63BAIKr3C,EAAM24C,6BAEPlsC,EAAQ1M,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,SAEzC24C,EACJ5wC,iBAACosC,SACKp0C,uBACe+/B,EAAS,SAAW,aAChC4X,YACI30C,GAAG,kBAAmB40C,OAC7B,mBACC1mC,KAAKmiC,gBACH5mC,YACIyE,KAAK2nC,oCACH3nC,KAAK4nC,qBACR5nC,KAAKuiC,sBACNviC,KAAKuf,oBACNvf,KAAK0c,sBACFkb,QACJD,QAIP9I,EAAQ,KACNgZ,gBACA7rB,GAAShc,KAAKjR,MAAM84C,eAEpB/wC,6BACM,yBACQ0vC,EAAoBG,aACrB70C,GAAG,qEAC4BhD,EAAM8b,0CACT+sB,GACpCiP,SAEG73C,MAAM84C,aAMhB/wC,+BACY,YACHU,YACI1F,GAAG,8CAA+CF,mBAC1CgmC,GAAaD,mBAEjB,iCACS,qBACN4O,yBACM,iBACVvmC,KAAK4f,+BASvB9oB,wBACM+vC,GAAa/3C,EAAMoR,kBACfi8B,MACHn8B,KAAK8nC,gBACFJ,UACCrR,UACAr2B,KAAKoc,qBACLpc,KAAK+nC,iBACH/nC,KAAKgoC,8BACJlB,YACDxQ,WACDC,SACFE,cACKgB,WACH39B,UACDI,aACG6hC,aACAD,uBACUE,aACV5D,aACAD,sBACSd,iBACL3jB,yBACQI,yBACAD,YACb+jB,GAAaD,QACjBngC,YACI1F,GAAG,4BAA6BF,aAChC+pC,gBACI7pC,GAAG,uBAAwB8pC,sBACtB5D,qBACAC,UACXM,WACCC,YACCC,oBACQZ,qBACCC,KAEX51B,IAAIlC,KAAKioC,sDAhhBfp5C,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,gBAxiBF6R,iBAArBqlC,GACZnlC,kBAAoBq6B,GAAKr6B,kBADbmlC,GAEZllC,gBAAkBo6B,GAAKp6B,gBAFXklC,GAGZplC,UAAYs6B,GAAKt6B,UAHLolC,GAIZiC,YCRT,SAAoCC,EAAUC,EAAQlC,OAG9CmC,EAAM,IAAIh0B,WACX+zB,GAAS1+B,MAAM,IACf9F,KAAK,QACLsG,QAAQ,uDAAwD,QAEhEA,QAAQ,QAAS,QACpB,YAGKi+B,EAAS94C,OAAO,eACT,OAARi5C,QAA+B,IAARA,SAClB,EACF,GAAIxxC,GAAM4K,eAAe4mC,UACvB,MAGL/sC,yBACW+sC,iBAAAA,QACR,aACA,WACKA,EAAI1wC,2BAGJ0wC,EAAIpC,UAGT3qC,GAASA,EAAM5H,MAAM00C,MDzBXpC,GAKZsC,sBERT,SAA8CJ,EAAUK,EAAYtC,OAC5DkC,EAASI,EAAWryB,qBAEnBgyB,EAAS94C,OAAO,eACT,OAARi5C,QAA+B,IAARA,SAClB,EACF,GAAIxxC,GAAM4K,eAAe4mC,UACvB,MAGL/sC,yBACW+sC,iBAAAA,QACR,aACA,WACKA,EAAI1wC,2BAGJ0wC,EAAIpC,UAGT3qC,IAAkD,IAAzCA,EAAM4a,cAAc7mB,QAAQ84C,MFjB3BnC,GAMZwC,eGnBT,SAAuCN,EAAU5sC,EAAO2qC,OAChDkC,EAAS7sC,EAAQA,EAAM4a,cAAgB,OAExCiyB,SAAiBA,MAElBP,EAAa,YACRpkC,KAAK,eACA,OAAR6kC,QAA+B,IAARA,GAAuBxxC,GAAM4K,eAAe4mC,UAC9D,MAGHI,EAAwB,qBAARJ,iBAAAA,IAAmBA,EAAIpC,GAAaoC,EAAI1wC,kBAEjB,IAAzC8wC,EAAOvyB,cAAc7mB,QAAQ84C,OAClBM,GAGRb,IAGFA,GHPY5B,GAqdZv1B,qCACkB,WACbyqB,GAAKt6B,UAAUua,iBACd,SACH,aACG,eACG,aACH,qBACH6qB,GAAaiC,iCACCjC,GAAawC,4BACrB,0BACM,sBACA,sBACA,0BACK,qCAwE3BV,OAAS,SAACh1C,GACJmgB,EAAKpkB,MAAM6tB,UACR7tB,MAAM6tB,OAAO5pB,KAGf0N,UAAW41B,SAAS,UAG3BkM,cAAgB,SAAChnC,EAAOiE,SASlB0T,EAAKpkB,MAPP0zC,IAAAA,SACAnzC,IAAAA,OACA+3C,IAAAA,qBACA7d,IAAAA,KACA2c,IAAAA,UACArX,IAAAA,OACAsX,IAAAA,sBAGE3D,KACOjnC,EAAOiE,GAGdqvB,SAEKuY,EAAuBl0B,EAAKy1B,uBAAuBptC,GAAS,SAG/D86B,EAAYnjB,EAAKnkB,MAAjBsnC,QAGF+P,EAFkB7qC,GAAS4qC,IAEC92C,EAASk6B,YACrChuB,GAASlM,MACDA,EAAOk6B,EAAMhuB,EAAO2qC,IAG5B72C,QACU+2C,EAAQh3C,QAGf8jB,EAAKzS,UAAW2lC,UAAS/P,UAAS96B,gBAG3CgkB,aAAe,SAACxsB,GACVmgB,EAAKpkB,MAAMi2C,WACRj2C,MAAMi2C,QAAQhyC,OAGbwI,EAAUxI,EAAEW,OAAZ6H,SACJ2X,EAAKpkB,MAAM+/B,QAAUtzB,EACnB2X,EAAKpkB,MAAMs4C,wBACRuB,uBAAuBptC,YAM1BqtC,IAAkBrtC,GAAS2X,EAAKpkB,MAAMq3C,qBAEvC1lC,sBACU,WACHyS,EAAKnkB,MAAM85C,aAAeD,KAAmB11B,EAAKnkB,MAAMq3C,QAAQh3C,oBAC7D,SACN,WAIXstB,YAAc,SAAC3pB,IACTmgB,EAAKpkB,MAAM+/B,QAAW3b,EAAKnkB,MAAMq3C,QAAQh3C,QACvC8jB,EAAKpkB,MAAM6tB,UACR7tB,MAAM6tB,OAAO5pB,KAIjB0N,UAAWub,OAAO,UAGzB8sB,0BAA4B,iBACW51B,EAAKnkB,MAAlCg6C,IAAAA,gBAAiB3C,IAAAA,YACA,IAArB2C,SAUA71B,EAAKpkB,MALPy6B,IAAAA,KACA2c,IAAAA,UACAc,IAAAA,UACuBp8B,IAAvBu8B,sBACAG,IAAAA,eAGE/rC,EAAQguB,EAAKwf,MACbzB,EAAgB,KACdzpC,EAAItC,EACa,qBAAVA,iBAAAA,QACJqP,EAGCrP,EAAM2qC,GAFN3qC,EAAMyrC,MAMCnpC,EAAGkrC,EAAiB3C,GAGhB,qBAAV7qC,iBAAAA,QACDA,EAAM2qC,MAGXzlC,6BAES,oBACM,UACV,WAIZknC,wBAA0B,SAAC50C,SACKmgB,EAAKpkB,MAA3B+/B,IAAAA,OAAQvS,IAAAA,UACRysB,EAAoB71B,EAAKnkB,MAAzBg6C,gBAEFx5C,EAAMwD,EAAEI,OAASJ,EAAEK,QACrBkpB,KACQvpB,GAGR87B,GAAUt/B,IAAQmQ,KAA4B,IAArBqpC,MACzBn1C,mBACGk1C,mCAITd,mBAAqB,SAACj1C,OACdxD,EAAMwD,EAAEI,OAASJ,EAAEK,QACrB7D,IAAQmQ,IACNwT,EAAKpkB,MAAM6tB,UACR7tB,MAAM6tB,OAAO5pB,KAGf0N,UAAW41B,SAAS,KAChB9mC,IAAQgrB,IAAMhrB,IAAQkrB,MAC1BuuB,iBAAiBz5C,IAAQgrB,GAAIxnB,SAQtCqpB,aAAe,SAACrpB,WACVW,EAASX,EAAEW,OACRwf,EAAK+1B,OAAS/1B,EAAK+1B,MAAM5wC,SAAS3E,IAAS,IAC5CA,EAAO0E,UAAUC,SAAS,gBAAiB,KACzC6wC,EAAQx1C,EAAOyF,WAAWqH,iBAAiB,0BACvC9E,MAAMC,UAAUC,MAAMC,KAAKqtC,GAE5Bh2B,EAAKi2B,iBAAiBD,EAAM55C,QAAQoE,MAGpCA,EAAOyF,kBAGX,WAGTgwC,iBAAmB,SAAC5nC,OACH,IAAXA,OAEI6kC,EAAYlzB,EAAKnkB,MAAjBq3C,UAUJlzB,EAAKpkB,MARPy6B,IAAAA,KACA2c,IAAAA,UACAc,IAAAA,UACA33C,IAAAA,OACAi4C,IAAAA,eACAJ,IAAAA,oBACAO,IAAAA,yBACuB78B,IAAvBu8B,sBAGE5rC,EAAQ6qC,EAAQ/2C,OAAO,mBAAMyH,GAAM4K,eAAe0nC,KAAI7nC,MACtD+lC,EAAgB,KACdzpC,EAAItC,EACS,qBAANsC,iBAAAA,QACJ+M,EAGCrP,EAAM2qC,GAFN3qC,EAAMyrC,MAMCnpC,EAAG0D,EAAO6kC,GAGN,qBAAV7qC,iBAAAA,QACDA,EAAM2qC,MAGRgB,EAAsB,GAAK3rC,MAC/B7F,SACA+xC,MACS,aACJ9F,OAAO3lB,YAIXvb,mBACM,cACIgnC,UACJp4C,EAASA,EAAOk6B,EAAMhuB,EAAO2qC,GAAaE,WAElD1wC,UAGLszC,iBAAmB,SAACK,EAAUt2C,KAC1Ba,uBAC8Bsf,EAAKnkB,MAA7Bu6C,IAAAA,WACFC,IADcnD,QACFh3C,OAEdmS,cACA8nC,IAA4B,IAAhBC,IAAsBD,GAAYC,GAAcC,OAErDF,GAEM,OADPC,EAAa,MAEd3H,OAAO3lB,UAGNvlB,KAAK0H,IAAIorC,EAAGD,EAAa,IAGpB,IAAX/nC,GAAgBA,IAAU+nC,EAAY,KAClChoC,EAAO4R,EAAK+1B,MAAMzoC,iBAAiB,iBAAiBe,GACtDD,KACG0a,UAIJvb,UAAW6oC,WAAY/nC,WAG9BonC,uBAAyB,SAACptC,SACmD2X,EAAKpkB,MAAxEy6B,IAAAA,KAAM2c,IAAAA,UAAWkB,IAAAA,qBAAsBC,IAAAA,wBAE3CQ,EAAaT,EAAqB7d,EAAMhuB,EAAO2qC,MACzB,qBAAf2B,iBAAAA,UACH,IAAIn8B,MACR,gFACAm8B,OAIErB,EAAoBtzB,EAAKnkB,MAAzBy3C,gBACFuC,GAAmB,KACnBlB,EAAY,GAETpkC,KAAK,SAAC+lC,EAAOttC,UACY,gCAAXutC,sBAAAA,SAAsBD,EAAMtD,GAAasD,KAChD3B,MACU3rC,IAGQ,IAArB6sC,MAIIlB,EAAWjwC,WAAWwH,UAAU7D,EAAMnM,OAAQy4C,EAAWz4C,YAGlE2B,EAAQrB,EAAa6L,EAAO2X,EAAKyuB,QACvB,OAAV5wC,OACOs2C,GAGG,OAAVt2C,GAAoBy1C,GAAmBA,EAAgB1xC,OAAS/D,OAC9C+D,KAAM/D,MAIzB0P,2EAKK,SACD,UAIXwnC,eAAiB,SAACt0C,EAAOuI,MACnBpF,GAAM4K,eAAe/N,UAAiBA,QAEwBuf,EAAKpkB,MAA/Do3C,IAAAA,UAAWc,IAAAA,UAAWC,IAAAA,WAAYF,IAAAA,MAAOtsC,IAAAA,OAAQ8uB,IAAAA,KACrDz6B,yBACW6E,iBAAAA,QACR,aACA,gBAEIA,cACQA,mBAIXszC,EACMh4C,EAAK0E,EAA6B,iBAAfszC,GAA2BA,GAAcA,GAE5DtzC,UAIL7E,OACE6E,EAAMpE,KAAQy3C,GAAarzC,EAAMqzC,IAAerzC,EAAMuyC,eAC9CvyC,EAAMuyC,iBAIJ,IAAVa,GAAyBxd,EAAKn6B,OAAS23C,MAC1C,gBAAkBA,IAClB,iBAAmB7qC,EAAI,EAAIzB,GAI5B3D,iBAAC0K,OAASqb,UAAW,GAAO/tB,UAOrC84C,YAAc,SAAC70C,GACTmgB,EAAKpkB,MAAMy1C,eACRz1C,MAAMy1C,YAAYxxC,IAGpBmgB,EAAKpkB,MAAM+/B,QAAU3b,EAAKnkB,MAAMq3C,QAAQh3C,QAAUP,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,YACjF0R,UAAW41B,SAAUnjB,EAAKnkB,MAAMsnC,gBASzCzW,kBAAoB,SAAC7sB,OACXW,EAAWX,EAAXW,OACAm0C,EAAe30B,EAAKnkB,MAApB84C,WACJn0C,EAAO0E,UAAUC,SAAS,+BAAiCwvC,KACxDiB,kCAIT3G,UAAY,SAACnzC,GACPA,MACG2yC,OAAS3yC,EAAMH,kBAIxBi5C,SAAW,SAAC4B,KACLT,MAAQ5oC,cAAYqpC,KIj6BRC,sNA+FnB56C,OAAU66C,MAAO,QAgBjBC,gBAAkB,eACRC,EAAa94B,EAAKliB,MAAlBg7C,SAEF5tC,EAAKzF,KAAK+vB,MAAM/vB,KAAKszC,UAAYD,EAAS16C,OAAS,IAAM,IAC1DqR,UAAWmpC,MAAOE,EAAS5tC,kFAjB5B8D,KAAKlR,MAAMi7C,aACRF,oEAIiBn3B,IACpBA,EAAUq3B,QAAW/pC,KAAKlR,MAAMk7C,MAAQt3B,EAAUs3B,KAAOhqC,KAAKlR,MAAM+H,OAAS6b,EAAU7b,KAEhFmJ,KAAKlR,MAAMi7C,SAAWr3B,EAAUq3B,aACpCtpC,UAAWmpC,MAAO,YAFlBC,oDAaC53C,EAAQ63C,EAAUF,UACtB33C,gBACmBA,EACV63C,IAAaF,EACjB,mCAGYA,yCAkBjB5pC,KAAKlR,MAbP8C,IAAAA,UACAqsC,IAAAA,aACAC,IAAAA,iBACA8L,IAAAA,IACAC,IAAAA,IACApzC,IAAAA,KACAD,IAAAA,SACA3E,IAAAA,OACA63C,IAAAA,SACAhc,IAAAA,UACAl7B,IAAAA,KAEG9D,KADHi7C,4IAIEG,kBACAF,EAEAlzC,4BACOkzC,MACAC,OACCr3C,QACCqrC,YACInsC,GAAG,gBAAiBosC,KAKjCpnC,8BACSmnC,YACInsC,GAAG,oBAAqBosC,OAE1BtnC,GAKbE,6BACMhI,aACOgD,GAAG,4BAA6BkO,KAAKmqC,UAAUl4C,EAAQ63C,EAAU9pC,KAAKjR,MAAM66C,gCAC5D9b,GACxBl8B,eA3KyBgP,iBAAf+oC,GAuEZj5B,wBAEH,MACA,OACA,SACA,cACA,SACA,OACA,aACA,OACA,OACA,QACA,cACA,OACA,SACA,QACA,SACA,cACA,QACA,OACA,kBC7Fe05B,0BAyGPt7C,8EACJA,IAEAu7C,EAASr5B,EAAKs5B,eAAex7C,YAC9BC,wBAEMs7C,GAAU3oC,iBAAe5S,EAAM8H,gBACjCoa,EAAKu5B,gBAAgBz7C,2EAIN4jB,SACgB1S,KAAKlR,MAArC07C,IAAAA,aAAcpsC,IAAAA,IAAKxH,IAAAA,SACvB4sC,SACAgH,IAAiB93B,EAAU83B,cAAgBpsC,IAAQsU,EAAUtU,SACjDqsC,MAAOzqC,KAAKuqC,gBAAgB73B,KAGxC9b,IAAa8b,EAAU9b,cACb4sC,OACF6G,OAASrqC,KAAKsqC,eAAe53B,KAC7B/O,QAAU6/B,EAAU6G,QAAU3oC,iBAAegR,EAAU9b,WAG/D4sC,QACG/iC,SAAS+iC,iDAID5sC,IAAAA,gBACqB,IAA7B6T,WAASggC,MAAM7zC,kDAGN4zC,IAAAA,aAAcpsC,IAAAA,IAC1BqsC,YACArsC,EAAK,KACDkO,EAAIhU,SAASkyC,EAAc,IAC5BE,OAAOC,MAAMr+B,IAAMA,EAAE1U,aAAe4yC,EAAa5yC,eAC5C0U,EAAIlO,EAASA,MAASkO,UAI3Bm+B,yCAI4BzqC,KAAKjR,MAAhC07C,IAAAA,MAAOJ,IAAAA,OAAQ1mC,IAAAA,UAgBnB3D,KAAKlR,MAdP8C,IAAAA,UACAg5C,IAAAA,WACAC,IAAAA,eACAL,IAAAA,aACWx2B,IAAXjS,UACAnL,IAAAA,SACAtF,IAAAA,QACAC,IAAAA,UACSu5C,IAATz7B,QACA07B,IAAAA,SACAC,IAAAA,QACAC,IAAAA,gBAEGn8C,KADHsP,0KAII8sC,OAAkC,IAAbH,EAA2BA,OAA4B,IAAVN,EACpEP,EAAUtzC,KACVyzC,GAAU1mC,EAAS,KACf6H,EAAIf,WAASC,KAAKw/B,GACnB1+B,EAAE1c,MAAM,wBACDgc,eAAaU,GAAK2/B,mBAAoBH,UAEzCX,GAAW1mC,GAAY7U,EAAM,wBAChC,oBAAsBk8C,OAGxBI,EACJt0C,4BACMk0C,MACA,aACC,eACEJ,YACI94C,GAAG,iCACUo5C,sBACDJ,GACpB95C,8BAGKk6C,aACM55C,IAAYC,GACvBs5C,QAEOL,UAKZ1zC,yBACMhI,aACOgD,GAAG,qCAAsCF,UAGtB,IAAV64C,EAAc,KAAOW,UA9MdxqC,iBAAdwpC,GAoGZ15B,kBACA,aACM,OCzGf,IAAM26B,GAAoC,mBAAjBC,eASJC,sNAyFnB5sB,WAAa,OACb6sB,QAAU,OAEVC,aAAe,SAAC38C,GACVA,EAAM8C,cACH+sB,WAAW/sB,UAAY9C,EAAM8C,cAItC85C,cAAgB,SAAC58C,MACVkiB,EAAK2N,aAWH8sB,aAAa38C,OAXE,GACf6vB,WAAa5uB,SAASC,cAAclB,EAAMiT,aAE1C0pC,aAAa38C,OACZ0D,EAAQ1D,EAAM68C,YAAc57C,SAAS6E,KACvC9F,EAAM88C,YACH9yC,YAAYkY,EAAK2N,cAEjBktB,aAAa76B,EAAK2N,WAAYnsB,EAAKoN,YAMvCyrC,OACEG,QAAUr4B,wCAAarkB,EAAM8H,SAAUoa,EAAK2N,gBAIrDmtB,cAAgB,WACV96B,EAAKliB,MAAMipC,WACRjpC,MAAMipC,UAGT/mB,EAAK2N,aACF0sB,6BACKr6B,EAAK2N,aAGd3N,EAAKliB,MAAM68C,YAAc57C,SAAS6E,MAAMwE,YAAY4X,EAAK2N,eAGvD6sB,QAAU,OACV7sB,WAAa,iFAlFd3e,KAAKlR,MAAMunC,eACRqV,cAAc1rC,KAAKlR,OAEpBu8C,SAEG/qC,iEAKeoS,OAChB2jB,EAAoB3jB,EAApB2jB,QAAS0V,EAAWr5B,EAAXq5B,OACb/rC,KAAKlR,MAAMunC,UAAYA,EASvBA,GACE0V,YAICL,cAAch5B,SAEdo5B,gBAfDzV,IAAYgV,SAETK,cAAch5B,kDAkBnB1S,KAAKlR,MAAMunC,SAAWr2B,KAAKlR,MAAMipC,cAC9BjpC,MAAMipC,eAER+T,uDAkD0D9rC,KAAKlR,MAAjDklB,IAAXjS,UAAsBnQ,IAAAA,UAAWgF,IAAAA,SAAUy/B,IAAAA,cAI7B,oBAAXjmC,QAA0BimC,EAC5Bv/B,oBAAWlF,UAAWA,MACpBy5C,IAAahV,GAAWr2B,KAAK2e,YAAgC,oBAAXvuB,OACpDk7C,eAAa10C,EAAUoJ,KAAK2e,YAG9B,YAlJyB/d,iBAAf2qC,GA6CZ76B,wBACM,YChDMs7B,+KAwC2DhsC,KAAKlR,MAA9DklB,IAAXjS,UAAsBkqC,IAAAA,OAAQr6C,IAAAA,UAAWs6C,IAAAA,aAAiBp9C,iEAGhEgI,iBAACkd,QACKllB,aACOgD,yBAAyBm6C,uBACF,IAAXA,GAAgBC,GACpCt6C,aA/CwBgP,iBAAdorC,GAkCZt7B,qBACG,YACG,WCtCMy7B,sNA6BnB/vB,aAAe,SAACrpB,SAC0Bie,EAAKliB,MAArCkE,IAAAA,QAASo5C,IAAAA,YAAa7qC,IAAAA,MAC1BvO,KACMuO,EAAOxO,GAGbq5C,KACU7qC,EAAOxO,0EAuBjBiN,KAAKlR,MAjBPmoB,IAAAA,OACArY,IAAAA,MACAhN,IAAAA,UACAy6C,IAAAA,QACAnf,IAAAA,QAGAn2B,IAAAA,cACAu1C,IAAAA,aAQGx9C,KANHyS,QACA1K,OACA+T,QACA5X,UACAo5C,sJAKoBpsC,KAAKlR,MAArB8b,IAAAA,MAAO/T,IAAAA,KACP01C,EAAiBz6C,GAAG,uBAAyB06C,0CAA2Cv1B,IAAWrY,OAC3E,IAA1B6L,WAASggC,MAAM7/B,IAAgBlJ,iBAAekJ,GAAQ,KAClD6hC,EAAUhiC,WAASC,KAAKE,KACtBE,eAAaF,aACR9Y,GAAGy6C,EAAgBE,EAAQ39C,MAAM8C,oBAGtCkF,wBAAKlF,UAAW26C,aAGrB11C,IAASE,IAAiBu1C,EAGpBz1C,MACFC,GAAMgU,aAAajU,GAAQrF,SAAS,OAFpCsF,qBAAUC,cAAeA,EAAevF,eAM/CsF,0BACMhI,WACKkR,KAAKoc,uBACHtqB,GAAG,yCACamlB,yBACDrY,6BACIA,oCACOA,GAASqY,sCACPrY,IAAUqY,GAC9CjmB,GAAcM,SAAU+6C,GAAWp1B,EAAQtnB,MAAOsnB,IAAWo1B,GAAWz6C,6BAGjEg7B,WAAYhuB,IAAUqY,EAAQiW,QAASA,cA5FlBtsB,iBAAlBurC,GAwBZz7B,wBACM,SACL,UCvBWg8B,0BA+KP59C,8EACJA,mBAEAunC,EAA4C,kBAA3BvnC,EAAM69C,iBAAiC79C,EAAM69C,iBAAmB79C,EAAM+uC,wBACxF9uC,+BAEYsnC,QAGgB,IAAtBvnC,EAAM89C,gBACV79C,MAAM69C,YAAc99C,EAAM+9C,qFAK7B7sC,KAAKlR,MAAMg+C,cACRC,oEAIiBr6B,OAChBo6B,EAAYp6B,EAAZo6B,QACJ9sC,KAAKlR,MAAMg+C,UAAYA,IAIvBA,OACGC,uBAEAC,kEAIWt6B,EAAW8wB,GACzBxjC,KAAKjR,MAAMsnC,UAAYmN,EAAUnN,SAAW3jB,EAAUu6B,sBAC9CA,mBAAmBzJ,EAAUnN,wDAKrCr2B,KAAKlR,MAAMg+C,cACRE,qBAGHhtC,KAAKod,uBACMpd,KAAKod,wDAkFepd,KAAKjR,MAAhCsnC,IAAAA,QAAS6W,IAAAA,gBA8BbltC,KAAKlR,MA5BP8C,IAAAA,UACAu7C,IAAAA,QACAd,IAAAA,QACAS,IAAAA,QACAlB,IAAAA,UACA1e,IAAAA,QACAkgB,IAAAA,OAqBGt+C,KAnBHu+C,QACAT,cACAjB,aACAS,cACAa,qBACApP,iBACAgP,qBACAS,mBACA73B,qBAGA+sB,WACAmK,mBACAY,iBACAC,qBACA95B,iBACAI,yBACAD,oYAKIw5B,EAAUrtC,KAAKlR,MAAfu+C,MACFF,MACMA,OAGJvuC,EAAyB,IAAjByuC,EAAMj+C,OACdw9C,EAAc/9C,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,eAC/C48C,EAAa98C,EAASmR,KAAKlR,MAAOkR,KAAK/P,QAAS,cAChDw9C,EACJ32C,0BACMhI,OACA,uBACOgD,GAAG,+CACYu6C,2BACEA,kCACOS,2CACSA,IAAYzW,GACrDzkC,QACE,iBAEEsQ,IAAI,SAACwrC,EAAQnsC,UAClBzK,iBAACq1C,SACKuB,WACKxgB,MACJwgB,EAAOn+C,KAAOgS,QACZA,cACM2R,EAAKy6B,wBACVf,IAAgBrrC,UACf8qC,QACFztC,eAMVwuC,EAKHt2C,qBAAQ60C,WAAYA,EAAYtV,QAAS6W,EAAetB,UAAWA,MAJ5DsB,EAAgBO,EAAa,YAlXI7sC,iBAAzB8rC,GAiKZh8B,uBACI,qBACW,YACT,yBACK,qBACI,YACZ,mBACU,GAxKDg8B,GA2KZ1rC,yBACOC,GAAUyM,0CAoDxBq/B,gBAAkB,aACF38C,OAAQ,QAASgjB,EAAKwM,qBACtBxvB,OAAQ,OAAQgjB,EAAKkN,oBACrBlwB,OAAQ,MAAOgjB,EAAKyM,uBAGpCmtB,mBAAqB,aACF58C,OAAQ,QAASgjB,EAAKwM,qBACtBxvB,OAAQ,OAAQgjB,EAAKkN,oBACrBlwB,OAAQ,MAAOgjB,EAAKyM,uBAGvC+tB,WAAa,WACPx6B,EAAKgK,uBACMhK,EAAKgK,YAGfA,SAAWxI,WAAW,aACpBwI,SAAW,OACX3c,UAAW41B,SAAS,KACxB,MAEE51B,UAAWysC,eAAe,UAGjCW,YAAc,WACRz6B,EAAKgK,uBACMhK,EAAKgK,YAGfA,SAAWxI,WAAW,aACpBwI,SAAW,OACX3c,UAAWysC,eAAe,KAC9B95B,EAAKtkB,MAAM2mB,sBAEThV,UAAW41B,SAAS,UAG3BzW,kBAAoB,SAAC7sB,OACXmrB,EAAUnrB,EAAEwtB,eAAe,GAA3BrC,QAEH4vB,OAAS5vB,IACT6vB,YAAa,QAGpBztB,iBAAmB,SAACvtB,OACVsjC,EAAYjjB,EAAKrkB,MAAjBsnC,WACHjjB,EAAK26B,gBAIJC,EAASj7C,EAAEwtB,eAAe,GAAGrC,MAC3BovB,EAAqBl6B,EAAKtkB,MAA1Bw+C,iBACFW,EAAkBx3C,KAAKyG,IAAIkW,EAAK06B,OAASE,IAAWV,EACtDl6B,EAAK06B,OAASE,GAAU3X,GAAW4X,KAChCH,OAASE,IACTH,eACIz6B,EAAK06B,OAASE,IAAW3X,GAAW4X,MACxCH,OAASE,IACTJ,qBAIT/tB,gBAAkB,aACXkuB,YAAa,QAGpBJ,iBAAmB,SAACpsC,EAAOxO,IACrBqgB,EAAKtkB,MAAMs9C,aAAeh5B,EAAKtkB,MAAM0zC,YACtCpvB,EAAKtkB,MAAMs9C,aAAeh5B,EAAKtkB,MAAM0zC,UAAUjhC,EAAOxO,QAGnB,IAA3BqgB,EAAKtkB,MAAM89C,eACfnsC,UAAWmsC,YAAarrC,MChTd2sC,+KA6DbluC,KAAKlR,MARP8C,IAAAA,UACAu8C,IAAAA,WACA5B,IAAAA,eACAxqC,IAAAA,UACA6I,IAAAA,MACAwjC,IAAAA,WACAx3C,IAAAA,SACG9H,gGAGDa,YACA+R,iBAAekJ,GAAQ,KACnByjC,EAAa5jC,WAASC,KAAKE,GAAO9b,QACjCgc,eAAaF,aACP9Y,GAAG,eAAgBy6C,EAAgB8B,EAAWz8C,uBAC7Cu8C,EAAeE,EAAW72C,gBAGjCV,yBAAMU,MAAO22C,EAAYv8C,UAAWE,GAAG,eAAgBy6C,WAG1Dv4B,EAAYjS,SAGhBjL,yBAAehI,GAAO8C,UAAWE,GAAG,oBAAqBF,QACxCgF,KAEbw3C,GAAcx3C,UAhFmBgK,iBAAtBstC,GA+CZx9B,wBACM,WCnDM49B,0BAgBPx/C,8EACJA,aAEDC,iBACO,WACD,UACD,WACC,KAGNquB,SAAW,yEAIZpd,KAAKod,uBACMpd,KAAKod,qDAIHnnB,mBACZmnB,SAAWxI,WAAW,aACpBwI,SAAWxI,WAAW,aACpBwI,SAAW,UAGflK,EAAKpkB,MAAM0pB,gBACT/X,UAAWwW,QAAQ,KACvB0G,SAEEld,UAAW8tC,UAAU,qDAIrB9tC,UAAW8tC,UAAU,EAAOt3B,QAAQ,EAAOof,SAAS,+CAGxCpgC,cACb+J,KAAKod,uBACMpd,KAAKod,eAGfA,SAAWxI,WAAW,aACpBwI,SAAWxI,WAAW,aACpBwI,SAAW,UAGfhK,EAAKtkB,MAAM2pB,gBAEThY,UAAWwW,QAAQ,EAAMof,SAAS,KACtC1Y,SAEEld,UAAW+c,SAAS,2CAIsBxd,KAAKjR,MAA5CkoB,IAAAA,OAAQs3B,IAAAA,SAAU/wB,IAAAA,QAAS6Y,IAAAA,UACcr2B,KAAKlR,MAA9C0I,IAAAA,MAAO5F,IAAAA,UAAWgF,IAAAA,SAAUkD,IAAAA,SAE9BvF,EAAyB,QAAbuF,GAAmC,WAAbA,EAAwB,aAAe,kBAE7EhD,+BACSU,YACI1F,6BAA6BgI,kBAAwBvF,2BACxC0iB,sBACDs3B,6BACOA,GAAYt3B,sBACnBuG,6BACOA,GAAWvG,kBACvBnd,YAAoBu8B,GAAYkY,GAAYt3B,GAC3DrlB,cArF0BgP,iBAAhB0tC,GAUZ59B,uBACK,sBACI,iBACA,SCHG3F,sNAkCnBhc,OAAUsnC,SAAS,KAqBnBmY,gBAAkB,OAElBC,cAAgB,eACR/6C,EAASsd,EAAKwjB,QAChB9gC,MACeA,EAAQ,QAASsd,EAAK09B,gBACtBh7C,EAAQ,MAAOsd,EAAK29B,gBAC9Bt4C,oBAAoB,YAAa2a,EAAK09B,gBACtCr4C,oBAAoB,aAAc2a,EAAK29B,gBACvCt4C,oBAAoB,QAAS2a,EAAKuL,gBAClClmB,oBAAoB,OAAQ2a,EAAK29B,kBAI5CC,WAAa,eACLtZ,EAAYtkB,EAAK2N,WACjBjrB,EAAWsd,EAAKliB,MAAhB4E,SAED+6C,gBAEiB,mBAAX/6C,MACAA,EAAO4hC,QAET5hC,EAAS2M,cAAY3M,GAAU4hC,IACnCd,QAAU9gC,GAAU,KAErBA,MACYA,EAAQ,QAASsd,EAAK09B,gBACtBh7C,EAAQ,MAAOsd,EAAK29B,gBAC3Bz4C,iBAAiB,YAAa8a,EAAK09B,gBACnCx4C,iBAAiB,aAAc8a,EAAK29B,gBACpCz4C,iBAAiB,QAAS8a,EAAKuL,gBAC/BrmB,iBAAiB,OAAQ8a,EAAK29B,kBAIzC/vB,eAAiB,SAAC/lB,GACZA,MACG8lB,WAAa3N,EAAKliB,MAAMwmC,UAAUz8B,EAAKM,kBAIhD01C,iBAAmB,SAAC97C,KAChBa,wBACKyC,oBAAoB,cAAe2a,EAAK69B,kBAAkB,KAChD,WACZpuC,UAAW41B,SAAS,OAG3BqY,aAAe,SAAC37C,MACC,cAAXA,EAAEV,OAAwB2e,EAAKssB,aAIpB,eAAXvqC,EAAEV,cACCirC,UAAW,cAETpnC,iBAAiB,cAAe8a,EAAK69B,kBAAkB,OAKxDn4B,EAAU1F,EAAKliB,MAAf4nB,MACJ1F,EAAKw9B,8BACMx9B,EAAKw9B,iBAGhB93B,IACG83B,gBAAkB55B,WAAW,aAC3B45B,gBAAkB,OAElB/tC,UAAW41B,SAAS,KACxB3f,KAEEjW,UAAW41B,SAAS,QAI7BsY,aAAe,SAAC57C,GACVie,EAAKw9B,8BACMx9B,EAAKw9B,iBAGL,cAAXz7C,EAAEV,MAAwB2e,EAAKssB,YAI9B78B,UAAW41B,SAAS,OAG3B9Z,aAAe,SAACxpB,IACTA,EAAEI,OAASJ,EAAEK,WAAasM,MACxBgvC,aAAa37C,oFA9Gf67C,wDAGYxX,GACbp3B,KAAKlR,MAAM4E,SAAW0jC,EAAU1jC,aAC7Bk7C,iEAKFH,qBACAja,QAAU,KAEXx0B,KAAKwuC,8BACMxuC,KAAKwuC,sDAqGZnY,EAAYr2B,KAAKjR,MAAjBsnC,UAUJr2B,KAAKlR,MARP0I,IAAAA,MACA5F,IAAAA,UACAk9C,IAAAA,aACAC,IAAAA,iBACAnkC,IAAAA,MACA9Q,IAAAA,SACA0e,IAAAA,aACAC,IAAAA,aAGIu2B,EACJl4C,yBACM,gBACGg4C,YACIC,WACDj1C,eACI0e,eACAC,aAOhB3hB,2BACSU,YACI1F,GAAG,uBAAwBF,aAC5B,gCAEJ2L,IAAKyC,KAAK4e,eAAgBgX,qBACrBoZ,EAAU,aAxLiBpuC,iBAAzBmK,GA6BZ2F,wBAjCT,SAAsBs+B,UACbA,EAAQ71C,kBAkCN,GC3BX,yPAiDEuoB,UAAY,OAgBZC,qBAAuB,kBAAM3Q,EAAK0Q,aAElCI,sBAAwB,SAAC/f,KAClB2f,UAAY3f,yEAeb/B,KAAKlR,MAVPmgD,IAAAA,aACAC,IAAAA,aACAC,IAAAA,gBACAL,IAAAA,aACAC,IAAAA,iBACAK,IAAAA,sBACAC,IAAAA,0BACAC,IAAAA,8BACAC,IAAAA,8BACGzgD,uNAGDmgD,MACID,QACJl4C,iBAACiU,QACK,yBACGkkC,QACAC,WACGC,eACIG,eACAC,QACPH,YACIC,eACGP,mBACIC,OAKlBxxC,IAAMyC,KAAK8hB,sBAEVhrB,iBAAC5C,EAAsBpF,UAxGmC8R,mBAC5DxM,YAAcH,EAAeC,EAAmB,cCSnDs7C,sNA4RJzgD,gBACW,YACC,eACI,QAkChB0gD,MAAQ,WACFz+B,EAAKliB,MAAMqC,WAIX6f,EAAKoM,WACFsyB,gBAAiB,IAEjBjvC,UAAW/B,SAAS,QAI7BihB,eAAiB,SAAC5sB,GACZie,EAAKliB,MAAM01C,aACR11C,MAAM01C,UAAUzxC,KAGlB08C,WAGP/vB,iBAAmB,SAAC3sB,GACdie,EAAKliB,MAAMy1C,eACRz1C,MAAMy1C,YAAYxxC,GAGpBie,EAAKliB,MAAMqC,YACTsP,UAAW/B,SAAS,OAI7BkhB,kBAAoB,SAAC7sB,GACfie,EAAKliB,MAAMuuC,gBACRvuC,MAAMuuC,aAAatqC,GAGrBie,EAAKliB,MAAMqC,YACTsP,UAAW/B,SAAS,OAI7BmhB,gBAAkB,SAAC9sB,GACbie,EAAKliB,MAAM0uC,cACR1uC,MAAM0uC,WAAWzqC,KAGnB08C,UACY,gBAGnBlzB,aAAe,SAACxpB,GACVie,EAAKliB,MAAM0tB,WACR1tB,MAAM0tB,QAAQzpB,IAIhBA,EAAEI,OAASJ,EAAEK,WAAasM,YACtBxJ,iBAAiB,QAAS8a,EAAKy+B,SACjChvC,UAAW/B,SAAS,QAI7B2d,eAAiB,SAACtpB,GACZie,EAAKliB,MAAMwtB,aACRxtB,MAAMwtB,UAAUvpB,IAGlBA,EAAEI,OAASJ,EAAEK,WAAasM,YACtBrJ,oBAAoB,QAAS2a,EAAKy+B,SACpChvC,UAAW/B,SAAS,QAI7BixC,kBAAoB,SAAC58C,GACfie,EAAKliB,MAAM8gD,gBACR9gD,MAAM8gD,aAAa78C,GAGrBie,EAAKliB,MAAMqC,YACTsP,UAAW9O,OAAO,OAI3ByuB,kBAAoB,SAACrtB,GACfie,EAAKliB,MAAMsuC,gBACRtuC,MAAMsuC,aAAarqC,GAGrBie,EAAKliB,MAAMqC,YACTsP,UAAW9O,OAAO,OAI3B2Y,oBAAsB,SAACs4B,EAAWnqB,KAEzBo3B,iBADqB,iBAAjBp3B,EACe7D,WAAW,aAC5Bi7B,iBAAmBj7B,WAAW,aAC5Bi7B,iBAAmB,OAEnBpvC,UAAWqvC,UAAU,KACzBr3B,EAAe,OAEbhY,UAAWsvC,aAAc,QAC7BpyB,IAEqB/I,WAAW,aAC5Bi7B,iBAAmB,OAEnBpvC,UAAWqvC,UAAU,EAAMC,aAAcnN,EAAY,aAAe,MACxEjlB,sFA3ImBjL,GACpB1S,KAAKlR,MAAMqC,WAAauhB,EAAUvhB,UAAY6O,KAAKjR,MAAM4C,YACtD8O,UAAW9O,OAAO,gDAIP+gB,EAAW8wB,eACxBxjC,KAAKjR,MAAM2P,SAAW8kC,EAAU9kC,eAC9B0e,SAAWxI,WAAW,aACpBwI,SAAW,KACZlK,EAAKw8B,mBACFA,gBAAiB,IAEjBjvC,UAAW/B,SAAS,MAE1B,qDAKDsB,KAAKod,uBACMpd,KAAKod,UAGhBpd,KAAK6vC,+BACM7vC,KAAK6vC,yBAGbx5C,oBAAoB,QAAS2J,KAAKyvC,8CAgJrCzvC,KAAKlR,MA3BP8C,IAAAA,UACAmF,IAAAA,cACAu1C,IAAAA,aACA8B,IAAAA,WACA4B,IAAAA,KACA1+C,IAAAA,QACAC,IAAAA,UACA+M,IAAAA,KACAC,IAAAA,OACAC,IAAAA,SACAG,IAAAA,KACAC,IAAAA,MACAC,IAAAA,cACA1N,IAAAA,SACA4Q,IAAAA,UACAtQ,IAAAA,IACAu9C,IAAAA,QACAn4C,IAAAA,KACAo5C,IAAAA,cACAC,IAAAA,kBACA79C,IAAAA,KACAuE,IAAAA,SACA6H,IAAAA,YACA0xC,IAAAA,IAEAvlC,KADAi5B,SACAj5B,OACG9b,kSAEC+0C,EAAW7jC,KAAKlR,MAAhB+0C,OAEDmM,MACG39C,KAAOA,SAGoC2N,KAAKjR,MAAhD2P,IAAAA,QAAS/M,IAAAA,MAAOm+C,IAAAA,SAAUC,IAAAA,aAC5BK,EAAcv5C,GAAQ2H,EAExB6xC,YACCxM,GAAWsM,KAAQp5C,GAAiBu1C,GAAgB8D,GAAgBxlC,GAAShU,IAW3E,GAAIitC,GAAUsM,EAAK,KAClBvgD,EAAKkH,GAAM2T,SAASC,KAAKm5B,GAAUjtC,KAChCE,GAAMgU,aAAalb,GAAM4B,SAAU5B,EAAGd,MAAMsC,aAbuC,KACxFk/C,EAAuBhE,OACC,IAAjBA,MACc8D,GAAexlC,EAAQhU,EAAW,QAIzDE,qBAAUC,cAAeA,EAAe02B,UAAWwiB,EAAeviB,cAAewiB,EAAmB1+C,eASnG4+C,IAMevM,KALAj5B,GAAShU,EACvBitC,MACgB/sC,qBAAe8T,MAAOylC,EAAiBjC,WAAYA,YAMnEp6B,EAAYjS,IAAciuC,EAAO,IAAM,iBAE3Cl5C,yBACMhI,YACMqC,eACI6O,KAAK4f,6BACP5f,KAAK6f,4BACJ7f,KAAK0f,2BACP1f,KAAK2f,yBACL3f,KAAKqc,uBACPrc,KAAKuc,0BACAvc,KAAK2vC,+BACL3vC,KAAKogB,uBACb4vB,YACK3xC,4JAeU2wC,8BACUc,gCACCC,WAAuBD,GAA6B,OAAjBC,GAChE,kBAAmBn+C,mBAlhBTgP,iBAAf4uC,GAsRG9+B,mBACC,qBACM,gBACG,MAmQnB,OAAe6R,GAAUguB,GAAcf,uBCvjBtBvuC,GAAUwM,cACfxM,GAAUuM,UACdvM,GAAU0C,wBACC1C,GAAU+M,OAAO,MAAO,QAAS,SAAU,sBAC9C/M,GAAUzO,kBACVyO,GAAUE,QCKLqvC,0BA+GP1hD,8EACJA,aAwCRouC,iBAAmB,SAACnqC,GACdie,EAAKliB,MAAMquC,eACRruC,MAAMquC,YAAYpqC,GAGrBie,EAAKliB,MAAM2hD,QAAUz/B,EAAKssB,YACvB78B,UAAWwrC,OAAQ,OAI5B7rB,kBAAoB,SAACrtB,GACfie,EAAKliB,MAAMsuC,gBACRtuC,MAAMsuC,aAAarqC,KAIrBuqC,UAAW,EACZtsB,EAAKliB,MAAM2hD,OAA+B,IAAtBz/B,EAAKjiB,MAAMk9C,UAC5BxrC,UAAWwrC,OAAQ,OAI5BrsB,kBAAoB,SAAC7sB,GACfie,EAAKliB,MAAMuuC,gBACRvuC,MAAMuuC,aAAatqC,KAGrBuqC,UAAW,KAGlBoT,mBAAqB,SAAC39C,OACZ49C,EAAoB3/B,EAAKliB,MAAzB6hD,gBACFjzB,GAAY7uB,EAASmiB,EAAKliB,MAAOkiB,EAAKjiB,MAAO,YAC/C4hD,KACcjzB,EAAU3qB,QAGO,IAAxBie,EAAKliB,MAAM4uB,YACfjd,UAAWid,gBA5Eb3uB,cACK,gBACqC,IAA5BD,EAAM8hD,kBAAoC9hD,EAAM8hD,oBAAsB9hD,EAAM+hD,sFAgB3F7wC,KAAKlR,MAVPgiD,IAAAA,qBACAC,IAAAA,qBACAC,IAAAA,wBACA9R,IAAAA,aAGAnoC,IAAAA,cACAu1C,IAAAA,aACA/P,IAAAA,sBACAD,IAAAA,0CAGgD,IAA1Bt8B,KAAKlR,MAAMmiD,WAC/BjxC,KAAKlR,MAAMmiD,WACXpiD,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,0BAIpBiR,KAAK0wC,wBACd/5C,EACJ21C,GAAgBhQ,EAChBvlC,GAAiBwlC,EACjB2C,gBAEY4R,eACAC,kBACGC,wCA+CX/E,EAAWjsC,KAAKjR,MAAhBk9C,SAyBJjsC,KAAKlR,MAvBP8C,IAAAA,UACA6+C,IAAAA,MACAS,IAAAA,UACAt6C,IAAAA,SACAs2B,IAAAA,QAkBGp+B,KAhBH4uB,WACAizB,kBACAE,kBACA3R,eACA5C,uBACAC,wBACAuU,uBACAC,uBACAC,0BAGA1E,eACAv1C,gBACAk6C,aACAL,qUAKIlzB,OAA4C,IAA1B1d,KAAKlR,MAAMmiD,WAC/BjxC,KAAKlR,MAAMmiD,WACXpiD,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,YACjCoiD,GAAiB,EACfC,EAAQ3mC,WAASvI,IAAIuI,WAASuS,QAAQpmB,GAAW,SAACuD,EAAO+B,OACxD/B,IAAUA,EAAMrL,aACZqL,KACEg3C,EAAgB,IAAMh3C,EAAMrL,MAAMuiD,YAAcl3C,EAAMrL,MAAMwiD,cACrDp1C,IAGb/B,EAAMrL,MAAMyiD,kBACRp3C,MAGHyyB,GAA+B,IAAnBukB,GAAwBA,IAAkBj1C,IAAMwhB,SAC3D5mB,qBAAU81B,UAAWA,EAAWM,QAASA,eAIhDp2B,0BACMhI,UACIm9C,YACGn6C,GAAG,4BACM2+C,mBACAS,GACjB,sBAAuBt/C,eACboO,KAAKk9B,8BACJl9B,KAAKogB,+BACLpgB,KAAK4f,8BA3POhf,iBAAb4vC,GAuGZ9/B,uBACI,eACK5Z,wEACW,QA1GR05C,GA6GZvhB,kBAAoBjuB,OCzGRwwC,+KAWbxxC,KAAK/P,QANPytB,IAAAA,SACA+zB,IAAAA,cACA56C,IAAAA,KACAs4C,IAAAA,gBACAF,IAAAA,aACAC,IAAAA,oBAIAp4C,iBAAC04C,sBAEYz9C,GAAqBC,QAAS0rB,GAAY,8BAC5C+zB,eACKxC,eACAC,kBACGC,SACTt4C,WArB0Bmd,aAArBw9B,GACZxwC,aAAeA,OCLH0wC,+KAwCb1xC,KAAKlR,MAPP8C,IAAAA,UACAgF,IAAAA,SACAy6C,IAAAA,WACAC,IAAAA,SACA/a,IAAAA,SACAob,IAAAA,QACG7iD,qFAGHgI,iCACMhI,aACOgD,GAAG,sDACiB6/C,8BACAA,oCACMpb,GAClC3kC,UAGY0/C,GAAYx6C,iBAAC06C,iBAnDKx9B,aCPpB49B,+KAYgB5xC,KAAKlR,MAA9BoR,IAAAA,GAAI2xC,IAAAA,SAAUjkB,IAAAA,OAChBkkB,EAAU9xC,KAAKlR,MAAfgjD,eAEJh7C,0BACMoJ,YACOpO,GAAG,gDACa87B,GACxB58B,GAAcrB,MAAM,cACbuQ,GAAM,EAAI,SAMnB2xC,EAKH/6C,kCACahF,GAAG,wDACe87B,8BAIzBh8B,kCAAmCZ,GAAcK,MAAM,SAVtDygD,SA3B+BlxC,iBCMvBmxC,+KA8Db/xC,KAAKlR,MAVPoR,IAAAA,GACA1I,IAAAA,MACA5F,IAAAA,UACAkgD,IAAAA,MACAD,IAAAA,SACAP,IAAAA,SACAD,IAAAA,WACAz6C,IAAAA,SAEG9H,KADH8+B,wGAIIA,EAAW5tB,KAAKlR,MAAhB8+B,UACFA,EAAQ,KACSokB,EAAoBvnC,WAASC,KAAKkjB,GAAQ9+B,MAArD8C,YACCkZ,eAAa8iB,aACT97B,GAAG,kBAAmBkgD,YAInCl7C,6BACMhI,SACG0I,YACI1F,GAAG,2CACe87B,GAC1Bh8B,wBAGFggD,IAAe1xC,GAAIA,EAAI4xC,MAAOA,EAAOD,SAAUA,EAAUjkB,SAAUA,SAErD0jB,GAAYx6C,iBAAC06C,iBAlFGx9B,aCJlBi+B,+KA2CbjyC,KAAKlR,MAJIklB,IAAXjS,UACAnQ,IAAAA,UAEG9C,KADHyiD,gEAIKz6C,iBAACkd,QAAcllB,GAAO8C,UAAWE,GAAG,eAAgBF,aA7CzBgP,iBAAjBqxC,GAiCZvhC,wBACM,eCnCMwhC,sNA0EnBnjD,OAAU4C,OAAO,KAEjBg+C,kBAAoB,SAAC58C,GACfie,EAAKliB,MAAM8gD,gBACR9gD,MAAM8gD,aAAa78C,KAGrB0N,UAAW9O,OAAO,OAGzByuB,kBAAoB,SAACrtB,GACfie,EAAKliB,MAAMsuC,gBACRtuC,MAAMsuC,aAAarqC,KAGrB0N,UAAW9O,OAAO,yEAIfA,EAAUqO,KAAKjR,MAAf4C,QAoBJqO,KAAKlR,MAlBP8b,IAAAA,MACAhZ,IAAAA,UACAu8C,IAAAA,WACA5B,IAAAA,eACA3e,IAAAA,OACAh3B,IAAAA,SACAu7C,IAAAA,UACA5vC,IAAAA,OACAvP,IAAAA,QACAo/C,IAAAA,WAIAr7C,IAAAA,cAIGjI,KAHHujD,qBACAC,0MAKEz7C,YACAs7C,GAAa5vC,EAAQ,KACjBgwC,EAAazgD,GAAG,uCACIsgD,wBACDzgD,IAGrBmF,GAAM4K,eAAe9K,MAChBE,GAAM2T,SAASC,KAAK9T,KACpBE,GAAMgU,aAAajU,GAAQjF,UAAWE,GAAGygD,EAAY17C,EAAK/H,MAAM8C,gBAGrEkF,qBAAUlF,UAAW2gD,EAAYx7C,cAAeA,aAQpDD,mCACO,UACDhI,aACOgD,GAAG,6BACO87B,oBACAukB,mBACDxgD,GACjBC,WACM2Q,GAAUvP,eACLgN,KAAK2vC,+BACL3vC,KAAKogB,qDAIV+tB,YACIr8C,GAAG,sCACWH,GACtB46C,iBAxJqB3rC,iBAAbsxC,GAqEZxhC,0BACO,WACF5Z,wCC5Ed,oBACemK,GAAU0C,sBACR1C,GAAU0C,0BACN1C,GAAU0C,sBACd1C,GAAUuM,WAClBvM,GAAUuM,oBACDvM,GAAUuM,KAAKH,uBAClBpM,GAAUuM,KAAKH,wBACdpM,GAAU4M,QAAQ5M,GAAUuM,MAAMH,0BAChCpM,GAAUwM,KAAKJ,0BACfpM,GAAUwM,KAAKJ,6BACZpM,GAAUwM,KAAKJ,kBAC1BpM,GAAUC,WAChBD,GAAUE,OACVF,GAAUG,kBAEFH,GAAUG,2BACCH,GAAUG,OAAOiM,iCACfpM,GAAUG,OAAOiM,uBAC3BpM,GAAUuM,KAAKH,uBACfpM,GAAUuM,KAAKH,YCJTmlC,0BAoSP1jD,+FAGJgzC,EAAOhzC,EAAM2jD,6BACd1jD,eACK,iBACOD,EAAM4jD,oBAAwBhkD,cAChCsiB,EAAK2hC,aAAa7Q,gBACjBA,KAGX8Q,SAAW,IACXC,UAAW,uEAuBZ7yC,KAAKlR,MAlBPgkD,IAAAA,YACAC,IAAAA,cACAC,IAAAA,kBACAC,IAAAA,MACAC,IAAAA,OACAC,IAAAA,eACAC,IAAAA,oBACAC,IAAAA,sBACAC,IAAAA,YACAC,IAAAA,YAGAC,IAAAA,oBACAC,IAAAA,qBACAC,IAAAA,sBACAC,IAAAA,uBACAC,IAAAA,0BACAC,IAAAA,8CAIal9C,EAAkB88C,EAAsBD,EAAqBV,iBAC3Dn8C,EAAkBg9C,EAAwBD,EAAuBX,qBAC7Dp8C,EAAkBk9C,EAA4BD,EAA2BZ,iBAC7EhzC,KAAKjR,MAAM2jD,kCAEb1yC,KAAKjR,MAAM+kD,yBACV9zC,KAAKjR,MAAMglD,+BACN/zC,KAAKg0C,kCACRh0C,KAAKi0C,+BACLj0C,KAAKk0C,kCAERhB,2JAUVN,SAAW,OACXC,UAAW,uCAGL/Q,OACPqS,EAAsB,IAAhBrS,EAAK1yC,gBACVqU,KAAK,mBACH2wC,OACG,IAGAD,IAGHA,2CAwGHn0C,KAAKlR,MAxCP0I,IAAAA,MACA5F,IAAAA,UACAyiD,IAAAA,WACAC,IAAAA,eACAC,IAAAA,kBACAC,IAAAA,sBACAC,IAAAA,wBACAC,IAAAA,4BACA99C,IAAAA,SACAq8C,IAAAA,MACA0B,IAAAA,WACArB,IAAAA,YACAC,IAAAA,YACAqB,IAAAA,cACAC,IAAAA,YACAC,IAAAA,WACAC,IAAAA,aACAC,IAAAA,aACApd,IAAAA,UAqBG9oC,KAnBH4jD,gBACAM,oBACAF,cACAC,gBACAN,sBACAS,SACA+B,cACA9B,iBACAC,sBACAC,wBAGAG,sBACAC,uBACAC,wBACAC,yBACAC,4BACAC,gpBAKIv0C,EACJxI,+BACMhI,OACCkR,KAAKk1C,gBACHP,EAAaN,EAAa78C,YACtB1F,GAAG,2CACYmhD,8BACKrb,QAC5BhmC,GAAa+iD,GAAc/iD,QAC3B0iD,EAAiBK,GAAcL,gBAOjCK,SACIr1C,MAGL4qC,EAAU5qC,KACVg0C,GAAeC,EAAa,KAC1Bv7C,EAAS68C,EACTA,IACEvB,OACQyB,GAGRxB,OACQyB,QAIVG,EAAY7B,EACZ8B,EAAY7B,EACa,kBAAlBqB,KACGO,GAAaP,IACbQ,GAAaR,MAEbO,SAA8C,IAAzBP,EAAcS,QAA0BT,EAAcS,UAC3ED,SAA8C,IAAzBR,EAAcU,QAA0BV,EAAcU,WAIvFx+C,8BACSy9C,YACIziD,GAAG,uEAC4BwhD,yCACAC,GACvCiB,sCAGQx8C,UAAWy8C,aACT3iD,GAAG,qDACS8iD,2BACKO,8BACGC,GAC5BV,eAST59C,kCACW/F,MAAO+jD,GAAet9C,aACpB1F,GAAG,oDACYwhD,GAAeC,GACtC3hD,cA7hB4BgP,iBAAlB4xC,GAmRZ9hC,gCACc5Z,uFAEP,kBACI,sBACK,wCACE,kCACV,eACA,iBACE,eACD,gBACA,cACH,GA/RM07C,GAkSZvjB,kBAAoBjuB,qCA8E3Bk0C,UAAY,SAAC51C,KACNi2C,OAASj2C,QAGhB20C,gBAAkB,SAAC1yC,KACZd,SAAS,SAAC1R,EAAOD,OACdilD,EAAehlD,EAAMglD,aAAan4C,QAGlC45C,EAAWtiC,EAAK2/B,UAAY/jD,EAAM2jD,oBAAoBlxC,KAAU,WACzDmf,OAAOnf,EAAO,EAAGi0C,IACrBzB,eAAcD,YAAa5gC,EAAKy/B,aAAaoB,YAI1DG,gBAAkB,SAAC3yC,KACZd,SAAS,SAAC1R,OAIPglD,EAAehlD,EAAMglD,aAAan4C,eAGpC9E,GAAM2+C,SAAW3+C,GAAM2+C,QAAQ9hD,MAAM,WAC1B+sB,OAAOnf,EAAO,MAEdmf,OAAOnf,EAAQ2R,EAAK0/B,SAAU,KACtCA,UAAY,IAEVmB,eAAcD,YAAa5gC,EAAKy/B,aAAaoB,YAI1DC,mBAAqB,SAAC0B,EAAKL,EAAQtiD,OAC7BghD,SACAD,EAAc5gC,EAAKnkB,MAAM+kD,YACzB6B,EAAgB,EACdz5C,EAAIgX,EAAKqiC,QAAUriC,EAAKqiC,OAAOxhD,cAAc,oBAAsB2hD,EAAM,EAAIA,EAC3EtB,EAAYrhD,EAAEW,OAAd0gD,QACJiB,KACaniC,EAAKnkB,MAAMglD,aAAa7xC,IAAI,kBAAMkyC,MACnCA,IACGA,EAAcL,EAAa3kD,OAAjB,OAEZ8jB,EAAKnkB,MAAMglD,aAAan4C,SAC1BM,IAAM63C,EAAa73C,QAChB63C,EAAa1kD,OAAO,mBAAKmH,IAAGpH,UACZ2kD,EAAa3kD,QAG3C8jB,EAAKpkB,MAAMmmD,eACRnmD,MAAMmmD,YAAYS,EAAKtB,EAASuB,EAAe5iD,OAGhD2/C,EAAgBx/B,EAAKpkB,MAAM4jD,gBAAkBoB,GAAe6B,EAAgB,IAE7El1C,UAAWszC,eAAcD,cAAapB,6BCvb3B1xC,IAAcq0C,OAAQp0C,GAAUuM,OCU/BooC,+LAiCZ51C,KAAK/P,iBACA,2CAKgC+P,KAAKlR,MAAvC8C,IAAAA,UAAWgF,IAAAA,SAAa9H,iCACxBglD,EAAgB9zC,KAAK/P,QAArB6jD,YACFuB,EAASv+C,GAAM2T,SAASC,KAAK9T,GAC7B4+C,OAA4C,IAA1BH,EAAOvmD,MAAM0mD,SACjC1B,EACAuB,EAAOvmD,MAAM0mD,SAEXE,EAAM5+C,GAAMgU,aAAauqC,GAAUG,oBAGvC1+C,+BAAWhI,GAAO8C,UAAWE,GAAG,kBAAmBF,eAjDhBoiB,aAApB4hC,GACZ50C,aAAeA,GADH40C,GAEZ3mB,kBAAoB4mB,OCLRC,+KAwByB91C,KAAKlR,MAAvC8H,IAAAA,SAAUhF,IAAAA,UAAc9C,iCACxBilD,EAAiB/zC,KAAK/P,QAAtB8jD,aAEFjS,EAAOlrC,EAAW6T,WAASvI,IAAIuI,WAASuS,QAAQpmB,GAAW,SAAC8+C,EAAKx5C,OAC/D65C,OAA6C,IAAvBL,EAAI5mD,MAAM0mD,gBAC/B1+C,GAAMgU,aAAa4qC,YACdK,EAAehC,EAAa73C,GAAKw5C,EAAI5mD,MAAM0mD,aAEpD,YAGH1+C,+BAAWhI,GAAO8C,UAAWE,GAAG,gBAAiBF,eAnChBoiB,aAAlB8hC,GAqBZ90C,aAAeA,GC3BxB,IAAMg1C,GAAkB/mD,QACnB4mD,UACI50C,GAAUC,WACfD,GAAUE,OACVF,GAAUG,YAEV,WCHE60C,IAAyB,SAQVC,+KAYwDl2C,KAAKlR,MAAtEqC,IAAAA,SAAUijD,IAAAA,QAASxiD,IAAAA,UAAWwtB,IAAAA,qBAAyBtwB,yEAE7DgI,iBAACq/C,SACKrnD,QACC,0BACSslD,WACJjjD,uBACYiuB,GAAwB62B,yBACxB,iCACXnkD,GAAG,+CACiBX,wBACNijD,0BACEA,GACxBxiD,aAzB8BgP,iBCRpBw1C,+KAqBbp2C,KAAKlR,MARPqC,IAAAA,SACAijD,IAAAA,QACAxiD,IAAAA,UACA4vB,IAAAA,YACApC,IAAAA,qBACci3B,IAAd,cACmBC,IAAnB,mBACGxnD,8EAFH,aACA,2BAIAgI,6BACMhI,aACOgD,GAAG,wCACUX,8BACOA,wBACNijD,0BACEA,GACxBxiD,sBAEFskD,aACW/kD,UACDijD,UACAtlD,EAAMkE,oBACFwuB,uBACSpC,eACVi3B,oBACKC,YAvCc11C,iBC4BpB21C,0BAyMPznD,8EACJA,aAkBR0nD,UAAY,SAACC,KACNC,OAASD,KAGhBE,YAAc,SAACC,KACRC,SAAWD,KAGlB/d,cAAgB,SAACvD,KACV3W,WAAa2W,KAGpBwhB,SAAW,iBACoC9lC,EAAKliB,MAA1CgkD,IAAAA,YAAaC,IAAAA,cAAe1gD,IAAAA,KAC9B+hD,EAAUvlD,EAASmiB,EAAKliB,MAAOkiB,EAAKjiB,MAAO,cAC7C+jD,GAAeC,SACVqB,EAAUtB,EAAcC,MAG3B19B,GAAY++B,EAAU,GAAK,gBAAcl1C,EAAgB7M,UACzD0E,EAAgBia,EAAKliB,MAASumB,eAC9Bze,EAAWoa,EAAKliB,MAASumB,iBAE3Bte,GAAiBH,SACZE,qBAAUC,cAAeA,EAAevF,mBAG3CqF,EAAOma,EAAKliB,MAAMumB,UACjBxe,EAAOC,GAAMgU,aAAajU,GAAQrF,SAAS,IAAU,QAG9D6qB,eAAiB,SAACtpB,GACZie,EAAKliB,MAAMwtB,aACRxtB,MAAMwtB,UAAUvpB,IAGXA,EAAEI,OAASJ,EAAEK,WACbE,MACLojD,OAAO1iD,WAIhBuuC,cAAgB,SAACxvC,SACYie,EAAKliB,MAAxBuD,IAAAA,KAAMmwC,IAAAA,SACR4R,GAAWvlD,EAASmiB,EAAKliB,MAAOkiB,EAAKjiB,MAAO,WAC9CyzC,KACgB,UAATnwC,EAAmBU,EAAEW,OAAO6H,MAAQ64C,EAASrhD,QAGtB,IAAvBie,EAAKliB,MAAMslD,WACf3zC,UAAW2zC,eAlEbrlD,cACwB,IAAlBD,EAAMslD,YACVrlD,MAAMqlD,UAAYtlD,EAAMioD,4EA6G3B/2C,KAAKlR,MAvCPoR,IAAAA,GACA1I,IAAAA,MACA5F,IAAAA,UACAi9B,IAAAA,OACAx8B,IAAAA,KACAgC,IAAAA,KACAkH,IAAAA,MACApK,IAAAA,SACA6lD,IAAAA,YACAn6B,IAAAA,SACA2E,IAAAA,YACApC,IAAAA,qBACci3B,IAAd,cACmBC,IAAnB,mBACoBW,IAApB,oBAKAjI,KAHApkC,QACAwpC,UACA5R,WACAwM,SAmBGlgD,KAlBHooD,sBACAC,wBACAC,mBACAC,qBACAC,qBAGAxE,cACAC,gBACAwE,2BACAC,4BACAC,6BACAC,8BACAC,8BACAC,+BACAC,gCACAC,sKAxBA,aACA,kBACA,sbA2BI1D,EAAUvlD,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,WAC3CgpD,EAAoB,WAAT1lD,EACX2lD,EAAUh4C,KAAKlR,MAAM8b,OAAY1K,WACjC0K,EAAQ5K,KAAKlR,MAAM8b,OAAS9T,yBAAMoJ,GAAI83C,QAAelpD,MAAM8b,OAE7DgsC,kBACAmB,EAEAjhD,iBAACs/C,aACWjlD,UACDijD,eACGiC,oBACKC,GAAkB0B,IAKrClhD,iCACe0qB,uBACSpC,OAChB/sB,YACKP,GAAG,kDAAmDd,oBAExDojD,YACIA,oBAECA,eACFiC,oBACKC,GAAkB0B,qBACjBf,WACRp6B,WACA1rB,UAGJ2lD,YAMVhgD,6BACMhI,SACG0I,YACI1F,GAAG,2EAC8B+8B,wBACnBkpB,GACtBnmD,aACQoO,KAAKqc,+CAGTrc,KAAKw2C,aACNt2C,OACE63C,EAAW,WAAa1lD,UACrB+hD,WACCp0C,KAAKuiC,uBACLpxC,YACA,kCACJkD,QACCkH,uDAIE2E,YACEpO,GAAG,mDACUX,GACrBH,GAAcG,WAAUxB,MAAOwB,SAElByZ,KAEdosC,GAAepsC,2CAzKhB/b,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,kBAzNE6R,iBAAzB21C,GAkMZ7lC,kCACgB5Z,4DACEA,qEACLA,oEACEA,wDClOHmhD,sNA6BnBC,IAAM,OACNC,SAAU,IAEVC,aAAe,SAACC,MACVA,EAAI,KACAhD,EAASh2C,EAAUg5C,GAAItkD,cAAc,SACrCwN,EAAQ82C,EAAGl/C,WAAWm/C,UAAYjD,EAAS,EAAI,GAEZ,UAArCgD,EAAGl/C,WAAWA,WAAW1F,WACtBxD,QAAQsoD,eAAeh3C,KAEzB22C,IAAMG,IACNF,QAAU9C,OACV,GAAIrkC,EAAKknC,IAAK,KACb32C,EAAQyP,EAAKknC,IAAI/+C,WAAWm/C,WAC7BroD,QAAQuoD,eAAej3C,GAASyP,EAAKmnC,QAAU,EAAI,MACnDD,IAAM,OACNC,SAAU,0EAKoBn4C,KAAKlR,MAAlCslD,IAAAA,QAAS7yC,IAAAA,MAAUzS,8BAYvBkR,KAAK/P,QAVP6iD,IAAAA,YACAC,IAAAA,cACAC,IAAAA,kBACAN,IAAAA,cACA2C,IAAAA,OACAC,IAAAA,OACA50C,IAAAA,MACA+3C,IAAAA,SACArF,IAAAA,oBACAC,IAAAA,sBAGIqF,EAAOrD,EAAS,KAAO,KACzBzqC,WACAyqC,EACMjC,EACkC,mBAA1BC,EACRA,EAAsB9xC,GAEtB8xC,EAAsBnpC,QAAQ,WAAY3I,OAGhD2oC,EACFpzC,iBAACy/C,SACKznD,MACA4R,OACK+3C,mBACJ,mBACIrE,sBACYtB,wBACEuC,GAAU3C,EAAgBM,EAAoBD,eACzDnoC,KAGV0oC,EAAc+B,GAAUr1C,KAAK/P,QAAQqjD,YACrCC,EAAc+B,GAAUt1C,KAAK/P,QAAQsjD,mBAEvCD,MAEAx8C,kCACahF,GAAG,2DACsBwhD,mCACAC,QAG7BzoC,aAAao/B,aACPp4C,gCACoBujD,8BACAC,QASrCx+C,8BACahF,GAAG,8CACcwhD,UAErB+B,EAAS,WAAQ3mD,MACnBsR,KAAKo4C,wBAnHyBpkC,aAAtBikC,GAMZj3C,oBACEC,GAAUC,WACfD,GAAUE,OACVF,GAAUG,SACTiM,oBACOpM,GAAUG,OAAOiM,yBACZpM,GAAUuM,iBACZvM,GAAU0C,sBACR1C,GAAU0C,0BACN1C,GAAU0C,4BACR1C,GAAUG,OAAOiM,iCACfpM,GAAUC,WAC/BD,GAAUwM,KACVxM,GAAUG,SACTiM,0BACapM,GAAUwM,KAAKJ,0BACfpM,GAAUwM,KAAKJ,kBACvBpM,GAAUuM,YACVvM,GAAUuM,iBACLvM,GAAUuM,KAAKH,uBACfpM,GAAUuM,KAAKH,gBClBXsrC,0BAiEP7pD,EAAOmB,8EACXnB,EAAOmB,aAyBfitC,iBAAmB,SAACnqC,MACdie,EAAKliB,MAAMquC,eACRruC,MAAMquC,YAAYpqC,IAGrBie,EAAK/gB,QAAQolD,gBAIb3hD,EAASX,EAAEW,OACRA,GAAUA,EAAOyF,YAAY,IAC9BzF,EAAO0E,WAAa4Y,EAAK4nC,kBAAkBllD,EAAO0E,yBAC/CqI,UAAW9O,OAAO,MAIhB+B,EAAOyF,aAGbsH,UAAW9O,OAAO,QAGzByuB,kBAAoB,SAACrtB,GACfie,EAAKliB,MAAMsuC,gBACRtuC,MAAMsuC,aAAarqC,GAGtBie,EAAK/gB,QAAQolD,UAIZ50C,UAAW9O,OAAO,OAGzBknD,qBAAuB,SAACzE,EAASrhD,OACvBulD,EAAatnC,EAAK8nC,KAAlBR,SACJtnC,EAAKliB,MAAMiqD,mBACRjqD,MAAMiqD,gBAAgBT,EAAUlE,EAASrhD,KAG3C9C,QAAQ+oD,kBAAkBV,EAAUtnC,EAAK/gB,QAAQolD,OAAQtiD,MAGhEkmD,QAAU,SAACvD,KACJoD,KAAOpD,KAnEP3mD,OAAU4C,OAAO,wEAISqO,KAAK/P,QAA5BijD,IAAAA,OAAWjjD,mBACbiQ,EAAQgzC,OAAUlzC,KAAK84C,KAAO94C,KAAK84C,KAAKR,SAAW,mBAEpDroD,SACIA,EAAQolD,OAAYnC,gBAAsBhzC,8CAWnC9H,UACTA,EAAUC,SAAS,kBAAoBD,EAAUC,SAAS,gEA8D7D2H,KAAKlR,MAVP8C,IAAAA,UACAgF,IAAAA,SACA4+C,IAAAA,SACA0D,IAAAA,WAMGpqD,KAJHiqD,kBAEAI,kGAKMxnD,EAAUqO,KAAKjR,MAAf4C,MAEJynD,eACsB,IAAfF,EAA6BA,GAAel5C,KAAK/P,QAAQgjD,OAASjzC,KAAK/P,QAAQkjD,oBAEtFr8C,iBAACmhD,QACK,mBACKzC,WACCx1C,KAAK64C,2BACR74C,KAAK84C,KAAO94C,KAAK84C,KAAKR,SAAW,YAKxClpD,EAASqb,WAASggC,MAAM7zC,GAAY,EACpC2J,EAAUkK,WAASvI,IAAIuI,WAASuS,QAAQpmB,GAAW,SAACyiD,EAAKn9C,OACzDo9C,EAAWD,EAAIvqD,MAAMwqD,qBACD,IAAbA,MACEp9C,IAAM9M,QAAiBV,GAG7Boc,eAAauuC,aACPn9C,GAAKk9C,EAAW,EAAI,UACvBvqD,EAASwqD,EAAIvqD,MAAOokB,EAAKjjB,QAAS,gCAM5C6G,4BACMhI,OACCkR,KAAKi5C,kBACCnnD,GAAG,eAAgBF,yBACLD,0BACEqO,KAAK/P,QAAQolD,QAAUG,gBAErCx1C,KAAKk9B,8BACJl9B,KAAKogB,gCA7LWpM,aAAjB2kC,GA8DZ33C,aAAe60C,GA9DH8C,GA+DZ1pB,kBAAoB+mB,GCjE7B,IAAMuD,kBAEK,gBAQLC,+KAkKEx5C,KAAKlR,MAvBP8C,IAAAA,UACA6nD,IAAAA,WACAC,IAAAA,eACAC,IAAAA,QACAtE,IAAAA,OACAz+C,IAAAA,SACAgjD,IAAAA,OACAC,IAAAA,SACA7K,IAAAA,QACA8K,IAAAA,mBACAR,IAAAA,SACAS,IAAAA,KACAC,IAAAA,eAOAC,KALAhH,QACAiH,QACAp6C,YAGAm6C,kBACAE,IAAAA,kBAEGrrD,2OAGCsrD,EAA6B,kBAAXR,EAClB3G,EAAQpkD,EAASmR,KAAKlR,MAAOkR,KAAK/P,QAAS,SAC3C+jB,EAAYqhC,EAAS,KAAO,KAC5B6E,EAAQrrD,EAASmR,KAAKlR,MAAOyqD,GAAWlE,EAAS,SAAW,QAAS,SAEvEgF,EAAoBzjD,EACpB0jD,YACAF,EAAU,GACDR,EAAS,YAAc,iBAC5B/iD,EAAOC,GAAM2T,SAASC,KAAK/T,EAAkBwjD,EAAmBF,EAAkBJ,MAEtF/iD,qBAAe8T,MAAOhU,EAAUw3C,WAAY4L,MACnClvC,aAAajU,GAAQjF,UAAWG,GAAqBC,SAAU4nD,GAAU/iD,EAAK/H,MAAM8C,kBAK3F0hD,EAAc+B,GAAUr1C,KAAK/P,QAAQqjD,YACrCC,EAAcvzC,KAAK/P,QAAQqlD,QAAUt1C,KAAK/P,QAAQsjD,YAClD30C,EAAQ00C,GAAeC,EACvBgH,EAAiBvpD,GAAcrB,MAAO0lD,EAAQhkD,KAAMgkD,gCAC3BrG,kCACI8K,IAG7BU,EAAmB1oD,iCACIujD,2BACDA,IAAWpC,4BACVoC,GAAUpC,8BACRqG,IAAaS,IAASD,0BAC1BC,gDACsBK,GAC9CG,GAAkB37C,GAClBhN,UAECgN,MAEA9H,kCACahF,GAAG,2DACsBwhD,mCACAC,mCAI3BkG,YACI3nD,GAAGyoD,EAAgBC,EAAkB,qEACRb,GACrCD,WAUT5iD,mCACawjD,GACPxrD,SACGorD,YACIpoD,GAAG,4CACc8M,kBACT+6C,IAAY/6C,kBACZ+6C,IAAY/6C,GAC5B47C,MAEDlH,IAAgBC,GAAevE,YAvOfpuC,iBAApB44C,GA2HG9oC,sBACG,YACE,WACA5Z,yDACM,GA/Hd0iD,GAkIGx4C,oBACEC,GAAUuM,YACTvM,GAAUuM,iBACLvM,GAAUuM,iBACVvM,GAAUuM,MAwG3B,OAAe+iC,GAAciJ,ICzPRiB,sNAmCnB1rD,OAAUupB,WAAY,QActB8E,SAAW,OACXs9B,oBAAsB,iBACuB1pC,EAAKliB,MAAxC6rD,IAAAA,eAAgBjnC,IAAAA,eACpB1C,EAAKoM,uBACMpM,EAAKoM,YAGfA,SAAWxI,WAAW,aACpBwI,SAAWxI,WAAW,aACpBwI,SAAW,OACX3c,UAAW6X,WAAY,QAC3BqiC,KAEEl6C,UAAW6X,WAAetH,EAAKjiB,MAAMupB,eAAc5E,qBACvDiK,MAEEld,UAAW6X,WAAe5E,+FA5BPhB,GACpB1S,KAAKlR,MAAMyM,QAAUmX,EAAUnX,YAC5Bm/C,qEAKH16C,KAAKod,uBACMpd,KAAKod,iDAiDhBpd,KAAKlR,MAxBPoR,IAAAA,GACAtO,IAAAA,UACAyC,IAAAA,KACAkH,IAAAA,MACAqP,IAAAA,MACAk6B,IAAAA,YACA7tB,IAAAA,OACA2jC,IAAAA,YACAxpD,IAAAA,MACAD,IAAAA,SACA6yC,IAAAA,SACAS,IAAAA,QACAhI,IAAAA,MACAqG,IAAAA,cACA+X,IAAAA,aAGAvO,IAAAA,aACAv1C,IAAAA,cAKGjI,KAHH4kB,iBACAinC,qPAKMriC,EAAetY,KAAKjR,MAApBupB,WAEJ3W,SACC86B,GAAUgI,MAEX3tC,iBAAC+rC,QACK,sBACI5rB,QACD7lB,gBACQ0xC,YACL,kCAKZgY,EAAeF,EACdA,GAA+B,IAAhBA,QACAhwC,GAASqM,IAAW6tB,GAAgB,QAGlDiW,IAAgBH,GAA+B,IAAhBA,EAEjC/jD,EAAOgkD,SACP9jD,GAAiBu1C,OACZx1C,qBAAUC,cAAeA,SAE3BD,GAAMgU,aAAajU,GAAQ1F,aAGhC2F,0BACMhI,MACGoR,iBACF,mBACK/O,YACC66C,UACHvP,GAASxlB,EAAS,EAAI,eAChBwlB,YACH3qC,GAAG,kBAAmBd,oBAExB+pD,GAAejW,OAChBiW,IACJnpD,gCAGKkpD,iBACSxiC,YACLxmB,GAAG,0CACc2qC,IAAU7xB,mCACFA,2BACR65B,IAAYhI,iCACNA,yBACRA,wCAOtB,aACC,YACDv8B,OACE7L,QACCkH,WACGyoC,WACA7yC,YAhK0ByP,iBAAzB65C,GA8BZ/pC,6BACW,yBACA,SCjCCsqC,+KAiDbh7C,KAAKlR,MAnBPoR,IAAAA,GACA1I,IAAAA,MACA5F,IAAAA,UACAkyC,IAAAA,WACAC,IAAAA,eACAC,IAAAA,SACA7yC,IAAAA,SACA8lB,IAAAA,OACA7lB,IAAAA,MACAsvC,IAAAA,UACAC,IAAAA,SACAM,IAAAA,YACA5K,IAAAA,QACAukB,IAAAA,YAKG9rD,KAHH8b,QACAk6B,wMAK2B9kC,KAAKlR,MAA5B8b,IAAAA,MAAOk6B,IAAAA,mBACTd,IACEp5B,MACM9M,EAAU8M,EAAO,MAGvBk6B,IAAgBl6B,MACJ9M,EAAUgnC,EAAa,OAKvChuC,wBAAKU,MAAOA,EAAO5F,UAAWE,GAAG,0BAA2BF,qBACzDwuC,UACQx1B,UACE1K,SACD+W,GAAUof,QACXjlC,WACGwM,EAASg9C,IAAgB3jC,GAAUof,WACnCllC,qBAEXspD,SACK3rD,MACAoR,QACG4jC,YACIC,QACJn5B,cACMk6B,cACA8V,SACL3jC,QACD7lB,WACGD,sBAEXsvC,WACSxpB,GAAUof,QACXjlC,YACIsvC,WACDC,cACGM,YACH,aACC,YA3F0BrgC,iBCazCq6C,GAAc,wBAECC,0BAuiBPpsD,8EACJA,wBAEDC,iBACI,UACC,GACLiiB,EAAKmqC,WAAWrsD,GAASyM,MAAOzM,EAAM2zC,mCAEjC,cACDzxB,EAAKoqC,uBACTH,GAAc,YAEV,gBACK,WACLnsD,EAAM2zC,qBACJ3zC,EAAM+uC,mBAGZwd,YACAC,YAAc,OACdC,YAAcvqC,EAAKwqC,eAAe1sD,yEAIlC6vB,WAAate,cAAYL,WACzB2hC,OAAS3hC,KAAK2e,WAAW5qB,cAAc,sEAGpB2e,SACqB1S,KAAKlR,MAA1C2sD,IAAAA,UAAWC,IAAAA,YAAWzU,aACXv0B,EAAUu0B,YAAcwU,IAAc/oC,EAAU+oC,WAAaC,IAAchpC,EAAUgpC,iBACjGH,YAAcv7C,KAAKw7C,eAAe9oC,IAGrC1S,KAAKlR,MAAMyM,QAAUmX,EAAUnX,OAASyE,KAAKlR,MAAM6sD,YAAcjpC,EAAUipC,gBACxEl7C,SAAST,KAAKm7C,WAAWzoC,EAAW1S,KAAKjR,6CAcrCuS,EAAMm6C,EAAWC,OAAWE,0DACjCvpD,WAAciP,iBAAAA,MACP,WAATjP,GAA8B,WAATA,SAChBiP,EACF,GAAa,WAATjP,EAAmB,KACtBwpD,EAAOD,EAAcH,EAAYC,EACjCI,EAAOF,EAAcF,EAAYD,cACV,IAAfn6C,EAAKu6C,GAAwBv6C,EAAKu6C,GAAQv6C,EAAKw6C,SAGxD,iDAGQL,IAAAA,UAAWC,IAAAA,UAAWx3C,IAAAA,UAAW+iC,IAAAA,WAC1C93C,GAAQssD,EAAWC,EAAWx3C,UAChC+iC,EACK93C,EAAKipB,OAAO1c,MAAM0e,QAAQ6sB,GAAcA,GAAcA,IAGxD93C,yCA2aH6Q,KAAKlR,MA9DPoR,IAAAA,GACA1I,IAAAA,MACA5F,IAAAA,UACA+pC,IAAAA,UACAC,IAAAA,cACAmgB,IAAAA,YACAC,IAAAA,gBACAL,IAAAA,UACAllB,IAAAA,OACAgB,IAAAA,YACAv9B,IAAAA,QACAJ,IAAAA,SACAs+B,IAAAA,WACAD,IAAAA,WACA2D,IAAAA,WACAC,IAAAA,WACAC,IAAAA,qBACArE,IAAAA,MACApB,IAAAA,SACAD,IAAAA,UACAsB,IAAAA,UACAI,IAAAA,mBACAC,IAAAA,mBACA6O,IAAAA,eACAvO,IAAAA,QACAC,IAAAA,SACAC,IAAAA,UACAZ,IAAAA,kBACAC,IAAAA,mBACAmkB,IAAAA,mBACAC,IAAAA,2BACAC,IAAAA,2BACAjgB,IAAAA,OA6BGptC,KA3BHsC,QACAy1C,SACAxQ,UACAolB,YACAC,YACAx3C,YACAk4C,eACA3Z,eACA5E,iBACA7qC,UACAspB,YACA2wB,qBACAhG,aACAoV,kBACAC,0BAGA1e,cACAD,gBACA4e,eACAC,cACAC,YACAC,gBACAzX,gBACA0X,eACA3X,m1BAK8BhlC,KAAKlR,MAA/B+3C,IAAAA,OAAQ1K,IAAAA,OAAQ/qC,IAAAA,QACdA,GAAS4O,KAAKjR,MAAMqC,MACvBy1C,MACS3mC,WAGTi8B,MACS0K,oBAG6B7mC,KAAKjR,MAAxC8sC,IAAAA,UAAW5kB,IAAAA,OAAQ2jC,IAAAA,YACrBne,EAAQ3iC,IAAaohD,EAAYr6C,UAAUua,MAC3Cib,OAA4B,IAAX6F,EAAyBA,EAASrtC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,WACpFwM,EAAQ1M,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,SACzC6tD,OAAoC,IAAdtmB,EAA4BA,EAAYmG,EAE9D5hC,EACJ/D,iBAACkkD,SACKlsD,MACAoR,QACG67C,YACIC,UACF3lB,QACF96B,QACAkhC,QACArrC,SACC6lB,cACK2jC,UACJ56C,KAAKo2B,gBACLp2B,KAAKuf,oBACNvf,KAAK0c,sBAKf5lB,wBACM+vC,SACI1K,QACD3kC,YACI1F,GAAG,wBAAyBF,aAC5BiqC,YACAF,gBACIC,SACP/gC,UACCw7B,UACAr2B,KAAK+nC,iBACH/nC,KAAKqc,uBACPrc,KAAKoc,wBACF0qB,SACJrQ,cACKgB,UACJv9B,WACCJ,aACEs+B,aACAD,aACA2D,aACAC,uBACUC,YACX4gB,QACJjlB,WACGpB,YACCqB,UACFW,WACCC,YACCC,oBACQZ,qBACCC,qBACAE,qBACAC,iBACJgkB,yBACQC,yBACAC,KAEb3sD,OAAOwQ,KAAK68C,uDA5gBpBhuD,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,gBArlBH6R,iBAApBs6C,GACZp6C,kBAAoBq6B,GAAKr6B,kBADbo6C,GAEZn6C,gBAAkBo6B,GAAKp6B,gBAFXm6C,GAGZr6C,UAAYs6B,GAAKt6B,UAHLq6C,GAihBZxqC,wBAEAwqC,GAAYp6C,kBAAkB4Z,aAC9BwgC,GAAYn6C,gBAAgB+Z,iBAExBqgB,GAAKzqB,aAAaxW,iBACjBghD,GAAYr6C,UAAUma,mBACrB,kBACA,kBACA,wBACGlkB,0DACC,iCAED,mBACE,0BACS,mBACT,yBACA,wBACI,sBACA,qCA0EtBgmD,oBAAsB,SAACx7C,EAAM/F,EAAOkgD,EAAWC,OACvC79C,EAAIqV,EAAK6pC,aAAaz7C,EAAMm6C,EAAWC,GACvC9wC,EAAQsI,EAAK6pC,aAAaz7C,EAAMm6C,EAAWC,GAAW,UAErD79C,IAAMtC,GAASsC,IAAMrC,WAAWD,GAASqP,EAAQ,SAG1DuwC,WAAa,SAACrsD,EAAOC,OACf6rD,EAAc,GACdhO,GAAe,EACbrxC,EAAQ1M,EAASC,EAAOC,EAAO,YACjC6O,EAASrC,GAAQ,KACXogD,EAAoC7sD,EAApC6sD,UAAWF,EAAyB3sD,EAAzB2sD,UAAWC,EAAc5sD,EAAd4sD,YAEpBj4C,KAAK,SAACnC,EAAMC,OAEdy7C,EAAQp/C,IADAsV,EAAK4pC,oBAAoBx7C,EAAM/F,EAAOkgD,EAAWC,WAE3DsB,MACYz7C,GAGTy7C,WAIFpC,cAAahO,qBAGxBqQ,kBAAoB,SAAC17C,OACJ,IAAXA,OAIED,EAAO4R,EAAKmoC,OAAO95C,GACrBD,KACG0a,eAITkhC,aAAe,SAAC57C,GACTA,IAIDA,EAAKxS,MAAMmoB,WACRqkC,YAAcj7C,cAAYiB,KAC1B0a,QAEA9I,EAAKnkB,MAAM8sC,UAAUof,OACnBx6C,UAAWo7B,gBAAgB3oB,EAAKnkB,MAAM8sC,gBAAYof,GAAiB/nC,EAAKpkB,MAAMoR,4BAIlFm7C,OAAO33C,KAAKpC,UAGnB85C,sBAAwB,SAAC+B,MACP,OAAZA,GAGG,GAAKjqC,EAAKooC,YAAV,KAIDn/C,EAAOkE,cAAY88C,GACjBC,EAAclqC,EAAKooC,YAAnB8B,YACHxjD,UAAYwjD,EAnrBO,EAmrB2BA,EAAY,UARxD/B,gBAWTjlB,QAAU,SAACrjC,SAC4CmgB,EAAKpkB,MAAlDotC,IAAAA,OAAQ+Q,IAAAA,mBAAoBsP,IAAAA,aAC9BlmB,SAA8B,IAAX6F,EAAyBA,EAASrtC,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,aACxFwtD,GAAgBtP,KACjBsP,GAAgBtP,GAAoB5W,EAAStjC,OAG5ChE,cACkB,IAAXmtC,QAAwD,IAAvBhpB,EAAKpkB,MAAMunC,aAC3CA,YAGRtnC,KACG0R,SAAS1R,SAIlBg5C,OAAS,SAACh1C,GACJmgB,EAAKpkB,MAAMm+C,sBACRn+C,MAAMm+C,oBAAmB,EAAOl6C,GAGxB,YAAXA,EAAEV,MAAsB6gB,EAAKyuB,UAC1BA,OAAO3lB,YAGVjtB,SACAmkB,EAAKpkB,MAAMk1C,WAAan1C,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,cACjDqC,OAAO,SAGe,IAAvB8hB,EAAKpkB,MAAMunC,aACZtnC,OACFsnC,SAAU,GAGdtnC,KACG0R,SAAS1R,SAIlBqtB,aAAe,SAACrpB,GACVmgB,EAAKpkB,MAAMkE,WACRlE,MAAMkE,QAAQD,OAGbmpC,EAAWhpB,EAAKpkB,MAAhBotC,gBAC0B,IAAXA,EAAyBA,EAASrtC,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,aAC3EmkB,EAAKyL,mBACdnsB,EAAOO,EAAEW,OACNwf,EAAKyL,WAAWtmB,SAAS7F,IAAO,IACjCA,EAAK6qD,cAAsC,IAApB7qD,EAAK6qD,QAAQn9C,GAAoB,OACpC1N,EAAK6qD,QAAnBn9C,IAAAA,GAAI3E,IAAAA,oBACP+hD,YAAYhlD,SAAS4H,EAAI,IAAK3E,EAAOxI,KAIrCP,EAAK2G,kBAKlBmkD,YAAc,SAACC,EAAWvW,EAAWj0C,SACuCmgB,EAAKpkB,MAAvEk1C,IAAAA,SAAU2X,IAAAA,UAAWF,IAAAA,UAAWC,IAAAA,UAAWlZ,IAAAA,SAAUtiC,IAAAA,GAAI7L,IAAAA,KAC3DkH,EAAQ2X,EAAK6pC,aAAapB,EAAU4B,GAAY9B,EAAWC,GAC/C7sD,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,WACjCwM,GAASinC,KAChBjnC,EAAOgiD,EAAWxqD,GAAKmN,KAAI7L,OAAMkH,cAGtCxM,QACDmkB,EAAKioC,YAAa5/C,QAAOkgD,YAAWC,YAAWC,0BACzC3X,IAAazoC,GAAmB,IAAVA,SAGD,IAArB2X,EAAKpkB,MAAMyM,UACdA,MAAQA,KAGXkF,SAAS1R,SAGhBwwB,aAAe,SAACxsB,GACVmgB,EAAKpkB,MAAMi2C,WACRj2C,MAAMi2C,QAAQhyC,KAGhB0N,UAAWwW,QAAQ,UAG1ByF,YAAc,SAAC3pB,GACTmgB,EAAKpkB,MAAM6tB,UACR7tB,MAAM6tB,OAAO5pB,OAGd3B,EAAU8hB,EAAKnkB,MAAfqC,QACuB8hB,EAAKpkB,MAA1BotC,IAAAA,OAAQ8H,IAAAA,SACV3N,OAA4B,IAAX6F,EAAyBA,EAASrtC,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,WACpFwM,EAAQ1M,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,SAE3Ci1C,IAAa3N,OACN96B,KAGNkF,UAAWwW,QAAQ,EAAO7lB,gBAGjCirB,eAAiB,SAACtpB,SACcmgB,EAAKpkB,MAA3BotC,IAAAA,OAAQ5f,IAAAA,UACZA,KACQvpB,OAGNxD,EAAMwD,EAAEI,OAASJ,EAAEK,QACnBoqD,EAAKjuD,IAAQgrB,GACbkjC,EAAOluD,IAAQkrB,GACf4b,OAA4B,IAAX6F,EAAyBA,EAASrtC,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,cAEtFyuD,GAAMC,EAAM,MACZ7pD,kBAEGyiC,gBACED,QAAQrjC,KAIV2qD,cAAcF,OACd,CAAA,IAAKnnB,GAAWvjC,EAA4BC,EAAGmgB,EAAKkjB,SAAS,GAAM,UAEnE,GAAIC,I1Fz0BI,K0Fy0BQ9mC,GAAeA,IAAQmQ,WACxCwT,EAAKyuB,Q1F10BI,K0F00BMpyC,KACZoyC,OAAO3lB,eAGT+rB,OAAOh1C,KAGP4qD,oBAAoBpuD,EAAKwD,UAIlC2qD,cAAgB,SAACE,SACuB1qC,EAAKpkB,MAAnCgL,IAAAA,SAAUuiD,IAAAA,gBACVzP,EAAgB15B,EAAKnkB,MAArB69C,YAEFnQ,EAAQ3iC,IAAaohD,GAAYr6C,UAAUua,MAE3CyiC,EAASjgD,EADD/O,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,UAEzC+uD,QAA2C,IAApBzB,EAAkCA,EAAkB5f,IAAUohB,EAKrFE,EAAY7qC,EAAKmoC,OAAOjsD,QAAU0uD,EAAe,EAAI,QACtDF,GAAahR,GAAe,IAAQgR,GAAahR,GAAemR,QAI/DC,EAAYvnD,KAAK2H,KAAK,EAAG3H,KAAK0H,IAAI4/C,EAAWnR,GAAegR,GAAa,EAAI,KAC/EI,IAAcpR,MAIbqQ,kBAAkBe,GAAaF,EAAe,EAAI,MAClDr9C,UAAWmsC,YAAaoR,YAG/BL,oBAAsB,SAACpuD,EAAKwD,OACpBkrD,EAAWx0C,OAAO4C,aAAa9c,GAC/B2uD,EAAWD,GAAYA,EAAStqD,MAAM,kBACtCwqD,EAAWlgD,EAAU1O,E1Fr2BJ,GACA,Q0Fq2BlB0O,EAAU1O,E1Fx2BC,GACA,K0Fu2BoB4uD,GAAaD,OAI3CzxC,EAASyxC,EAAWD,EAAWx0C,OAAOla,GAAO4uD,E1F12B5B,GAFP,K0F82BZjrC,EAAKkrC,+BACMlrC,EAAKkrC,oBAGfA,iBAAmBxpC,WAAW,aAC5BwpC,iBAAmB,OAEnB39C,UAAW9M,MAAO,KAAM0qD,WAAY,QACxCnrC,EAAKpkB,MAAMwtD,2BAETgC,kBAAkB7xC,EAAQ1Z,UAGjCurD,kBAAoB,SAAC7xC,EAAQ1Z,SAC6CmgB,EAAKpkB,MAArE6sD,IAAAA,UAAWF,IAAAA,UAAWC,IAAAA,UAAWxf,IAAAA,OAAQsG,IAAAA,SAAUtiC,IAAAA,GAAI7L,IAAAA,KAE3DV,GAAS,EACP4qD,OAFiBrrC,EAAKnkB,MAApBsvD,YAEwB,IAAK5xC,GAASla,gBACpCkR,KAAK,SAACnC,EAAMC,MAChBD,GAAwB,qBAATA,iBAAAA,KAAqBA,EAAKnQ,gBACpC,MAGHyZ,EAAQnB,OAAOyJ,EAAK6pC,aAAaz7C,EAAMm6C,EAAWC,GAAW,WAC/D9wC,GAAoE,IAA3DA,EAAMrY,cAAc2X,QAAQ,MAAO,IAAI5a,QAAQivD,OAClDh9C,GAGH5N,GAAS,QAGZ5E,sBAEQwvD,OAGC,IAAX5qD,EAAc,KACV6qD,EAAa7C,EAAUhoD,QACvBinD,YAAc1nC,EAAK6pC,aAAayB,EAAY/C,EAAWC,GAAW,KAClE9O,YAAcj5C,OAEc,IAAXuoC,EAAyBA,EAASrtC,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,WAEpFA,EAAM4E,QAAUuf,EAAKnkB,MAAM4E,SACxBspD,kBAAkBluD,EAAM69C,iBAE1B,KACCrxC,EAAQ2X,EAAK6pC,aAAayB,EAAY/C,EAAWC,GAGnDngD,IAFc1M,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,UAExByzC,KAChBjnC,EAAO5H,EAAOZ,GAAKmN,KAAI7L,OAAMkH,eAGR,IAArB2X,EAAKpkB,MAAMyM,UACdA,MAAQA,MAKfkF,SAAS1R,SAGhB8tD,aAAe,SAAC3T,EAAO5nC,EAAMpF,MACd,OAAToF,SACK4nC,EACF,GAAIpyC,GAAM4K,eAAeJ,YACxBoC,KAAKpC,GACJ4nC,QAGgFh2B,EAAKpkB,MAAtFstD,IAAAA,aAAcl8C,IAAAA,GAAIu7C,IAAAA,UAAWv3C,IAAAA,UAAWw3C,IAAAA,UAAW5hD,IAAAA,SAAUuiD,IAAAA,gBAC/D5f,EAAQ3iC,IAAaohD,GAAYr6C,UAAUua,MAC3C7f,EAAQ1M,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,SAEzCi4C,EAAY9zB,EAAK6pC,aAAaz7C,EAAMm6C,EAAWC,GAC/Cj6C,EAAcyR,EAAK6pC,aAAaz7C,EAAMm6C,EAAWC,GAAW,GAE5DzkC,EAAS+vB,IAAczrC,GAASyrC,IAAcxrC,WAAWD,cAClB,IAApB8gD,EAAkCA,EAAkB5f,IAAUxlB,GACxE,KACPwnC,EAA6B,qBAATn9C,iBAAAA,IACpBxS,EAAQ2vD,EAAaxvD,EAAKqS,EAAM4R,EAAKqoC,gBACrCpqD,EAAWrC,EAAMqC,WAAY,IAC7BoM,IAAMpM,EAAW,KAAO+hB,EAAKgqC,eAC7Bh9C,GAAK+W,EAAY/W,oBAAsB,OACvC+W,OAASA,IACT4F,UAAY,IACZpb,YAAcA,IACdlS,IAAM+R,EAAK/R,KAAOy3C,IAClBp0C,KAAO,WACP,WAAazB,EAAW,KAAO+K,IAC/B,cAAgB/K,EAAW,KAAO61C,MAElC0X,EAAYD,GAAcn9C,EAAK4C,IAAek4C,EAC5B,mBAAbsC,UACFzyC,OAAOnd,EAAO4vD,SACZxiD,sEAWLwH,KAAK5M,iBAAC0K,GAAa1S,WAGpBo6C,ICt+BUyV,yLAwBRrJ,QAAQ,0CAIyBt1C,KAAKlR,MAAvC8C,IAAAA,UAAWgF,IAAAA,SAAa9H,wCAG9BgI,6BAAOlF,UAAWE,GAAG,kBAAmBF,IAAgB9C,aA/BrB8R,iBAApB+9C,GAmBZ1vB,0BACGhuB,GAAUuM,UCLDoxC,0BAuKP9vD,EAAOmB,8EACXnB,EAAOmB,mBAEP4uD,OAAuC,IAAf/vD,EAAMgwD,KAC9BC,OAAqD,IAAtBjwD,EAAMkwD,YACrCA,EAAcD,EAAwBjwD,EAAMkwD,YAAclwD,EAAMmwD,mBAChEH,EAAOD,EAAiB/vD,EAAMgwD,KAAOhwD,EAAMowD,qBAC5CnwD,cACK+vD,EAAO,GAAKE,qBACA,GAGjBH,MACE9vD,MAAM+vD,KAAOA,GAGfC,MACEhwD,MAAMiwD,YAAclwD,EAAMmwD,sBAG5B1J,OAAS,OACT7a,UAAW,yEAGQhoB,SACM1S,KAAKlR,MAA3BkwD,IAAAA,iBAAaF,OACRpsC,EAAUosC,MAAQE,IAAgBtsC,EAAUssC,YAAa,KAC9DG,EAAMtwD,EAAS6jB,EAAW1S,KAAKjR,MAAO,eACtCqwD,EAAIvwD,EAAS6jB,EAAW1S,KAAKjR,MAAO,aAErC0R,UAAW4+C,OAAQD,EAAI,GAAKD,4CA2FGn/C,KAAKjR,MAAnCuwD,IAAAA,mBAAoBD,IAAAA,QA8BxBr/C,KAAKlR,MA5BP8C,IAAAA,UACA2tD,IAAAA,iBACAC,IAAAA,qBACAC,IAAAA,sBACAC,IAAAA,0BACA5d,IAAAA,KACA6d,IAAAA,iBACAC,IAAAA,iBACAC,IAAAA,cACAC,IAAAA,cACAhZ,IAAAA,eAGAiZ,IAAAA,sBACAC,IAAAA,uBACAC,IAAAA,sBACAC,IAAAA,uBAWGpxD,KATHoR,KACAigD,cACAC,cACAC,eACArB,cACAF,OACAI,cACAD,8aAKM/L,EAAWlzC,KAAK/P,QAAhBijD,OACF8L,EAAcnwD,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,iBACdiR,KAAKlR,MAAtCoR,IAAAA,GAAIigD,IAAAA,YAAaC,IAAAA,YAClBlgD,MACKgzC,iBAGLiN,MACcjgD,oBAGdkgD,MACclgD,wBAGbogD,EAAgBjB,EAAQ,MAAK5oD,KAAK0H,IAAI2jC,EAAMud,EAAQL,UAAmBld,SAE3EhrC,0BAAiBhI,GAAO8C,UAAWE,GAAG,8BAA+BF,sBAClE2iC,IAAea,cAAWrzB,UAAU,KAAKmzB,SAAUl1B,KAAKugD,sCACxDhsB,IAAea,cAAWrzB,UAAU,KAAKrO,OAAQsM,KAAKu1C,OAAQrgB,SAAUl1B,KAAKugD,qEAG/DC,QAAQ,oCAEZxgD,KAAKygD,uBACA,mEACDhb,WAAY6Z,6BAEf1tD,UAAU,kDAGfspD,OACKh7C,YACO0/C,WACD1E,GAAYr6C,UAAUua,YACzBmkC,YACIC,aACCC,iBACI3tD,GAAG,8BAA+B4tD,SAC3CV,WACGh/C,KAAK0gD,+BACC5Z,6BAEZl1C,UAAU,kDACf49C,OACK4Q,kBAEKpgD,KAAK2gD,oBACM,IAAVtB,SACF1oD,EAAkBupD,EAAwBD,EAAuBH,sBAE1EtQ,OACK2Q,kBAEKngD,KAAK4gD,oBACJvB,EAAQL,GAAeld,SACzBnrC,EAAkBqpD,EAAwBD,EAAuBF,8BAOxEjuD,UAAU,kCA/XkBgP,iBAAxBg+C,GAqJZ59C,qBACGC,GAAUC,WAChBD,GAAUE,OACVF,GAAUG,SACTiM,uBACUpM,GAAUuM,MA1JNoxC,GA6JZluC,0BACQ,qBACO,oBACF,mCACC,GAAI,GAAI,GAAI,GAAI,GAAI,mBACxB5Z,+DACAA,gEACC,qCAqClB2pD,aAAe,SAACI,KACTC,UAAYD,IACZtL,OAASl2C,EAAUwhD,GAEpB3tC,EAAKqiC,QAAUriC,EAAKjjB,QAAQsjD,eACzBgC,OAAOr/C,iBAAiB,SAAUgd,EAAKqtC,0BAIhDQ,UAAY,cACN7tC,EAAKqiC,OAAQ,KACPhC,EAAgBrgC,EAAKjjB,QAArBsjD,cAC4BrgC,EAAKqiC,OAAjC76C,IAAAA,YAAaf,IAAAA,WAEjB2lD,EAAqB5kD,EAAcwY,EAAK4tC,UAAUpmD,YAClD64C,OACoB55C,KAGnB8G,6BACiBhK,KAAK2H,IAAI,GAAIkhD,YAKvCiB,mBAAqB,WACdrtC,EAAKwnB,gCACc,aACfA,UAAW,IACXqmB,gBAIJrmB,UAAW,QAGlBkmB,WAAa,iBACoB1tC,EAAKpkB,MAA5BgzC,IAAAA,KAAMue,IAAAA,aACNhB,EAAUnsC,EAAKnkB,MAAfswD,MACFL,EAAcnwD,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,eAC/C+vD,EAAOjwD,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,QAGxCqP,EAAM0jC,EAAQA,EAAOkd,EAErBgC,EAAWvqD,KAAK0H,IAAIkhD,EAAQL,EAAa5gD,GACzC6iD,EAAWnC,EAAO,IAEXkC,EAAUhC,EAAaiC,QACL,IAApB/tC,EAAKpkB,MAAMgwD,QACfr+C,UAAW4+C,MAAO2B,EAAUlC,KAAMmC,UAI3CN,WAAa,eACHtB,EAAUnsC,EAAKnkB,MAAfswD,MACFP,EAAOjwD,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,QACxCiwD,EAAcnwD,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,eAC/CiyD,EAAWvqD,KAAK2H,IAAI,EAAGihD,EAAQL,GAC/BiC,EAAWnC,EAAO,IAEnBhwD,MAAMuxD,aAAaW,EAAUhC,EAAaiC,QAChB,IAApB/tC,EAAKpkB,MAAMgwD,QACfr+C,UAAW4+C,MAAO2B,EAAUlC,KAAMmC,UAI3CP,gBAAkB,SAAC1B,KAGZlwD,MAAMuxD,aADM,EACiBrB,EAFrB,OAGTxb,cACkC,IAA3BtwB,EAAKpkB,MAAMkwD,iBACNA,qBAGe,IAApB9rC,EAAKpkB,MAAMgwD,UACRtb,OACF6b,MATK,GAYb7b,KACG/iC,SAAS+iC,KC1Sd0d,IAAmB,SAAU,WAAY,UAC5C1xD,OAAO,SAAC2xD,EAAax9C,UAAew9C,MAAex9C,sBAFtB,qFAWXy9C,sNA0FnBC,iBAAmB,kBACVnrD,iBAAiB,UAAW8a,EAAKqL,gBAAgB,MAG1DilC,kBAAoB,kBACXjrD,oBAAoB,UAAW2a,EAAKqL,gBAAgB,MAG7DklC,qBAAuB,cAChBvwC,EAAK2N,gBAIF6iC,EAAiBxwC,EAAKliB,MAAtB0yD,aAEFC,EAAUD,EACZzxD,SAAS4lC,eAAe6rB,IAAiBxwC,EAAK2N,WAAW5qB,cAAcytD,GACvExwC,EAAK0wC,YAAY,GAEjBC,UACCF,GAAWD,MACD,mIAC6DA,WAC5D,gFAYZC,KACMzlC,YASZ4lC,cAAgB,SAACC,MACM,OAAjBA,WACGljC,WAAa,YACb2iC,0BAIgCtwC,EAAKliB,MAApCgzD,IAAAA,aAAcC,IAAAA,eACjBpjC,WAAate,cAAYwhD,KACzBH,eAAiB9lD,MAAMC,KAAKmV,EAAK2N,WAAWne,iBAAiB0gD,KAE9DY,KACGP,uBAGHQ,KACGV,sBAIThlC,eAAiB,SAACtpB,QACXivD,SAAWjvD,EAAEuC,SACbiK,EAAqBxM,EAAGie,EAAKliB,MAAMmzD,qBAEjC,GAAgC,IAA5BjxC,EAAK0wC,YAAYtyD,OAArB,KAKCsE,EAAqBX,EAArBW,OAAQ4B,EAAavC,EAAbuC,cACe0b,EAAK0wC,aAA7B7b,OAAUqc,aACX1+B,EAAO0+B,EAAWA,EAAW9yD,OAAS,GAExCkG,GAAY5B,IAAWmyC,KACvBjyC,mBACGooB,SACK1mB,GAAY5B,IAAW8vB,MAC/B5vB,mBACIooB,gBAbJpoB,mGA/FoB8e,GACpB1S,KAAKlR,MAAMizD,eAAiBrvC,EAAUqvC,eAItCrvC,EAAUqvC,mBACPV,wBACAE,6BAEAD,kEAKHthD,KAAKlR,MAAMizD,cAAgB/hD,KAAK2e,kBAC7B+iC,eAAiB9lD,MAAMC,KAAKmE,KAAK2e,WAAWne,iBAAiB0gD,qDAKhElhD,KAAKlR,MAAMizD,mBACRT,2DAqGHthD,KAAKlR,MARIklB,IAAXjS,UAOGjT,KALH0yD,eACAM,eACAC,eACAE,mHAKKnrD,iBAACkd,QAAcllB,GAAOyO,IAAKyC,KAAK4hD,wBA7LChhD,iBAAvBwgD,GA4DZ1wC,wBACM,oBACG,OC3EGyxC,+KAWyBniD,KAAKlR,MAAvC8H,IAAAA,SAAUhF,IAAAA,UAAc9C,wCAE3B8H,EAKHE,4BAAQhI,GAAO8C,UAAWE,GAAG,4BAA6BF,QAJnD,YAd4BgP,iBCEnCwhD,GAAiB,EAEFC,sNAgBnBtzD,OAAU4iD,SAAS,KA0BnB9Y,cAAgB,SAACvD,MACG,OAAdA,EAAoB,GACjB3W,WAAa2W,MACZgtB,GAAYtxC,EAAK2N,WAAWjkB,YAAgC,EAAjB0nD,IAAuB,EAEpEzQ,GAAU,QACRh2C,UAAUC,MAAMC,KAAKmV,EAAK2N,WAAWne,iBAAiB,YACzDiD,KAAK,gBAAG/I,IAAAA,qBACGA,EAAc4nD,MAIvB7hD,UAAWkxC,gBAIpB4Q,iBAAmB,eACTpV,EAAYn8B,EAAKliB,MAAjBq+C,eACHA,EAEMzxC,MAAM0e,QAAQ+yB,GAChBA,EAAQjrC,IAAI8O,EAAKwxC,YAGnBxxC,EAAKwxC,WAAWrV,GALd,wEA3CAO,EAAQnsC,MACbG,iBAAegsC,GAAS,KACpBt4C,EAASqV,WAASC,KAAKgjC,UAEtB5iC,eAAa4iC,OACbt4C,EAAO7F,KAAOgS,YACRzP,GAAG,iBAAkBsD,EAAOtG,MAAM8C,iBAKzCgZ,EAAkC8iC,EAAlC9iC,MAAOhU,EAA2B82C,EAA3B92C,SAAa2M,KAAcmqC,+BAExC52C,4BACOyK,WAEDgC,aACOzR,GAAG,iBAAkB47C,EAAO97C,gBAE7BgF,0CAuCVoJ,KAAKlR,MALPq+C,IAAAA,QACAv7C,IAAAA,UACAgF,IAAAA,SACS6rD,IAAT9Q,QACG7iD,yDAGA8H,KAAcu2C,GAAYzxC,MAAM0e,QAAQ+yB,KAAaA,EAAQ/9C,eACzD,SAGHuiD,EAAY3xC,KAAKlR,MAAjB6iD,QACA+Q,OAAwC,IAAhBD,SACzBC,MACO1iD,KAAKjR,MAAM4iD,SAIrB76C,gCACMhI,aACOgD,GAAG,gDACiB6/C,8BACAA,GAC5B//C,OACG8wD,EAAsC,KAArB1iD,KAAK64B,qBAEtB0pB,6BAjG4B3hD,iBCKpC+hD,IAAa,QAAS,SAAU,QAAS,gBAQ1BC,0BAwQP9zD,+FAGFkJ,EAAkBlJ,EAAlBkJ,OAAQjH,EAAUjC,EAAViC,MACZZ,EAASrB,EAAM0I,aACfQ,GAAUjH,WAEDiH,SAAQjH,WADVZ,UAINpB,8BAEYD,EAAMmvC,4BACN,yEAKR0N,WAAY3rC,KAAK6iD,gEAID7iD,KAAKlR,MAAtBmvB,IAAAA,MAAOC,IAAAA,MACVD,GAAUC,QAIVzd,UAAWtQ,OAAQ6P,KAAK8iD,WAAW9iD,KAAKlR,qDAIzCkR,KAAKlR,MAAMi9C,aACRj9C,MAAMi9C,2DAIWr5B,cACpBiwC,GAAUl/C,KAAK,mBAAOiP,EAAUnjB,KAAS2jB,EAAKpkB,MAAMS,WACjDkR,iBACKT,KAAK8iD,WAAWpwC,uBACJ1S,KAAKjR,MAAMg0D,cAAkBrwC,EAAUurB,+DAM3Dj+B,KAAKlR,MAAMk0D,cACRl0D,MAAMk0D,iDA6CoChjD,KAAKjR,MAA9Ck0D,IAAAA,cAAe9yD,IAAAA,OAAQ4yD,IAAAA,gBAiC3B/iD,KAAKlR,MA/BPoR,IAAAA,GACAtO,IAAAA,UACAsxD,IAAAA,WACAC,IAAAA,eACAC,IAAAA,YACAC,IAAAA,gBACAnlB,IAAAA,iBACA4T,IAAAA,MACkBwR,IAAlBC,iBACAC,IAAAA,aACArW,IAAAA,QACAv2C,IAAAA,SACA6sD,IAAAA,SACAltB,IAAAA,SACAmtB,IAAAA,eACAC,IAAAA,cACAC,IAAAA,gBACAC,IAAAA,eAaG/0D,KAXH0I,QACAymC,eACAhgB,QACAC,QACA4lC,aACAC,aACAhY,SACAiX,UACAhrD,SACAjH,+WAKuBizD,EAAehkD,KAAKlR,MAAvC,mBACAm1D,EAAa/jD,YACd8jD,GAAclS,MACJmS,OAGTC,OAAsC,IAAlBP,EACpBQ,EAAiBV,EAAW7sD,GAChCE,yBACM,WACAmtD,QACGf,YACIC,MAIbrsD,4BACQotD,GAAcR,EAAiB1jD,KAAKokD,YAAc,SACpD,WACAZ,SACGT,YACIjxD,GAAG,iDACiBoyD,EAAaP,EAAgBV,GACzD/kB,OAEgBpnC,iBAACy9B,IAAeY,eAAYC,cAAWF,SAAUl1B,KAAKqkD,uBAA2B,QAGtGvtD,iBAACurD,QACK,eACGe,YACIC,UACFlW,UACA0W,YAKX/sD,0BACMhI,MACAoR,YACOkhD,OACNphD,KAAKskD,qBACHn0D,YACI2B,GAAG,oCACY2xD,wBACDltB,GACtB3kC,QACE,2BACYoyD,cAxbWpjD,iBAAfgiD,GA6PZlyC,8BACW,mBACC,mBACC,iBACV,GAjQSkyC,GAoQZ3zB,8BACOhuB,GAAUyM,0CAsDxBo1C,WAAa,wEAAkE1vC,EAAKtkB,MAApEmvB,IAAAA,MAAO6lC,IAAAA,WAAY5lC,IAAAA,MAAO6lC,IAAAA,WAAY/rD,IAAAA,OAAQjH,IAAAA,MAAOyG,IAAAA,6BACzC,IAAXQ,EAAyBA,EAAS,gBACzB,IAAVjH,EAAwBA,EAAQ,qBAC7BktB,GAASC,EAAWD,EAAQ6lC,SAAgB5lC,EAAQ6lC,QAAiB,MACnFvsD,SAGL8sD,eAAiB,SAACC,KACX1B,YAAcxiD,cAAYkkD,SAGjCH,YAAc,SAACla,MACG,OAAZA,EAAkB,GACfsa,SAAWnkD,cAAY6pC,OACtB+Y,EAAsE,IAAtD7vC,EAAKoxC,SAAShkD,iBAAiB,YAAYpR,SAE5DqR,UAAWwiD,yBAIpBoB,qBAAuB,gBAAG11B,IAAAA,aAAkBub,IAAJt6C,GAChC0pC,EAAY4Q,EAAQ1yC,MAAM8hC,UAC1BirB,EAASra,EAAQ/wC,aACf3B,MAAM8hC,UAAY,WACpBwY,EAAQ1+B,EAAKtkB,MAAMgjD,MAAQyS,EAAOxwD,cAAc,qBAAuB,KACvEuhD,EAASliC,EAAKtkB,MAAMq+C,QAAUoX,EAAOxwD,cAAc,qBAAuB,KAE1E0wD,EAAcF,EAAOrpD,cAAgB42C,EAAQA,EAAM52C,aAAe,IAAMo6C,EAASA,EAAOp6C,aAAe,QACrG1D,MAAM8hC,UAAYA,EACNmrB,IAAgB91B,EACnB,KACT+1B,EAAiBtxC,EAAKrkB,MAAMg0D,eAAiB3vC,EAAKrkB,MAAMg0D,cAAczpB,WAAc,KACtForB,GAAiBA,IAAkB/1B,KAChCluB,UAAWsiD,cAAe3vC,EAAKtkB,MAAMmvC,sBAGvCx9B,UAAWsiD,kBAAiBzpB,UAAWmrB,GAAgBrxC,EAAKtkB,MAAMmvC,kBC3WxD0mB,+KAmDb3kD,KAAKlR,MAjBPoR,IAAAA,GACA0kD,IAAAA,YACAC,IAAAA,gBACAC,IAAAA,mBACAC,IAAAA,uBACAC,IAAAA,YACA3uB,IAAAA,QACAgf,IAAAA,OACAtJ,IAAAA,OACAn1C,IAAAA,SACAgU,IAAAA,MACAknC,IAAAA,MACAmT,IAAAA,MACA9X,IAAAA,QACArI,IAAAA,YACAogB,IAAAA,aACGp2D,iNAGCE,EACJ8H,+BACahF,GAAG,kDACcujD,GACzBrkD,GAAcK,KAAMyzC,GAAeuQ,oBACtBhf,UACP0V,UACAA,aAOXj1C,0BACMhI,MACGoR,oBACClR,UACCqnC,uBAEI,+BAGPn2B,oBACc+kD,OAAsBv2D,EAAds2D,QACnBJ,YACI9yD,GAAG,iBAAkBd,GAAcE,YAAY,EAAMD,WAAW,IAAU4zD,gBACvEC,mBACIhzD,GAAG,0BAA2BizD,SACzCE,EAAQnT,EAAQ,oCAEPmT,iBACD,UACNA,EAAQ9X,EAAU,YACnB+X,cAvFsBtkD,iBCqBnBukD,0BAqjBPr2D,8EACJA,wBAEDC,eACMD,EAAM+uC,qBACR/uC,EAAM2zC,yBACA3zC,EAAM2zC,qBACVzxB,EAAKo0C,aAAat2D,kBAChBJ,yEAKR22D,QAAUhlD,cAAYL,WACtBu1C,OAASl2C,EAAUW,KAAKqlD,cACxBtlD,SAAWJ,EAAYK,KAAKu1C,YAIzBz1C,EAAcE,KAAKlR,MAAnBgR,cACHA,GAA2B,IAAdA,EAAiB,KAC3BS,KAAa3E,MAAMC,KAAKmE,KAAKqlD,QAAQlsD,WAAWqH,iBAAiB,eAClEC,UAAWX,UAAWS,EAAQjR,QAAQ0Q,KAAKqlD,8DAI1B3yC,SAUpB1S,KAAKlR,MARPw2D,IAAAA,QACAC,IAAAA,UACAC,IAAAA,YACAC,IAAAA,QACAC,IAAAA,YACAC,IAAAA,cACAC,IAAAA,gBACAC,IAAAA,YAGEP,IAAY5yC,EAAU4yC,SAAWC,IAAc7yC,EAAU6yC,WACxDC,IAAgB9yC,EAAU8yC,aAAeE,IAAgBhzC,EAAUgzC,aACnEC,IAAkBjzC,EAAUizC,eAAiBC,IAAoBlzC,EAAUkzC,iBAC3EH,IAAY/yC,EAAU+yC,SAAWI,IAAgBnzC,EAAUmzC,kBAEzDplD,UAAW0sC,QAASntC,KAAKolD,aAAa1yC,0CAoIrChS,EAAUV,KAAK/P,QAAfyQ,QAoFJV,KAAKlR,MAlFP0I,IAAAA,MACA5F,IAAAA,UACAk0D,IAAAA,aACAC,IAAAA,iBACAnB,IAAAA,YACAC,IAAAA,gBACAC,IAAAA,mBACAC,IAAAA,uBACAG,IAAAA,aACAze,IAAAA,eACAC,IAAAA,mBACA3C,IAAAA,eACAkhB,IAAAA,MACAnT,IAAAA,MACAjjB,IAAAA,OACAm3B,IAAAA,WACA9kB,IAAAA,UACAt2B,IAAAA,MACAk6B,IAAAA,YACAuQ,IAAAA,OACA5e,IAAAA,OACAgB,IAAAA,YACAv9B,IAAAA,QACAw9B,IAAAA,kBACAU,IAAAA,WACAD,IAAAA,WACA5B,IAAAA,SACAD,IAAAA,UACA0B,IAAAA,mBACAC,IAAAA,mBACAvkB,IAAAA,eACAI,IAAAA,uBACAD,IAAAA,uBACAo7B,IAAAA,aACAC,IAAAA,aACAC,IAAAA,gBACAn8C,IAAAA,QACAuxC,IAAAA,YACAC,IAAAA,UACAnH,IAAAA,aACAG,IAAAA,WACAoS,IAAAA,aACAzS,IAAAA,YACAC,IAAAA,aACAiH,IAAAA,YACA4hB,IAAAA,iBACA1tB,IAAAA,QACAC,IAAAA,SACAC,IAAAA,UAGAytB,KAAAA,OACAC,KAAAA,mBACAC,KAAAA,oBA4BGt3D,MA1BHoR,KACAmmD,WACAvmD,YACAwmD,YACAhB,UACAC,YACAC,cACAC,UACAc,gBACAb,cACAC,gBACAC,kBACAC,cACAW,mBACA/jB,eACA6W,WACAmN,iBACAC,wBACA7oB,iBACA8oB,iBAGAC,kBACAC,kBACApxC,onCAI2BzV,KAAKjR,MAA1BsnC,MAAAA,QAAS8W,MAAAA,QACX5xC,GAAQ1M,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,SACzC+Q,GAAYjR,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,gBAE5BiR,KAAKlR,MAAtBoR,MAAAA,GAAImmD,MAAAA,SACLA,SACWnmD,IAASQ,MAASZ,oBAG7BI,QACKmmD,iBAGNS,aACAj4B,IAAWq3B,GAAQ,KACfrvD,GAAOF,EAAkByvD,GAAqBD,GAAoBH,GACpEnvD,QACeC,GAAMgU,aAAajU,IAAQtH,IAAK,mBAI/CoqD,GAAyB,WAAf7qD,GAAMuD,KAChBrD,GACJ8H,iBAACosC,SACKp0C,QACCkR,KAAKmiC,gBACHsE,YACI30C,IAAKi1D,gCAAiCl4B,GAAU6X,kBAC3C50C,6BACYujD,GAAUxmB,kBACnB8qB,IAChB3oD,GAAcK,KAAMgkD,GAAUxmB,IAAWkV,MACxC7jC,SACG0K,cACMk6B,QACNvpC,WACEyE,KAAKuf,sBACJvf,KAAKuiC,wBACJviC,KAAKqc,qBACTwS,YACIwH,GAAU6K,EAAY,eACtB4lB,MAIXlwD,aACAi4B,KACS7/B,OACN,KACCg4D,GAAczrD,IAAmB,IAAVA,GAAcA,GAAQupC,GAAel6B,KAEhE9T,2BACSgvD,YACIC,cACEnB,kBACIC,qBACGC,yBACIC,KACpBsB,eACSnmD,WACJm2B,UACDr2B,KAAKinD,oBACJjnD,KAAKo7B,mBACP4rB,WACE7Z,SACF8X,QACAnT,SACCuD,cACK2R,KAAgBliB,GAAekiB,KAAgBp8C,aAChDq7C,SACJxvB,cACKgB,oBACMC,aACPU,aACAD,WACF5B,YACCD,UACFiC,WACCC,YACCC,eACiB,IAAZv+B,EAA0BA,EAAU8F,KAAKD,sBAC3CmlD,qBACMltB,qBACAC,iBACJvkB,yBACQI,yBACAD,cAQ5B/c,2BACSU,UACEmiD,aACE7nD,GAAG,wBAAyBF,UAC/ByjD,YACE,eACIpG,eACAC,kBACGC,UACRn8C,cACIuxC,YACFC,eACGnH,cACDgH,eACCuL,cACDzS,eACCC,aACFI,cAx6B0B58B,iBAAzBukD,GACZpkD,gBAAkB80B,GAAQ90B,gBADdokD,GAEZrkD,kBAAoB+0B,GAAQ/0B,kBAFhBqkD,GAGZtkD,UAAYg1B,GAAQh1B,UAHRskD,GAwhBZz0C,mBACC,oBACQ,qBACI,aACN5Z,yCACH,kBACE,cACE,wBACE,oBACIquD,GAAiBtkD,UAAUua,mBAChC,sBACM,sBACA,kBACJ,wBACO,WACd,WACC,YACC,kBACK,kBACA,GA3iBC+pC,GA8iBZnkD,oBACEC,GAAUC,WACfD,GAAUE,OACVF,GAAUG,4CAmDd+gC,UAAY,SAACnzC,KACN2yC,OAAS3yC,QAGhBo2D,aAAe,SAACt2D,OAEZw2D,EAQEx2D,EARFw2D,QACAC,EAOEz2D,EAPFy2D,UACAC,EAME12D,EANF02D,YACAC,EAKE32D,EALF22D,QACAC,EAIE52D,EAJF42D,YACAC,EAGE72D,EAHF62D,cACAC,EAEE92D,EAFF82D,gBACAC,EACE/2D,EADF+2D,2BAIK,kBACKH,UACDC,IAAkBC,YAChBA,GACRC,WACM3yC,EAAKg0C,wBAET,cACK5B,UACDC,IAAcC,YACZA,GACRC,WACMvyC,EAAKi0C,mBAIlBF,YAAc,SAACl0D,MACTmgB,EAAKk0C,gBACFA,eAAgB,OAChB,GAAIl0C,EAAKpkB,MAAM63D,iBAAmB5zD,GAAgB,UAAXA,EAAEV,KAAkB,OACd6gB,EAAKpkB,MAA/C23D,IAAAA,eAAgBC,IAAAA,sBACpBD,IAES,IADA1sD,EAASmZ,EAAKmyC,UACNnyC,EAAKqiC,QAAUriC,EAAKmyC,UAAYnyC,EAAKpkB,MAAM+/B,WACvD0mB,OAAO57C,WAAauZ,EAAKmyC,QAAQgC,WAAaX,KAIlDjmD,UAAW41B,SAAS,EAAMixB,YAAaz4D,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,kBAIjFqsC,aAAe,SAACroC,SAC+BmgB,EAAKpkB,MAA1Cy4D,IAAAA,eAAgBf,IAAAA,iBACpBe,KACax0D,GAGbyzD,IACGW,UAAUp0D,KAEVm0D,cAAcn0D,SAIvBwvC,cAAgB,SAAChnC,EAAOxI,GAClBmgB,EAAKpkB,MAAM0zC,YACR1zC,MAAM0zC,SAASjnC,EAAOxI,QAGG,IAArBmgB,EAAKpkB,MAAMyM,SACfkF,UAAWlF,gBAIpBgkB,aAAe,SAACxsB,GACVmgB,EAAKpkB,MAAMi2C,WACRj2C,MAAMi2C,QAAQhyC,GAGjBmgB,EAAKpkB,MAAM+/B,UACRpuB,UAAW6mD,YAAav0D,EAAEW,OAAO6H,cAI1C8gB,eAAiB,SAACtpB,SAC+BmgB,EAAKpkB,MAA5CwtB,IAAAA,UAAWkqC,IAAAA,iBAAkBvB,IAAAA,MACjC3oC,KACQvpB,OAGNxD,EAAMwD,EAAEI,OAASJ,EAAEK,QACrB7D,IAAQiE,KACL2zD,UAAUp0D,GlGvtBF,KkGwtBJxD,IACJ23D,cAAcn0D,GACVxD,IAAQmQ,IAAQulD,MAEpBmC,cAAgBr0D,EAAEuC,SAEnBkxD,IACGW,UAAUp0D,KAEVm0D,cAAcn0D,UAKzBo0D,UAAY,SAACp0D,GACPmgB,EAAKpkB,MAAMw3D,aACRx3D,MAAMw3D,UAAUz3D,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,SAAUgE,KAG7D0N,UAAW41B,SAAS,UAG3B6wB,cAAgB,SAACn0D,OACTwI,EAAQ2X,EAAKnkB,MAAMu4D,YACrBp0C,EAAKpkB,MAAMy3D,iBACRz3D,MAAMy3D,cAAchrD,EAAOxI,OAG5BhE,GAAUsnC,SAAS,QACO,IAArBnjB,EAAKpkB,MAAMyM,UACdA,MAAQA,KAGXkF,SAAS1R,KC5uBZy4D,+KAkJExnD,KAAKlR,MAhBP0I,IAAAA,MACA5F,IAAAA,UACA6qD,IAAAA,UACAC,IAAAA,cACArH,IAAAA,OACApG,IAAAA,aACAC,IAAAA,aACAC,IAAAA,gBAQGrgD,KANHwqD,WAGAmO,eACAC,uLAMA5wD,4BACUu+C,QACD79C,YACI1F,GAAG,yBAA0BF,aAC9B,eACIq9C,eACAC,kBACGC,oBAEhB+L,SAAgBpsD,GAAO0I,MAAOilD,EAAW7qD,UAAW8qD,aA9J7B97C,iBAA1B4mD,GACGzmD,gBAAkBm6C,GAAYn6C,gBADjCymD,GAEG1mD,kBAAoBo6C,GAAYp6C,kBAFnC0mD,GAGG3mD,UAAYq6C,GAAYr6C,UAH3B2mD,GAwHG92C,uBACK82C,GAAkB3mD,UAAUua,iBAC3B,sBACS,sBACA,kBACJ,GAuCpB,OAAevb,EAAe2nD,GAAmB,gBCnK5BG,0BA4SP74D,8EACJA,aAQRstB,aAAe,SAACrpB,SAC2Bie,EAAKliB,MAAtCm+C,IAAAA,mBAAoBr2C,IAAAA,SACtBy/B,GAAWxnC,EAASmiB,EAAKliB,MAAOkiB,EAAKjiB,MAAO,WAC9Ck+C,KACiB5W,EAAStjC,OAGxB8H,EAAS/D,GAAM2T,SAASC,KAAK9T,GAC/BiE,EAAO/L,MAAMkE,WACRlE,MAAMkE,QAAQD,QAGW,IAAvBie,EAAKliB,MAAMunC,WACf51B,UAAW41B,eAIpB+E,aAAe,SAACroC,OACNk6C,EAAuBj8B,EAAKliB,MAA5Bm+C,mBAEJA,MADY,EAEcl6C,QAGI,IAAvBie,EAAKliB,MAAMunC,WACf51B,UAAW41B,SANF,OAzBXtnC,cACwB,IAAlBD,EAAMunC,YACVtnC,MAAMsnC,QAAUvnC,EAAM+uC,4EA8CzB79B,KAAKlR,MAXPoR,IAAAA,GACAi8B,IAAAA,OACAwf,IAAAA,UACUiM,IAAVhxD,SACAkwC,IAAAA,eAMGh4C,KAJHunC,UACA4W,qBACApP,8HAKIxH,EAAUxnC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,WAE3C6H,EAAWE,GAAM2T,SAASC,KAAKk9C,GAC/B/sD,EAAS/D,GAAMgU,aAAalU,MAC5BA,EAAS9H,MAAMoR,IAASA,oBACnBF,KAAKoc,eAGZ8sB,kBACCxtC,MAAM0e,QAAQuhC,GAGTA,EAAUz5C,IAAIb,IAFdA,GAAes6C,GAMvB7kD,0BACMhI,cACQg4C,KACR5mC,SACIi8B,SACAthC,UACCw7B,UACAr2B,KAAKo7B,yBAxXoBx6B,iBAArB+mD,GACZ9mD,UAAYs6B,GAAKt6B,UADL8mD,GAEZ7mD,kBAAoBq6B,GAAKr6B,kBAFb6mD,GAGZ5mD,gBAAkBo6B,GAAKp6B,gBAHX4mD,GAsSZj3C,8BACW,sBACI,sBACA,OC7SHm3C,+KAwkBb7nD,KAAKlR,MA5DPoR,IAAAA,GACAi8B,IAAAA,OACA2rB,IAAAA,SACArL,IAAAA,UACAC,IAAAA,cACA/gB,IAAAA,UACAC,IAAAA,cACAC,IAAAA,UACAC,IAAAA,WACAC,IAAAA,WACAC,IAAAA,qBACA2f,IAAAA,UACAoM,IAAAA,eACAnxD,IAAAA,SACA6/B,IAAAA,OACAgB,IAAAA,YACAv9B,IAAAA,QACAJ,IAAAA,SACA2hC,IAAAA,UACAC,IAAAA,gBACA3M,IAAAA,gBACA6I,IAAAA,UACAD,IAAAA,MACApB,IAAAA,SACAD,IAAAA,UACA0B,IAAAA,mBACAC,IAAAA,mBACAG,IAAAA,WACAD,IAAAA,WACAd,IAAAA,oBACA3jB,IAAAA,eACAI,IAAAA,uBACAD,IAAAA,uBACAwiB,IAAAA,QACAwH,IAAAA,eACAoP,IAAAA,mBACAnG,IAAAA,eACAvO,IAAAA,QACAC,IAAAA,SACAC,IAAAA,UACAZ,IAAAA,kBACAC,IAAAA,mBACAkwB,IAAAA,YACAC,IAAAA,gBACAC,IAAAA,cACAC,IAAAA,iBACAC,IAAAA,gBACAC,IAAAA,iBACAC,IAAAA,iBACAC,IAAAA,gBACAC,IAAAA,kBACAC,IAAAA,eACAC,IAAAA,YACAC,KAAAA,WACAC,KAAAA,cACAC,KAAAA,YACA3sB,KAAAA,OACA0B,KAAAA,YACA2e,KAAAA,aACGztD,i4BAGDo6C,GAAQtyC,EACRkyD,GAAiBf,cACI,IAAdpM,OACQ/kD,KACT+kD,GAIR7kD,wBACMoJ,SACIi8B,QACDsgB,YACIC,YACA/gB,gBACIC,YACJC,aACCE,aACAD,uBACUE,eACK,IAAXE,GAAyBA,GAAS7F,sBACX,IAAhBuH,GAA8BA,GAAcC,YACxDqL,kBACKpC,SACRrQ,cACKgB,UACJv9B,WACCJ,YACC2hC,kBACMC,kBACA3M,YACN6I,QACJD,WACGpB,YACCD,UACFiC,WACCC,YACCC,oBACQZ,qBACCC,qBACAE,qBACAC,aACRG,aACAD,sBACSd,iBACL3jB,yBACQI,yBACAD,qBACJ0oC,IAAgBtP,UAC3B+a,cACIC,YACFC,eACGC,cACDC,eACCC,eACAC,cACDC,gBACEC,aACHC,UACHC,SACDC,aACGC,WACFC,8BAEG/5D,IAAOoR,GAAI4nD,gBAzoBSlnD,iBAAnBinD,GACZhnD,UAAY8mD,GAAa9mD,UADbgnD,GAEZ/mD,kBAAoB6mD,GAAa7mD,kBAFrB+mD,GAGZ9mD,gBAAkB4mD,GAAa5mD,gBAHnB8mD,GAogBZn3C,8BACW,sBACI,sBACA,OC9gBlBq4C,+KAyHE/oD,KAAKlR,MAVP0I,IAAAA,MACA5F,IAAAA,UACA6qD,IAAAA,UACAC,IAAAA,cACArH,IAAAA,OACAiE,IAAAA,SACArK,IAAAA,aACAC,IAAAA,aACAC,IAAAA,gBACGrgD,qIAGHgI,2BACSU,YACI5F,SACHyjD,WACEiE,eACIrK,eACAC,kBACGC,oBAEhB0Y,SAAe/4D,GAAO0I,MAAOilD,EAAW7qD,UAAW8qD,aApI7B97C,iBAAzBmoD,GACGloD,UAAYgnD,GAAWhnD,UAD1BkoD,GAEGjoD,kBAAoB+mD,GAAW/mD,kBAFlCioD,GAGGhoD,gBAAkB8mD,GAAW9mD,gBAHhCgoD,GAyGGr4C,8BACW,GAgCpB,OAAe7Q,EAAekpD,GAAkB,eC1I1CC,+KAyHEhpD,KAAKlR,MAVP0I,IAAAA,MACA5F,IAAAA,UACA6qD,IAAAA,UACAC,IAAAA,cACArH,IAAAA,OACAiE,IAAAA,SACArK,IAAAA,aACAC,IAAAA,aACAC,IAAAA,gBACGrgD,qIAGHgI,2BACSU,YACI5F,SACHyjD,WACEiE,eACIrK,eACAC,kBACGC,oBAEhBwY,SAAiB74D,GAAO0I,MAAOilD,EAAW7qD,UAAW8qD,aApI7B97C,iBAA3BooD,GACGnoD,UAAY8mD,GAAa9mD,UAD5BmoD,GAEGloD,kBAAoB6mD,GAAa7mD,kBAFpCkoD,GAGGjoD,gBAAkB4mD,GAAa5mD,gBAHlCioD,GAyGGt4C,8BACW,GAgCpB,OAAe7Q,EAAempD,GAAoB,eCpI7BC,0BA+HPn6D,8EACJA,aAEDC,OAAUm6D,WAAW,0EAGFx2C,cAChB2jB,EAAYr2B,KAAKlR,MAAjBunC,QACS8yB,EAA6Dz2C,EAAtE2jB,QAAmBviB,EAAmDpB,EAAnDoB,uBAAwBD,EAA2BnB,EAA3BmB,uBAC7CiF,EAAWqwC,EAAoCr1C,EAAzBD,EACxBwiB,IAAY8yB,IACVnpD,KAAKod,uBACMpd,KAAKod,eAGfA,SAAWxI,WAAW,aACpBwI,SAAWxI,WAAW,aACpBwI,SAAW,OACX3c,UAAWyoD,WAAW,KAC1BpwC,IACF6E,IAEE3d,KAAKjR,MAAMm6D,gBACTzoD,UAAWyoD,WAAW,6CAKjBE,EAAUxyD,UACpBwyD,IAAaxyD,EACRA,EAGF6T,WAASvI,IAAIuI,WAASuS,QAAQpmB,GAAW,SAACuD,EAAO+B,UAC5C,IAANA,EACK4O,eAAa3Q,GAASvI,UAAWE,GAAG,iBAAkBqI,EAAMrL,MAAM8C,aAGpEuI,+CAIQkvD,EAASzyD,UACtByyD,IAAYzyD,EACPA,EAGF6T,WAASvI,IAAIuI,WAASuS,QAAQpmB,GAAW,mBAASkU,eAAa3Q,aACzDrI,GAAG,iBAAkBqI,EAAMrL,MAAM8C,oDAKtCs3D,EAAclpD,KAAKjR,MAAnBm6D,YAmBJlpD,KAAKlR,MAjBP0I,IAAAA,MACA5F,IAAAA,UACAkgD,IAAAA,MACAmS,IAAAA,QACA9W,IAAAA,QACAmc,IAAAA,kBACAC,IAAAA,mBACAC,IAAAA,gBACAC,IAAAA,iBACAC,IAAAA,oBACArzB,IAAAA,QAMGvnC,KAJH8H,WACA+yD,eACAC,qOAKgD5pD,KAAKlR,MAAjD8H,IAAAA,SAAU+yD,IAAAA,aAAcC,IAAAA,kBACnB5pD,KAAK6pD,gBAAgBJ,EAAkB7yD,KACnCoJ,KAAK8pD,mBAAmBJ,EAAqBC,GAExD7X,IAEAh7C,wBAAKlF,UAAU,gBAAgBrC,IAAI,+BAChCqiD,IAAe1xC,GAAI+jD,EAASnS,MAAOA,OAI/B6X,MACMl/C,WAASuS,QAAQ2sC,KAE5B/yD,EACS+yD,EAAavxC,OAAO3N,WAASuS,QAAQpmB,IAErC+yD,GAIXC,MAEA9yD,0BACMwyD,YACM,gEACAA,GAAqB,EAAI,cAOnCS,EACJjzD,wBAAKvH,IAAI,oBAAoBqC,UAAU,oDAG/Bi4D,gBAAgBL,EAAiBrc,IAIvC6c,EAAexyD,SACf0xD,MACat6D,OAAOqd,UAAWzU,GAASyyD,SAAU,YAIpDnzD,0BACMhI,SACGk7D,YACIl4D,GAAG,0DACuBggD,GAClClgD,SAGQm4D,EAAmB,aAhQOnpD,iBAAxBqoD,GAwHZv4C,wBACM,wBACK,sCACQ,2BACA,SCtHPw5C,0BA4WPp7D,8EACJA,mBAEAunC,OAAkC,IAAjBvnC,EAAMotC,OAAyBptC,EAAMotC,OAASptC,EAAMunC,QACrE8zB,EAAgB9zB,IAAYvnC,EAAMs7D,sCAEnCr7D,cACKsnC,IAAYvnC,EAAM20D,uBACXptB,qFAMZr2B,KAAKlR,MAAMotC,QAAWl8B,KAAKlR,MAAMunC,eAIjCg0B,aAAarqD,KAAKlR,yDAGC4jB,OAClB2jB,OAAsC,IAArB3jB,EAAUwpB,OAAyBxpB,EAAUwpB,OAASxpB,EAAU2jB,WACnFr2B,KAAKlR,MAAMotC,SAAW7F,GAAWr2B,KAAKlR,MAAMunC,UAAYA,OAItDzmC,EAAKf,EAASmR,KAAKlR,MAAOkR,KAAK/P,QAAS,eAAiBG,OAChD6tB,EAA0BruB,EAAnC2J,QAAyB2kB,EAAUtuB,EAAnB4J,aACM,IAAjB5J,EAAGgK,gBAAsD,IAAlBhK,EAAG+J,cAC3C/J,EAAG+J,aACH/J,EAAGgK,gBACoB,IAAfhK,EAAG4J,cAAiD,IAAf5J,EAAG2J,YAChD3J,EAAG2J,UACH3J,EAAG4J,cAGR8wD,OAASrsC,OACT6vB,OAAS5vB,EAEVle,KAAKuqD,0BACMvqD,KAAKuqD,iBACbA,WAAa,MAGhBl0B,QACGm0B,eAAiBz6D,SAAS4wB,mBAC1B8pC,aAAa/3C,SAEbjS,UAAW0pD,eAAe,EAAOlzC,QAAQ,gDAI/BmgB,SACep3B,KAAKlR,MAA7BunC,IAAAA,QAASq0B,IAAAA,cAGbr0B,IAAYe,EAAUf,SAAWq0B,IAAetzB,EAAUszB,gBAI1Dl1D,GAAM,EACN+M,GAAS,EACTmoD,IAAetzB,EAAUszB,cACrBr0B,GAAWq0B,KACPr0B,GAAYe,EAAUszB,aAAeA,GACtCA,MACHr0B,KACIA,GAGR7gC,SACKU,iBAAiB,UAAW8J,KAAK2qD,iBAC/BpoD,UACFlM,oBAAoB,UAAW2J,KAAK2qD,kEAKzC3qD,KAAKlR,MAAMotC,QAAUl8B,KAAKlR,MAAMunC,cACrB,GAGXr2B,KAAKlR,MAAMunC,SAAWr2B,KAAKlR,MAAM47D,mBAC5Br0D,oBAAoB,UAAW2J,KAAK2qD,iBAGzC3qD,KAAKuqD,yBACMvqD,KAAKuqD,mDA+E6BvqD,KAAKjR,MAA9CkoB,IAAAA,OAAQkzC,IAAAA,cAAejd,IAAAA,gBAgC3BltC,KAAKlR,MA9BP0I,IAAAA,MACA5F,IAAAA,UACAgzD,IAAAA,YACAC,IAAAA,gBACA+F,IAAAA,MACAnH,IAAAA,SACA1hD,IAAAA,UACA+R,IAAAA,uBACAD,IAAAA,uBACA+3B,IAAAA,UACAwB,IAAAA,OAESyd,IAATx0B,QAiBGvnC,KAhBH68C,aACA+e,aACAI,SACAC,SACAC,uBACAZ,+BAGA/uB,QACAa,SACA+uB,aACAC,cACAx3C,iBACAE,kBACAH,gYAKIk4B,EAAa98C,EAASmR,KAAKlR,MAAOkR,KAAK/P,QAAS,cAChDs0D,EACJztD,iBAAC8rD,WACK,eACGgC,YACI9yD,GAAG,sBAAuB+yD,OAChC7kD,KAAKmrD,gCACC1H,WACDA,GACN30D,cACQkR,KAAKsqD,kBACLtqD,KAAK8tC,eACR9tC,KAAKorD,kBAIZ91B,EACJx+B,+BACaiL,MACN/B,KAAK64B,oBACHrhC,YACI1F,GAAG,qCACG2xD,wBACQA,GAAYxsC,GAAU4zC,uBACvBpH,IAAamH,GAASC,GAC3Cj5D,iCAC2B6xD,EAAW,YAAc,mCAC/B3vC,yBACAD,YACb,UACF7T,KAAKoc,gBAEGmoC,EAAS,aAIzBnX,EAKHt2C,qBAAQu/B,QAAS6W,EAAevB,WAAYA,EAAYC,UAAWA,MAJ5DsB,EAAgB5X,EAAY,YA1lBI10B,iBAAxBspD,GA4VZx5C,8BACW,mBACC,YACN,mBACC,mBACM,wBACJ,yBACU,2BACA,kCACM,GArWbw5C,GAwWZlpD,yBACOC,GAAUyM,0CA+FxBmrB,cAAgB,SAACvD,GACG,OAAdA,MACG3W,WAAate,cAAYi1B,UAIlCq1B,gBAAkB,SAAC53D,GzG7dF,MyG8dVA,EAAEI,OAASJ,EAAEK,WACf8f,EAAKpkB,MAAMi8D,QAAU73C,EAAKpkB,MAAMusC,OAAOtoC,SAI5C03D,aAAe,SAAC37D,KACTu7D,aAAav7D,KACb2R,UAAWysC,eAAe,UAGjCmd,aAAe,SAACv7D,OACN20D,EAAqB30D,EAArB20D,SAAUqH,EAAWh8D,EAAXg8D,SACbP,WAAa31C,WAAW,aACtB21C,WAAa9G,EAAW,KAAO7uC,WAAW,aACxC21C,WAAa,OACb9pD,UAAWwW,QAAQ,KACvB0G,MACEld,UAAW0pD,eAAe,GAAQW,IACtCntC,UAGLytC,eAAiB,aACV3qD,UAAWysC,eAAe,UAGjC9wB,aAAe,SAACrpB,OACRsjC,OAAuC,IAAtBnjB,EAAKpkB,MAAMotC,OAAyBhpB,EAAKpkB,MAAMotC,OAAShpB,EAAKpkB,MAAMunC,SACtFnjB,EAAKpkB,MAAM87D,OAAUv0B,GAAWtjC,EAAEW,SAAWwf,EAAKyL,aAIrDzL,EAAKpkB,MAAMi8D,QAAU73C,EAAKpkB,MAAMusC,OAAOtoC,SAG1Co4D,sBAAwB,SAAC5G,OACfyG,EAAyB93C,EAAKpkB,MAA9Bk8D,wBACO,OAAXzG,EACErxC,EAAKs3C,gBAAkBt3C,EAAKs3C,eAAexuC,SACxCwuC,eAAexuC,QAGjBgvC,OACU,EAAO93C,EAAKgoB,YAGtBsvB,eAAiB,SACjB,KACCl1B,EAAYvlC,SAAS4lC,eAAeziB,EAAKpkB,MAAMoR,QAChDo1B,GAAa01B,iBAIdp7D,EAAKf,EAASqkB,EAAKpkB,MAAOokB,EAAKjjB,QAAS,cACxCuC,EAAO8iC,EAAUn8B,WACd3G,GAAQA,EAAK4F,YAAcxI,GAC5B4C,EAAK4F,UAAUC,SAAS,iBACrB7F,KAGAA,EAAK2G,aAGT+hC,SAAWtrC,MACH,EAAMA,MC7hBJy7D,yLAgBRC,YAAY,0CAI8CtrD,KAAKlR,MAAhEmoB,IAAAA,OAAQof,IAAAA,QAASsV,IAAAA,WAAY34C,IAAAA,QAASwE,IAAAA,MAAO5F,IAAAA,iBAEnDkF,qBAAQu/B,QAASA,EAASsV,WAAYA,iCAE3Bn0C,YACI1F,GAAG,wEACUmlB,GACrBrlB,WACMoB,YA5BkB4N,iBAAhByqD,GAUZp8B,8BACOhuB,GAAUuM,MCR1B,IAAMxJ,gBAOS,sBAMJ,mBAQC,sBAUE,6BAOK,4BASN,2BAQK,kB5J7DhBhB,GAOEgB,GAPFhB,YACAC,GAMEe,GANFf,QACAC,GAKEc,GALFd,SACAL,GAIEmB,GAJFnB,WACAC,GAGEkB,GAHFlB,gBACAJ,GAEEsB,GAFFtB,UACAC,GACEqB,GADFrB,e6J6BmB4oD,IAlBItqD,GAAU+M,OACjChK,GAAYhB,YACZgB,GAAYf,QACZe,GAAYd,SACZc,GAAYnB,WACZmB,GAAYlB,gBACZkB,GAAYtB,UACZsB,GAAYrB,wCAsYA7T,8EACJA,mBAEE+uC,EAA0C/uC,EAA1C+uC,eAAgB2tB,EAA0B18D,EAA1B08D,aAAcC,EAAY38D,EAAZ28D,UAEjC18D,cACsB,WAAjBy8D,SACiB,WAAjBA,UACkB,YAAjBA,aACE,iBACI,gBACD,QAGU,IAAf18D,EAAMuD,SACVtD,MAAMsD,KAAOvD,EAAS08D,eAGvBn5D,EAAOxD,EAASC,EAAOkiB,EAAKjiB,MAAO,aACpC2qC,aAAc,OAEU,IAAlB5qC,EAAMunC,QAAyB,KACpCA,EAAUtzB,GAAY1Q,IAAS8Q,GAAO9Q,GACrCgkC,QAAqC,IAAnBwH,MACXA,KAGP9uC,MAAMsnC,QAAUA,MAGjBA,EAAUxnC,EAASC,EAAOkiB,EAAKjiB,MAAO,oBAEvCA,MAAM28D,oBAAoC,IAAZD,EAA0BA,EAAUhpD,GAAYpQ,KAAU2e,EAAKjiB,MAAM48D,UACnGt1B,IACAtnC,MAAM68D,aAAev1B,0EAxFLvnC,yDAAQy8D,EAAO76C,aAElCm7C,EAOE/8D,EAPF+8D,eACAC,EAMEh9D,EANFg9D,eACAC,EAKEj9D,EALFi9D,gBACAC,EAIEl9D,EAJFk9D,WACAC,EAGEn9D,EAHFm9D,WACAC,EAEEp9D,EAFFo9D,YACAC,EACEr9D,EADFq9D,gBAEoB,oBAAX/7D,cAEAg8D,QAAQ,EAAMC,QAAQ,EAAOV,SAAS,EAAOt5D,KADzC85D,GAAgBr9D,EAAMuD,KAAOvD,EAAMuD,KAAO25D,OAInDI,EAASb,EAAOe,aAAaT,EAAgBC,EAAiB,GAC9DO,EAASd,EAAOe,aAAaR,EAAgBC,GAC7CJ,EAAUJ,EAAOe,aAAaP,GAEhC15D,kBACA85D,GAAgBr9D,EAAMuD,MAAQoQ,GAAY3T,EAAMuD,MAC3CvD,EAAMuD,KACJs5D,EACFO,EACEG,EACFJ,EAEAD,GAGA35D,OAAM+5D,SAAQC,SAAQV,gDAWbxtD,EAAKC,OACnBmuD,4BAAkCpuD,eAClCC,2BAC2BA,SAGxBhO,OAAOo8D,WAAWD,GAAOnmB,6DA6CV,oBAAXh2C,aACJq8D,YAAYzsD,KAAKlR,mDAKnBqU,GAAOtU,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,iBACpCmH,iBAAiB,SAAU8J,KAAK0sD,gEAIjBh6C,SAQpB1S,KAAKlR,MANP+8D,IAAAA,eACAG,IAAAA,WACAF,IAAAA,eACAG,IAAAA,WACAF,IAAAA,gBACAG,IAAAA,YAGEx5C,EAAUm5C,iBAAmBA,GAAkBn5C,EAAUs5C,aAAeA,GACvEt5C,EAAUo5C,iBAAmBA,GAAkBp5C,EAAUu5C,aAAeA,GACxEv5C,EAAUq5C,kBAAoBA,GAAmBr5C,EAAUw5C,cAAgBA,QACzEO,YAAY/5C,OAGX2jB,EAAyC3jB,EAAzC2jB,QAAS5gB,EAAgC/C,EAAhC+C,mBAAoBg2C,EAAY/4C,EAAZ+4C,WACjCzrD,KAAKlR,MAAMunC,UAAY3jB,EAAU2jB,aAI/BhkC,EAAOxD,EAAS6jB,EAAW1S,KAAKjR,MAAO,aACxC49D,SAASt2B,EAAShkC,EAAMojB,EAAoBg2C,EAASzrD,KAAKjR,MAAM48D,yDAIjE3rD,KAAKod,uBACMpd,KAAKod,UAGhBpd,KAAK4sD,4BACM5sD,KAAK4sD,sBAGbv2D,oBAAoB,SAAU2J,KAAK0sD,uDAiIS1sD,KAAKjR,MAAhD28D,IAAAA,cAAeE,IAAAA,aAAc1C,IAAAA,YA4CjClpD,KAAKlR,MA1CPoR,IAAAA,GACA1I,IAAAA,MACA5F,IAAAA,UACAi7D,IAAAA,SACAC,IAAAA,aACA/qD,IAAAA,UACAgrD,IAAAA,SACA1X,IAAAA,OACAz+C,IAAAA,SACAi4B,IAAAA,OACA/0B,IAAAA,SACA2xD,IAAAA,QACAuB,IAAAA,wBACAphB,IAAAA,UACAwB,IAAAA,OACA6f,IAAAA,aACAC,IAAAA,iBAyBGp+D,KAvBHuD,OACAgkC,UACAsV,aACAwhB,aACAlhB,SACAkgB,eACAtuB,iBACA2tB,eACAQ,aACAH,iBACAI,aACAH,iBACAI,cACAH,kBACAt2C,qBACA23C,oBACAngB,qBACA7Q,YACAixB,oBAEAC,qBACAC,ojBAK2BvtD,KAAKlR,MAA5Bq+D,IAAAA,WAAYlhB,IAAAA,QACbkhB,GAAcjtD,MACDA,oBAGVyrD,EAAY3rD,KAAKjR,MAAjB48D,QACFhgB,EAAa98C,EAASmR,KAAKlR,MAAOkR,KAAK/P,QAAS,cAChDoC,EAAOxD,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,QACxCsnC,EAAUxnC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,WAC3C4P,EAAOwE,GAAO9Q,GACdm7D,EAAY/qD,GAAYpQ,GACxBmM,EAAWwF,GAAYd,WAAa7Q,EACpCo7D,EAAY1qD,GAAY1Q,GAE1B2hB,WACAjS,IAEOgrD,EACG,MAEA,aAGVtf,SACAsf,MAEAj2D,yBACOkJ,KAAK0tD,mBACN,gBACAP,QACGN,YACI/6D,GAAG,yCACW6M,IAAS03B,kBACf73B,GAChBsuD,WACM9sD,KAAK2tD,mBAEJzrD,IAAIb,WAKE,IAAX4qC,MACA,EACLztC,GAAYqwB,IACL,GACClwB,GAAQ6uD,MACT,QAITI,EAAiBnC,EACS,kBAAnBmC,MACQJ,IAAc7uD,KAAUgtD,GAAWqB,KAA6B9D,GAAa7yB,QAG1Fw3B,EACJ/2D,0BACMhI,MACAoR,MACA,mBACO8T,SACHi4B,gBACM,QACPz0C,YACI1F,GAAG,qCACGgI,GAAc+0B,QAC7B,oBAAqBA,QACrB,oBAAqBA,QACrB,oBAAqBlwB,GAAQitD,QAC7B,kBAAmBjtD,QACnB,+BAAgCA,IAAS8uD,GAAap3B,QACtD,+BAAgC13B,IAAS8uD,IAAcp3B,QACvD,gBAAiBxH,GAAUrwB,QAC3B,uBAAwBA,IAAaqwB,MACpCj9B,4BAKFy5D,UACQ4B,YACIC,SACHxB,UACC1rD,KAAK8tD,qBACLF,aACGjiB,YAKd9c,GAAU4+B,EACLI,EACGzgB,EAKVt2C,qBAAQu/B,QAAS6yB,GAAa7yB,EAASsV,WAAYA,EAAYC,UAAWA,MAJnEjtC,GAAQuqD,GAAa7yB,EAAUw3B,EAAS,YA3tBjBjtD,kBAAf2qD,GACZvnD,YAAcA,GADFunD,GA4SZ76C,2BACS,oBACF66C,GAAOvnD,YAAYtB,yBCnVH,eDqVhB6oD,GAAOvnD,YAAYnB,0BCpVH,gBDsVf0oD,GAAOvnD,YAAYhB,4BCrVH,cDuVnB,0BACU,eACT,2BACc,gBACX,GAxTGuoD,GAuXZvqD,yBACOC,GAAUyM,0CAyFxB++C,YAAc,SAAC39D,OAEXs+D,EAGEt+D,EAHFs+D,kBACA3B,EAEE38D,EAFF28D,QACAh2C,EACE3mB,EADF2mB,mBAGIw3B,EAAqBn+C,EAAMw+D,oBAAsBx+D,EAAMm+C,mBAEzDl+C,EAAQw8D,GAAOwC,gBAAgBj/D,GAC7Bk/D,EAAWn/D,EAASC,EAAOokB,EAAKnkB,MAAO,UAAYA,EAAMsD,KACzD47D,EAAYl/D,EAAMq9D,SAAWl5C,EAAKnkB,MAAMq9D,QACzCr9D,EAAMs9D,SAAWn5C,EAAKnkB,MAAMs9D,QAC5Bt9D,EAAM48D,UAAYz4C,EAAKnkB,MAAM48D,WAE9ByB,IAAsBY,GAAYC,MAClBl/D,EAAMsD,MAAQ+5D,OAAQr9D,EAAMq9D,OAAQC,OAAQt9D,EAAMs9D,OAAQV,QAAS58D,EAAM48D,UAGzFqC,EAAU,KACR33B,EAAUtzB,GAAYhU,EAAMsD,MAC5B6gB,EAAKwmB,cACH5qC,EAAM+uC,iBACE/uC,EAAM+uC,eACP/uC,EAAMunC,YACLvnC,EAAMunC,cAId63B,EAAcr/D,EAASC,EAAOokB,EAAKnkB,MAAO,WAC5Ck+C,GAAuB5W,IAAY63B,KAClB73B,QAGQ,IAAlBvnC,EAAMunC,YACTA,QAAUA,IACXs2B,SAASt2B,EAAStnC,EAAMsD,KAAMojB,EAAoBg2C,EAAS18D,EAAM48D,eAE/Dz4C,EAAKwmB,aAAeu0B,MACvBvC,oBAAoC,IAAZD,EAA0BA,EAAUhpD,GAAY1T,EAAMsD,QAAUtD,EAAM48D,UAC/F98D,EAASC,EAAOokB,EAAKnkB,MAAO,oBAGT,IAAfD,EAAMuD,KAAsB,OACNtD,IAAvBsD,wBAILqnC,aAAc,IACdj5B,SAAS1R,SAGhB29D,aAAe,aACRD,YAAYv5C,EAAKpkB,aAGxB69D,SAAW,SAACt2B,EAAShkC,EAAMymB,EAAS2yC,EAASE,GACvCz4C,EAAKkK,uBACMlK,EAAKkK,UAGhBiZ,IACGjZ,SAAWxI,WAAW,aACpBwI,SAAW,OAEX3c,wBACYgrD,GAAYhpD,GAAYpQ,KAAUs5D,gBACnC,aACH,KAEZhuC,OAEEP,SAAWxI,WAAW,aACpBwI,SAAW,OAEX3c,UAAWyoD,WAAW,KAC1BpwC,KACErY,UAAWyoD,WAAW,EAAMwC,eAAe,EAAOE,cAAc,WAIzE8B,eAAiB,SAACjgB,KACX0gB,YAAc9tD,cAAYotC,SAGjCkgB,gBAAkB,SAAC56D,SAC6CmgB,EAAKpkB,MAA3Dy+D,IAAAA,oBAAqBnxB,IAAAA,UAAWixB,IAAAA,2BACO,IAAxBE,EAAsCA,EAAsBnxB,IAClE35B,GAAY5T,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,iBAIxD2E,EAAWX,EAAXW,OACCA,GAAUwf,EAAKi7C,YAAY91D,SAAS3E,IAAS,IAC9CA,EAAO0E,UAAUC,SAAS,gBAAiB,IAEA,OAAzC3E,EAAOb,aAAa,sCAInB+5D,cAAgBh4C,WAAW,aACzBg4C,cAAgB,OAEhBkB,aAAa/6D,IACjBs6D,EAAoB,IAAM1vC,OAItBjqB,EAAOyF,kBAIpB20D,aAAe,iBACmE56C,EAAKpkB,MAA7Em+C,IAAAA,mBAAoBqgB,IAAAA,mBAAoB73C,IAAAA,mBAAoBg2C,IAAAA,QAC9D/1D,EAAW43D,GAAsBrgB,EACnCv3C,MACO,QAGuB,IAAvBwd,EAAKpkB,MAAMunC,YACf51B,UAAW41B,SAAS,MACpBs2B,UAAS,EAAO99D,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,QAAS0mB,EAAoBg2C,EAASv4C,EAAKnkB,MAAM48D,YEpmBxFyC,+KA8CbpuD,KAAKlR,MApBP0I,IAAAA,MACA4rD,IAAAA,YACAC,IAAAA,gBACAplB,IAAAA,aACArsC,IAAAA,UACAgF,IAAAA,SACAy3D,IAAAA,OACAC,IAAAA,SACAC,IAAAA,UACAC,IAAAA,SACAC,IAAAA,UACAC,IAAAA,YACAC,IAAAA,cACA9I,IAAAA,YACA+I,IAAAA,WACAlJ,IAAAA,YACAC,IAAAA,cACAC,IAAAA,gBACAtQ,IAAAA,OACAuZ,IAAAA,eAGI1hB,YACEyhB,QACClJ,UACEC,YACEC,GACRC,WACMyI,aAEHE,QACCC,UACEC,YACEC,GACRJ,WACMF,KAGPS,EAAe,iBACG,IAAXxZ,IAEPx+C,6BACWq2C,QACFiW,YACItxD,GAAG,2CAA4CuxD,OAK1C,OAAX/N,MACMA,GAIfx+C,wBAAKU,MAAOA,2BACL5F,UAAWE,GAAG,mBAAoBF,GAAY4F,MAAOymC,gBAjFxBr9B,iBCQpCmuD,GAFkB,GACJ,QAUCC,0BA8PPlgE,EAAOmB,8EACXnB,EAAOmB,aA+Cfg/D,oBAAsB,eAChBC,GAAU,QACRvzD,UAAUC,MAAMC,KAAKwE,iBAAkBG,iBAAiB,qBAC3DiD,KAAK,mBAAOyrD,EAAUt/D,EAAGsL,aAAe6zD,OAEtCtuD,UAAWyuD,eAGlB9yC,aAAe,eACPsB,GAAY1M,EAAKm+C,YAAYn+C,EAAKliB,MAAOkiB,EAAKjiB,OAChDiiB,EAAKliB,MAAMsgE,kBACRtgE,MAAMsgE,eAAe1xC,QAIO,IAAxB1M,EAAKliB,MAAM4uB,YACfjd,UAAWid,gBAIpB2xC,YAAc,SAACt8D,SACmCie,EAAKliB,MAA7Cu/D,IAAAA,OAAQe,IAAAA,eAAgBE,IAAAA,YAC5BjB,KACKt7D,GAGLu8D,IACEF,MACa,QAGkB,IAAxBp+C,EAAKliB,MAAM4uB,YACfjd,UAAWid,UAAU,QAKhCwpC,cAAgB,SAACn0D,SACqCie,EAAKliB,MAAjDw/D,IAAAA,SAAUc,IAAAA,eAAgBG,IAAAA,cAC9BjB,KACOv7D,GAGPw8D,IACEH,MACa,QAGkB,IAAxBp+C,EAAKliB,MAAM4uB,YACfjd,UAAWid,UAAU,QA9FzB3uB,iBACO,WACD,QAGmB,IAAnBD,EAAM4uB,aACV3uB,MAAM2uB,SAAW5uB,EAAM+hD,uFAKzBoe,wEAGmBv8C,+CAmBP0kB,GACbp3B,KAAKlR,MAAM8b,QAAUwsB,EAAUxsB,OAAS5K,KAAKlR,MAAM0gE,iBAAmBp4B,EAAUo4B,qBAI/EP,0DAGKngE,EAAOC,eACgB,IAAnBD,EAAM4uB,SAA2B3uB,EAAM2uB,SAAW5uB,EAAM4uB,gDAsGlE1d,KAAKlR,MA3CP8C,IAAAA,UACAgZ,IAAAA,MACA4kD,IAAAA,eACAC,IAAAA,uBACA74D,IAAAA,SACA84D,IAAAA,QACAC,IAAAA,aACAnB,IAAAA,SACAC,IAAAA,UACAC,IAAAA,YACAC,IAAAA,cACAJ,IAAAA,UACAK,IAAAA,WACAlJ,IAAAA,YACAC,IAAAA,cACAC,IAAAA,gBACAC,IAAAA,YACA+J,IAAAA,YACAC,IAAAA,gBACA5xB,IAAAA,aACAC,IAAAA,iBACArhB,IAAAA,SACAizC,IAAAA,UACAxa,IAAAA,OACAuZ,IAAAA,eACAzL,IAAAA,YACAC,IAAAA,gBAGA0M,IAAAA,mBACAC,IAAAA,oBAYGlhE,KAVHmhE,iBACAvyC,WACAwhB,eACA2R,kBACAye,cACAC,gBACAlB,SACAC,WACAc,okBAIMF,EAAYlvD,KAAKjR,MAAjBmgE,QACFxxC,EAAW1d,KAAKmvD,YAAYnvD,KAAKlR,MAAOkR,KAAKjR,OAC7CkhE,EAAiBphE,EAASmR,KAAKlR,MAAOkR,KAAK/P,QAAS,kBAEtDsQ,EAAUkK,WAASvI,IAAIwb,GAAY+xC,GAA0BD,EAAgB,SAACU,EAAYh0D,UAC5FpF,oCACeg5D,EAAY,QAAU,WAAeH,EAAazzD,EAAI,cACxDpK,GAAG,gDACkBg+D,GAC7B9+D,GAAcrB,MAAM,WAMtB+L,MAAM0e,QAAQ7Z,QACNA,MAGL0c,QACNnmB,4BACM,oBACKq5D,SAAUR,EAAa,cACrB79D,GAAG,kBAAmBd,GAAcrB,MAAM,cAMrDuvC,EAAevoC,EAAkBq5D,EAAqBD,EAAoB/vD,KAAKlR,MAAMowC,uBAC1EpoC,GAAM2T,SAASC,KAAKw0B,KACpBpoC,GAAMgU,aAAao0B,aACrBntC,WACA2rB,GACR,+CAAgDwhB,EAAapwC,MAAM8C,aAItEkF,0BACMhI,aACOgD,GAAG,qDACoB4rB,GAC/B9rB,mBACY8rB,iCAGJ1d,KAAKoc,mBACPwzC,YACI99D,GAAG,+CACiB4rB,GAAYwxC,6BACbQ,GAC3BG,YACOhzC,6BAKF+P,WAAYlP,EAAUwP,QAAS+iC,8BAE9BhyB,YACIC,cACEklB,kBACIC,SACTrjD,KAAKqvD,qBACHrvD,KAAKknD,uBACLsH,YACCC,cACEC,gBACEC,YACJJ,aACCK,cACClJ,gBACEC,kBACEC,cACJC,SACLvQ,iBACQuZ,eA9dgBjuD,iBAAvBouD,GA4OZt+C,+BACY,eACH5Z,0DACH,eACA,mBACE,sBACA,WACH,eACG,iBACE,WACN,mBAtPQk4D,GA0PZhuD,6BACWC,GAAUuM,UCnQT4iD,sNAqDnBrhE,OAAU4gE,gBAAkBU,cAAe,EAAGP,WAAW,KA8BzDj3B,cAAgB,SAACvD,GACG,OAAdA,MACG3W,WAAate,cAAYi1B,UACvBp/B,iBAAiB,QAAS8a,EAAKs/C,sBAEjC37B,OAAS3jB,EAAK2N,WAAWjkB,cACzB61D,wBAITD,mBAAqB,SAACv9D,OACfA,EAAEI,OAASJ,EAAEK,WAAasM,GAAK,KAC5B8wD,EAAS90D,MAAMC,UAAUC,MAAMC,KAAKwE,iBAAkBG,iBAAiB,uBACxEC,UAAW4vD,aAAcG,EAAOlhE,QAAQyD,EAAEW,cAInD+8D,aAAe,aACRhwD,UAAW4vD,cAAe,OAGjCK,aAAe,SAACC,OACT3/C,EAAK2N,kBACD,MAGHiyC,EAAQ5/C,EAAK2N,WAAW5qB,cAAc,wBACvC68D,SACI,MAGH9wB,EAAY9uB,EAAK2N,WAAW5qB,cAAc,kCAC1C88D,EAAiB/wB,EAAYA,EAAUplC,YAAc,EACrDvK,EAASC,OAAOC,iBAAiBugE,GACjCtO,EAAWsO,EAAMl2D,YACnBc,WAAWrL,EAAO2gE,aAClBt1D,WAAWrL,EAAO4gE,cAClBF,SAEeF,EAAOnhE,OAAO,SAACu3C,EAAOiqB,UAAMjqB,EAAQiqB,GAAG,GACtC1O,KAOtB2O,iBAAmB,kBACZjgD,EAAK2N,cAIA/iB,MAAMC,KAAKmV,EAAK2N,WAAWne,iBAAiB,qBACnDhR,OAAO,SAAC0hE,EAAOxb,OAET,IADCn1C,EAAUm1C,EAAIl1C,iBAAiB,oBAC5BtE,EAAI,EAAGA,EAAIqE,EAAQnR,OAAQ8M,IAAK,KACjCm9C,EAAM94C,EAAQrE,KAEQm9C,EAAI7hD,MAAxBzG,IAAAA,MAAOo/D,IAAAA,WACX34D,MAAMzG,MAAQ,SACdyG,MAAM24D,SAAW,SAKfj0D,GAAKzF,KAAK2H,IAAIi7C,EAAI3+C,YAAaw2D,EAAMh1D,IAAM,KAC7C1E,MAAMzG,MAAQA,IACdyG,MAAM24D,SAAWA,SAGhBe,IACL,IAtBGlgD,EAAKjiB,MAAM4gE,gBAyBtBY,kBAAoB,eACVZ,EAAiB3+C,EAAKjiB,MAAtB4gE,aACFwB,EAAangD,EAAKigD,mBAClBnB,EAAY9+C,EAAK0/C,aAAaS,IAChCngD,EAAKjiB,MAAM+gE,YAAcA,GACxBH,EAAavgE,SAAW+hE,EAAW/hE,QACnC+hE,EAAW1tD,KAAK,SAACutD,EAAG90D,UAAM80D,IAAMrB,EAAazzD,SAE3CuE,UAAWkvD,aAAcwB,EAAYrB,iBAI9Cl3B,cAAgB,gBAAG7nC,IAAAA,MACTqgE,EAAyBpgD,EAAKliB,MAA9BsiE,qBACJpgD,EAAK2jB,SAAW5jC,GAAU0F,KAAKyG,IAAInM,EAAQigB,EAAK2jB,SAAWy8B,MACxDz8B,OAAS5jC,IACTw/D,sGApHEN,eADkBjwD,KAAKlR,MAAxBmhE,kEAIgBv9C,GACpB1S,KAAKlR,MAAM8H,WAAa8b,EAAU9b,eAC/B25D,+DAIUn5B,EAAWi6B,OACpBhB,EAAiBrwD,KAAKjR,MAAtBshE,aACJgB,EAAUhB,eAAiBA,GAAiBgB,EAAUhB,cAAgB,GAAKA,GAAgB,KAIpErwD,KAAKywD,cAA2C,IAA7BzwD,KAAKjR,MAAMshE,8DAIxB,IAA7BrwD,KAAKjR,MAAMshE,gBACcrwD,KAAKywD,cAAc,UAGzCp6D,oBAAoB,QAAS2J,KAAKswD,2DAkGStwD,KAAKjR,MAA/C4gE,IAAAA,aAAcU,IAAAA,aAAcP,IAAAA,YAQhC9vD,KAAKlR,MANP8H,IAAAA,SACAhF,IAAAA,UACWoiB,IAAXjS,UAGGjT,KAFHmhE,iBACAmB,yGAIIZ,EAAS/lD,WAASvI,IAAItL,EAAU,SAACuD,EAAO+B,UAAM4O,eAAa3Q,OAC1DA,EAAM5K,KAAO2M,qCAGTm0D,IAAiBn0D,aAG1BpF,yBACMhI,OACCkR,KAAK64B,wBACC/mC,GAAG,0BAA2BF,sBAExC2iC,IAAea,cAAWF,SAAUl1B,KAAK44B,0BAxMPh4B,iBAAtBwvD,GA4CZ1/C,wBACM,0BACW,IA9CL0/C,GAiDZnhC,kCACWhuB,GAAUuM,UCrDT8jD,sNA6LnBviE,OAAU4C,OAAO,EAAO+M,SAAS,KA+BjC6jC,cAAgB,SAACxvC,SACgBie,EAAKliB,MAA5ByiE,IAAAA,SAAU/uB,IAAAA,SACVgvB,EAAUz+D,EAAEW,OAAZ89D,MACJhvB,IACG+uB,IAGM71D,MAAMC,UAAUC,MAAMC,KAAK21D,GAAQz+D,KAFnCy+D,EAAM,IAAM,KAAMz+D,OAOjC08C,MAAQ,WACFz+B,EAAKliB,MAAMqC,WAIX6f,EAAKoM,WACFsyB,gBAAiB,IAEjBjvC,UAAW/B,SAAS,QAI7BihB,eAAiB,SAAC5sB,GACZie,EAAKliB,MAAM01C,aACR11C,MAAM01C,UAAUzxC,KAGlB08C,WAGP/vB,iBAAmB,SAAC3sB,GACdie,EAAKliB,MAAMy1C,eACRz1C,MAAMy1C,YAAYxxC,GAGpBie,EAAKliB,MAAMqC,YACTsP,UAAW/B,SAAS,OAI7BkhB,kBAAoB,SAAC7sB,GACfie,EAAKliB,MAAMuuC,gBACRvuC,MAAMuuC,aAAatqC,GAGrBie,EAAKliB,MAAMqC,YACTsP,UAAW/B,SAAS,OAI7BmhB,gBAAkB,SAAC9sB,GACbie,EAAKliB,MAAM0uC,cACR1uC,MAAM0uC,WAAWzqC,KAGnB08C,UACY,gBAGnBlzB,aAAe,SAACxpB,GACVie,EAAKliB,MAAM0tB,WACR1tB,MAAM0tB,QAAQzpB,IAIhBA,EAAEI,OAASJ,EAAEK,WAAasM,YACtBxJ,iBAAiB,QAAS8a,EAAKy+B,SACjChvC,UAAW/B,SAAS,QAI7B2d,eAAiB,SAACtpB,GACZie,EAAKliB,MAAMwtB,aACRxtB,MAAMwtB,UAAUvpB,OAGjBxD,EAAMwD,EAAEI,OAASJ,EAAEK,QAErB7D,IAAQmQ,WACHrJ,oBAAoB,QAAS2a,EAAKy+B,SACpChvC,UAAW/B,SAAS,KAChBnP,IAAQ+D,IAAS/D,IAAQiE,OAChCI,mBACAF,OAAOM,YAIbkpC,iBAAmB,SAACnqC,GACdie,EAAKliB,MAAMquC,eACRruC,MAAMquC,YAAYpqC,GAGpBie,EAAKliB,MAAMqC,YACTsP,UAAW9O,OAAO,OAI3ByuB,kBAAoB,SAACrtB,GACfie,EAAKliB,MAAMsuC,gBACRtuC,MAAMsuC,aAAarqC,GAGrBie,EAAKliB,MAAMqC,YACTsP,UAAW9O,OAAO,sFAtID+gB,GACpB1S,KAAKlR,MAAMqC,WAAauhB,EAAUvhB,UAAY6O,KAAKjR,MAAM4C,YACtD8O,UAAW9O,OAAO,gDAIP+gB,EAAW8wB,eAGxBxjC,KAAKjR,MAAM2P,SAAW8kC,EAAU9kC,eAC9B0e,SAAWxI,WAAW,aACpBwI,SAAW,KACZlK,EAAKw8B,mBACFA,gBAAiB,IAEjBjvC,UAAW/B,SAAS,MAE1B,qDAKDsB,KAAKod,uBACMpd,KAAKod,iBAGb/mB,oBAAoB,QAAS2J,KAAKyvC,8CAiHdzvC,KAAKjR,MAAxB4C,IAAAA,MAAO+M,IAAAA,UAuCXsB,KAAKlR,MArCP0I,IAAAA,MACA5F,IAAAA,UACAu8C,IAAAA,WACA5B,IAAAA,eACA3hC,IAAAA,MACAtZ,IAAAA,QACAC,IAAAA,UACA+M,IAAAA,KACA4B,IAAAA,GACA7L,IAAAA,KACA+5C,IAAAA,WACAj9C,IAAAA,SACAsgE,IAAAA,OACAF,IAAAA,SACA9yD,IAAAA,YACAizD,IAAAA,gBACAv7D,IAAAA,QAGAm2C,IAAAA,aACAv1C,IAAAA,cAgBGjI,KAdH+H,OACA2rC,WACAhmB,UACAF,YACAkoB,YACAD,cACApH,cACAC,eACAC,eACAG,aAGAjiC,0WAII1E,EAASmJ,KAAKlR,MAAd+H,MACFE,GAAiBu1C,OACZx1C,qBAAUC,cAAeA,WAG9B46D,EAAgB/mD,EAChB/T,MACKC,GAAMgU,aAAajU,GAAQrF,SAAS,MAC3BsF,qBAAe8T,MAAOA,EAAOwjC,WAAYA,WAGvD7yC,gBACAm2D,MACM,IAIR56D,6BACMhI,SACG0I,YACI1F,GAAG,0CAA2CF,oCAG7C,gBACDsO,WACC/O,eACI6O,KAAK4f,6BACP5f,KAAK6f,4BACJ7f,KAAK0f,2BACP1f,KAAK2f,yBACL3f,KAAKqc,uBACPrc,KAAKuc,yBACDvc,KAAKk9B,8BACJl9B,KAAKogB,wBACZ+tB,YACI9vC,kBAEAC,oEAORiuC,oCAKCrsC,OACE7L,SACEo9D,OACH,gBACKF,WACApgE,gBACE,iBACF,yBACA6O,KAAKuiC,oBACRhnC,YACI,UACFpF,YA9aoByK,iBAAlB0wD,GAuLZ5gD,oBACE,qBACD5Z,yDACW,OCxKA86D,sNA2MnB7iE,WAUA8iE,MAAQ,SAACC,OACHC,EAAWD,EACVA,EAG2B,iBAAdA,EAAKz9D,SACVy9D,EAAKz9D,QAFLzF,OAAOO,KAAK6hB,EAAKjiB,OAAO,OAK/BijE,EAAShhD,EAAKjiB,MAAMgjE,GACtBC,MACKH,yBACW99D,cAAc,kBAAkBwH,MAAQ,KAErDkF,SAASxR,EAAK+hB,EAAKjiB,OAAQgjE,SAIpCE,YAAc,SAACH,SAST9gD,EAAKliB,MAPPojE,IAAAA,QACAC,IAAAA,QACAC,IAAAA,OACAC,IAAAA,YACAC,IAAAA,UACAC,IAAAA,WACAC,IAAAA,OAGMn+D,EAAey9D,EAAfz9D,KAAMhC,EAASy/D,EAATz/D,KAERogE,EAAK,IAAIC,kBACXP,MACCQ,QAAU,cACHb,EAAM/+D,EAAEW,OAAOtC,MAAO2B,KAI9Bm/D,MACCU,QAAU,cACHd,EAAM/+D,KAIds/D,MACCQ,YAAc,cACHf,EAAM/+D,KAIlBu/D,MACCQ,UAAY,cACHhB,EAAM/+D,OAIjBggE,OAAS,YACNX,KACKN,EAAM/+D,EAAEW,OAAO+a,OAAQ1b,KAG3B0N,SAASxR,EAAK+hB,EAAKjiB,OAAQsF,MAG9Bk+D,MACCS,WAAa,YACVjgE,EAAEkgE,oBACOnB,EAAO/+D,EAAEmgE,OAASngE,EAAEg0C,MAAS,IAAKh0C,KAK/Cy/D,EACoB,mBAAXA,IACFngE,EAAMy/D,EAAMW,cAEPD,GAAUV,GAEfz/D,EAAKsB,MAAM,uCAAyCU,EAAKV,MAAM,YACrEw/D,cAAcrB,GACRz/D,EAAKsB,MAAM,uBACjBy/D,WAAWtB,GACLz/D,EAAKsB,MAAM,gCAAkCU,EAAKV,MAAM,cAC9D0/D,kBAAkBvB,KAElBsB,WAAWtB,GAGTW,KAGTa,cAAgB,SAACC,EAAUxgE,MACrBie,EAAKliB,MAAM0zC,YACR1zC,MAAM0zC,SAAS+wB,EAAUxgE,GAG3BwgE,SAC4BviD,EAAKliB,MAA9B0kE,IAAAA,QAASC,IAAAA,YACbjC,EAAQ91D,MAAM0e,QAAQm5C,GAAYA,GAAYA,GAE9CG,QACAF,MACWhC,EAAMniE,OAAO,mBAAQyiE,EAAK/1D,KAAOy3D,MACtChC,EAAMniE,OAAO,mBAAQyiE,EAAK/1D,MAAQy3D,KAGxCE,EAAWtkE,UACDskE,GAGTlC,EAAMpiE,YAILo0C,OACAh3B,QAAQ,gBACNmnD,EAAa3iD,EAAKihD,YAAYH,KAC1BA,EAAKz9D,MAAQs/D,MAGpBlzD,SAAS+iC,4EAiBVxjC,KAAKlR,MADJA,KAVH0kE,UACAhB,SACAJ,SACAC,cACAC,YACAC,aACAL,UACAC,UACAsB,iIAKK38D,iBAACw6D,SAAcxiE,GAAO0zC,SAAUxiC,KAAKszD,wBAhWR1yD,iBC7BlC+hD,IACJ,YACA,UACA,YACA,YACA,SACA,WAGmBiR,0BAiGP9kE,yFAGLC,OAAU6C,UAAWgiE,EAAKC,aAAa/kE,2EAb1BA,4DACV8C,EAA8D9C,EAA9D8C,UAAW+/C,EAAmD7iD,EAAnD6iD,QAASmiB,EAA0ChlE,EAA1CglE,UAAWC,EAA+BjlE,EAA/BilE,OAAQC,EAAuBllE,EAAvBklE,QAAS1+B,EAAcxmC,EAAdwmC,iBACjDlyB,GAAI,sBACEuuC,eACGmiB,QACVC,MAAUC,EAAYp2D,EAASm2D,IAAWn2D,EAASo2D,SACtD1+B,EAAYA,MACZ1jC,6DAUE6O,UAAW7O,UAAWgiE,EAAKC,aAAa7zD,KAAKlR,2DAG1B4jB,cACpBiwC,GAAUl/C,KAAK,mBAAOyP,EAAKpkB,MAAMS,KAASmjB,EAAUnjB,WACjDkR,UAAW7O,UAAWgiE,EAAKC,aAAanhD,0CAKvC9gB,EAAcoO,KAAKjR,MAAnB6C,YAcJoO,KAAKlR,MAZP0I,IAAAA,MACWwc,IAAXjS,UACAnL,IAAAA,SASG9H,KAPH8C,YACA0jC,YACAqc,UACAmiB,YACAC,SACAC,uHAKsB,mBAAbp9D,EACFA,GAAWY,QAAO5F,cAGpBkF,yBAAehI,GAAO0I,MAAOA,EAAO5F,UAAWA,cAtIxBgP,iBAAbgzD,GAmEZljD,wBACM,eACF,aACE,GChFf,IAAMiyC,IACJ,YACA,QACA,WACA,OACA,SACA,QACA,YACA,aACA,cACA,cACA,aACA,cACA,eACA,eACA,cACA,eACA,gBACA,iBAGmBjK,0BAgNP5pD,yFAGLC,OAAU6C,UAAW8mD,EAAKmb,aAAa/kE,2EA9C1BA,4DAEhB8C,EAkBE9C,EAlBF8C,UACAqiE,EAiBEnlE,EAjBFmlE,MACAn6D,EAgBEhL,EAhBFgL,SACAiC,EAeEjN,EAfFiN,KACAm4D,EAcEplE,EAdFolE,MACAz5D,EAaE3L,EAbF2L,OACA05D,EAYErlE,EAZFqlE,UACAC,EAWEtlE,EAXFslE,WACAC,EAUEvlE,EAVFulE,YACAC,EASExlE,EATFwlE,YACAC,EAQEzlE,EARFylE,WACAC,EAOE1lE,EAPF0lE,YACAC,EAME3lE,EANF2lE,aACAC,EAKE5lE,EALF4lE,aACAC,EAIE7lE,EAJF6lE,YACAC,EAGE9lE,EAHF8lE,aACAC,EAEE/lE,EAFF+lE,cACAC,EACEhmE,EADFgmE,qBAGK1xD,GAAI,qBACR6wD,EAAQA,QACRn6D,EAAWA,QACXiC,EAAOA,iBACEm4D,EAAUA,QAChBz5D,YAAkBA,QAClB05D,WAAoBA,iBACdC,WAAqBA,QAC3BC,kBAA6BA,QACjC,eAAgBC,QACZC,YAAsBA,iBAChBC,YAAuBA,QAC7BC,mBAA+BA,QACnC,gBAAiBC,QACbC,aAAwBA,iBAClBC,aAAyBA,QAC/BC,oBAAiCA,QACrC,iBAAkBC,MACjBljE,6DAUE6O,UAAW7O,UAAW8mD,EAAKmb,aAAa7zD,KAAKlR,2DAG1B4jB,cACpBiwC,GAAUl/C,KAAK,mBAAOyP,EAAKpkB,MAAMS,KAASmjB,EAAUnjB,WACjDkR,UAAW7O,UAAW8mD,EAAKmb,aAAanhD,0CAKvC9gB,EAAcoO,KAAKjR,MAAnB6C,YA0BJoO,KAAKlR,MAxBP0I,IAAAA,MACWwc,IAAXjS,UACAnL,IAAAA,SAqBG9H,KAnBH8C,YACAqiE,QACAn6D,WACAiC,OACAtB,SACAy5D,QACAC,YACAC,aACAC,cACAC,cACAC,aACAC,cACAC,eACAC,eACAC,cACAC,eACAC,gBACAC,8RAKsB,mBAAbl+D,EACFA,GAAWY,QAAO5F,cAGpBkF,yBAAehI,GAAO0I,MAAOA,EAAO5F,UAAWA,cAjQxBgP,iBAAb83C,GAgJZhoC,wBACM,mBACE,gBACC,iBACC,GCvKnB,IAAMiyC,IACJ,YACA,gBACA,UACA,YACA,YACA,SACA,UACA,QACA,WACA,OACA,SACA,QACA,YACA,aACA,cACA,cACA,aACA,cACA,eACA,eACA,cACA,eACA,gBACA,iBAGmBoS,0BA2NPjmE,yFAGLC,MAAQgmE,EAASC,cAAclmE,yEAXjBA,4DACX8C,EAA2C9C,EAA3C8C,UAAWqjE,EAAgCnmE,EAAhCmmE,cAAkB1xD,KAAczU,kDAEtC8kE,GAAKC,iBAAejiE,aAAc2R,kBAC9Bm1C,GAAKmb,iBAAejiE,UAAWqjE,GAAkB1xD,+DAW7D9C,SAASs0D,EAASC,cAAch1D,KAAKlR,0DAGlB4jB,cACpBiwC,GAAUl/C,KAAK,mBAAOyP,EAAKpkB,MAAMS,KAASmjB,EAAUnjB,WACjDkR,SAASs0D,EAASC,cAActiD,2CAKF1S,KAAKjR,MAAlC6C,IAAAA,UAAWqjE,IAAAA,gBAiCfj1D,KAAKlR,MA/BP0I,IAAAA,MACA09D,IAAAA,UACWlhD,IAAXjS,UACAnL,IAAAA,SA2BG9H,KAzBH8C,YACAqjE,gBACA3/B,YACAw+B,YACAniB,UACAoiB,SACAC,UACAC,QACAn6D,WACAiC,OACAtB,SACAy5D,QACAC,YACAC,aACAC,cACAC,cACAC,aACAC,cACAC,eACAC,eACAC,cACAC,eACAC,gBACAC,+WAKsB,mBAAbl+D,EACFA,GAAWY,QAAO5F,YAAWsjE,YAAWD,kBAI/Cn+D,yBAAehI,GAAO0I,MAAOA,EAAO5F,UAAWA,OACtC6Y,SAASvI,IAAItL,EAAU,SAACuD,OACxBA,SACIA,MAGLg9B,EAAah9B,EAAMrL,MAAM0I,aACzB09D,MACW/9B,QAAkB+9B,EAAc/9B,GAAe+9B,GAGvDp+D,GAAMgU,aAAa3Q,SACjBg9B,YACIrlC,GAAGqI,EAAMrL,MAAM8C,UAAWqjE,eAjSXr0D,iBAAjBm0D,GA4LZrkD,wBACM,eACF,aACE,eACE,gBACC,iBACC,OC5NEykD,+KAmHbn1D,KAAKlR,MAbP8C,IAAAA,UACAmsC,IAAAA,UACAC,IAAAA,cACAo3B,IAAAA,cACAC,IAAAA,gBACA5zD,IAAAA,YACAysB,IAAAA,cACAG,IAAAA,WACAqQ,IAAAA,SACAC,IAAAA,WACAC,IAAAA,UACAC,IAAAA,YACG/vC,iLAGD8nD,EAAUnsC,WAASC,KAAK0qD,GAAiBC,GACvC1lE,EACJmH,iBAACi3B,QACK,mBACS6oB,EAAQ9nD,MAAM8b,OAASnJ,gBACrBysB,YACJp8B,iCACqB4sC,iCACEC,iCACAy2B,mCACEA,QAI9BtqD,eAAa8rC,aACV9kD,GAAG,4CACcujE,GACzBze,EAAQ9nD,MAAM8C,iBACVjC,QAGHgwC,EACJ7oC,iBAAC62B,QACK,kBACE+Q,SACEC,IAINiB,EACJ9oC,iBAAC62B,QACK,mBACEiR,SACEC,IAINkB,IAAUrB,KAAcE,EACxBoB,IAAYrB,KAAgBE,SAGhC/nC,4BAAQhI,GAAO8C,UAAWE,GAAG,eAAgBF,mCAElCmsC,YACIjsC,GAAG,sCACWo8B,GAAiB6R,IAAUC,0BACzB9R,GAAiB8R,4BACf9R,IAAkBG,8BAChBH,GAAiBG,+BAChB+mC,gCACCC,GAC9BrkE,GAAcrB,MAAM,IAASquC,mBAxKGp9B,iBCYxB00D,+KAqDbt1D,KAAKlR,MAPIklB,IAAXjS,UACAnQ,IAAAA,UACAgF,IAAAA,SACA2+D,IAAAA,YACAC,IAAAA,YAEG1mE,KADHyiD,uGAKAz6C,yBACMhI,aACOgD,GAAG,8BACE0jE,EAAgBD,GAC7B3jE,eA5DwBgP,iBAAd00D,GAsCZ5kD,2BACQ,cACA,iBACF,eCpDM+kD,+KAiCqCz1D,KAAKlR,MAAnD8C,IAAAA,UAAsBoiB,IAAXjS,UAAyBjT,yCACrCgI,iBAACkd,MAAUpiB,UAAWE,GAAG,mBAAoBF,IAAgB9C,WAlC9B8R,iBAArB60D,GA4BZ/kD,wBACM,WClCMglD,+KASyC11D,KAAKlR,MAAvDgjD,IAAAA,MAAOlgD,IAAAA,UAAW+jE,IAAAA,UAAWl7D,IAAAA,OAAW3L,uDAC3CgjD,SACI,SAGH8jB,EAAgB9jE,GAAG,4DACQ6jE,6BACHl7D,GAC3B7I,MAEC8P,iBAAeowC,GAAQ,KACnB+jB,EAAUprD,WAASC,KAAKonC,UACvBhnC,eAAagnC,QACfhjD,MACC+mE,EAAQ/mE,MAAMoR,IAAMpR,EAAMoR,aACnBpO,GAAG8jE,EAAeC,EAAQ/mE,MAAM8C,qBAK7CkF,4BACMhI,aACO8mE,cA/BuBh1D,iBCMrBk1D,+KA+Lb91D,KAAKlR,MA/BP0I,IAAAA,MACA5F,IAAAA,UACAmQ,IAAAA,UACAmhD,IAAAA,WACAC,IAAAA,eACA4S,IAAAA,eACAC,IAAAA,OACAC,IAAAA,YACA9oB,IAAAA,QACAvuC,IAAAA,MACAhI,IAAAA,SACAw2B,IAAAA,MACA62B,IAAAA,QAcAgH,KAZAiL,MACApkB,QACAqkB,YACAlqB,SACAI,UACAspB,YAGApoB,iBACAC,qBAGAyd,YACAmL,IAAAA,aACA9kE,IAAAA,QACAC,IAAAA,UACGzC,kTAUDkR,KAAKlR,MANPu9C,IAAAA,QACAyF,IAAAA,MACAqkB,IAAAA,UACAD,IAAAA,IACAP,IAAAA,UACA1pB,IAAAA,YAGQI,GAAW/6C,GAAWC,IACpBokE,GAAaI,IAGvBj/D,iBAAC4+D,QACK,cACGxS,YACIC,YACA4S,SACHA,UACe,IAAZ9R,GAA2Bn1D,EAAMoR,GAAQpR,EAAMoR,YAAa+jD,QAChEnS,IAIPokB,GAAOjL,EAAY,KACfoL,EAAQ5rD,WAASC,KAAKwrD,GAAOjL,KAC7BngD,eAAaorD,aACNpkE,GAAG,0CAA2CukE,EAAMvnE,MAAM8C,iBAIrE0kE,gBACAnpB,GAAWipB,OACE3rD,WAASvI,IAAIuI,WAASuS,QAAQmwB,GAAWipB,GAAe,mBAAUtrD,eAAa4iC,aACjF57C,GAAG,kBAAmB47C,EAAO5+C,MAAM8C,iBAI9CkF,wBAAKvH,IAAI,UAAUqC,UAAU,+CAM7BukE,MACU1rD,WAASC,KAAKyrD,KACdrrD,eAAaqrD,aACZrkE,GAAG,kFACgBikE,gCACGA,GAC9BI,EAAUrnE,MAAM8C,oBACTukE,EAAUrnE,MAAMgL,UAAY,cAC7B,KAIS,iBAAXmyC,MACArtC,EAAQ,EAAI,GAIrB9H,0BACMhI,aACOiT,SACHkqC,QACDz0C,YACI1F,GAAG,uCACcu6C,uBACJ2pB,2BACIC,GAAe5pB,0BAChBspB,sBACJ/2D,sBACAwuB,GACpBx7B,uBA1Q0BgP,iBAAhBk1D,GAyJZplD,2BACQ,YACF,cCzJM6lD,sNAqBnBn6C,aAAe,SAACrpB,GACVie,EAAKliB,MAAMkE,WACRlE,MAAMkE,QAAQD,YAGZ4iC,eAAe3kB,EAAK/gB,QAAQiQ,IAAI8b,+EAIThc,KAAKlR,MAA7B8C,IAAAA,UAAc9C,wBACAkR,KAAK/P,QAAnBiQ,IAAAA,GAAI0K,IAAAA,aAEV9T,2BACMhI,iBACWoR,WACLA,UACDF,KAAKoc,uBACHtqB,GAAG,kBAAmBF,eAtCMgP,iBAA1B21D,GAaZv1D,iBACDC,GAAUC,WACZD,GAAUE,OACVF,GAAUG,SACTiM,iBACIpM,GAAUzO,KAAK6a,gBClBLmpD,sNAkBnBp6C,aAAe,SAACrpB,GACVie,EAAKliB,MAAMkE,WACRlE,MAAMkE,QAAQD,GAGjBie,EAAK/gB,QAAQwmE,gBACVxmE,QAAQwmE,aAAa1jE,wEAKpB2jE,EAAc12D,KAAK/P,QAAnBymE,iBAGN5/D,iBAAC04C,SACKxvC,KAAKlR,mBAEL,gBACKkR,KAAKoc,oBACNs6C,YArCyB91D,iBAApB41D,GAaZx1D,wBACMC,GAAU0C,qBACP1C,GAAUwM,UCpBPtJ,sNAkCnBpV,OAAUkoB,QAAQ,KAQlBimB,iBAAmB,SAACnqC,GACdie,EAAKliB,MAAMquC,eACRruC,MAAMquC,YAAYpqC,GAGpBie,EAAKliB,MAAMqC,YACTsP,UAAWwW,QAAQ,OAI5BmJ,kBAAoB,SAACrtB,GACfie,EAAKliB,MAAMsuC,gBACRtuC,MAAMsuC,aAAarqC,GAGrBie,EAAKliB,MAAMqC,YACTsP,UAAWwW,QAAQ,OAI5B2I,kBAAoB,SAAC7sB,GACfie,EAAKliB,MAAMuuC,gBACRvuC,MAAMuuC,aAAatqC,KAGrBuqC,UAAW,IAEX78B,UAAWwW,QAAQ,EAAMsmB,UAAW74B,KAAK+Z,WAGhDoB,gBAAkB,SAAC9sB,GACbie,EAAKliB,MAAM0uC,cACR1uC,MAAM0uC,WAAWzqC,OAGlBgU,EAAOrC,KAAK+Z,MAAQzN,EAAKjiB,MAAMwuC,YAChCE,cAAgB7oB,WAAW,aACzB6oB,cAAgB,OAEhBh9B,UAAWwW,QAAQ,KACvBlQ,EAAO,IAAM,EAAI,IAAMA,kFA7CtB/G,KAAKy9B,4BACMz9B,KAAKy9B,sDA6EhBz9B,KAAKlR,MA5BP0I,IAAAA,MACA5F,IAAAA,UACAmsC,IAAAA,UACAC,IAAAA,cACAU,IAAAA,SACAC,IAAAA,WACA1nB,IAAAA,OACAkC,IAAAA,gBACeimB,IAAfC,cAmBGvwC,KAjBH2S,cACAysB,gBACA0Q,YACAC,cACAxQ,aACAz3B,WACAgnC,cACA1B,SACA9O,QACAvrB,cACAo9B,qBACAC,eAGA5C,uBACAC,yWAMAzlC,oBAAeU,MAAOA,EAAO5F,UAAWA,6BAEhC9C,SACGivC,YACIjsC,GAAG,6EACYkO,KAAKjR,MAAMkoB,SAAWjX,KAAKs9B,UAClDU,eACUh+B,KAAKk9B,8BACJl9B,KAAKogB,+BACLpgB,KAAK4f,6BACP5f,KAAK6f,mCAEhB8N,WACS1W,kBACSkC,OACXulB,SACEC,aAtIsB/9B,iBAArBuD,GA4BZuM,8BACY,mCACN,oBACI,U5KrBX1M,GAAgBunD,GAAhBvnD,YAsCa2yD,0BA6tBP7nE,8EACJA,mBAEE08D,EAAoD18D,EAApD08D,aAAc3tB,EAAsC/uC,EAAtC+uC,eAAgB+4B,EAAsB9nE,EAAtB8nE,oBAEjC7nE,cACK6nE,GAAsC,WAAjBpL,SACrBoL,GAAsC,WAAjBpL,UACpBoL,GAAsC,YAAjBpL,QAGA,IAArB18D,EAAM+nE,eACV9nE,MAAM8nE,WAAa/nE,GAAS8nE,GAAqBpL,sBAGlDn5D,EAAOxD,EAASC,EAAOkiB,EAAKjiB,MAAO,0BAEZ,IAAlBD,EAAMunC,YAEVtnC,MAAMsnC,QAAUtzB,GAAY1Q,GAC5B2e,EAAKjiB,MAAMsnC,cAAqC,IAAnBwH,MAC3B9uC,MAAMsnC,QAAUwH,4EAjCJ/uC,yDAAQ6nE,EAAiBjmD,aAE1Bs7C,EAKhBl9D,EALFgoE,iBACkB7K,EAIhBn9D,EAJFioE,iBACmB7K,EAGjBp9D,EAHFkoE,kBACoB7K,EAElBr9D,EAFFmoE,mBACGC,KACDpoE,2FAEGy8D,GAAOwC,oBAAkB/B,aAAYC,aAAYC,cAAaC,gBAAiB+K,4DAwClFl3D,KAAKlR,MATPqoE,IAAAA,eACWj3D,IAAXk3D,UACWxsD,IAAXysD,UAGAC,IAAAA,uBACAC,IAAAA,wBACAC,IAAAA,gDAOW7gE,IANX8gE,oBAOwBF,EACtBC,GAAqBF,EACrBH,gBAEYn3D,KAAK03D,6BACP13D,KAAK/P,QAAQ07C,8DAIHj5B,GACR7jB,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,aAChCF,EAAS6jB,EAAW1S,KAAKjR,MAAO,iBAE1C49D,SAASj6C,kDAKZ1S,KAAKod,uBACMpd,KAAKod,iDAwIhBpd,KAAKlR,MAxEPoR,IAAAA,GACA1I,IAAAA,MACA5F,IAAAA,UACA+lE,IAAAA,aACAC,IAAAA,iBACAC,IAAAA,YACAC,IAAAA,gBACA75B,IAAAA,aACAC,IAAAA,iBACkBolB,IAAlBC,iBACAwU,IAAAA,gBACAC,IAAAA,oBACAC,IAAAA,aACAC,IAAAA,iBACAC,IAAAA,aACAC,IAAAA,eACArL,IAAAA,SACAn2D,IAAAA,SACAyhE,IAAAA,SACAC,IAAAA,YACAC,IAAAA,aACAC,IAAAA,eACAC,IAAAA,qBACAC,IAAAA,yBACAC,IAAAA,UACAC,IAAAA,aACAC,IAAAA,iBACAC,IAAAA,kBACAC,IAAAA,sBACAC,IAAAA,eACAC,IAAAA,iBACAC,IAAAA,sBACAC,IAAAA,iBACAC,IAAAA,mBACAC,IAAAA,gBACAC,IAAAA,cACkBtN,IAAlB8K,iBACkB7K,IAAlB8K,iBACmB7K,IAAnB8K,kBACAtjD,IAAAA,eACAI,IAAAA,uBACAD,IAAAA,uBACA0lD,IAAAA,YACAC,IAAAA,iBACAC,IAAAA,mBACAnkB,IAAAA,OACAokB,IAAAA,oBACAtC,IAAAA,UACA5T,IAAAA,aACAyT,IAAAA,mBACA0C,IAAAA,cAGAC,KAAAA,sBACAC,KAAAA,uBACAC,KAAAA,iBACAC,KAAAA,kBAeGjrE,MAbH+nE,aACAmD,eACAruB,aACA0rB,YACAF,iBAGA8C,iBACAzC,oBACAC,qBACAH,yBACAC,ypCAKIyC,GAAiBh6D,KAAKlR,MAAtBkrE,gBACqCh6D,KAAKjR,MAAxC48D,MAAAA,QAASU,MAAAA,OAAQ6N,MAAAA,cAEnBrD,GAAahoE,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,cAC9CsnC,GAAUxnC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,WAC3C48C,GAAa98C,EAASmR,KAAKlR,MAAOkR,KAAK/P,QAAS,cAChD0O,GAAOwE,GAAO0zD,IACdrJ,GAAY/qD,GAAYo0D,IACxBsD,GAAav3D,GAAai0D,IAC1BuD,GAAUvD,KAAe7yD,GAAYf,QACrCzE,GAAWq4D,KAAe7yD,GAAYd,SAEtCzI,GAAUkxD,IAAWU,IAAUmB,IAAan3B,GAAUA,GACtDgkC,GAAkBvoE,2BACEmnE,IAAqBC,mCACXD,GAAoBC,IAGpDhD,WACA1I,IAAa2M,SAEbrjE,iBAAC04C,QACK,cACKxvC,KAAK03D,2BACJyC,IAAc9jC,kBAEhB1/B,EACNojE,IAAqBF,GACrBC,IAAoBF,GACpBD,UAMJW,UACAH,QACYrjE,iBAAC0/D,WAGZwD,IAAgBN,OAEjB5iE,yBACM,sBACGwhE,UACEjiC,IAAW6/B,GAAMoE,GAAc,eAC7BxoE,GAAG,oDACXuoE,GAAkBD,IAAW57D,yBAI/B+3D,eAIHgE,aACA57D,GAAM,KACJ67D,UACAjB,OAEAziE,wBACMshE,MACA,uBACGH,YACInmE,GAAGomE,EAAkBmC,OAEtBn4D,IAAI+B,SAMlBnN,wBACMqhE,MACA,mBACEtB,cACMlrB,iBACCtV,SACN0hC,YACIC,eASXnD,IAAiBuF,KAAY57D,IAAY/D,UAG7C3D,wBAAKoJ,GAAIA,EAAI1I,MAAOA,EAAO5F,UAAWA,2BAE9B+mE,UAC0B,YAArBQ,SACoB,WAArBA,cACKC,QACNzB,YACI7lE,8BACkBsoE,IAAW57D,IAAaG,KAAS03B,IAC3DuhC,SACIgB,YACIC,YACAI,iBACKC,aACJJ,iBACIhnE,8BACaooE,iCACIz/D,IAAU47B,iCACV57B,KAAW47B,gCACZw+B,IAAiB9xD,GAAY8zD,kCAC5BhC,IAAiBsF,IAC/CpB,OACE7C,WACI8C,kBAEDM,mCAMJxqE,OACAupE,eACUpB,qBACMyB,SACZsB,SACDnC,YACIC,WACD/K,aACEphB,cACAqgB,aACAC,cACCC,OACPpoD,GAAe+yD,YACZxgC,UACDkiC,qBACYv4D,KAAKy6D,oCACNz6D,KAAK06D,iDAKpBlX,MACA4T,YACO9T,iBACK5vC,oBACGI,yBACKA,oBACLD,yBACKA,YACb,QACJoqB,YACInsC,GAAG,uEAC4BooE,6CACG7jC,oDACO4iC,GAAoBC,gCACvC7iC,kCACCA,wBACV57B,8BACMkE,MAAU03B,IAAWm3B,KAChD6M,GAAiBn8B,kBAtkCgBt9B,iBAAzB+1D,GACZgE,qBAEI,OACH,uPAKC36D,KAAK28B,iBACAvrC,MAAM4O,KAAK46D,KAAK1wD,QAAQ,YAAa,qBAE1CyyB,SAAU,EAER34B,GAAYhB,kCAIdhD,KAAK28B,iBACAvrC,MAAM4O,KAAK46D,KAAK1wD,QAAQ,YAAa,iBAE1CyyB,SAAU,EAER34B,GAAYf,+BAIdjD,KAAK28B,iBACAvrC,MAAM4O,KAAK46D,KAAK1wD,QAAQ,YAAa,kBAE1CyyB,SAAU,EAER34B,GAAYd,kCAIdlD,KAAK28B,iBACAvrC,MAAM4O,KAAK46D,KAAK1wD,QAAQ,YAAa,oBAE1CyyB,SAAU,EAER34B,GAAYnB,yCAId7C,KAAK28B,iBACAvrC,MAAM4O,KAAK46D,KAAK1wD,QAAQ,YAAa,yBAE1CyyB,SAAU,EAER34B,GAAYlB,wCAId9C,KAAK28B,iBACAvrC,MAAM4O,KAAK46D,KAAK1wD,QAAQ,YAAa,mBAE1CyyB,SAAU,EAER34B,GAAYtB,uCAId1C,KAAK28B,iBACAvrC,MAAM4O,KAAK46D,KAAK1wD,QAAQ,YAAa,wBAE1CyyB,SAAU,EAER34B,GAAYrB,iBApEJg0D,GAyEZ3yD,YAAcA,GAzEF2yD,GA6pBZ31D,yBACOC,GAAUyM,QA9pBLipD,GAiqBZ1nC,6BACMhuB,GAAU0C,qBACP1C,GAAUwM,QACpBxM,GAAUC,WACZD,GAAUE,OACVF,GAAUG,SACTiM,iBACIpM,GAAUzO,KAAK6a,sBACVpM,GAAUyM,QAzqBLipD,GA4qBZjmD,wBACM66C,GAAO76C,aAAa0rB,oBACpB,mCAIS,YACT,+BACE,WACHmvB,GAAO76C,aAAa5W,sBAChByxD,GAAO76C,aAAa86C,8BAChBD,GAAO76C,aAAas7C,4BACpBT,GAAO76C,aAAau7C,6BACnBV,GAAO76C,aAAaw7C,2BACvBX,GAAO76C,aAAam7C,8BACpBN,GAAO76C,aAAao7C,+BACnBP,GAAO76C,aAAaq7C,qCAChB,mBACH,qBACHj1D,kDACG,yBACFA,sDACA,uCACQ,6BACEy0D,GAAO76C,aAAa+E,sDA2FhDk3C,SAAW,eAAC79D,yDAAQokB,EAAKpkB,MACnB2T,GAAY5T,EAASC,yDADaokB,EAAKnkB,MACJ,iBAInCmkB,EAAKkK,uBACMlK,EAAKkK,YAGfA,SAAWxI,WAAW,aACpBnU,UAAWy5D,eAAe,KAC9BprE,EAAM4pE,4BAEJj4D,UAAWy5D,eAAe,WAGjCxC,kBAAoB,SAAC3kE,SACgDmgB,EAAKpkB,MAAhEw+D,IAAAA,mBAAoBrgB,IAAAA,mBAAoBgtB,IAAAA,eAC1C5jC,GAAWxnC,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,WAC5C2G,EAAWu3C,GAAsBqgB,GAAsB2M,EACzDvkE,KACO2gC,EAAStjC,QAGc,IAAvBmgB,EAAKpkB,MAAMunC,YACf51B,UAAW41B,cACXs2B,SAASz5C,EAAKpkB,cAIvB2rE,kBAAoB,SAACpkC,SACgDnjB,EAAKpkB,MAAhEw+D,IAAAA,mBAAoBrgB,IAAAA,mBAAoBgtB,IAAAA,eAC1CvkE,EAAWu3C,GAAsBqgB,GAAsB2M,EACzDvkE,KACO2gC,QAGuB,IAAvBnjB,EAAKpkB,MAAMunC,YACf51B,UAAW41B,cACXs2B,SAASz5C,EAAKpkB,cAIvB4rE,kBAAoB,SAAC7D,EAAYgE,OACvBzN,EAAsBl6C,EAAKpkB,MAA3Bs+D,kBACJr+D,EAAQ8rE,EACRzN,KACgByJ,EAAYgE,QAGK,IAA1B3nD,EAAKpkB,MAAM+nE,qBACPgE,GAAYhE,kBAItBp2D,SAAS1R,K6Kv4BZ6X,GACgB,oBAATk0D,WAAuD,IAAxBA,KAAKl0D,eACtCk0D,KAAKl0D,qCAKAC,EAASk0D,mBACdl0D,QAAUA,OACVlR,QAAUolE,4CAGVv2D,UACEA,EAAKw2D,0BCRGC,+KASuBj7D,KAAKlR,MAArC8C,IAAAA,UAAWqlB,IAAAA,OAAWnoB,sCAE5BgI,gCACMhI,QACC,mBACMgD,GAAG,sFACcmlB,GACzBrlB,aAhBgCgP,iBCCtBs6D,0BAaPpsE,8EACJA,aAuBRqsE,YAAc,SAACpoE,KACRjE,MAAMssE,mBAAmB,OAAQroE,MAGxCsoE,gBAAkB,SAACtoE,KACZjE,MAAMssE,mBAAmB,WAAYroE,MA1BrChE,MAAQiiB,EAAKsqD,kBAAkBxsE,0EAGZ4jB,SACkD1S,KAAKlR,MAAvE8X,IAAAA,eAAgBC,IAAAA,QAAS00D,IAAAA,iBAAkBH,IAAAA,mBAC/Cx0D,IAAmB8L,EAAU9L,gBAC5BC,IAAY6L,EAAU7L,SACtB00D,IAAqB7oD,EAAU6oD,kBAC/BH,IAAuB1oD,EAAU0oD,yBAC/B36D,SAAST,KAAKs7D,kBAAkB5oD,qDAIrB9L,IAAAA,eAAgBC,IAAAA,QAAS00D,IAAAA,6BAEnC30D,EAAeC,GAAW20D,KAAM,YAAax0D,OAAOu0D,WACjD30D,EAAeC,GAAW40D,QAAS,UAAWz0D,OAAOu0D,QACxD30D,EAAeC,GAAW60D,MAAO,QAASz2D,IAAK,YAAa+B,OAAOu0D,2CAa3Cv7D,KAAKjR,MAA7BysE,IAAAA,KAAMC,IAAAA,QAASj3D,IAAAA,OACaxE,KAAKlR,MAAjC6sE,IAAAA,aAAc/pE,IAAAA,UAChBgqE,EAA8B,SAAjBD,SAEjB7kE,2BAAQlF,UAAWE,GAAG,mBAAoBF,iCAE7BoO,KAAKm7D,mBACNS,kBACOA,0BAEXhqE,UAAU,4CAEDoB,QAASgN,KAAKq7D,gBAAiBpkD,OAAyB,aAAjB0kD,0BAChD/pE,UAAU,kDACVA,UAAU,4BA5DsBgP,iBCHzBi7D,0BAiBP/sE,8EACJA,aAkBRgtE,UAAY,SAACC,GACPA,GAAO/qD,EAAKliB,MAAMmoB,UAChB+E,WAIRI,aAAe,SAACrpB,KACTjE,MAAMkE,QAAQ,IAAI0R,KAAKsM,EAAKliB,MAAM0V,MAAOzR,MAGhDipE,WAAa,WACNhrD,EAAKliB,MAAMqC,YACTsP,UAAWw7D,eAAe,OAInCC,aAAe,WACRlrD,EAAKliB,MAAMqC,YACTsP,UAAWw7D,eAAe,OAlC5BltE,YAAaiiB,EAAKsqD,kBAAkBxsE,IAAQmtE,eAAe,2EAGxCvpD,SACkB1S,KAAKlR,MAAvC8X,IAAAA,eAAgBC,IAAAA,QAASrC,IAAAA,KAC7BoC,IAAmB8L,EAAU9L,gBAAkBC,IAAY6L,EAAU7L,SAAWrC,IAASkO,EAAUlO,WAChG/D,SAAST,KAAKs7D,kBAAkB5oD,qDAIrB9L,IAAAA,eAAgBC,IAAAA,QAASrC,IAAAA,iBAEnC,IAAIoC,EAAeC,GAAW5B,IAAK,YAAa+B,OAAOxC,2CA2B/BxE,KAAKjR,MAA7ByV,IAAAA,KAAMy3D,IAAAA,gBACiEj8D,KAAKlR,MAA5EqC,IAAAA,SAAU8lB,IAAAA,OAAQklD,IAAAA,MAAOvqE,IAAAA,UAAWwqE,IAAAA,iBAAkBC,IAAAA,aAExDC,EAAcH,IAAUllD,IAAWglD,EAEnCM,EAAqBH,EACvBA,EAAiBp8D,KAAKlR,MAAM0V,KAAMA,GAClC,YAGF1N,6BACO,qBACK,0BACD0lE,QAAS,iDAGX,aACAx8D,KAAK87D,kBACD97D,KAAKg8D,kBACNh8D,KAAKk8D,yBACAl8D,KAAKg8D,wBACJh8D,KAAKk8D,uBACRpqE,GAAG,wDACoBmlB,GAAUglD,uBACpB9qE,GACrBH,GAAcG,WAAUG,QAASgrE,IAAgB,SAAU1qE,EAAW2qE,WAChEv8D,KAAKoc,sBACJjrB,sCAGGW,GAAG,mDACcmlB,GAAUglD,iBACpBK,OAGFD,EAAar8D,KAAKlR,MAAM0V,KAAMA,GAAQA,YA9FxB5D,iBCMrB67D,+KAqGbz8D,KAAKlR,MAjBP4tE,IAAAA,aACAnB,IAAAA,iBACAoB,IAAAA,oBACAC,IAAAA,QACAC,IAAAA,QACAj2D,IAAAA,eACAC,IAAAA,QACAjV,IAAAA,UACAkrE,IAAAA,eACAC,IAAAA,gBACAC,IAAAA,cACAZ,IAAAA,iBACAC,IAAAA,aACAY,IAAAA,YACAC,IAAAA,mBACAC,IAAAA,kBACGruE,yQAGCsuE,KACAC,EAAWn3D,GAAUw2D,KAClB/3D,QAAQ,OACX24D,EAAUz4D,GAAW63D,GACvBa,EAAcl3D,GAAYg3D,EAAU,GACpCG,EAAUn3D,GAAYi3D,EAAS,GAC7BG,EAAiBv3D,GAAUq1D,GAAkBj3D,UAC7Co5D,GAAY,IAAIh5D,MAAOJ,cAEzBw4D,MACYv3D,GAAQg4D,EAAaT,EAAiBO,EAAS92D,SAAWu2D,EAAiB,EAAIA,EAAgB,OACnGv3D,GAAQi4D,EAASV,EAAiBQ,EAAQ/2D,SAAWu2D,EAAiB,EAAIA,EAAgB,MAG/FS,GAAeC,GAAS,KACvBjuE,EAASguE,EAAYx4D,eAAcw4D,EAAY34D,UAC/C+4D,EAAeJ,EAAYx4D,aAAe23D,EAAa33D,WAEzDP,YACAm5D,GAAgBV,EAAa,KACzBl2D,EAAOw2D,EAAYj5D,UACnBs5D,EAAoBhB,GAAWA,EAAQt4D,UAAYyC,EACnD82D,EAAoBhB,GAAWA,EAAQv4D,UAAYyC,EACnD+2D,EAAoBf,IAA6C,IAAzBQ,EAAYh3D,UAA2C,IAAzBg3D,EAAYh3D,UAClFpV,GAAawsE,GAAgBR,GAC9BS,GACAC,GACAC,IAGHhnE,iBAAC+kE,QACMtsE,YACMuC,GAAGkrE,QAAkBE,GAAsBS,GAAgBT,UAC/Dn2D,IAAS22D,mBACEtB,eACJC,SACNt1D,IAAS02D,WACPtsE,UACDwrE,OACHY,iBACU32D,UACPC,WAIN/P,wBAAKvH,IAAKA,EAAKqC,UAAU,mBAAmBgB,KAAK,eAGrD8Q,KAAKc,KACIe,GAAQg4D,EAAa,EAAG,SAGlCQ,EAAQh4D,GAAMq3D,EAAM,UAGxBtmE,2BAAKlE,KAAK,OAAOhB,UAAWE,GAAG,oBAAqBF,IAAgB9C,KAC3DoT,IAAI,SAAC87D,EAAM9hE,UAChBpF,wBAAKvH,IAAK2M,EAAGtJ,KAAK,oBAhKegO,iBAAtB67D,GA8EZ/rD,6BACW,OC9ECutD,0BAgDPnvE,8EACJA,aAEDC,MAAQiiB,EAAKktD,aAAapvE,0EAGP4jB,SACkB1S,KAAKlR,MAAvC8X,IAAAA,eAAgBC,IAAAA,QAASrC,IAAAA,KAC7BoC,IAAmB8L,EAAU9L,gBAAkBC,IAAY6L,EAAU7L,SAAWrC,IAASkO,EAAUlO,WAChG/D,SAAST,KAAKk+D,aAAaxrD,+CAgB7B,6DAJH1S,KAAKlR,MAPP8X,IAAAA,eACAC,IAAAA,QACArC,IAAAA,KACAs4D,IAAAA,eACAqB,IAAAA,YACAC,IAAAA,iBACAC,IAAAA,cAEMhB,EAAWh3D,GAAY7B,EAAMs4D,GAC7BwB,EAAY,IAAI13D,EAAeC,GAAW40D,QAAS4C,IACnDE,KACGriE,EAAI,EAAGA,EAAI,EAAGA,IAAK,KACpBoK,EAAMg4D,EAAUt3D,OAAOzB,GAAQ83D,EAAUnhE,EAAG,QAC7CwH,KACH5M,2BACOoF,YACMpK,GAAG,mCAAoCd,GAAcG,UAAU,IAASitE,4BAShF,IAAIx3D,EAAeC,EAASs3D,GAAan3D,OAAOxC,2CAKjCxE,KAAKjR,MAArBwvE,IAAAA,KAAMzsB,IAAAA,QAUV9xC,KAAKlR,MARP0V,IAAAA,KACAo4D,IAAAA,QACAC,IAAAA,QACA2B,IAAAA,gBACAC,IAAAA,aACAC,IAAAA,YACAC,IAAAA,SACAxb,IAAAA,eAGIyb,EAAqBn4D,GAAcm2D,EAASp4D,GAC5Cq6D,EAAiBp4D,GAAcjC,EAAMq4D,UAEzC/lE,2BAAQlF,UAAU,8CACXA,UAAU,yCACZ49C,oBAEUgvB,WACCI,YACA,6BACFH,2BAEN7sE,UAAWE,GAAG,WAAYqxD,wBAC7B3T,oBAEUkvB,WACCG,YACA,6BACFF,6BAGP/sE,UAAU,+BA7HqBgP,iBAAvBq9D,GA0CZvtD,6BACW,eACDgrD,MAAO,OAAQF,KAAM,yBACrB,cCtDEsD,+KAyGb9+D,KAAKlR,MAxBP8C,IAAAA,UACA6sE,IAAAA,aACAD,IAAAA,gBACAG,IAAAA,SACAD,IAAAA,YACAhC,IAAAA,aACAnB,IAAAA,iBACAoB,IAAAA,oBACA/1D,IAAAA,eACAC,IAAAA,QACA+1D,IAAAA,QACAC,IAAAA,QACAC,IAAAA,eACAC,IAAAA,gBACAE,IAAAA,YACAE,IAAAA,kBACAH,IAAAA,cACAZ,IAAAA,iBACAC,IAAAA,aACAa,IAAAA,mBACA/Z,IAAAA,eACAgb,IAAAA,YACAC,IAAAA,iBACAC,IAAAA,qBAIAvnE,4BAASlF,UAAWE,GAAG,gDAAiDF,qBACrEqsE,SACOvB,UACGE,UACAC,iBACOj2D,UACPC,kBACQ23D,eACHC,cACDC,WACHC,iBACM7B,iBACA3Z,cACHgb,mBACKC,gBACHC,qBAEhB5B,QACM,IAAI71D,EAAeC,GAASG,OAAO01D,gBAC1BA,mBACInB,sBACGoB,UACZC,UACAC,iBACOj2D,UACPC,iBACOi2D,kBACCC,cACJE,oBACME,gBACJH,mBACGZ,eACJC,qBACMa,YA7IkBt8D,iBCG3Bm+D,sNAQnBhwE,OAAUktE,eAAe,KAEzB+C,gBAAkB,SAACjD,GACbA,GAAO/qD,EAAKliB,MAAMmoB,UAChB+E,WAIRggD,WAAa,aACNv7D,UAAWw7D,eAAe,OAGjCC,aAAe,aACRz7D,UAAWw7D,eAAe,OAGjC7/C,aAAe,SAACrpB,KACTjE,MAAMkE,QAAQge,EAAKliB,MAAM0sE,KAAMzoE,wEAI5BkpE,EAAkBj8D,KAAKjR,MAAvBktE,gBAC4Bj8D,KAAKlR,MAAjCmoB,IAAAA,OAAQrlB,IAAAA,UAAW4pE,IAAAA,YAEzB1kE,gCACO,aACAkJ,KAAKg/D,0BACCltE,GAAG,WAAamtE,kBAAmBhoD,GAAUjmB,SAC/CimB,IAAWglD,UACThlD,GAAUglD,IACjB,yCAA0CrqE,WACrCoO,KAAKoc,wBAvCYxb,iBCAbs+D,0BAUPpwE,8EACJA,aAEDC,MAAQiiB,EAAKmuD,cAAcrwE,0EAGR4jB,GACpB1S,KAAKlR,MAAMswE,iBAAmB1sD,EAAU0sD,qBACrC3+D,SAAST,KAAKq/D,aAAa3sD,iDAUpBkqD,IAAAA,QAASC,IAAAA,QAASuC,IAAAA,eAC1B5D,IAD0CD,iBAClBz2D,cACxBtM,EAASokE,GAAYC,EAEvBuC,EADA9mE,SAAS8mE,EAAiB,EAAG,IAG7BE,SACAC,gBACA3C,GAAWC,KACDD,EAAQ93D,gBACV+3D,EAAQ/3D,eACR83D,GAAYC,EAMZA,OAIAA,EAAQ/3D,eACIs6D,EAAiB,OAJ3BxC,EAAQ93D,eACEs6D,EAAiB,KAP3B5D,EAAOhjE,IACTgjE,EAAOhjE,EACb4mE,EAAiB,GAAM,OACd,KAUNE,YAAWC,iDAGRjqC,MACM,OAAdA,OAIIp6B,EAA8Bo6B,EAA9Bp6B,aAAcR,EAAgB46B,EAAhB56B,cAC2B46B,EAAUvhC,cAAc,oBAAtDmB,IAAXkoD,UAA8BplD,IAAdkD,eAIZtB,UADRsB,EAAeR,EACKxF,EAAsB,EAAfgG,EAAmB,EAE1BhG,EAAOgG,EAAe,EAAMlD,EAAS,wCASxD,MAJ0BgI,KAAKjR,MAA5BuwE,IAAAA,UAAWC,IAAAA,QAEbC,EAAcx/D,KAAKlR,MAAMysE,iBAAiBz2D,cAC1C26D,KACGjE,EAAO8D,EAAW9D,GAAQ+D,EAAS/D,MACpC93D,KACJ5M,iBAACioE,QACMvD,OACCA,SACEA,IAASgE,UACRx/D,KAAKlR,MAAM4wE,8BAMxB5oE,sCACahF,GAAG,4CAA6CkO,KAAKlR,MAAM8C,eACjEoO,KAAK64B,sCAENjnC,UAAU,uBA7FkBgP,iBCDnB++D,iLAiJb3/D,KAAKlR,MAlCPw2D,IAAAA,QACAC,IAAAA,UACAe,IAAAA,UACAZ,IAAAA,YACAC,IAAAA,cACAY,IAAAA,cACA3/C,IAAAA,eACAC,IAAAA,QACA00D,IAAAA,iBACAI,IAAAA,aACAP,IAAAA,mBACA5jE,IAAAA,MACA5F,IAAAA,UACAi9B,IAAAA,OACAh4B,IAAAA,KACA+oE,IAAAA,YACA9C,IAAAA,eACAC,IAAAA,gBACAE,IAAAA,YACAE,IAAAA,kBACAtN,IAAAA,gBACA3xB,IAAAA,iBACAmlB,IAAAA,gBACAwc,IAAAA,kBACAC,IAAAA,oBACAC,IAAAA,sBACAC,IAAAA,2BACA5D,IAAAA,iBACAC,IAAAA,aACA4D,IAAAA,uBACAC,IAAAA,oBACAC,IAAAA,yBACAC,IAAAA,sBACGtxE,6jBAGDuxE,WACiB,aAAjB1E,EAEA7kE,iBAACgoE,SACKhwE,OACA,qBACO+wE,mBACOtE,iBACF30D,UACPC,iBACOi2D,kBACCC,cACJE,oBACME,gBACJ4C,mBACG3D,eACJC,qBACM2D,iBACJC,cACHC,mBACKC,gBACHC,KAKjBtpE,iBAACooE,SACKpwE,OACA,iBACOgxE,mBACOvE,iBACF30D,UACPC,SAKTsmC,QACC,iBACIoZ,UACAZ,aACGA,QACLD,QAEF,aACIY,UACAf,aACGA,QACLD,WAIPxuD,8BACSU,YACI1F,GAAG,qDACG8tE,EAAgBA,QAC/B,oBAAqB/wC,QACrB,yBAA0BA,GAAUh4B,MACnCjF,qBAEFspE,cACYrL,iBACKjpD,UACPC,mBACS00D,eACJI,qBACMP,4BAEjBxpE,UAAWE,GAAG,8BAA+BosC,uBAE/CmkB,cACYgB,UACFlW,aA3NmBvsC,iBC2BnB0/D,0BA+iBPxxE,8EACJA,mBAEF0V,SACAjJ,SAEFknC,EAME3zC,EANF2zC,aACA77B,EAKE9X,EALF8X,eACAC,EAIE/X,EAJF+X,QACAk0D,EAGEjsE,EAHFisE,cACA6B,EAEE9tE,EAFF8tE,QACAC,EACE/tE,EADF+tE,aAGyB,IAAhB/tE,EAAMyM,QACRyV,EAAKuvD,SAASzxE,EAAMyM,OAClBknC,KACFzxB,EAAKuvD,SAAS99B,KACW,iBAAjBA,EACXA,EACA77B,EAAeC,EAASk0D,GAAe/zD,OAAOy7B,OAE3C,IAAI/9B,OACH,MAGHsM,EAAKwvD,mBAAmBh8D,EAAMo4D,EAASC,OAExC4D,OAA2D,IAA9B3xE,EAAM4xE,oBACrC5xE,EAAM4xE,oBACN5xE,EAAM2xE,oBACNlF,EAAmB/2D,OACY,IAAxBi8D,GAAwC3xE,EAAMyM,OAAUzM,EAAM2zC,aAGzC,OAArB84B,MACU,IAAI72D,OAChB,IAAIA,UAJQsM,EAAKuvD,SAASE,OAO7BpqC,OAAyC,IAAxBvnC,EAAM6uC,cACzB7uC,EAAM6uC,gBACJ7uC,EAAM+uC,wBAEP9uC,sCAGWyV,kCAEA1V,EAAM6xE,qBAAuB7xE,EAAM8xE,4FAI3BluD,OAChBnX,EAA4BmX,EAA5BnX,MAAOqhE,EAAqBlqD,EAArBkqD,QAASC,EAAYnqD,EAAZmqD,QAClBgE,EAAW/6D,GAAU9F,KAAKlR,MAAM8tE,QAASA,GACzCkE,EAAWh7D,GAAU9F,KAAKlR,MAAM+tE,QAASA,MAC3C78D,KAAKlR,MAAMyM,QAAUA,IAAUslE,IAAaC,EAAU,KAClDpE,EAAiB18D,KAAKjR,MAAtB2tE,kBACe,IAAVnhE,MACMyE,KAAKugE,SAAShlE,MAGhByE,KAAKwgE,mBAAmB9D,EAAcE,EAASC,GAEzD/2D,GAAU9F,KAAKjR,MAAM2tE,aAAcA,SACjCj8D,UAAWi8D,eAAcnB,iBAAkBmB,gDAKnCtlC,EAAWi6B,SACDrxD,KAAKlR,MAAxB+/B,IAAAA,OAAQqN,IAAAA,OACV7F,OAA4B,IAAX6F,EACnBA,EACArtC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,WAKjCsnC,UAJyC,IAArBe,EAAU8E,OAC9B9E,EAAU8E,OACVrtC,EAASuoC,EAAWi6B,EAAW,cAM/Bh7B,EACExH,MACyB7uB,KAAK22B,qBAAqB,UAC9CzgC,iBAAiB,UAAW8J,KAAK+gE,cAEjClyC,MACkB7uB,KAAK22B,qBAAqB,UAC9CtgC,oBAAoB,UAAW2J,KAAK+gE,oEAKA,IAAtB/gE,KAAKlR,MAAMotC,OAC9Bl8B,KAAKlR,MAAMotC,OACXrtC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,aAEtBiR,KAAKlR,MAAM+/B,WACG7uB,KAAK22B,qBAAqB,UAC9CtgC,oBAAoB,UAAW2J,KAAK+gE,+CAItCxlE,SACO,KAAVA,GAA0B,OAAVA,EACX,IAAImJ,KACe,iBAAVnJ,EACT,IAAImJ,KAAKnJ,GAGXA,6CAgLUzM,EAAOC,OAChB6X,EAA2C9X,EAA3C8X,eAAgBC,EAA2B/X,EAA3B+X,QAASk0D,EAAkBjsE,EAAlBisE,cAC3Bx/D,EAAQ1M,EAASC,EAAOC,EAAO,gBAChCwM,EAEMA,aAAiBmJ,KACnBkC,EAAeC,EAASk0D,GAAe/zD,OAAO,IAAItC,KAAKnJ,IAEvDA,EAJA,8CAoBQmhE,EAAcE,EAASC,OACpCr4D,EAAOk4D,SACPE,GAAWA,EAAUF,MAChB,IAAIh4D,KAAKk4D,IAGdC,GAAWA,EAAUH,MAChB,IAAIh4D,KAAKm4D,IAGXr4D,yCAyEHxE,KAAKlR,MApEP0I,IAAAA,MACA5F,IAAAA,UACAovE,IAAAA,YACAC,IAAAA,gBACAC,IAAAA,sBACAC,IAAAA,uBACAC,IAAAA,sBACAt9B,IAAAA,WACAC,IAAAA,eACA0C,IAAAA,eACAC,IAAAA,mBACA97B,IAAAA,MACAk6B,IAAAA,YACAjuC,IAAAA,KACAg4B,IAAAA,OACA+wC,IAAAA,YACAhoC,IAAAA,UACAkL,IAAAA,cACA5iC,IAAAA,GACA/O,IAAAA,SACAu5D,IAAAA,WACA2W,IAAAA,cACAj0B,IAAAA,OACAzB,IAAAA,WACAC,IAAAA,UACAjU,IAAAA,MACAwM,IAAAA,YACAltB,IAAAA,OACA7lB,IAAAA,MACAoN,IAAAA,SACAwlC,IAAAA,SACAC,IAAAA,iBACArF,IAAAA,UACAsF,IAAAA,kBACA3D,IAAAA,WACAG,IAAAA,UACAC,IAAAA,SACAM,IAAAA,YACA0B,IAAAA,gBACAqoB,IAAAA,qBACc3U,IAAd,cACUirB,IAAV3C,SACc4C,IAAd9C,aAGAviC,IAAAA,OACAslC,IAAAA,qBACAC,IAAAA,sBACAC,IAAAA,iBACAC,IAAAA,kBAUAvF,KARA7gE,QACA86B,UACAoM,eACA5E,iBACA2E,WACAo/B,WACA30B,qBACAwzB,sBACArE,kBACAC,IAAAA,aAOGvtE,KAJH4xE,sBACA/iC,gBACAqH,gkBAzBA,qVA8BI25B,GAAWhoE,EAAkBgrE,EAAmBD,EAAkBJ,GAClE7C,GAAe9nE,EAAkB8qE,EAAuBD,EAAsBD,GAC9ElrC,QAA4B,IAAX6F,EACnBA,EACArtC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,WAE/BsxE,GACJvpE,iBAAC6oE,SACK3/D,KAAKjR,MACLD,YACM6vE,gBACIF,UACN5nE,SACAg4B,QACDmyC,YACIC,kBACMC,mBACCC,kBACDC,cACJxB,gBACE5/D,KAAK6hE,6BACT7hE,KAAK8hE,kCACI9hE,KAAK+hE,oCACR/hE,KAAKgiE,2BACThiE,KAAKiiE,+BACGjiE,KAAKkiE,yCACLliE,KAAKmiE,sCACR/F,eACJC,KAIdnyB,oBACArb,EACQ/3B,qBAAU81B,WAAYyJ,GAASnJ,QAASm0C,OAGhDvqE,wBACSoJ,oBACEm2B,UACDr2B,KAAK6hE,mCACG,qCACC,yCACLxrB,aACAqU,aACA/e,SACJyB,YACGxB,gBACG,uBACQof,OAQ1Bl0D,wBAAKU,MAAOA,EAAO5F,UAAWE,GAAG,sBAAuBF,GAAY2L,IAAKyC,KAAK64B,gCAC3EqK,OACKhjC,QACGumC,YACI30C,IAAKswE,qBAAsBjxE,GAAYu1C,cACtC5C,iBACIhyC,IAAKswE,qBAAsBjxE,GAAY4yC,UAC/C9sB,GAAUof,SACXjlC,WACGoN,GAAY63B,YACZ2N,WACA7yC,WACA0F,mBACQotC,YACPrF,oBACQsF,kBACFvB,QACVhL,cACMwM,YACFvM,gBACIkL,aACHvC,WACFI,cACGM,YACFP,QACJ91B,cACMk6B,UACJ9kC,KAAKqiE,sBACHriE,KAAKqc,qBACTrc,KAAKsiE,mBAAmBtiE,KAAKlR,MAAOkR,KAAKjR,gCAnhCT6R,iBAA5B0/D,GAyhBZ5vD,6BACU,eACD5Z,kDACJA,kDACF,OACFA,sDACU,wBACK,0BACL8P,WACW,oBAAXxW,OACZA,OAAOgH,UAAUmrE,cAAgBnyE,OAAOgH,UAAUorE,SAClD,gBACK,gBACE,cACE,wBACE,cACH,qBACO,wBACG,eACR,iDAuHhB3pC,cAAe,SAACvD,KACT3W,WAAa2W,QAGpByrC,YAAc,SAAChuE,GxItsBE,MwIusBVA,EAAEI,OAASJ,EAAEK,YACXyuE,mBAAmB9uE,SAI5B4jC,oBAAsB,SAAC5jC,GACjBmgB,EAAKyL,aAAezL,EAAKyL,WAAWtmB,SAAStF,EAAEW,WAC5CmuE,mBAAmB9uE,SAI5BsvE,YAAc,SAACtvE,OACTmgB,EAAKpkB,MAAMqC,WAAY+hB,EAAKpkB,MAAM8yE,cAIhCvrC,SAAyC,IAAtBnjB,EAAKpkB,MAAMotC,OAChChpB,EAAKpkB,MAAMotC,OACXrtC,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,YAEjCmkB,EAAKpkB,MAAMm+C,sBACRn+C,MAAMm+C,mBAAmB5W,EAAStjC,QAGR,IAAtBmgB,EAAKpkB,MAAMotC,aAAwD,IAAvBhpB,EAAKpkB,MAAMunC,WAC3D51B,UAAW41B,mBAIpBha,eAAiB,SAACtpB,KACYA,EAAGmgB,EAAKmvD,aAAa,GAAM,IAElDtvE,EAAEI,OAASJ,EAAEK,WAAasM,IAAOwT,EAAKnkB,MAAMkoB,UAC1CxW,UAAWwW,QAAQ,UAI5B6qD,eAAiB,SAAC/uE,SACiEmgB,EAAKpkB,MAA9E8X,IAAAA,eAAgBC,IAAAA,QAAS27B,IAAAA,SAAUu4B,IAAAA,cAAe9tB,IAAAA,mBACpD1xC,EAAQqL,EAAeC,EAASk0D,GAAe/zD,OAAOkM,EAAKnkB,MAAMwsE,kBACnE/4B,KACOjnC,EAAO,IAAImJ,KAAKwO,EAAKnkB,MAAMwsE,kBAAmBxoE,GAGrDk6C,MACiB,EAAOl6C,OAGxBhE,cAC4B,IAArBmkB,EAAKpkB,MAAMyM,WACVA,eAGsB,IAAvB2X,EAAKpkB,MAAMunC,cAAwD,IAAtBnjB,EAAKpkB,MAAMotC,YACzDntC,OACFsnC,SAAU,GAGdtnC,KACG0R,SAAS1R,SAIlB8yE,mBAAqB,SAAC9uE,OACdhE,GAAUwsE,iBAAkBroD,EAAKnkB,MAAM2tE,mBACZ,IAAtBxpD,EAAKpkB,MAAMotC,aAAuD,IAAtBhpB,EAAKpkB,MAAMotC,WAC1D7F,SAAU,GAGdnjB,EAAKpkB,MAAMm+C,sBACRn+C,MAAMm+C,oBAAmB,EAAOl6C,KAGlC0N,SAAS1R,SAGhBgzE,oBAAsB,SAACpG,GACjBzoD,EAAKnkB,MAAM4sE,eAAiBA,KAE3Bl7D,UAAWk7D,uBAGlBqG,eAAiB,eACTtF,EAAen3D,GAAQ2N,EAAKnkB,MAAM2tE,cAAe,EAAG,OACrDj8D,UAAWi8D,iBAEZxpD,EAAKpkB,MAAM2zE,mBACR3zE,MAAM2zE,gBAAgB/F,SAI/BuF,WAAa,eACLvF,EAAen3D,GAAQ2N,EAAKnkB,MAAM2tE,aAAc,EAAG,OACpDj8D,UAAWi8D,iBAEZxpD,EAAKpkB,MAAM4zE,eACR5zE,MAAM4zE,YAAYhG,SAI3BwF,qBAAuB,SAAC3G,SAC+CroD,EAAKpkB,MAAlE6zE,IAAAA,OAAQ/7D,IAAAA,eAAgBC,IAAAA,QAAS27B,IAAAA,SAAUu4B,IAAAA,cAE7ChsE,GAAUwsE,uBACZoH,EAAQ,KACJpnE,EAAQqL,EAAeC,EAASk0D,GAAe/zD,OAAOu0D,GACxD/4B,KACOjnC,EAAO,IAAImJ,KAAK62D,SAGK,IAArBroD,EAAKpkB,MAAMyM,UACdA,MAAQA,KAGX6hB,SAAWxI,WAAW,aACpBwI,SAAW,KAEZlK,EAAKpkB,MAAMm+C,sBACRn+C,MAAMm+C,oBAAmB,QAGE,IAAvB/5B,EAAKpkB,MAAMunC,cAAwD,IAAtBnjB,EAAKpkB,MAAMotC,UAC5Dz7B,UAAW41B,SAAS,QAI1B51B,SAAS1R,SAGhBozE,qBAAuB,SAAC3G,SACqBtoD,EAAKnkB,MAAxCwsE,IAAAA,iBAAkBmB,IAAAA,gBACtBnB,EAAiBz2D,gBAAkB02D,SAEVtoD,EAAKpkB,MAA1B8tE,IAAAA,QAASC,IAAAA,QACb+F,EAAW,IAAIl+D,KAAKg4D,EAAap3D,YAAYk2D,IAC7CqH,EAAW,IAAIn+D,KAAK62D,EAAiBj2D,YAAYk2D,IAEjDoB,GAAWiG,EAAWjG,MACb,IAAIl4D,KAAKk4D,KACT,IAAIl4D,KAAKk4D,IAGlBC,GAAWgG,EAAWhG,MACb,IAAIn4D,KAAKm4D,KACT,IAAIn4D,KAAKm4D,IAGlB3pD,EAAKpkB,MAAMg0E,kBACRh0E,MAAMg0E,eAAeF,KAGvBniE,uBACWmiE,mBACIC,IAGhB3vD,EAAKpkB,MAAMi0E,qBACRhB,oBAAoB,eCl2BzBiB,GAAgB,EAODC,0BA0BPn0E,8EACJA,aAcRytB,aAAe,SAACxpB,IACTA,EAAEI,OAASJ,EAAEK,WAAasM,MACxB5Q,MAAMo0E,gBAAgBlyD,EAAKliB,MAAMiY,SAI1Co8D,SAAW,SAACp8D,KACLq8D,MAAQr8D,EACA,OAATA,MACGs8D,aAAaryD,EAAKliB,MAAOiY,GAE1BiK,EAAKliB,MAAMmoB,UACR+E,YAKXqnD,aAAe,WAAoBt8D,OAAjBu8D,IAAAA,OAAQ/hE,IAAAA,MAElBxF,GAAQgL,EAAKrM,aAAe,IAAM,EAClC6oE,EAAe9sE,KAAKyR,GAAK,EAAK3G,GAAS9K,KAAKyR,GAAK,GAGjDs7D,EAAcF,EAASvnE,EACvBuM,EAAck7D,EAAcR,IAHdzhE,EAAQ,GAG4C,EAAPxF,EAAW,KAEvE0E,qBAEI+iE,EAAcl7D,EAAc7R,KAAKgtE,IAAIF,QACpCC,EAAcl7D,EAAc7R,KAAKitE,IAAIH,SAzC1Cx0E,YAEG,2EAIgB2jB,GACpB1S,KAAKlR,MAAMw0E,SAAW5wD,EAAU4wD,QAAUtjE,KAAKlR,MAAMyS,QAAUmR,EAAUnR,YACtE8hE,aAAa3wD,EAAW1S,KAAKojE,8CAuCXpjE,KAAKlR,MAAtBiY,IAAAA,KAAMkQ,IAAAA,cAEZngB,4BACOkJ,KAAKmjE,kBACA,YACCrxE,GAAG,6EACcmlB,GACzBjmB,GAAcrB,MAAOsnB,WACjBjX,KAAKjR,MAAMyI,cACTwI,KAAKuc,uCAER3qB,UAAU,kCAvFegP,iBCNlB+iE,0BAmBP70E,8EACJA,aAEDC,OAAUkoB,QAAQ,0EAGCvE,cACpB1S,KAAKlR,MAAMuY,UAAYqL,EAAUrL,UAC/BrH,KAAKjR,MAAM+pB,sBAAwB9Y,KAAKjR,MAAM+pB,cAE7CrY,kBACK,UACCmU,WAAW,kBAAM1B,EAAKzS,UAAWwW,QAAQ,EAAO6B,QAAS,QAAS,uDAM3E9Y,KAAKjR,MAAM+pB,sBAAwB9Y,KAAKjR,MAAM+pB,4DAG9B/R,IAAAA,KAAMM,IAAAA,QACpBu8D,EAAav8D,EAAU,GAAK,EAC5BqB,EAAUrB,EAAU,GAAK,UAES,IAAMqB,GAAtC3B,EAAO2B,EAAUk7D,0CAIS5jE,KAAKlR,MAA/B+0E,IAAAA,OAAQ98D,IAAAA,KAAMM,IAAAA,QAEhBmB,EAAUxI,KAAK8jE,oBAAoB9jE,KAAKlR,OAC1Ci1E,GAAkB,EAClB18D,MACgBmB,MAAyB,OAGvCw7D,uBAAuCx7D,gBAE3C1R,kCACahF,GAAG,gEACakO,KAAKjR,MAAMkoB,qCACL8sD,0BACN18D,IAAYN,EAAO,IAAe,IAATA,iBAG5C88D,MACDA,kBACYG,eACHA,cACDA,YACFA,YAtEkBpjE,iBCSlBqjE,0BAmCPn1E,8EACJA,aAeRo1E,SAAW,SAACC,KACLC,MAAQD,IACRE,qBAGPA,gBAAkB,cACXrzD,EAAKozD,WAIJd,EAAStyD,EAAKozD,MAAM1pE,YAAc,EAClCD,EAAS5F,EAAemc,EAAKozD,SAC9BE,SAAY7qE,EAAGgB,EAAO3F,KAAOwuE,EAAQ5pE,EAAGe,EAAOvF,IAAMouE,KACrDiB,MAAQ9pE,EAAO3F,OACf0vE,KAAO/pE,EAAOvF,IAEf8b,EAAKjiB,MAAMu0E,SAAWA,KACnB7iE,UAAW6iE,eAIpB3zB,kBAAoB,WACI3+B,EAAKliB,MAAnB21E,aAGDC,wBAITtkD,kBAAoB,WACIpP,EAAKliB,MAAnB21E,aAGDE,yBAITjlD,iBAAmB,SAAC3sB,GACboC,EAAapC,KAIIie,EAAKliB,MAAnB21E,aAGDC,yBAITE,iBAAmB,SAAC7xE,GACbie,EAAKjiB,MAAM81E,WAIdjxE,mBACGkxE,aAAa/xE,OAGpB4sB,eAAiB,SAAC5sB,MACXoC,EAAapC,UAIkBie,EAAKliB,MAAjCi2E,IAAAA,aAAcN,IAAAA,UAElBzzD,EAAKozD,QACHpzD,EAAKozD,MAAM/rE,SAAStF,EAAEW,eAEnBoxE,aAAa/xE,MAED,UAIhB0xE,KACEE,0BAIT/kD,kBAAoB,aACD,eAEHxvB,OAAQ,OAAQ4gB,EAAKsP,oBACrBlwB,OAAQ,MAAO4gB,EAAK6O,mBAC7Bpf,UAAWokE,QAAQ,OAG1BvkD,iBAAmB,SAACvtB,GACbie,EAAKjiB,MAAM81E,UAIXC,aAAa/xE,MAGpB8sB,gBAAkB,SAAC9sB,KACZ+xE,aAAa/xE,GACdie,EAAKozD,QAAUpzD,EAAKozD,MAAM/rE,SAAStF,EAAEW,WACtB,WAGFtD,OAAQ,OAAQ4gB,EAAKsP,oBACrBlwB,OAAQ,MAAO4gB,EAAK6O,mBAEhCpf,UAAWokE,QAAQ,OAG1BC,aAAe,SAAC/xE,SACiBA,EAAEwtB,eAAiBxtB,EAAEwtB,eAAe,GAAKxtB,EAAzD0G,IAAPwkB,MAAiBvkB,IAAPwkB,MACZ5V,EAAc0I,EAAKjiB,MAAMu0E,OAAS,KACEtyD,EAAKliB,MAAvC0zC,IAAAA,SAAUn7B,IAAAA,QAASK,IAAAA,aAClBS,IAAoB1O,IAAGC,KAAKsX,EAAKszD,QAASh8D,EAAajB,EAASK,OAG3Eg9D,mBAAqB,kBACZxuE,iBAAiB,YAAa8a,EAAK4zD,yBACnC1uE,iBAAiB,UAAW8a,EAAK2O,kBAEnClf,UAAWokE,QAAQ,OAG1BF,oBAAsB,kBACbtuE,oBAAoB,YAAa2a,EAAK4zD,yBACtCvuE,oBAAoB,UAAW2a,EAAK2O,kBAEtClf,UAAWokE,QAAQ,OA1InB91E,OAAUu0E,OAAQ,IAAKuB,QAAQ,KAC/BP,sFAIEjuE,oBAAoB,YAAa2J,KAAK4kE,yBACtCvuE,oBAAoB,UAAW2J,KAAK4kE,oBAE1Bx0E,OAAQ,OAAQ4P,KAAKsgB,oBACrBlwB,OAAQ,MAAO4P,KAAK6f,+BACvB7f,KAAKglE,iDAoIwChlE,KAAKlR,MAAxDiY,IAAAA,KAAMM,IAAAA,QAASK,IAAAA,WAAY86B,IAAAA,SAAUiiC,IAAAA,UACrCnB,EAAWtjE,KAAKjR,MAAhBu0E,OACFvnE,EAAQsL,GAAYK,EAAkB,GAAL,GACjCu9D,EAAQvpE,MAAM6S,MAAM,KAAM,IAAI7S,MAAMK,IAAOmG,IAAI,SAACgjE,EAAGhpE,OACnDipE,EAAYjpE,EAAI,SAChBmL,IACuB,EAAZ89D,EAAiB,MAEjB,GAIbruE,iBAACmsE,gBACc/mE,QACNA,EAAI,OACLipE,SACEA,IAAcp+D,SACdu8D,kBACS9gC,aAMrB1rC,4BACOkJ,KAAKkkE,mBACA,gEACGlkE,KAAK0f,8BACJ+kD,EAAYzkE,KAAK2vC,uBAAoBjhD,eACrC+1E,EAAYzkE,KAAKogB,uBAAoB1xB,eACrCsR,KAAK4f,oCAElB2U,IAAeY,eAAYD,SAAUl1B,KAAKqkE,qCAE1CV,IAAU58D,KAAMA,EAAM88D,OAAQP,EAAQj8D,QAASA,YAtNjBzG,iBCPlBwkE,sNAkBnBC,OAAS,WACuB,OAA1Br0D,EAAKliB,MAAM4Y,cACR5Y,MAAMw2E,YAAYz8D,GAASmI,EAAKliB,MAAMy2E,UAAW,QAI1DC,OAAS,WACuB,OAA1Bx0D,EAAKliB,MAAM4Y,cACR5Y,MAAMw2E,YAAYz8D,GAASmI,EAAKliB,MAAMy2E,SAAU,0EAK/C79D,EAAe1H,KAAKlR,MAApB4Y,kBAEN5Q,wBAAKlF,UAAU,wCACEoB,QAASgN,KAAKqlE,OAAQpuD,OAAuB,OAAfvP,0BACvC9V,UAAU,8CAEDoB,QAASgN,KAAKwlE,OAAQvuD,OAAuB,OAAfvP,0BACvC9V,UAAU,iCAtCiBgP,iBCCpB6kE,sNAoDnBC,SAAW,aACJ52E,MAAM62E,YAAY,WAGzBC,WAAa,aACN92E,MAAM62E,YAAY,aAGzBE,WAAa,aACN/2E,MAAM62E,YAAY,iFAIuE3lE,KAAKlR,MAA3Fg3E,IAAAA,SAAU3/D,IAAAA,MAAOkB,IAAAA,QAASC,IAAAA,QAASI,IAAAA,WAAY49D,IAAAA,YAAaC,IAAAA,SAAUz+D,IAAAA,YAC1Ei/D,SACAr+D,MACY5Q,iBAACsuE,IAAYG,SAAUA,EAAUD,YAAaA,EAAa59D,WAAYA,SAGjFs+D,GAAiC,IAAhBl/D,EACpBhQ,qBAAe9D,QAASgN,KAAK6lE,WAAY5uD,OAAqB,WAAb6uD,0BAC5Cl0E,UAAU,oBAGI,YAGpBkF,2BAAQlF,UAAU,uDACDoB,QAASgN,KAAK0lE,SAAUzuD,OAAqB,SAAb6uD,0BACzCl0E,UAAU,yCAIDoB,QAASgN,KAAK4lE,WAAY3uD,OAAqB,WAAb6uD,0BAC3Cl0E,UAAU,gCAtFsBgP,iBCCzBqlE,sNAsFnBC,YAAc,SAACC,OACTC,EAAWD,IACyCn1D,EAAKliB,MAArDy2E,IAAAA,SAAUD,IAAAA,YAAaQ,IAAAA,SAAUp+D,IAAAA,WACnCX,EAAO,IAAIrC,KAAK6gE,MACL,SAAbO,EAAqB,KACjBO,EAAsB,OAAf3+D,EACP4+D,EAAoB,KAAbF,EACT1+D,GAAc2+D,GAAQC,IACb,GACF5+D,GAAe2+D,GAASC,OACrB,MAGTlgE,SAASggE,GAGC,WAAbN,KACGS,WAAWH,GAGD,WAAbN,KACGU,WAAWJ,KAGNr/D,MAGd0/D,kBAAoB,iBACsCz1D,EAAKliB,MAArD21E,IAAAA,UAAWkB,IAAAA,YAAarf,IAAAA,UAAWwf,IAAAA,SAEvCrB,IACe,SAAbqB,IACU,wFA8BZ9lE,KAAKlR,MArBPw2D,IAAAA,QACAC,IAAAA,UACAe,IAAAA,UACAZ,IAAAA,YACAC,IAAAA,cACAY,IAAAA,cACA/uD,IAAAA,MACA5F,IAAAA,UACA+zE,IAAAA,YACAL,IAAAA,YACAQ,IAAAA,SACAP,IAAAA,SACAp/D,IAAAA,MACAkB,IAAAA,QACAC,IAAAA,QACAI,IAAAA,WACAk4D,IAAAA,YACA/wC,IAAAA,OACAh4B,IAAAA,KACA4tE,IAAAA,UACA39D,IAAAA,YAGI4/D,EAAWpuE,SAAS6N,EAAO,IAC3BwgE,EAAaruE,SAAS+O,EAAQ6C,QAAQ,UAAW,IAAK,IACxD08D,SACA9/D,IAAa8/D,EAAatuE,SAASgP,EAAQ4C,QAAQ,UAAW,IAAK,SAEjEijC,QACC,iBACIoZ,UACAZ,aACGA,QACLD,QAEF,aACIY,UACAf,aACGA,QACLD,IAGLv+C,eACa,SAAb++D,IAAqB/+D,EAAO2/D,GACf,WAAbZ,IAAuB/+D,EAAO4/D,GACjB,WAAbb,IAAuB/+D,EAAO6/D,GAGhC9vE,8BACSU,YACI1F,GAAG,qDACG8tE,EAAgBA,QAC/B,oBAAqB/wC,QACrB,yBAA0BA,GAAUh4B,MACnCjF,qBAEF6zE,aACWF,WACAO,cACGH,cACAL,QACNn/D,UACEkB,UACAC,aACGI,cACCZ,4BAEVlV,UAAU,uDACRA,UAAU,+DACZqyE,SACOl9D,UACgB,WAAb++D,GAAsC,WAAbA,WACxB9lE,KAAKkmE,uBACHx+D,YACD+8D,eACGzkE,KAAKymE,sCAGtBpkB,IAAalV,QAASA,aA7MOvsC,iBCuBnBimE,0BAuVP/3E,8EACJA,mBAEFg4E,WACAh4E,EAAM2zC,aACM,IAAI/9B,KAAK5V,EAAM2zC,cACpB3zC,EAAMyM,MACD,IAAImJ,KAAK5V,EAAMyM,OAEf,IAAImJ,SAGd2xB,OAAyC,IAAxBvnC,EAAM6uC,cACzB7uC,EAAM6uC,gBACJ7uC,EAAM+uC,wBAEP9uC,qBAEAiiB,EAAK+1D,cAAcD,EAAah4E,UAC5BA,EAAM2zC,kBACPqkC,WACIh4E,EAAMk4E,iBAAmBl4E,EAAMm4E,yBAC/BH,2EAIYp0D,MACpB1S,KAAKlR,MAAMyM,QAAUmX,EAAUnX,MAAO,KAClCwL,EAAO2L,EAAUnX,OAAS,IAAImJ,UAC/BjE,aAAW8kE,SAAUx+D,GAAS/G,KAAK+mE,cAAchgE,EAAM2L,iDAI7C0kB,EAAWi6B,SACDrxD,KAAKlR,MAAxB+/B,IAAAA,OAAQqN,IAAAA,OACV7F,OAA4B,IAAX6F,EACnBA,EACArtC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,WAKjCsnC,UAJyC,IAArBe,EAAU8E,OAC9B9E,EAAU8E,OACVrtC,EAASuoC,EAAWi6B,EAAW,cAM/Bh7B,EACExH,MACyB7uB,KAAK22B,qBAAqB,UAC9CzgC,iBAAiB,UAAW8J,KAAK+gE,cAEjClyC,MACkB7uB,KAAK22B,qBAAqB,UAC9CtgC,oBAAoB,UAAW2J,KAAK+gE,oEAKA,IAAtB/gE,KAAKlR,MAAMotC,OAC9Bl8B,KAAKlR,MAAMotC,OACXrtC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,aACtBiR,KAAKlR,MAAM+/B,WACG7uB,KAAK22B,qBAAqB,UAC9CtgC,oBAAoB,UAAW2J,KAAK+gE,oDAQjCv8D,EAAM1V,UACXsY,GAAiBtY,EAAM8X,eAAgB9X,EAAM+X,QAAS/X,EAAMgY,YAAatC,8CA2G/D1V,EAAOC,OAChB6X,EAAyC9X,EAAzC8X,eAAgBC,EAAyB/X,EAAzB+X,QAASC,EAAgBhY,EAAhBgY,YAC3BvL,EAAQ1M,EAASC,EAAOC,EAAO,gBAChCwM,EAEMA,aAAiBmJ,KACnBiC,GAAWC,EAAgBC,EAASC,EAAavL,GAGjDA,EALA,0CAiBLyE,KAAKjR,MANP+2E,IAAAA,SACAP,IAAAA,SACAp/D,IAAAA,MACAkB,IAAAA,QACAC,IAAAA,QACAI,IAAAA,aA0DE1H,KAAKlR,MAtDP0I,IAAAA,MACA5F,IAAAA,UACAovE,IAAAA,YACAC,IAAAA,gBACAn9B,IAAAA,WACAC,IAAAA,eACA0C,IAAAA,eACAC,IAAAA,mBACAxmC,IAAAA,GACA/O,IAAAA,SACAyZ,IAAAA,MACAk6B,IAAAA,YACAjuC,IAAAA,KACAg4B,IAAAA,OACA+wC,IAAAA,YACAhoC,IAAAA,UACAkL,IAAAA,cACA4nB,IAAAA,WACA+Z,IAAAA,UACA39D,IAAAA,YACAsmC,IAAAA,OACAzB,IAAAA,WACAC,IAAAA,UACAy1B,IAAAA,cACA1pC,IAAAA,MACAwM,IAAAA,YACAltB,IAAAA,OACA7lB,IAAAA,MACAoN,IAAAA,SACAwlC,IAAAA,SACAC,IAAAA,iBACArF,IAAAA,UACAsF,IAAAA,kBACA3D,IAAAA,WACAG,IAAAA,UACAC,IAAAA,SACAM,IAAAA,YACA0B,IAAAA,gBACAqoB,IAAAA,qBACc3U,IAAd,cAcGvnD,KAZHyM,QACA86B,UACAurC,WACAn/B,eACA5E,iBACAopC,kBACAh6B,qBAGA/Q,SACA8qC,kBACArpC,ghBAbA,+JAiBItH,OAAuC,IAAtBr2B,KAAKlR,MAAMotC,OAC9Bl8B,KAAKlR,MAAMotC,OACXrtC,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,WAE/BsxE,EACJvpE,iBAACmvE,SACKn3E,UACI+/B,SACAh4B,WACE0uE,WACAO,UACDx+D,QACFnB,UACEkB,aACGK,QACLs5D,YACIC,cACErB,YACF5/D,KAAK8hE,6BACD9hE,KAAK6hE,+BACP7hE,KAAKknE,yBACLlnE,KAAKmnE,uBACP1C,cACE39D,KAIbojC,kBACArb,EACQ/3B,qBAAU81B,WAAYyJ,EAASnJ,QAASm0C,MAGhDvqE,wBACSoJ,oBACEm2B,SACDr2B,KAAK6hE,mCACG,qCACC,yCACLxrB,aACAqU,SACJtd,YACGxB,aACCD,gBACE,uBACQqf,MAQ1Bl0D,wBAAKU,MAAOA,EAAO5F,UAAWE,GAAG,sBAAuBF,GAAY2L,IAAKyC,KAAK64B,gCAC3EqK,OACKhjC,QACGumC,YACI30C,IAAKswE,qBAAsBjxE,GAAYu1C,cACtC5C,iBACIhyC,IAAKswE,qBAAsBjxE,GAAY4yC,UAC/C9sB,GAAUof,QACXjlC,WACGoN,GAAY63B,WACZ2N,WACA7yC,WACA0F,mBACQotC,YACPrF,oBACQsF,kBACFvB,QACVhL,cACMwM,YACFvM,gBACIkL,aACHvC,WACFI,cACGM,YACFP,QACJ91B,cACMk6B,UACJ9kC,KAAKqiE,sBACHriE,KAAKqc,qBACTrc,KAAKonE,mBAAmBpnE,KAAKlR,MAAOkR,KAAKjR,+BA3qBT6R,iBAA5BimE,GAoUZn2D,6BACU,kBACE,YACX5Z,uDACU8P,WACW,oBAAXxW,OACZA,OAAOgH,UAAUmrE,cAAgBnyE,OAAOgH,UAAUorE,SAClD,gBACK,gBACE,cACE,wBACE,cACH,wBACU,eACR,2BACH,eACE,qCAsEf3pC,cAAgB,SAACvD,KACV3W,WAAa2W,QAOpByrC,YAAc,SAAChuE,G/IhcE,M+IicVA,EAAEI,OAASJ,EAAEK,YACXyuE,mBAAmB9uE,SAI5B4jC,oBAAsB,SAAC5jC,GACjBmgB,EAAKyL,aAAezL,EAAKyL,WAAWtmB,SAAStF,EAAEW,WAC5CmuE,mBAAmB9uE,SAI5BsvE,YAAc,SAACtvE,OACTmgB,EAAKpkB,MAAMqC,WAAY+hB,EAAKpkB,MAAM8yE,cAIhCvrC,SAAyC,IAAtBnjB,EAAKpkB,MAAMotC,OAChChpB,EAAKpkB,MAAMotC,OACXrtC,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,YAEjCmkB,EAAKpkB,MAAMm+C,sBACRn+C,MAAMm+C,mBAAmB5W,EAAStjC,QAGR,IAAtBmgB,EAAKpkB,MAAMotC,aAAwD,IAAvBhpB,EAAKpkB,MAAMunC,UAC1CnjB,EAAKpkB,MAAnB21E,aAGDyC,aAAa,UAGfzmE,UAAW41B,oBAIpB6wC,aAAe,SAACpB,GACV5yD,EAAKnkB,MAAM+2E,WAAaA,KAIvBrlE,UAAWqlE,mBAGlBqB,aAAe,SAACpgE,GACVmM,EAAKnkB,MAAMw2E,WAAax+D,KAIvBtG,aAAW8kE,SAAUx+D,GAASmM,EAAK6zD,cAAchgE,EAAMmM,EAAKpkB,eAGnEutB,eAAiB,SAACtpB,KACYA,EAAGmgB,EAAKmvD,aAAa,GAAM,IAElDtvE,EAAEI,OAASJ,EAAEK,WAAasM,IAAOwT,EAAKnkB,MAAMkoB,UAC1CxW,UAAWwW,QAAQ,UAI5B6qD,eAAiB,SAAC/uE,SAC+DmgB,EAAKpkB,MAA5Em+C,IAAAA,mBAAoBzK,IAAAA,SAAU57B,IAAAA,eAAgBC,IAAAA,QAASC,IAAAA,YACzDvL,EAAQ,IAAImJ,KAAKwO,EAAKnkB,MAAMw2E,UAC9B/iC,KACO77B,GAAWC,EAAgBC,EAASC,EAAavL,GAAQA,EAAOxI,GAGvEk6C,MACiB,EAAOl6C,OAGtBhE,MAAUgY,KAAMxL,GAAU2X,EAAK6zD,cAAcxrE,EAAO2X,EAAKpkB,aAC/B,IAArBokB,EAAKpkB,MAAMyM,UACdA,MAAQA,QAGiB,IAAtB2X,EAAKpkB,MAAMotC,aAAwD,IAAvBhpB,EAAKpkB,MAAMunC,YAC1DA,SAAU,KAGb51B,SAAS1R,SAGhB8yE,mBAAqB,SAAC9uE,GAChBmgB,EAAKpkB,MAAMm+C,sBACRn+C,MAAMm+C,oBAAmB,EAAOl6C,OAGnChE,cAC6B,IAAtBmkB,EAAKpkB,MAAMotC,aAAwD,IAAvBhpB,EAAKpkB,MAAMunC,aACtDA,SAAS,QAGf96B,EAAQ1M,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,SAC3CwM,aACWxM,EAAUmkB,EAAK6zD,cAAcxrE,EAAO2X,EAAKpkB,SAChDy2E,SAAWryD,EAAKnkB,MAAMgY,MAG1BhY,KACG0R,SAAS1R,KCnhBCs4E,+KAyEbrnE,KAAKlR,MAPPwa,IAAAA,MACA9R,IAAAA,MACA5F,IAAAA,UACA2J,IAAAA,MACA+rE,IAAAA,sBACA/wC,IAAAA,SACGznC,iFAGCy4E,EAAiC,iBAAVhsE,EACzBisE,SACAC,EAAWjwE,KACX+vE,EAAe,KACXG,uBAA8BC,IAAuBpsE,6BAEvC+rE,EAAyBA,EAAwB,IAAM/rE,KAGhE3M,OAAOqd,UAAWzU,mBACV1F,GAAG0F,EAAMowE,gBAAiBF,gBAC7B51E,GAAG0F,EAAMqwE,aAAcH,aAC1B51E,GAAG0F,EAAM4d,UAAWsyD,SAI7BI,QACE,8BACW,kBACA,YAGfP,MACiB,iBAAmBhsE,GAItCzE,6BACMhI,EACAg5E,SACGL,YACI31E,GAAG,yDACSykC,sCACgBgxC,yCACGA,GACvC31E,SA5HO,GA6HH0X,SA7HG,GA8HFA,UACA,mDAGKxX,GAAG,oEAC4By1E,gBAE9B,kBACE,cACPC,KACJ,QACA,OACD,eA5HkC5mE,iBAAzBymE,GAyDZ32D,6BAEE,wBACgB,cACb,OC3DOq3D,+KAuEyE/nE,KAAKlR,MAAvF8C,IAAAA,UAAWo2E,IAAAA,kBAAmBC,IAAAA,cAAe1sE,IAAAA,MAAO2sE,IAAAA,MAAO3xC,IAAAA,SAAaznC,qFAC1Ey4E,EAAiC,iBAAVhsE,EAEvBusE,QACE,8BACW,kBACA,KAGftwE,gBACA+vE,OACQx2E,MAAUwK,SACD,iBAAmBA,GAEpC0sE,MACMr5E,OAAOqd,OAAOzU,MACK,mBAAlBywE,EACHA,EAAc1sE,EAAOyE,MACrBioE,IAKNnxE,6BACMhI,aACOgD,GAAG,mCAAqCq2E,oBAAqB5xC,GAAY3kC,kCAG9Ek2E,SACGtwE,YACI1F,GAAG,0DACiBo2E,oCACMX,uCACGA,GACR,mBAAtBS,EACJA,EAAkBzsE,EAAOyE,MACzBgoE,cA3G4BpnE,iBAAvBmnE,GAkEZr3D,qBACE,OC9CU03D,0BAyPPt5E,8EACJA,MAgCRu5E,UAAY,SAACxpD,KACNypD,OAASzpD,KAGhB0jB,cAAgB,SAACxvC,OACXwI,EAAQxI,EAAEW,OAAO6H,SACG,aAApByV,EAAKliB,MAAMuD,KAAqB,KAC1B+hD,EAAYrhD,EAAEW,OAAd0gD,QACFm0B,EAAe15E,EAASmiB,EAAKliB,MAAOkiB,EAAKjiB,MAAO,SAChDy5E,EAAcD,EAAaj5E,QAAQiM,MACpB,IAAjBitE,GAAsBp0B,GACbm0B,EAAkBA,MAAkB,IAAKhtE,EAC3CitE,GAAe,IAAMp0B,EACtBm0B,EAAar+D,QAAQ,IAAImK,OAAU9Y,QAAY,IAE/CgtE,EAIRv3D,EAAKliB,MAAM0zC,YACR1zC,MAAM0zC,SAASjnC,EAAOxI,QAGG,IAArBie,EAAKliB,MAAMyM,SACfkF,UAAWlF,aAIpB8gB,eAAiB,SAACtpB,GACZie,EAAKliB,MAAMwtB,aACRxtB,MAAMwtB,UAAUvpB,OAGjBxD,EAAMwD,EAAEI,OAASJ,EAAEK,QACnBq1E,EAAMl5E,IAAQgrB,IAAMhrB,IAAQ+qB,GAC5BouD,EAAMn5E,IAAQkrB,IAAQlrB,IAAQirB,MAC/BxJ,EAAKs3D,SAAYG,GAAQC,MAI5B90E,qBACI+0E,EAAS33D,EAAKs3D,OAAO9nE,iBAAiB,qBACvCooE,aAAe5/D,GAAWgI,EAAK43D,aAAc,EAAGD,EAAOv5E,OAAS,EAAGs5E,KACjE13D,EAAK43D,cAAc5sD,YAClBzgB,EAAUyV,EAAKliB,MAAM+xD,SAAS7vC,EAAK43D,cAAnCrtE,MACJ1M,EAASmiB,EAAKliB,MAAOkiB,EAAKjiB,MAAO,WAAawM,IAC5CyV,EAAKliB,MAAM0zC,YACR1zC,MAAM0zC,SAASjnC,EAAOxI,QAGG,IAArBie,EAAKliB,MAAMyM,SACfkF,UAAWlF,iBAjFdstE,EAAuB,UAAf/5E,EAAMuD,UACftD,cAEsB,IAAhBD,EAAMyM,MAAuB,KAClCA,EAAQzM,EAAM2zC,kBAEG,IAAVlnC,MACDstE,EAAQ/5E,EAAM+xD,SAAS,GAAGtlD,MAAQ,MAGvCxM,MAAMwM,MAAQA,MAGfutE,EAAaj6E,EAASC,EAAOkiB,EAAKjiB,MAAO,kBAC1C65E,cAAgB,IACf/nB,SAASp9C,KAAK,WAAYvH,YAATX,QACPutE,MACPF,aAAe1sE,GAGf8U,EAAK43D,cAAgB,4DAIrBrtE,EAAOwtE,EAAc12E,SACd,UAATA,EACHkJ,IAAUwtE,GACkC,IAA5CxtE,EAAMmO,MAAM,KAAKpa,QAAQy5E,iDAoFzB/oE,KAAKlR,MAvBPoR,IAAAA,GACA7L,IAAAA,KACAhC,IAAAA,KACAuY,IAAAA,MACA2hC,IAAAA,eACA36C,IAAAA,UACAo3E,IAAAA,aACAC,IAAAA,iBACWj1D,IAAXjS,UACgBmnE,IAAhBC,eACAt6C,IAAAA,OACA19B,IAAAA,SACAimD,IAAAA,iBACAC,IAAAA,mBACAH,IAAAA,oBACAC,IAAAA,sBACkBiyB,IAAlBC,iBAMGv6E,KAJHyM,QACAslD,WACApe,4SAKIlnC,EAAQ1M,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,SACzC85E,EAAiB,UAATx2E,EAERwuD,EAAW7gD,KAAKlR,MAAM+xD,SAAS3+C,IAAI,SAAC00C,EAAS16C,OAC7C1E,EAAQo/C,EAAQp/C,MAChBwxE,MACMxxE,QAAawxE,EAAiBxxE,GAAUwxE,OAG5C50B,EAAUlhC,EAAKo2D,WAAW/tE,EAAOq7C,EAAQr7C,MAAOlJ,GAChDk3E,YACGrpE,EAAKhE,gBACGA,OACN7H,GAAgB,aAAThC,EAAsB,KAAO,mDAKlCw2E,GAASz0B,GAAkB,IAANl4C,IAAkC,IAAvBgX,EAAK01D,kBAAuBl6E,GAAa,2GAK7DwR,kBACpB02C,qBAEQ9kD,GAAGm3E,EAAkBryB,EAAQhlD,oBAGnCkF,iBAACsyE,EAAqBG,KAG3BlzB,gBACAzrC,MACU9T,oBAAgBlF,UAAW26C,EAAgBrsC,GAAOA,sBAI9DpJ,yBACMhI,OACCkR,KAAKqoE,oBACCv2E,GAAG,6BAA8BF,YAClCoO,KAAKuiC,wBACJsmC,EAAQ7oE,KAAKqc,eAAiB,mBAxZEzb,iBAA9BwnE,GAkPZ13D,wBACM,0BACK,wBACA,mCACE6lC,QCtRDizB,+KAiHbxpE,KAAKlR,MARPgkD,IAAAA,YACAC,IAAAA,cAEAS,IAAAA,oBACAC,IAAAA,qBACAC,IAAAA,sBACAC,IAAAA,uBACG7kD,sIAGCslD,EAAUz9C,EAAkB88C,EAAsBD,EAAqBV,GACvE22B,EAAY9yE,EAAkBg9C,EAAwBD,EAAuBX,UAGjFj8C,iBAACy/C,YACM,+BACgBnC,wBACEq1B,yBAEnB36E,WA5H0B8R,iBAAjB4oE,GAkGZ94D,0BACQ5Z,oDACEA,yDClGE4yE,+KAwGb1pE,KAAKlR,MARPgkD,IAAAA,YACAC,IAAAA,cAEAS,IAAAA,oBACAC,IAAAA,qBACAC,IAAAA,sBACAC,IAAAA,uBACG7kD,sIAGCslD,EAAUz9C,EAAkB88C,EAAsBD,EAAqBV,GACvE22B,EAAY9yE,EAAkBg9C,EAAwBD,EAAuBX,UAGjFj8C,iBAACy/C,YACM,4BACgBnC,wBACEq1B,yBAEnB36E,WAnHuB8R,iBAAd8oE,GAyFZh5D,0BACQ5Z,+DACEA,wDClGE6yE,+KAqFb3pE,KAAKlR,MAHP86E,IAAAA,QACAC,IAAAA,eACG/6E,iDAGkB,IAAZ86E,QAAoD,IAAlB96E,EAAMslD,YAC3CA,QAAUw1B,QAGY,IAAnBC,QAAkE,IAAzB/6E,EAAMioD,mBAClDA,eAAiB8yB,GAGlB/yE,iBAACy/C,OAAiBlkD,KAAK,UAAavD,GAAOwoD,gCA/FlB12C,iBCEfkpE,+KAckC9pE,KAAKlR,MAAhD8H,IAAAA,SAAUhF,IAAAA,UAAWyuC,IAAAA,QAAYvxC,kDACpC8H,EAKHE,+BACMhI,WACKuxC,YACEvuC,GAAG,kBAAmBd,GAAcrB,MAAM,IAASiC,QAPzD,YAhB4BgP,iBCApBmpE,+KAU0D/pE,KAAKlR,MAAxE0I,IAAAA,MAAO5F,IAAAA,UAAWo4E,IAAAA,eAAgBC,IAAAA,SAAU94E,IAAAA,SAAarC,4EAC7DqC,EACK,KAIP2F,4BACMhI,SACGF,OAAOqd,UAAWzU,GAASzG,MAAOi5E,cAC9Bl4E,GAAG,uBAAwBF,oCACFq4E,cApBLrpE,iBCDlBspE,+KAyBblqE,KAAKlR,MAVP0I,IAAAA,MACA5F,IAAAA,UACAu4E,IAAAA,GACAC,IAAAA,IACAnzD,IAAAA,OACA9lB,IAAAA,SACA84E,IAAAA,SACAI,IAAAA,UACAC,IAAAA,SACGx7E,sGAIHgI,iBAACglB,gBACW3qB,GACNrC,SACGF,OAAOqd,UAAWzU,GAAS1C,KAAMu1E,cAC7Bv4E,GAAG,kBAAmBF,6BACJqlB,8BACEgzD,8BACA94E,wBACNg5E,qCACaG,GAAYF,8BACnBE,iCACGA,GAAYrzD,GAAUkzD,kCACrBG,IAAan5E,GAAYi5E,qCACtBE,GAAYrzD,yCACRqzD,GAAYrzD,GAAUmzD,cA1CrCxpE,iBCGd2pE,+KAuBbvqE,KAAKlR,MATP0I,IAAAA,MACA5F,IAAAA,UACAy4E,IAAAA,UACAl5E,IAAAA,SACA84E,IAAAA,SACAO,IAAAA,UACAF,IAAAA,SACA9sD,IAAAA,QACG1uB,wGAIHgI,8BACMhI,SACGF,OAAOqd,UAAWzU,GAAS1C,KAAMu1E,cAC7Bv4E,GAAG,wCAAyCF,+BACxBq4E,gCACEO,mCACGr5E,yCACMq5E,GAAaF,2CACXA,GAAY9sD,cAlCzB5c,iBCRlB6pE,+KAuBbzqE,KAAKlR,MATP0I,IAAAA,MACA5F,IAAAA,UACA04E,IAAAA,SACAL,IAAAA,SACAI,IAAAA,UACApzD,IAAAA,OACA1b,IAAAA,MACAmvE,IAAAA,eACG57E,sGAGAw7E,IAAarzD,SACT,SAGL0zD,EAAWpvE,EAAMqvE,QAAQF,MACzBA,EAAiB,EAAG,OACPC,EAASjhE,MAAM,eAAvBsnD,OAAG3sD,OACc,IAApB/L,SAAS+L,EAAG,QACH2sD,UAIbl6D,8BACMhI,SACGF,OAAOqd,UAAWzU,GAAS1C,KAAMu1E,cAC7Bv4E,GAAG,2BAA4BF,wCACFq4E,gBAzCLrpE,iBCMrCiqE,GAAO,mBAAK7Z,EAAI,GAMD8Z,+KA+Db9qE,KAAKlR,MA3BPq7E,IAAAA,GACAC,IAAAA,IACAnzD,IAAAA,OACA9lB,IAAAA,SACA84E,IAAAA,SACAr4E,IAAAA,UACAy4E,IAAAA,UACAL,IAAAA,eACAe,IAAAA,eACAC,IAAAA,mBACAC,IAAAA,mBACAC,IAAAA,uBACAV,IAAAA,UACAW,IAAAA,YACAC,IAAAA,WACAC,IAAAA,eACAf,IAAAA,SACAgB,IAAAA,aACAC,IAAAA,aACAC,IAAAA,eACAjwE,IAAAA,MACAkwE,IAAAA,UACAC,IAAAA,cACApiE,IAAAA,MACAC,IAAAA,KACAmhE,IAAAA,eACG57E,uWAGC68E,aACuB,IAAlBD,IAAkCv6E,GAAYm5E,MAKlD,IAJCsB,EAAMtiE,GAASoiE,EAAgBniE,GAC/B9O,EAASoP,GAAW4hE,EAAWZ,GAAM,MACrCnC,EAAM,IAAMkD,EAET1vE,EAAI,EAAGA,GAAK0vE,EAAK1vE,IAAK,KACzBpH,EAAUoH,EAAIwsE,MACd33E,EAAQ06E,EACF,IAANvvE,GAAWA,IAAM0vE,IACX/hE,GAAW4hE,EAAWZ,cAEf/1E,QAAU2F,QAGrBiJ,KACJ5M,qCACeoF,YACH,iCACDpH,OAAM/D,mBAOrB+F,6BAAShI,GAAO8C,UAAWE,GAAG,kBAAmBF,wBAE9Cm4E,UACQgB,YACIC,WACD75E,WACA84E,iBACMD,qBAEjBE,UACQkB,YACIC,KACPlB,MACCC,WACKj5E,WACA84E,SACFhzD,YACGozD,UACFiB,UACAC,YACEC,WACDlB,qBAEXG,UACQQ,YACIC,WACDZ,WACAL,SACFhzD,QACD1b,YACI8uE,iBACKK,qBAEjBH,aACWN,WACA94E,YACCk5E,YACAG,WACDF,UACDa,YAlIgBvqE,iBCSdirE,0BAoYP/8E,8EACJA,mBAEEqP,EAAmBrP,EAAnBqP,IAAKC,EAActP,EAAdsP,IAAKmL,EAASza,EAATya,KACZD,EAAQ7S,KAAKyG,IAAIkB,EAAMD,GAAOoL,EAEhChO,OAA+B,IAAhBzM,EAAMyM,MACrBzM,EAAMyM,MACNzM,EAAM2zC,kBAEW,IAAVlnC,MACD4C,OAGJiL,EAAW4H,EAAK86D,cAAcvwE,EAAO4C,EAAKC,GAC1CisE,EAAYr5D,EAAK+6D,UAAU3iE,GAC3B4gE,EAAoB5gE,WAEC,IAAhBta,EAAMyM,eACP7M,OAGNs9E,gBACAl9E,EAAM8b,OAAU9b,EAAMm9E,UAAan9E,EAAM4vC,UAAa5vC,EAAM8vC,cACjD,UAGV7vC,oFAOK,YACE,aACC,KAERm9E,YAAa,yEAGMx5D,SACsC1S,KAAKlR,MAA3D4vC,IAAAA,SAAUE,IAAAA,UAAWh0B,IAAAA,MAAOzM,IAAAA,IAAKC,IAAAA,IAAKmL,IAAAA,UAAMhO,QACtCmX,EAAUnX,MAAO,KACvB6N,EAAWpJ,KAAK8rE,cAAcp5D,EAAUnX,MAAOmX,EAAUvU,IAAKuU,EAAUtU,UACzEqC,UAAW2I,WAAU4gE,eAAmB5gE,MAAaihE,UAAWrqE,KAAK+rE,UAAU3iE,KAGlFs1B,IAAahsB,EAAUgsB,UACtBE,IAAclsB,EAAUksB,WACxBh0B,IAAU8H,EAAU9H,YAElBuhE,gBAAgBz5D,GAGnBvU,IAAQuU,EAAUvU,KAAOC,IAAQsU,EAAUtU,KAAOmL,IAASmJ,EAAUnJ,WAClE9I,UAAW6I,MAAO7S,KAAKyG,IAAIwV,EAAUtU,IAAMsU,EAAUvU,KAAOuU,EAAUnJ,kDAI5D6tB,EAAWi6B,SACQrxD,KAAKjR,MAAjCkoB,IAAAA,OAAQm1D,IAAAA,gBACZriE,EAAK3Z,QAAU6mB,EAAS,MAAQ,2BAChCA,IAAWo6C,EAAUp6C,WACpB,QAASjX,KAAKqsE,qBAEbp1D,QACGq1D,mBAIHC,EAAUt1D,IAAWm1D,IACtBh8E,QAAUm8E,EAAU,MAAQ,2BAC7BvsE,KAAKksE,aAAeK,MACnB,YAAavsE,KAAKwsE,mBAClB,UAAWxsE,KAAKysE,kBACLF,EAASn8E,OAAQ,OAAQ4P,KAAKwsE,mBAC9BD,EAASn8E,OAAQ,MAAO4P,KAAKysE,qBAEtCP,WAAaK,sDAKdG,EAAKt8E,OAAOiG,sBACf,QAAS2J,KAAKqsE,uBACd,YAAarsE,KAAK4kE,oBAClB,UAAW5kE,KAAK2f,kBACFvvB,OAAQ,OAAQ4P,KAAKwsE,mBACrBp8E,OAAQ,MAAO4P,KAAKysE,gBAEjCzsE,KAAK2sE,0BACM3sE,KAAK2sE,aAGhB3sE,KAAK4sE,4BACM5sE,KAAK4sE,iDAUZrxE,iBACOA,mDAGHA,EAAO4C,EAAKC,UACjB3H,KAAK2H,IAAI,EAAG3H,KAAK0H,IAAI,KAAO5C,EAAQ4C,IAAQC,EAAMD,GAAQ,gDASjD/F,OACZy0E,GAAU,SACb,kBAAmB,gBAAiB,WAAWppE,KAAK,qBACzCrL,EAAUC,SAASy0E,MAIvBD,yCAGK95E,OACLnB,EAAcmB,EAAEW,OAAhB9B,gBAG0B,mBAApBA,EAAU+B,OAAwB/B,EAAU+B,MAAM,qDA2U5DqM,KAAKjR,MARPk7E,IAAAA,SACAhzD,IAAAA,OACAozD,IAAAA,UACAL,IAAAA,eACAQ,IAAAA,UACAwB,IAAAA,WACA1iE,IAAAA,MACAF,IAAAA,WAmCEpJ,KAAKlR,MA/BPoR,IAAAA,GACA/B,IAAAA,IACAC,IAAAA,IACAjN,IAAAA,SACAS,IAAAA,UACAm7E,IAAAA,WACAC,IAAAA,eACA5B,IAAAA,WACAC,IAAAA,eACAJ,IAAAA,mBACAC,IAAAA,uBACAtgE,IAAAA,MACAqhE,IAAAA,SACA1iE,IAAAA,KACA0jE,IAAAA,WACAvuC,IAAAA,SACAE,IAAAA,UACA0rC,IAAAA,SACAoB,IAAAA,cACAD,IAAAA,UACAf,IAAAA,eAUG57E,KARHyM,QACAinC,WACA0qC,eACAC,4BAGAC,6WAKI7xE,EAAQ1M,EAASmR,KAAKlR,MAAOkR,KAAKjR,OACpCs+E,EAAgBzuC,SAChBqtC,MAEAn1E,iBAACosC,OACQhjC,gBACFF,KAAKmiC,eACL,eACE5mC,iBACQ,0BACNxK,MAAOk8E,YACNjtE,KAAKstE,4BACT/jE,KAMVzS,6BACMhI,OACCkR,KAAKmc,mBACCrqB,GAAG,sBAAuBF,wBACbT,gBAEX6O,KAAKutE,8BACJvtE,KAAKutE,wCAENltC,QAASngC,mCAEhBA,OACC,kBACK,kCAEL/B,MACAC,QACE7C,WACGpK,uBAGX25E,QACM9qE,KAAKwtE,gBACH5+E,OAAOqd,UAAW8gE,GAAch8E,MAAOi7E,cACnCl6E,GAAGk7E,+BACiBtuC,+BACCE,eAEpBwsC,iBACIC,qBACIJ,yBACIC,SAChBj0D,WACEgzD,WACA94E,YACCk5E,iBACKL,MACX74E,GAAYiY,EAAW,MACV,IAAbA,YACMohE,eACGxqE,KAAKuc,4BACHvc,KAAKqc,4BACPrc,KAAKuf,sBACT+qD,YACCmB,gBACIC,iBACChB,OACVnhE,QACCD,QACA/N,cA57BmBqF,iBAAfirE,GA0XZn7D,kBACA,MACA,SACC,aACM,aACD,4BACgB,mBACX,qCAkJlB+8D,aAAe,SAAC/5E,UAAWwf,EAAKyuB,QAAUzuB,EAAKyuB,OAAOtpC,SAAS3E,SAoB/Dg6E,gBAAkB,SAAC36E,EAAGsG,OACdI,GAAK1G,EAAEwtB,eAAiBxtB,EAAEwtB,eAAe,GAAKxtB,GAAGkF,QAC/CqR,EAAU4J,EAAKnkB,MAAfua,QAC2C4J,EAAKpkB,MAAhD0zC,IAAAA,SAAU0qC,IAAAA,aAAc/uE,IAAAA,IAAKC,IAAAA,IAAKmL,IAAAA,OAEdF,GAC1B5P,EACAyZ,EAAKy6D,OAAOjzE,YACZwY,EAAKy6D,OAAO14E,wBAAwBH,KACpCwU,EACAC,EACApL,EACAC,EACA/E,GARMkC,IAAAA,MAAO6N,IAAAA,SAWTwkE,EAAa/+E,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,WAAawM,EAC7DinC,GAAYorC,KACLryE,EAAOxI,GAGbsG,IAAa6zE,IAAiBU,GAAc16D,EAAKnkB,MAAMqa,WAAaA,KAC1DA,EAAU7N,EAAOxI,OAG1BhE,WACI,8BAES,YACNsK,YACA6Z,EAAK64D,UAAU3iE,kBACPA,OAGN,aAAXrW,EAAEV,MAAkC,cAAXU,EAAEV,SACvBm4E,WAAY,QAGY,IAArBt3D,EAAKpkB,MAAMyM,UACdA,MAAQA,KAGXkF,SAAS1R,SAWhBw+E,iBAAmB,SAACx6E,MACH,cAAXA,EAAEV,MAAwB6gB,EAAKpkB,MAAMy1C,cAClCz1C,MAAMy1C,YAAYxxC,GACH,eAAXA,EAAEV,MAAyB6gB,EAAKpkB,MAAMuuC,gBAC1CvuC,MAAMuuC,aAAatqC,KAGtBmgB,EAAKpkB,MAAMqC,UAAwB,cAAX4B,EAAEV,OAAyB8C,EAAapC,EAAG,cAAiBmgB,EAAK26D,eAAe96E,SAIpGqF,EAAcrF,EAAEW,OAAhB0E,UACF01E,EAAkB11E,EAAUC,SAAS,4BACvCD,EAAUC,SAAS,oBAAsBy1E,GAEvC/6E,EAAEV,KAAKsB,MAAM,YACbC,mBAEC6M,UAAWwpE,UAAU,EAAMhzD,QAAQ,EAAMm1D,iBAAiB,EAAO5B,WAAW,MACvEt3D,EAAKu6D,aAAa16E,EAAEW,SAAWwf,EAAK66D,kBAAkB31E,MAC3Ds1E,gBAAgB36E,GAAG,UAI5BopB,SAAW,SAAC3pB,KACLypB,MAAQ5b,cAAY7N,SAG3Bg7E,UAAY,SAACQ,KACNL,OAASttE,cAAY2tE,SAG5B7rC,UAAY,SAACnzC,KACN2yC,OAASthC,cAAYrR,KACrBm9E,gBAAgBj5D,EAAKpkB,aAG5B09E,gBAAkB,SAACz5E,IACbmgB,EAAKpkB,MAAMqC,UAAa+hB,EAAKnkB,MAAMk7E,WAKnCl3E,EAAEV,KAAKsB,MAAM,YACbC,mBAGC85E,gBAAgB36E,GAAG,UAG1B05E,eAAiB,SAAC15E,IACXmgB,EAAKnkB,MAAMk7E,UAAY/2D,EAAKpkB,MAAMqC,UAAwB,YAAX4B,EAAEV,OAAuB8C,EAAapC,MAIrF26E,gBAAgB36E,GAAG,SAS1Bs5E,oBAAsB,SAACt5E,GAChBmgB,EAAKnkB,MAAMk7E,WAAa/2D,EAAKnkB,MAAMq9E,iBAAoBl5D,EAAKpkB,MAAMqC,UAIlE+hB,EAAK+I,MAAM5jB,SAAStF,EAAEW,WACpB+M,UAAWwW,QAAQ,EAAOuzD,WAAW,UAa9CyD,iBAAmB,SAACC,EAAkBn7E,EAAGo7E,SACEj7D,EAAKpkB,MAAtC0zC,IAAAA,SAAUrkC,IAAAA,IAAKC,IAAAA,IAAKksE,IAAAA,SAEtB/uE,EAAQ9E,KAAK2H,IAAID,EAAK1H,KAAK0H,IAAIC,EAAK8vE,IACpC9kE,EAAW8J,EAAK44D,cAAcvwE,EAAO4C,EAAKC,GAE5CokC,KACOjnC,EAAOxI,OAGZhE,+BAEa,YACNmkB,EAAK64D,UAAU3iE,kBACPA,eACT3S,KAAKyG,IAAIgW,EAAKnkB,MAAMqa,SAAWA,GAAY,GAAK+kE,QAG5B,IAArBj7D,EAAKpkB,MAAMyM,UACdA,MAAQA,GAGD,YAAXxI,EAAEV,MAAuBi4E,MACrBE,WAAY,KAGf/pE,SAAS1R,SAGhBu+E,uBAAyB,SAACc,EAAUr7E,KAC7Bk7E,iBAAiBG,EAAUr7E,GAAG,SASrCspB,eAAiB,SAACtpB,OACVxD,EAAMwD,EAAEI,OAASJ,EAAEK,UACY8f,EAAKpkB,MAAlCqP,IAAAA,IAAKC,IAAAA,IAAKmL,IAAAA,WAAMpY,YAKpB5B,IAAQmQ,IAGL,GAAKnQ,IAAQ+qB,IAAQ/qB,IAAQirB,GAA7B,KAIHsS,EAAYj+B,EAASqkB,EAAKpkB,MAAOokB,EAAKnkB,MAAO,WACrC0H,KAAK2H,IACfD,EACA1H,KAAK0H,KAAK5O,IAAQ+qB,IAAQ/Q,EAAOA,GAAQujB,EAAW1uB,MAGjD6vE,iBAAiBnhD,EAAW/5B,GAAG,WAZ7B0N,UAAWwW,QAAQ,EAAOuzD,WAAW,UAqB9CjuD,aAAe,SAACxpB,IACTA,EAAEI,OAASJ,EAAEK,WAAasM,KAI3BwT,EAAKpkB,MAAMw7E,YACR+D,wBAGF5tE,UAAW+pE,WAAW,WAG7BjrD,aAAe,aACR9e,UAAWwW,QAAQ,UAW1Bk1D,gBAAkB,SAACr9E,OACTm9E,EAAqDn9E,EAArDm9E,SAAUvtC,EAA2C5vC,EAA3C4vC,SAAUE,EAAiC9vC,EAAjC8vC,UAAWquC,EAAsBn+E,EAAtBm+E,cAAsBn+E,EAAV8b,WAO/CohE,EAAa,QACZttC,GAAaE,GAAcqtC,GAEzB,GAAI/4D,EAAKyuB,QAAUsqC,IAAavtC,EAAU,KACzCjS,EAAKr8B,OAAOC,iBAAiB6iB,EAAKyuB,WAC7BrpC,SAASm0B,EAAGC,iBAAiB,gBAAiB,KAAO,IACrDp0B,SAASm0B,EAAGC,iBAAiB,eAAgB,KAAO,GAExCugD,UANV,OASXjB,IAAe94D,EAAKnkB,MAAMi9E,cACvBvrE,UAAWurE,sBAhBXvrE,UAAWurE,WAAY,aAwBhCqC,oBAAsB,eACdC,EAAOp7D,EAAKpkB,MAAMq+E,0BACpBj6D,EAAKy5D,0BACMz5D,EAAKy5D,eAGfA,YAAc/3D,WAAW,aACvBnU,UAAW+c,SAAS,EAAMgtD,WAAW,MAErCmC,YAAc/3D,WAAW,aACvB+3D,YAAc,OACdlsE,UAAW+c,SAAS,KACxB8wD,IACFA,SAQLhC,YAAc,WACRp5D,EAAK05D,4BACM15D,EAAK05D,iBAGfA,cAAgBh4D,WAAW,aACzBg4D,cAAgB,KAChB15D,EAAKq7D,WACHA,OAASr7D,EAAK+I,MAAMloB,cAAc,uBAGpCw6E,OAAOvyD,SACX,OrLj2BD3R,GAAM,uBsLOSmkE,sNA0DnBpyD,aAAe,SAACrpB,SACoDie,EAAKliB,MAA/D2/E,IAAAA,UAAoB/gC,IAATghC,MAAShhC,OAAUj1B,IAAAA,aAAcmqB,IAAAA,UACtB,mBAAnB8K,EAAO16C,WACTA,QAAQD,GAGbie,EAAK29D,QACFA,KAAKrkE,oBAAoBs4B,EAAWnqB,UAM7Cm2D,cAAgB,WACV59D,EAAKoM,wBACMpM,EAAKoM,YACbA,SAAW,SAIpByxD,gBAAkB,iBAC0D79D,EAAKliB,MAAvEggF,IAAAA,SAAUC,IAAAA,gBAAiBN,IAAAA,UAAW7rC,IAAAA,UAAWnqB,IAAAA,aACpDq2D,WAIE54E,iBAAiB,OAAQ8a,EAAKg+D,qBAChCC,WAAa,SACb7xD,SAAWxI,WAAW,aACpBwI,SAAW,OACX6xD,WAAa,YAEX54E,oBAAoB,OAAQ2a,EAAKg+D,mBAEpCh+D,EAAK29D,QACFA,KAAKrkE,oBAAoBs4B,EAAWnqB,QAI1Cs2D,GAAmB/9D,EAAKjiB,MAAM2/E,WAGnCM,kBAAoB,aACbJ,uBACEv4E,oBAAoB,OAAQ2a,EAAKg+D,0BACjC94E,iBAAiB,QAAS8a,EAAKk+D,sBACjCD,WAAa,WAGpBC,mBAAqB,kBACZ74E,oBAAoB,QAAS2a,EAAKk+D,sBACpCD,WAAa,OACbJ,qGA/E2C7uE,KAAKlR,MAA7Csb,IAAAA,IAAKw4B,IAAAA,UAAoBusC,IAATT,MAASS,SAC7BA,OAIC/kE,IAAOD,GAAiBC,UAIxBukE,KAAOvkE,EAAIuX,uBAAuBA,4BAClCgtD,KAAKrkE,oBAAoBs4B,qDAIzBisC,sEAIAD,gBAEmB,UAApB5uE,KAAKivE,kBACA54E,oBAAoB,QAAS2J,KAAKkvE,oBACZ,SAApBlvE,KAAKivE,mBACP54E,oBAAoB,OAAQ2J,KAAKgvE,0DA0EtChvE,KAAKlR,MAbPsgF,IAAAA,gBACAx9E,IAAAA,UACA88E,IAAAA,MACA9rC,IAAAA,UASG9zC,KAPHoR,KACAkK,MACA0kE,WACAC,kBACAt2D,eACAg2D,wIAII9+E,EAAiB++E,EAAjB/+E,KAAM+9C,EAAWghC,EAAXhhC,OACNxtC,EAAOF,KAAKlR,MAAZoR,GAEF8T,EAAY,OACZ05B,EAAQ,GACE,YACL52C,sBAAGlF,UAAU,iDAEhBy9E,aACSD,QACL,UACGpvE,KAAKoc,sBACJsxB,aACC,YACA,oBAGS,iBAAXA,MACE9+C,OAAOqd,OAAOojE,EAAU3hC,aACtB57C,GAAGu9E,EAASz9E,UAAW87C,EAAO97C,mBAChCoO,KAAKoc,kBAKTtlB,iBAAC04C,GAAW6/B,GAGlBnvE,wBACmBwtC,EAAS,UAAY,SAGvC96C,WAAe86C,EAAS,SAAW,WAEvC52C,yBACMhI,MACAoR,OACEtN,YACKd,GAAG,wCACc8wC,wBACH8K,GACtB97C,iBA1K2BgP,iBCKhC0uE,GAAsB,GAUPC,0BAsKPzgF,8EACJA,MAkDR+pC,cAAgB,SAACvD,KACV3W,WAAate,cAAYi1B,MAShCk6C,aAAe,SAACd,OACRp5C,EAAYtkB,EAAK2N,cACL,OAAd2W,SACK,MAGH+L,EAAUtxC,SAASC,cAAc,OAC/BoI,UAAU5C,IAAI,wBACdi6E,UAAYf,EAAM/+E,SAEtBmgD,YACA4+B,EAAMhhC,OAAQ,GACRt1C,UAAU5C,IAAI,0BAEXzF,SAASC,cAAc,YACzB4B,UAAY,gBACZkH,YAAYuoC,OAEfqM,EAAS39C,SAASC,cAAc,YAC/By/E,UAAoC,iBAAjBf,EAAMhhC,OAAsBghC,EAAMhhC,OAASghC,EAAMhhC,OAAO9iC,QAC3EhZ,UAAY,sDACVkH,YAAY40C,UAEVrM,IAIJ7pC,MAAM8qD,SAAW,UAEhBxpD,YAAYg3C,OAChBlN,EAAYvB,EAAQnmC,aAAe,YAC/B9B,YAAY02C,GAEflN,KAGT8sC,cAAgB,SAAChB,KACViB,aAAe/6D,WAAW,aACxB+6D,aAAe,OAEflvE,UAAWiuE,QAAO9rC,UAAW5xB,EAAKw+D,aAAad,MACnD/wD,MAEEld,UAAW41B,SAAS,OAG3Bu5C,kBAAoB,eACc7oE,EAASiK,EAAKliB,MAAtC+kB,yBACHg8D,cAAgBj7D,WAAW,aACzBi7D,cAAgB,OAEhBpvE,UAAW41B,SAAS,KACxBtvB,EAAO4W,MAELld,UAAWiuE,MAAO,UAGzBoB,iBAAmB,SAACpB,KACbqB,aAAen7D,WAAW,aACxBm7D,aAAe,OAEftvE,UAAWiuE,QAAO9rC,UAAW5xB,EAAKw+D,aAAad,MACnD19D,EAAKliB,MAAM+kB,uBAAyBy7D,MAElC7uE,UAAWiuE,MAAO,YA1HjBr4C,IAAYvnC,EAAMkhF,OAAO5gF,gBAC1BL,uBAEI,2EAKDihF,EAAWhwE,KAAKlR,MAAhBkhF,OACJA,EAAO5gF,aACJsgF,cAAcM,EAAO,sDAIJt9D,OACjBg8D,KAASh8D,EAAUs9D,aAEtBtB,OADgB1uE,KAAKlR,MAAMkhF,cACJtB,IAAU1uE,KAAKjR,MAAM2/E,QAI3CA,EAEO1uE,KAAKjR,MAAMsnC,aAGhBy5C,iBAAiBpB,QAFjBgB,cAAchB,QAFdkB,oEASH5vE,KAAK2vE,2BACM3vE,KAAK2vE,cAGhB3vE,KAAK6vE,4BACM7vE,KAAK6vE,eAGhB7vE,KAAK+vE,2BACM/vE,KAAK+vE,cAGhB/vE,KAAKiwE,8BACMjwE,KAAKiwE,wDAkFkBjwE,KAAKjR,MAAnCsnC,IAAAA,QAASq4C,IAAAA,MAAO9rC,IAAAA,YAYpB5iC,KAAKlR,MAVP4kB,IAAAA,eACAI,IAAAA,uBACAD,IAAAA,uBACAq8D,IAAAA,QACAzB,IAAAA,UACA7iC,IAAAA,UACAwB,IAAAA,OAGGt+C,KAFH68C,aACAqkC,oJAGIrkC,EAAa98C,EAASmR,KAAKlR,MAAOkR,KAAK/P,QAAS,cAElD6/C,SACA4+B,MAEA53E,iBAAC03E,SACK1/E,OACA,wBACU+kB,QACP66D,YACI9rC,YACA6rC,GAAayB,UAKxB56C,EACJx+B,yBACOkJ,KAAK64B,kBACN,sBACM,uCACMnlB,yBACQI,yBACAD,aAMvBu5B,EAKHt2C,qBAAQu/B,QAASA,EAASsV,WAAYA,EAAYC,UAAWA,MAJtDvV,EAAUf,EAAY,YAlVY10B,iBAA1B2uE,GAwJZ7+D,+BACY,YACP,4BAEO,mBACD,qCACQ,2BACA,KA/JP6+D,GAkKZvuE,yBACOC,GAAUyM,YC9KLyiE,0BAmKPrhF,yFA4BZshF,QAAU,gBAAGC,IAAAA,IAAwBC,IAAnB,mBAA2Bx+B,IAAAA,MAAOy+B,IAAAA,KAC9CtsB,EAAU,KACVusB,EAAS,KACTxsB,EAAa,QACblS,GAASy+B,KACPF,EAAK,KACDn9B,EAASm9B,EAAInmE,QAAQ,MAAO,MACrBgpC,aACDA,UAERpB,MACcoB,YAGdq9B,OACcvsB,EAAgBA,MAAgB,IAAKwsB,QAElD,GAAIF,EAAQ,OACGA,EAAO5mE,MAAM,oCAI5Bu6C,UAASusB,SAAQxsB,iBAG5Bx2B,aAAe,gBAAGh2B,IAAAA,MAAOuE,IAAAA,YACnBvE,GAASuE,MACF/D,OAAQ+D,EAAMhL,MAAOgL,GAASvE,GAC9BA,IAEAuE,GACA/D,OAAQ+D,EAAMhL,MAAOgL,QADzB,MAvDFhN,iBACKiiB,EAAKwc,aAAa1+B,IACvBkiB,EAAKo/D,QAAQthF,2EAIM4jB,SAC6C1S,KAAKlR,MAAlE0I,IAAAA,MAAOuE,IAAAA,KAAMs0E,IAAAA,IAAKv+B,IAAAA,MAAOy+B,IAAAA,KAAyBD,IAAnB,mBACnC9sC,SACAhsC,IAAUkb,EAAUlb,OAASuE,IAAS2W,EAAU3W,UACpC5L,OAAQ6P,KAAKwtB,aAAa9a,KAItCo/B,IAAUp/B,EAAUo/B,OAASy+B,IAAS79D,EAAU69D,QAChD79D,EAAUo/B,QAASp/B,EAAU69D,MAAUF,IAAQ39D,EAAU29D,KAAOC,IAAW59D,EAAU,8BAEtE8wB,EAAcxjC,KAAKowE,QAAQ19D,KAG1C8wB,QACG/iC,SAAS+iC,0CA0CgCxjC,KAAKjR,MAA7CoB,IAAAA,OAAQ8zD,IAAAA,QAASusB,IAAAA,OAAQxsB,IAAAA,aAmB7BhkD,KAAKlR,MAjBP8C,IAAAA,UACAT,IAAAA,SACAk/E,IAAAA,IACA/+E,IAAAA,QACAC,IAAAA,UACAH,IAAAA,MACAI,IAAAA,QACAi/E,IAAAA,UACmBn6B,IAAnB,mBAQGxnD,KANHiN,OACA+1C,QACAy+B,OACA/4E,QACAZ,gGANA,gEAW8BoJ,KAAKlR,MAA/B8H,IAAAA,SAAUk7C,IAAAA,MAAOy+B,IAAAA,YAClB35E,GAAYy5E,MACJv5E,wBAAK45E,UAAWL,KAGzBv+B,MACMh7C,0BAAOoJ,GAAI+jD,OAGjBssB,MACKz5E,yBAAMoJ,GAAIswE,OAIjB15E,6BACMhI,SACG2hF,oBACUn6B,GAAkB0N,QAC5B7zD,YACI2B,GAAG,UAAWd,uDAMtBY,oBAnR0BgP,iBAAhBuvE,GA4JZz/D,mBACC,gBACK,cACJ,qCACE,kCC1Kb,IAAI4S,EAASlV,UAAkC,oBAAVhe,QAAyBA,OAAOqG,MAAQA,KACzErG,OAAwB,oBAARsf,MAAuBA,KAAKjZ,MAAQA,KAAOiZ,KAAOihE,SAAS,cAATA,GACrD,iBAAPC,MAAgBA,IAAMttD,sBCHhC,IAAIutD,EAAOziE,WAAkBqnC,QAAS,SACrB,iBAAPq7B,MAAgBA,IAAMD,QCDf,SAASE,GACxB,GAAgB,mBAANA,EAAiB,MAAMpiF,UAAUoiF,EAAK,uBAChD,OAAOA,MCAQ,SAAShnE,EAAIinE,EAAM5hF,GAElC,GADA6hF,GAAUlnE,QACErb,IAATsiF,EAAmB,OAAOjnE,EAC7B,OAAO3a,GACL,KAAK,EAAG,OAAO,SAASmH,GACtB,OAAOwT,EAAGlO,KAAKm1E,EAAMz6E,IAEvB,KAAK,EAAG,OAAO,SAASA,EAAGC,GACzB,OAAOuT,EAAGlO,KAAKm1E,EAAMz6E,EAAGC,IAE1B,KAAK,EAAG,OAAO,SAASD,EAAGC,EAAGgV,GAC5B,OAAOzB,EAAGlO,KAAKm1E,EAAMz6E,EAAGC,EAAGgV,IAG/B,OAAO,WACL,OAAOzB,EAAGwE,MAAMyiE,EAAMl1E,gBCjBT,SAASi1E,GACxB,MAAqB,iBAAPA,EAAyB,OAAPA,EAA4B,mBAAPA,MCAtC,SAASA,GACxB,IAAIG,GAASH,GAAI,MAAMpiF,UAAUoiF,EAAK,sBACtC,OAAOA,MCHQ,SAASI,GACxB,IACE,QAASA,IACT,MAAMp+E,GACN,OAAO,QCHOq+E,GAAoB,WACpC,OAA2E,GAApExiF,OAAOslB,kBAAmB,KAAMwb,IAAK,WAAY,OAAO,KAAOn5B,ICFpExG,GACWqhF,GAAqBrhF,SAEhCshF,GAAKH,GAASnhF,KAAamhF,GAASnhF,GAASC,kBAChC,SAAS+gF,GACxB,OAAOM,GAAKthF,GAASC,cAAc+gF,WCLnBK,KAA8B/iE,GAAoB,WAClE,OAAwG,GAAjGzf,OAAOslB,eAAeo9D,GAAyB,OAAQ,KAAM5hD,IAAK,WAAY,OAAO,KAAOn5B,OCGpF,SAASw6E,EAAIQ,GAC5B,IAAIL,GAASH,GAAI,OAAOA,EACxB,IAAIhnE,EAAItb,EACR,GAAG8iF,GAAkC,mBAArBxnE,EAAKgnE,EAAGn5E,YAA4Bs5E,GAASziF,EAAMsb,EAAGlO,KAAKk1E,IAAK,OAAOtiF,EACvF,GAA+B,mBAApBsb,EAAKgnE,EAAGS,WAA2BN,GAASziF,EAAMsb,EAAGlO,KAAKk1E,IAAK,OAAOtiF,EACjF,IAAI8iF,GAAkC,mBAArBxnE,EAAKgnE,EAAGn5E,YAA4Bs5E,GAASziF,EAAMsb,EAAGlO,KAAKk1E,IAAK,OAAOtiF,EACxF,MAAME,UAAU,4CCVd8iF,GAGiB7iF,OAAOslB,qBAEhBk9D,GAA4BxiF,OAAOslB,eAAiB,SAAwBgC,EAAGw7D,EAAGC,GAI5F,GAHAC,GAAS17D,GACTw7D,EAAIG,GAAYH,GAAG,GACnBE,GAASD,GACNG,GAAe,IAChB,OAAOL,GAAGv7D,EAAGw7D,EAAGC,GAChB,MAAM5+E,IACR,GAAG,QAAS4+E,GAAc,QAASA,EAAW,MAAMhjF,UAAU,4BAE9D,MADG,UAAWgjF,IAAWz7D,EAAEw7D,GAAKC,EAAWp2E,OACpC2a,OCdQ,SAAS67D,EAAQx2E,GAChC,OACEyU,aAAyB,EAAT+hE,GAChB7hE,eAAyB,EAAT6hE,GAChB9hE,WAAyB,EAAT8hE,GAChBx2E,MAAcA,OCHD61E,GAA4B,SAAS1jE,EAAQne,EAAKgM,GACjE,OAAOk2E,GAAGhmE,EAAEiC,EAAQne,EAAKyiF,GAAW,EAAGz2E,KACrC,SAASmS,EAAQne,EAAKgM,GAExB,OADAmS,EAAOne,GAAOgM,EACPmS,GCALukE,GAAU,SAAS5/E,EAAMgC,EAAMic,GACjC,IASI/gB,EAAK2iF,EAAKC,EATVC,EAAY//E,EAAO4/E,GAAQI,EAC3BC,EAAYjgF,EAAO4/E,GAAQM,EAC3BC,EAAYngF,EAAO4/E,GAAQV,EAC3BkB,EAAYpgF,EAAO4/E,GAAQP,EAC3BgB,EAAYrgF,EAAO4/E,GAAQU,EAC3BC,EAAYvgF,EAAO4/E,GAAQY,EAC3BrkE,EAAY8jE,EAAYzB,GAAOA,GAAKx8E,KAAUw8E,GAAKx8E,OACnDy+E,EAAYtkE,EAAiB,UAC7B9a,EAAY4+E,EAAYhvD,GAASkvD,EAAYlvD,GAAOjvB,IAASivB,GAAOjvB,QAAsB,UAE3Fi+E,IAAUhiE,EAASjc,GACtB,IAAI9E,KAAO+gB,GAET4hE,GAAOE,GAAa1+E,QAA0BhF,IAAhBgF,EAAOnE,KAC3BA,KAAOif,IAEjB2jE,EAAMD,EAAMx+E,EAAOnE,GAAO+gB,EAAO/gB,GAEjCif,EAAQjf,GAAO+iF,GAAmC,mBAAf5+E,EAAOnE,GAAqB+gB,EAAO/gB,GAEpEmjF,GAAWR,EAAMliD,GAAImiD,EAAK7uD,IAE1BsvD,GAAWl/E,EAAOnE,IAAQ4iF,EAAM,SAAUY,GAC1C,IAAIV,EAAI,SAAS97E,EAAGC,EAAGgV,GACrB,GAAGxL,gBAAgB+yE,EAAE,CACnB,OAAOj3E,UAAU1M,QACf,KAAK,EAAG,OAAO,IAAI2jF,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAEx8E,GACrB,KAAK,EAAG,OAAO,IAAIw8E,EAAEx8E,EAAGC,GACxB,OAAO,IAAIu8E,EAAEx8E,EAAGC,EAAGgV,GACrB,OAAOunE,EAAExkE,MAAMvO,KAAMlE,YAGzB,OADAu2E,EAAW,UAAIU,EAAW,UACnBV,EAXyB,CAa/BF,GAAOM,GAA0B,mBAAPN,EAAoBniD,GAAI2gD,SAAS90E,KAAMs2E,GAAOA,EAExEM,KACAjkE,EAAQwkE,UAAYxkE,EAAQwkE,aAAezjF,GAAO4iF,EAEhD9/E,EAAO4/E,GAAQgB,GAAKH,IAAaA,EAASvjF,IAAK2jF,GAAKJ,EAAUvjF,EAAK4iF,MAK5EF,GAAQI,EAAI,EACZJ,GAAQM,EAAI,EACZN,GAAQV,EAAI,EACZU,GAAQP,EAAI,EACZO,GAAQU,EAAI,GACZV,GAAQY,EAAI,GACZZ,GAAQkB,EAAI,GACZlB,GAAQgB,EAAI,IACZ,OAAiBhB,GC5DbnmE,MAAoBA,kBACP,SAASilE,EAAIxhF,GAC5B,OAAOuc,GAAejQ,KAAKk1E,EAAIxhF,ICF7BqI,MAAcA,YAED,SAASm5E,GACxB,OAAOn5E,GAASiE,KAAKk1E,GAAIn1E,MAAM,GAAI,OCDpBhN,OAAO,KAAKod,qBAAqB,GAAKpd,OAAS,SAASmiF,GACvE,MAAkB,UAAXqC,GAAIrC,GAAkBA,EAAGrnE,MAAM,IAAM9a,OAAOmiF,OCFpC,SAASA,GACxB,QAASriF,GAANqiF,EAAgB,MAAMpiF,UAAU,yBAA2BoiF,GAC9D,OAAOA,MCAQ,SAASA,GACxB,OAAOsC,GAAQ31C,GAAQqzC,KCHrBhrC,GAAQtvC,KAAKsvC,KACbvf,GAAQ/vB,KAAK+vB,SACA,SAASuqD,GACxB,OAAOpmC,MAAMomC,GAAMA,GAAM,GAAKA,EAAK,EAAIvqD,GAAQuf,IAAMgrC,ICHnD5yE,GACY1H,KAAK0H,OACJ,SAAS4yE,GACxB,OAAOA,EAAK,EAAI5yE,GAAIm1E,GAAUvC,GAAK,kBAAoB,GCJrD3yE,GACY3H,KAAK2H,IACjBD,GAAY1H,KAAK0H,OACJ,SAASoD,EAAOnS,GAE/B,OADAmS,EAAQ+xE,GAAU/xE,IACH,EAAInD,GAAImD,EAAQnS,EAAQ,GAAK+O,GAAIoD,EAAOnS,ICHrDmkF,GAASjwD,GADA,wBACmBA,GADnB,6BAEI,SAAS/zB,GACxB,OAAOgkF,GAAMhkF,KAASgkF,GAAMhkF,QCJ1B2Q,GAAK,EACLszE,GAAK/8E,KAAKszC,YACG,SAASx6C,GACxB,MAAO,UAAU6oB,YAAe1pB,IAARa,EAAoB,GAAKA,EAAK,QAAS2Q,GAAKszE,IAAI57E,SAAS,MCH/E67E,GAASrC,GAAqB,WAEjB,SAAS7hF,GACxB,OAAOkkF,GAAOlkF,KAASkkF,GAAOlkF,GAAOmkF,GAAInkF,KCHvCokF,GCKa,SAASC,GACxB,OAAO,SAASC,EAAOjkF,EAAIkkF,GACzB,IAGIv4E,EAHA2a,EAAS69D,GAAUF,GACnBzkF,EAAS4kF,GAAS99D,EAAE9mB,QACpBmS,EAAS0yE,GAAQH,EAAW1kF,GAGhC,GAAGwkF,GAAehkF,GAAMA,GAAG,KAAMR,EAASmS,GAExC,IADAhG,EAAQ2a,EAAE3U,OACEhG,EAAM,OAAO,OAEpB,KAAKnM,EAASmS,EAAOA,IAAQ,IAAGqyE,GAAeryE,KAAS2U,IAC1DA,EAAE3U,KAAW3R,EAAG,OAAOgkF,GAAeryE,GAAS,EAClD,OAAQqyE,IAAgB,GDhBXxC,EAA6B,GAC5C8C,GAAe7lE,GAAyB,eAE3B,SAASX,EAAQymE,GAChC,IAGI5kF,EAHA2mB,EAAS69D,GAAUrmE,GACnBxR,EAAS,EACTuS,KAEJ,IAAIlf,KAAO2mB,EAAK3mB,GAAO2kF,IAASpkD,GAAI5Z,EAAG3mB,IAAQkf,EAAO/K,KAAKnU,GAE3D,KAAM4kF,EAAM/kF,OAAS8M,GAAK4zB,GAAI5Z,EAAG3mB,EAAM4kF,EAAMj4E,SAC1Cy3E,GAAallE,EAAQlf,IAAQkf,EAAO/K,KAAKnU,IAE5C,OAAOkf,MEdQ,gGAEf/E,MAAM,QCCS9a,OAAOO,MAAQ,SAAc+mB,GAC5C,OAAOk+D,GAAMl+D,EAAGm+D,WCLNzlF,OAAOid,gCCAJG,yBCEE,SAAS+kE,GACxB,OAAOniF,OAAO8uC,GAAQqzC,KCDpBuD,GAKW1lF,OAAOqd,WAGJqoE,IAAWlD,GAAoB,WAC/C,IAAImD,KACA5B,KACApB,EAAIiD,SACJC,EAAI,uBAGR,OAFAF,EAAEhD,GAAK,EACPkD,EAAE/qE,MAAM,IAAI8C,QAAQ,SAASwI,GAAI29D,EAAE39D,GAAKA,IACZ,GAArBs/D,MAAYC,GAAGhD,IAAW3iF,OAAOO,KAAKmlF,MAAY3B,IAAI/uE,KAAK,KAAO6wE,IACtE,SAAgB/gF,EAAQ4c,GAM3B,IALA,IAAIokE,EAAQlmF,GAASkF,GACjBihF,EAAQ74E,UAAU1M,OAClBmS,EAAQ,EACRqzE,EAAaC,GAAKppE,EAClBqpE,EAAaC,GAAItpE,EACfkpE,EAAOpzE,GAMX,IALA,IAIIhS,EAJAgiF,EAAS8B,GAAQv3E,UAAUyF,MAC3BpS,EAASylF,EAAaI,GAAQzD,GAAGn5D,OAAOw8D,EAAWrD,IAAMyD,GAAQzD,GACjEniF,EAASD,EAAKC,OACdm5B,EAAS,EAEPn5B,EAASm5B,GAAKusD,EAAOj5E,KAAK01E,EAAGhiF,EAAMJ,EAAKo5B,QAAMmsD,EAAEnlF,GAAOgiF,EAAEhiF,IAC/D,OAAOmlF,GACPJ,GC7BJrC,GAAQA,GAAQV,EAAIU,GAAQI,EAAG,UAAWpmE,OAAQmlE,KCFlD,OAAiB/iE,GAA+Bzf,OAAOqd,wBCDvDmC,WAAmBiB,QAAW+hE,GAA6ChiE,YAAY,kCCEvFZ,cAAqB,EAIrB,IAAIymE,EAEJ,SAAgC/lF,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAFxEigB,CAAuB+lE,IAItC1mE,UAAkBymE,EAAS5lE,SAAW,SAAU3b,GAC9C,IAAK,IAAIwI,EAAI,EAAGA,EAAIJ,UAAU1M,OAAQ8M,IAAK,CACzC,IAAIoU,EAASxU,UAAUI,GAEvB,IAAK,IAAI3M,KAAO+gB,EACV1hB,OAAO+M,UAAUmQ,eAAejQ,KAAKyU,EAAQ/gB,KAC/CmE,EAAOnE,GAAO+gB,EAAO/gB,IAK3B,OAAOmE,kCCnBT8a,cAAqB,EAErBA,UAAkB,SAAUtf,EAAKC,GAC/B,IAAIuE,KAEJ,IAAK,IAAIwI,KAAKhN,EACRC,EAAKG,QAAQ4M,IAAM,GAClBtN,OAAO+M,UAAUmQ,eAAejQ,KAAK3M,EAAKgN,KAC/CxI,EAAOwI,GAAKhN,EAAIgN,IAGlB,OAAOxI,WCZT,IAAIwgF,GAEc9C,GAAyB,YACvC+D,GAAcvmF,OAAO+M,aAER/M,OAAOwmF,gBAAkB,SAASl/D,GAEjD,OADAA,EAAI1nB,GAAS0nB,GACV4Z,GAAI5Z,EAAGg+D,IAAiBh+D,EAAEg+D,IACF,mBAAjBh+D,EAAEnG,aAA6BmG,aAAaA,EAAEnG,YAC/CmG,EAAEnG,YAAYpU,UACdua,aAAatnB,OAASumF,GAAc,OCP9B,SAASE,EAAKlE,GAC7B,IAAIpnE,GAAO8mE,GAAKjiF,YAAcymF,IAAQzmF,OAAOymF,GACzCC,KACJA,EAAID,GAAOlE,EAAKpnE,GAChBkoE,GAAQA,GAAQV,EAAIU,GAAQI,EAAIkD,GAAM,WAAYxrE,EAAG,KAAQ,SAAUurE,GCJzElE,CAAyB,iBAAkB,WACzC,OAAO,SAAwBL,GAC7B,OAAOyE,GAAgBhnF,GAASuiF,OCLpC,OAAiB1iE,GAA+Bzf,OAAOwmF,gCCDvDhnE,WAAmBiB,QAAW+hE,GAAuDhiE,YAAY,kCCEjGZ,cAAqB,EAErBA,UAAkB,SAAUe,EAAUC,GACpC,KAAMD,aAAoBC,GACxB,MAAM,IAAI7gB,UAAU,8CCJxBsjF,GAAQA,GAAQV,EAAIU,GAAQI,GAAKjB,GAA2B,UAAWl9D,eAAgB7F,GAAwB5C,ICD/G,IAAIgqE,GAAUpnE,GAA+Bzf,UAC5B,SAAwBmiF,EAAIxhF,EAAKghF,GAChD,OAAOkF,GAAQvhE,eAAe68D,EAAIxhF,EAAKghF,qBCHzCniE,WAAmBiB,QAAW+hE,GAAsDhiE,YAAY,kCCEhGZ,cAAqB,EAIrB,IAAIknE,EAEJ,SAAgCxmF,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAFhEigB,CAAuBwmE,IAI9CnnE,UAAkB,WAChB,SAAS4V,EAAiB1wB,EAAQ5E,GAChC,IAAK,IAAIoN,EAAI,EAAGA,EAAIpN,EAAMM,OAAQ8M,IAAK,CACrC,IAAImoB,EAAav1B,EAAMoN,GACvBmoB,EAAWrU,WAAaqU,EAAWrU,aAAc,EACjDqU,EAAWnU,cAAe,EACtB,UAAWmU,IAAYA,EAAWpU,UAAW,IACjD,EAAIylE,EAAiBrmE,SAAS3b,EAAQ2wB,EAAW90B,IAAK80B,IAI1D,OAAO,SAAU7U,EAAa8U,EAAYC,GAGxC,OAFID,GAAYF,EAAiB5U,EAAY7T,UAAW2oB,GACpDC,GAAaH,EAAiB5U,EAAa+U,GACxC/U,GAdO,WCNlB,OCJiB4hE,YCIAA,GAA4BxiF,OAAOw1B,iBAAmB,SAA0BlO,EAAG0/D,GAClGhE,GAAS17D,GAKT,IAJA,IAGIw7D,EAHAviF,EAAS6lF,GAAQY,GACjBxmF,EAASD,EAAKC,OACd8M,EAAI,EAEF9M,EAAS8M,GAAEu1E,GAAGhmE,EAAEyK,EAAGw7D,EAAIviF,EAAK+M,KAAM05E,EAAWlE,IACnD,OAAOx7D,MCXQk7D,GAAqBrhF,UAAYA,SAAS4E,gBCCvDu/E,GAGc9C,GAAyB,YACvCyE,GAAc,aAIdC,GAAa,WAEf,IAIIC,EAJAC,EAAS3nE,GAAyB,UAClCnS,EAASm4E,GAAYjlF,OAczB,IAVA4mF,EAAOx+E,MAAMglE,QAAU,OACvB8U,GAAmBx4E,YAAYk9E,GAC/BA,EAAOhsC,IAAM,eAGb+rC,EAAiBC,EAAOC,cAAclmF,UACvBmmF,OACfH,EAAeI,MAAMC,uCACrBL,EAAe16C,QACfy6C,GAAaC,EAAe1D,EACtBn2E,YAAW45E,GAAoB,UAAEzB,GAAYn4E,IACnD,OAAO45E,SAGQlnF,OAAO8O,QAAU,SAAgBwY,EAAG0/D,GACnD,IAAInnE,EAQJ,OAPS,OAANyH,GACD2/D,GAAe,UAAIjE,GAAS17D,GAC5BzH,EAAS,IAAIonE,GACbA,GAAe,UAAI,KAEnBpnE,EAAOylE,IAAYh+D,GACdzH,EAASqnE,UACMpnF,IAAfknF,EAA2BnnE,EAAS4nE,GAAI5nE,EAAQmnE,qBCvCzD,IAAIrC,EAAanC,GAAqB,OAElCoD,EAAanmE,GAAqBmmE,OAClC8B,EAA8B,mBAAV9B,GAETpmE,UAAiB,SAAS/Z,GACvC,OAAOk/E,EAAMl/E,KAAUk/E,EAAMl/E,GAC3BiiF,GAAc9B,EAAOngF,KAAUiiF,EAAa9B,EAASd,IAAK,UAAYr/E,MAGjEk/E,MAAQA,ICVbgD,GAAMnF,GAAwB3lE,EAE9B+qE,GAAMnoE,GAAkB,kBAEX,SAAS0iE,EAAI0F,EAAKC,GAC9B3F,IAAOjhD,GAAIihD,EAAK2F,EAAO3F,EAAKA,EAAGp1E,UAAW66E,KAAKD,GAAIxF,EAAIyF,IAAMtmE,cAAc,EAAM3U,MAAOk7E,KCJzFE,MAMJvF,GAAmBuF,GAAmBtoE,GAAkB,YAAa,WAAY,OAAOrO,OAExF,OAAiB,SAASwP,EAAaonE,EAAM1tE,GAC3CsG,EAAY7T,UAAY+B,GAAOi5E,IAAoBztE,KAAMmb,GAAW,EAAGnb,KACvE2tE,GAAernE,EAAaonE,EAAO,cCVjCE,GASiB1F,GAAkB,YACnC2F,QAAsB5nF,MAAQ,WAAaA,QAK3C6nF,GAAa,WAAY,OAAOh3E,SAEnB,SAASi3E,EAAML,EAAMpnE,EAAatG,EAAMguE,EAASC,EAAQC,GACxEC,GAAY7nE,EAAaonE,EAAM1tE,GAC/B,IAeIouE,EAAS/nF,EAAKonF,EAfdY,EAAY,SAASC,GACvB,IAAIT,IAASS,KAAQC,EAAM,OAAOA,EAAMD,GACxC,OAAOA,GACL,IAVe,OAWf,IAVe,SAUF,OAAO,WAAmB,OAAO,IAAIhoE,EAAYxP,KAAMw3E,IACpE,OAAO,WAAoB,OAAO,IAAIhoE,EAAYxP,KAAMw3E,KAExDhB,EAAaI,EAAO,YACpBc,EAde,UAcFR,EACbS,GAAa,EACbF,EAAaR,EAAKt7E,UAClBi8E,EAAaH,EAAMX,KAAaW,EAnBjB,eAmBuCP,GAAWO,EAAMP,GACvEW,EAAaD,GAAWL,EAAUL,GAClCY,EAAaZ,EAAWQ,EAAwBH,EAAU,WAArBM,OAAkCnpF,EACvEqpF,EAAqB,SAARnB,EAAkBa,EAAM5nD,SAAW+nD,EAAUA,EAwB9D,GArBGG,IACDpB,EAAoBvB,GAAe2C,EAAWl8E,KAAK,IAAIo7E,OAC9BroF,OAAO+M,WAE9Bk7E,GAAeF,EAAmBH,GAAK,GAMxCkB,GAAcE,GAjCE,WAiCSA,EAAQvjF,OAClCsjF,GAAa,EACbE,EAAW,WAAmB,OAAOD,EAAQ/7E,KAAKmE,QAGpCo3E,IAAYL,IAASY,IAAeF,EAAMX,MACxD5D,GAAKuE,EAAOX,GAAUe,GAGxBG,GAAUpB,GAAQiB,EAClBG,GAAUxB,GAAQQ,GACfE,EAMD,GALAI,GACEW,OAASP,EAAaG,EAAWN,EA9ClB,UA+CfpoF,KAASgoF,EAAaU,EAAWN,EAhDlB,QAiDf1nD,QAASioD,GAERV,EAAO,IAAI7nF,KAAO+nF,EACd/nF,KAAOkoF,GAAOS,GAAST,EAAOloF,EAAK+nF,EAAQ/nF,SAC3C0iF,GAAQA,GAAQP,EAAIO,GAAQI,GAAK0E,IAASY,GAAaf,EAAMU,GAEtE,OAAOA,GCnELa,GTGa,SAASC,GACxB,OAAO,SAASpH,EAAMqH,GACpB,IAGI9hF,EAAGC,EAHH20B,EAAI1hB,OAAOi0B,GAAQszC,IACnB90E,EAAIo3E,GAAU+E,GACd9uC,EAAIpe,EAAE/7B,OAEV,OAAG8M,EAAI,GAAKA,GAAKqtC,EAAS6uC,EAAY,QAAK1pF,GAC3C6H,EAAI40B,EAAEmtD,WAAWp8E,IACN,OAAU3F,EAAI,OAAU2F,EAAI,IAAMqtC,IAAM/yC,EAAI20B,EAAEmtD,WAAWp8E,EAAI,IAAM,OAAU1F,EAAI,MACxF4hF,EAAYjtD,EAAEhsB,OAAOjD,GAAK3F,EAC1B6hF,EAAYjtD,EAAEvvB,MAAMM,EAAGA,EAAI,GAA2B1F,EAAI,OAAzBD,EAAI,OAAU,IAAqB,OSbjE66E,EAAwB,GAGnC/iE,GAA0B5E,OAAQ,SAAU,SAAS8uE,GACnDv4E,KAAKw4E,GAAK/uE,OAAO8uE,GACjBv4E,KAAKy4E,GAAK,GAET,WACD,IAEIrwE,EAFA8N,EAAQlW,KAAKw4E,GACbj3E,EAAQvB,KAAKy4E,GAEjB,OAAGl3E,GAAS2U,EAAE9mB,QAAemM,WAAO7M,EAAW2pB,MAAM,IACrDjQ,EAAQ+vE,GAAIjiE,EAAG3U,GACfvB,KAAKy4E,IAAMrwE,EAAMhZ,QACTmM,MAAO6M,EAAOiQ,MAAM,MCf9B,OAAiB,SAASA,EAAM9c,GAC9B,OAAQA,MAAOA,EAAO8c,OAAQA,ICSf+4D,GAA0B11E,MAAO,QAAS,SAAS68E,EAAUf,GAC5Ex3E,KAAKw4E,GAAKzE,GAAUwE,GACpBv4E,KAAKy4E,GAAK,EACVz4E,KAAK04E,GAAKlB,GAET,WACD,IAAIthE,EAAQlW,KAAKw4E,GACbhB,EAAQx3E,KAAK04E,GACbn3E,EAAQvB,KAAKy4E,KACjB,OAAIviE,GAAK3U,GAAS2U,EAAE9mB,QAClB4Q,KAAKw4E,QAAK9pF,EACH6a,GAAK,IAEH,QAARiuE,EAAwBjuE,GAAK,EAAGhI,GACxB,UAARi2E,EAAwBjuE,GAAK,EAAG2M,EAAE3U,IAC9BgI,GAAK,GAAIhI,EAAO2U,EAAE3U,MACxB,UAGHy2E,GAAUW,UAAYX,GAAUt8E,MCvBhC,IAAI,IALAk9E,GAGgBvqE,GAAkB,eAE9BwqE,IAAe,WAAY,eAAgB,YAAa,iBAAkB,eAAgB38E,GAAI,EAAGA,GAAI,EAAGA,KAAI,CAClH,IAAI06E,GAAaiC,GAAY38E,IACzB48E,GAAax1D,GAAOszD,IACpBa,GAAaqB,IAAcA,GAAWn9E,UACvC87E,KAAUA,GAAMmB,KAAe1F,GAAKuE,GAAOmB,GAAehC,IAC7DoB,GAAUpB,IAAQoB,GAAUt8E,MCX9B,UAAY01E,OCEKE,GAAkC7lE,EAAE,6BCFrD2C,WAAmBiB,QAAW+hE,GAA+ChiE,YAAY,gCCAzF,IAAI2pE,EAAW3H,GAAkB,QAG7B4H,EAAW3qE,GAAwB5C,EACnCvL,EAAW,EACX+4E,EAAerqF,OAAOqqF,cAAgB,WACxC,OAAO,GAELC,GAAU5H,GAAoB,WAChC,OAAO2H,EAAarqF,OAAOuqF,yBAEzBC,EAAU,SAASrI,GACrBiI,EAAQjI,EAAIgI,GAAOx9E,OACjBW,EAAG,OAAQgE,EACX8wD,SAgCAqoB,EAAOjrE,WACTinE,IAAU0D,EACVO,MAAU,EACVC,QAhCY,SAASxI,EAAIrzE,GAEzB,IAAIwzE,GAASH,GAAI,MAAoB,iBAANA,EAAiBA,GAAmB,iBAANA,EAAiB,IAAM,KAAOA,EAC3F,IAAIjhD,GAAIihD,EAAIgI,GAAM,CAEhB,IAAIE,EAAalI,GAAI,MAAO,IAE5B,IAAIrzE,EAAO,MAAO,IAElB07E,EAAQrI,GAER,OAAOA,EAAGgI,GAAM78E,GAsBlBs9E,QApBY,SAASzI,EAAIrzE,GACzB,IAAIoyB,GAAIihD,EAAIgI,GAAM,CAEhB,IAAIE,EAAalI,GAAI,OAAO,EAE5B,IAAIrzE,EAAO,OAAO,EAElB07E,EAAQrI,GAER,OAAOA,EAAGgI,GAAM/nB,GAYlByoB,SATa,SAAS1I,GAEtB,OADGmI,GAAUG,EAAKC,MAAQL,EAAalI,KAAQjhD,GAAIihD,EAAIgI,IAAMK,EAAQrI,GAC9DA,MC5CL78D,GAIiBk9D,GAAwB3lE,KAC5B,SAASpX,GACxB,IAAIqlF,EAAU7I,GAAK2D,SAAW3D,GAAK2D,WACd,KAAlBngF,EAAK8K,OAAO,IAAe9K,KAAQqlF,GAASxlE,GAAewlE,EAASrlF,GAAOkH,MAAOo+E,GAAOluE,EAAEpX,SCL/E,SAASqZ,EAAQ9d,GAMhC,IALA,IAIIL,EAJA2mB,EAAS69D,GAAUrmE,GACnBve,EAAS6lF,GAAQ9+D,GACjB9mB,EAASD,EAAKC,OACdmS,EAAS,EAEPnS,EAASmS,GAAM,GAAG2U,EAAE3mB,EAAMJ,EAAKoS,QAAc3R,EAAG,OAAOL,MCJ9C,SAASwhF,GACxB,IAAItiE,EAAaumE,GAAQjE,GACrB6D,EAAaC,GAAKppE,EACtB,GAAGmpE,EAKD,IAJA,IAGIrlF,EAHAqqF,EAAUhF,EAAW7D,GACrB+D,EAAUC,GAAItpE,EACdvP,EAAU,EAER09E,EAAQxqF,OAAS8M,GAAK44E,EAAOj5E,KAAKk1E,EAAIxhF,EAAMqqF,EAAQ19E,OAAMuS,EAAO/K,KAAKnU,GAC5E,OAAOkf,MCXM/S,MAAM0e,SAAW,SAAiB7rB,GACjD,MAAmB,SAAZ6kF,GAAI7kF,ICFTsrF,GACazI,GAA4Bh5D,OAAO,SAAU,mBAElDxpB,OAAOud,qBAAuB,SAA6B+J,GACrE,OAAOk+D,GAAMl+D,EAAG2jE,MCJdC,GACY1I,GAA0B3lE,EACtC7T,MAAeA,SAEfmiF,GAA+B,iBAAV3pF,QAAsBA,QAAUxB,OAAOud,oBAC5Dvd,OAAOud,oBAAoB/b,WAE3B4pF,GAAiB,SAASjJ,GAC5B,IACE,OAAO+I,GAAK/I,GACZ,MAAMh+E,GACN,OAAOgnF,GAAYn+E,gBAIJ,SAA6Bm1E,GAC9C,OAAOgJ,IAAoC,mBAArBniF,GAASiE,KAAKk1E,GAA2BiJ,GAAejJ,GAAM+I,GAAK/F,GAAUhD,MCjBjGkJ,GAMiBrrF,OAAOsrF,+BAEhB9I,GAA4B6I,GAAO,SAAkC/jE,EAAGw7D,GAGlF,GAFAx7D,EAAI69D,GAAU79D,GACdw7D,EAAIG,GAAYH,GAAG,GAChBI,GAAe,IAChB,OAAOmI,GAAK/jE,EAAGw7D,GACf,MAAM3+E,IACR,GAAG+8B,GAAI5Z,EAAGw7D,GAAG,OAAOM,IAAY+C,GAAItpE,EAAE5P,KAAKqa,EAAGw7D,GAAIx7D,EAAEw7D,MCZlDqH,GAKiB3H,GAAmBiE,IAoBpC4E,GAAiBE,GAAM1uE,EACvBgmE,GAAiB2I,GAAI3uE,EACrBquE,GAAiBO,GAAQ5uE,EACzBiuE,GAAiBp2D,GAAOkxD,OACxB8F,GAAiBh3D,GAAOi3D,KACxBC,GAAiBF,IAASA,GAAMG,UAEhCC,GAAiBC,GAAI,WACrBC,GAAiBD,GAAI,eACrB7F,MAAoB9oE,qBACpB6uE,GAAiBpH,GAAO,mBACxBqH,GAAiBrH,GAAO,WACxBsH,GAAiBtH,GAAO,cACxB0B,GAAiBvmF,OAAgB,UACjCosF,GAAmC,mBAAXtB,GACxBuB,GAAiB33D,GAAO23D,QAExBC,IAAUD,KAAYA,GAAiB,YAAMA,GAAiB,UAAEE,UAGhEC,GAAgBC,IAAeC,GAAO,WACxC,OAES,GAFFC,GAAQ9J,MAAO,KACpB/hD,IAAK,WAAY,OAAO+hD,GAAGzxE,KAAM,KAAMzE,MAAO,IAAIhF,MAChDA,IACD,SAASw6E,EAAIxhF,EAAKisF,GACrB,IAAIC,EAAYxB,GAAK9E,GAAa5lF,GAC/BksF,UAAiBtG,GAAY5lF,GAChCkiF,GAAGV,EAAIxhF,EAAKisF,GACTC,GAAa1K,IAAOoE,IAAY1D,GAAG0D,GAAa5lF,EAAKksF,IACtDhK,GAEAiK,GAAO,SAASjF,GAClB,IAAIkF,EAAMb,GAAWrE,GAAO8E,GAAQ7B,GAAiB,WAErD,OADAiC,EAAIjD,GAAKjC,EACFkF,GAGLC,GAAWZ,IAAyC,iBAApBtB,GAAQmC,SAAuB,SAAS9K,GAC1E,MAAoB,iBAANA,GACZ,SAASA,GACX,OAAOA,aAAc2I,IAGnBoC,GAAkB,SAAwB/K,EAAIxhF,EAAKisF,GAKrD,OAJGzK,IAAOoE,IAAY2G,GAAgBf,GAAWxrF,EAAKisF,GACtD5J,GAASb,GACTxhF,EAAMsiF,GAAYtiF,GAAK,GACvBqiF,GAAS4J,GACN1rD,GAAIgrD,GAAYvrF,IACbisF,EAAExrE,YAID8f,GAAIihD,EAAI2J,KAAW3J,EAAG2J,IAAQnrF,KAAKwhF,EAAG2J,IAAQnrF,IAAO,GACxDisF,EAAID,GAAQC,GAAIxrE,WAAYgiE,GAAW,GAAG,OAJtCliD,GAAIihD,EAAI2J,KAAQjJ,GAAGV,EAAI2J,GAAQ1I,GAAW,OAC9CjB,EAAG2J,IAAQnrF,IAAO,GAIX6rF,GAAcrK,EAAIxhF,EAAKisF,IACzB/J,GAAGV,EAAIxhF,EAAKisF,IAEnBO,GAAoB,SAA0BhL,EAAIW,GACpDE,GAASb,GAKT,IAJA,IAGIxhF,EAHAJ,EAAO6sF,GAAStK,EAAIqC,GAAUrC,IAC9Bx1E,EAAO,EACPqtC,EAAIp6C,EAAKC,OAEPm6C,EAAIrtC,GAAE4/E,GAAgB/K,EAAIxhF,EAAMJ,EAAK+M,KAAMw1E,EAAEniF,IACnD,OAAOwhF,GAKLkL,GAAwB,SAA8B1sF,GACxD,IAAI2sF,EAAIpH,GAAOj5E,KAAKmE,KAAMzQ,EAAMsiF,GAAYtiF,GAAK,IACjD,QAAGyQ,OAASm1E,IAAerlD,GAAIgrD,GAAYvrF,KAASugC,GAAIirD,GAAWxrF,QAC5D2sF,IAAMpsD,GAAI9vB,KAAMzQ,KAASugC,GAAIgrD,GAAYvrF,IAAQugC,GAAI9vB,KAAM06E,KAAW16E,KAAK06E,IAAQnrF,KAAO2sF,IAE/FC,GAA4B,SAAkCpL,EAAIxhF,GAGpE,GAFAwhF,EAAMgD,GAAUhD,GAChBxhF,EAAMsiF,GAAYtiF,GAAK,GACpBwhF,IAAOoE,KAAerlD,GAAIgrD,GAAYvrF,IAASugC,GAAIirD,GAAWxrF,GAAjE,CACA,IAAIisF,EAAIvB,GAAKlJ,EAAIxhF,GAEjB,OADGisF,IAAK1rD,GAAIgrD,GAAYvrF,IAAUugC,GAAIihD,EAAI2J,KAAW3J,EAAG2J,IAAQnrF,KAAMisF,EAAExrE,YAAa,GAC9EwrE,IAELY,GAAuB,SAA6BrL,GAKtD,IAJA,IAGIxhF,EAHA4kF,EAAS2F,GAAK/F,GAAUhD,IACxBtiE,KACAvS,EAAS,EAEPi4E,EAAM/kF,OAAS8M,GACf4zB,GAAIgrD,GAAYvrF,EAAM4kF,EAAMj4E,OAAS3M,GAAOmrF,IAAUnrF,GAAOwpF,IAAKtqE,EAAO/K,KAAKnU,GAClF,OAAOkf,GAEP4tE,GAAyB,SAA+BtL,GAM1D,IALA,IAIIxhF,EAJA+sF,EAASvL,IAAOoE,GAChBhB,EAAS2F,GAAKwC,EAAQvB,GAAYhH,GAAUhD,IAC5CtiE,KACAvS,EAAS,EAEPi4E,EAAM/kF,OAAS8M,IAChB4zB,GAAIgrD,GAAYvrF,EAAM4kF,EAAMj4E,OAAUogF,IAAQxsD,GAAIqlD,GAAa5lF,IAAakf,EAAO/K,KAAKo3E,GAAWvrF,IACtG,OAAOkf,GAIPusE,KAYF9C,IAXAwB,GAAU,WACR,GAAG15E,gBAAgB05E,GAAQ,MAAM/qF,UAAU,gCAC3C,IAAI8nF,EAAM/C,GAAI53E,UAAU1M,OAAS,EAAI0M,UAAU,QAAKpN,GAChD6tF,EAAO,SAAShhF,GACfyE,OAASm1E,IAAYoH,EAAK1gF,KAAKk/E,GAAWx/E,GAC1Cu0B,GAAI9vB,KAAM06E,KAAW5qD,GAAI9vB,KAAK06E,IAASjE,KAAKz2E,KAAK06E,IAAQjE,IAAO,GACnE2E,GAAcp7E,KAAMy2E,EAAKzE,GAAW,EAAGz2E,KAGzC,OADG8/E,IAAeH,IAAOE,GAAcjG,GAAasB,GAAMvmE,cAAc,EAAMyf,IAAK4sD,IAC5Eb,GAAKjF,KAEY,UAAG,WAAY,WACvC,OAAOz2E,KAAK04E,KAGdyB,GAAM1uE,EAAI0wE,GACV/B,GAAI3uE,EAAMqwE,GACVztE,GAA0B5C,EAAI4uE,GAAQ5uE,EAAI2wE,GAC1C9K,GAAyB7lE,EAAKwwE,GAC9BO,GAA0B/wE,EAAI4wE,GAM9B1C,GAAOluE,EAAI,SAASpX,GAClB,OAAOqnF,GAAKf,GAAItmF,MAIpB49E,GAAQA,GAAQM,EAAIN,GAAQY,EAAIZ,GAAQI,GAAK2I,IAAaxG,OAAQkF,KAElE,IAAI,IAAIE,GAAU,iHAGhBlwE,MAAM,KAAMxN,GAAI,EAAG09E,GAAQxqF,OAAS8M,IAAIy+E,GAAIf,GAAQ19E,OAEtD,IAAI,IAAI09E,GAAUxF,GAAMuG,GAAIpH,OAAQr3E,GAAI,EAAG09E,GAAQxqF,OAAS8M,IAAIugF,GAAU7C,GAAQ19E,OAElF+1E,GAAQA,GAAQV,EAAIU,GAAQI,GAAK2I,GAAY,UAE3C0B,IAAO,SAASntF,GACd,OAAOugC,GAAI+qD,GAAgBtrF,GAAO,IAC9BsrF,GAAetrF,GACfsrF,GAAetrF,GAAOmqF,GAAQnqF,IAGpCotF,OAAQ,SAAgBptF,GACtB,GAAGqsF,GAASrsF,GAAK,OAAOqtF,GAAM/B,GAAgBtrF,GAC9C,MAAMZ,UAAUY,EAAM,sBAExBstF,UAAW,WAAY3B,IAAS,GAChC4B,UAAW,WAAY5B,IAAS,KAGlCjJ,GAAQA,GAAQV,EAAIU,GAAQI,GAAK2I,GAAY,UAE3Ct9E,OA/FY,SAAgBqzE,EAAIW,GAChC,YAAahjF,IAANgjF,EAAkB6J,GAAQxK,GAAMgL,GAAkBR,GAAQxK,GAAKW,IAgGtEx9D,eAAgB4nE,GAEhB13D,iBAAkB23D,GAElB7B,yBAA0BiC,GAE1BhwE,oBAAqBiwE,GAErBvwE,sBAAuBwwE,KAIzB/B,IAASrI,GAAQA,GAAQV,EAAIU,GAAQI,IAAM2I,IAAcM,GAAO,WAC9D,IAAI/J,EAAImI,KAIR,MAA0B,UAAnBc,IAAYjJ,KAAyC,MAAtBiJ,IAAYjkF,EAAGg7E,KAAwC,MAAzBiJ,GAAW5rF,OAAO2iF,OACnF,QACHkJ,UAAW,SAAmB1J,GAC5B,QAAUriF,IAAPqiF,IAAoB6K,GAAS7K,GAAhC,CAIA,IAHA,IAEIgM,EAAUC,EAFVx5E,GAAQutE,GACR70E,EAAO,EAELJ,UAAU1M,OAAS8M,GAAEsH,EAAKE,KAAK5H,UAAUI,MAQ/C,MANsB,mBADtB6gF,EAAWv5E,EAAK,MACiBw5E,EAAYD,IAC1CC,GAAc5iE,GAAQ2iE,KAAUA,EAAW,SAASxtF,EAAKgM,GAE1D,GADGyhF,IAAUzhF,EAAQyhF,EAAUnhF,KAAKmE,KAAMzQ,EAAKgM,KAC3CqgF,GAASrgF,GAAO,OAAOA,IAE7BiI,EAAK,GAAKu5E,EACHvC,GAAWjsE,MAAM+rE,GAAO92E,OAKnCk2E,GAAiB,UAAEkB,KAAiBqC,GAAmBvD,GAAiB,UAAGkB,GAAclB,GAAiB,UAAElI,SAE5GqF,GAAe6C,GAAS,UAExB7C,GAAepgF,KAAM,QAAQ,GAE7BogF,GAAevzD,GAAOi3D,KAAM,QAAQ,GC1OpCnJ,GAAyB,iBCAzBA,GAAyB,cCIzB,OAAiB8L,GAA+B1I,wBCJhDpmE,WAAmBiB,QAAW+hE,GAAsChiE,YAAY,kCCchF,SAASD,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAZvFsf,cAAqB,EAIrB,IAAI2uE,EAAahuE,EAAuBiuE,IAIpCC,EAAWluE,EAAuBmuE,IAElCC,EAAsC,mBAArBF,EAAShuE,SAAwD,iBAAvB8tE,EAAW9tE,QAAuB,SAAUngB,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAmC,mBAArBmuF,EAAShuE,SAA0BngB,EAAI6gB,cAAgBstE,EAAShuE,SAAWngB,IAAQmuF,EAAShuE,QAAQ1T,UAAY,gBAAkBzM,GAIjTsf,UAA8C,mBAArB6uE,EAAShuE,SAA0D,WAAhCkuE,EAAQJ,EAAW9tE,SAAwB,SAAUngB,GAC/G,YAAsB,IAARA,EAAsB,YAAcquF,EAAQruF,IACxD,SAAUA,GACZ,OAAOA,GAAmC,mBAArBmuF,EAAShuE,SAA0BngB,EAAI6gB,cAAgBstE,EAAShuE,SAAWngB,IAAQmuF,EAAShuE,QAAQ1T,UAAY,cAA0B,IAARzM,EAAsB,YAAcquF,EAAQruF,mCCjBrMsf,cAAqB,EAIrB,IAAIgvE,EAEJ,SAAgCtuF,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAFxEigB,CAAuBsuE,IAItCjvE,UAAkB,SAAUkB,EAAM7T,GAChC,IAAK6T,EACH,MAAM,IAAIC,eAAe,6DAG3B,OAAO9T,GAAuF,iBAA7D,IAATA,EAAuB,aAAc,EAAI2hF,EAASnuE,SAASxT,KAAuC,mBAATA,EAA8B6T,EAAP7T,WCX1I,IAAI6hF,GAAQ,SAASxnE,EAAGuhE,GAEtB,GADA7F,GAAS17D,IACLg7D,GAASuG,IAAoB,OAAVA,EAAe,MAAM9oF,UAAU8oF,EAAQ,kCAG9D9nD,IAAK/gC,OAAOuhB,iBAAmB,gBAC7B,SAAS0gB,EAAM8sD,EAAOhuD,GACpB,KACEA,EAAMyhD,GAAkBT,SAAS90E,KAAMwS,GAA0B5C,EAAE7c,OAAO+M,UAAW,aAAag0B,IAAK,IACnGkB,MACJ8sD,IAAU9sD,aAAgBn1B,OAC1B,MAAM3I,GAAI4qF,GAAQ,EACpB,OAAO,SAAwBznE,EAAGuhE,GAIhC,OAHAiG,GAAMxnE,EAAGuhE,GACNkG,EAAMznE,EAAE9F,UAAYqnE,EAClB9nD,EAAIzZ,EAAGuhE,GACLvhE,GAVX,KAYM,QAASxnB,GACjBgvF,MAAOA,ICrBTzL,GAAQA,GAAQV,EAAG,UAAWphE,eAAgBihE,GAAwBzhD,MCDtE,OAAiBthB,GAA+Bzf,OAAOuhB,gCCDvD/B,WAAmBiB,QAAW+hE,GAAuDhiE,YAAY,WCEjG6iE,GAAQA,GAAQV,EAAG,UAAW7zE,OAAQ0zE,KCDtC,IAAIqE,GAAUpnE,GAA+Bzf,UAC5B,SAAgB8iF,EAAG8J,GAClC,OAAO/F,GAAQ/3E,OAAOg0E,EAAG8J,qBCH3BptE,WAAmBiB,QAAW+hE,GAA6ChiE,YAAY,kCCgBvF,SAASD,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAdvFsf,cAAqB,EAIrB,IAAIovE,EAAmBzuE,EAAuB0uE,IAI1CC,EAAW3uE,EAAuBosE,IAIlCiC,EAAWruE,EAAuBsuE,IAItCjvE,UAAkB,SAAUqB,EAAUC,GACpC,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAInhB,UAAU,iEAAoF,IAAfmhB,EAA6B,aAAc,EAAI0tE,EAASnuE,SAASS,KAG5JD,EAASlU,WAAY,EAAImiF,EAASzuE,SAASS,GAAcA,EAAWnU,WAClEoU,aACExU,MAAOsU,EACPG,YAAY,EACZC,UAAU,EACVC,cAAc,KAGdJ,IAAY8tE,EAAiBvuE,SAAU,EAAIuuE,EAAiBvuE,SAASQ,EAAUC,GAAcD,EAASO,UAAYN,Y/QPxH,IAAI9E,GAAgB,aAEpBA,GAAcC,YAAc3c,GAC5B0c,GAAcE,iBAAmB5c,IAAkB,GACnD0c,GAAcG,gBAAkB7c,IAAkB,GAClD0c,GAAcI,gBAAkB9c,GAAkB,MAClD0c,GAAcK,gBAAkB,WAC9B,OAAOrL,MAETgL,GAAcM,oBAAsB,SAAU/c,GAC5C,OAAOA,GAGT,OAAiByc,egRJEO,EAAWvE,EAAQzQ,EAAGC,EAAGgV,EAAGnH,EAAGtR,EAAG0Y,GACnD,IAEKF,EAAW,CACd,IAAIna,EACJ,QAAe1C,IAAXsY,EACF5V,EAAQ,IAAIsa,MAAM,qIACb,CACL,IAAIlI,GAAQjN,EAAGC,EAAGgV,EAAGnH,EAAGtR,EAAG0Y,GACvBE,EAAW,GACfva,EAAQ,IAAIsa,MAAM1E,EAAOkD,QAAQ,MAAO,WACtC,OAAO1G,EAAKmI,SAERtX,KAAO,sBAIf,MADAjD,EAAMwa,YAAc,EACdxa,OCvCiB,kDCIV,WACf,SAASwb,EAAK9d,EAAO+d,EAAUC,EAAeC,EAAUC,EAAcC,GAChEA,IAAWC,IAIfC,IACE,EACA,mLAMJ,SAASC,IACP,OAAOR,EAFTA,EAAKS,WAAaT,EAMlB,IAAIU,GACFC,MAAOX,EACPY,KAAMZ,EACNa,KAAMb,EACNzL,OAAQyL,EACRc,OAAQd,EACRxL,OAAQwL,EACRe,OAAQf,EAERgB,IAAKhB,EACLiB,QAAST,EACTzJ,QAASiJ,EACTkB,WAAYV,EACZ5a,KAAMoa,EACNmB,SAAUX,EACVY,MAAOZ,EACPlM,UAAWkM,EACXa,MAAOb,GAMT,OAHAE,EAAea,eAAiBnD,GAChCsC,EAAerM,UAAYqM,EAEpBA,oBC7BPc,UAAiBC,0BC1BnBzf,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAKT,IAII4uE,EAAK,cAFT,SAAgCj7E,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,IAFzEigB,CAAuB+F,IAKzB7F,UACV86D,EAEMp6E,SAASmG,iBAAyB,SAAU1D,EAAMurF,EAAWC,EAAS7nF,GACxE,OAAO3D,EAAK0D,iBAAiB6nF,EAAWC,EAAS7nF,IAAW,IACnDpG,SAASkuF,YAAoB,SAAUzrF,EAAMurF,EAAWC,GACjE,OAAOxrF,EAAKyrF,YAAY,KAAOF,EAAW,SAAUhrF,IAClDA,EAAIA,GAAK3C,OAAOoP,OACd9L,OAASX,EAAEW,QAAUX,EAAEmrF,WACzBnrF,EAAEorF,cAAgB3rF,EAClBwrF,EAAQniF,KAAKrJ,EAAMO,WALhB,GAWXyb,UAAkB27D,EAClB/7D,UAAiBI,EAAiB,uCC5BlC5f,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAKT,IAII6uE,EAAM,cAFV,SAAgCl7E,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,IAFzEigB,CAAuB+F,IAKzB7F,UACV+6D,EACMr6E,SAASmG,iBAAyB,SAAU1D,EAAMurF,EAAWC,EAAS7nF,GACxE,OAAO3D,EAAK6D,oBAAoB0nF,EAAWC,EAAS7nF,IAAW,IACtDpG,SAASkuF,YAAoB,SAAUzrF,EAAMurF,EAAWC,GACjE,OAAOxrF,EAAK4rF,YAAY,KAAOL,EAAWC,SADrC,GAMXxvE,UAAkB47D,EAClBh8D,UAAiBI,EAAiB,uCCtBlC5f,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAuBTiT,UAVuB,SAA0B1f,GACnCA,EAAMyS,MAAlB,IACI3K,EAAW9H,EAAM8H,SAGD8X,GAAOjE,SAASggC,MAAM7zC,mCCnB5ChI,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAITiT,WACE6vE,gBAAiB,GAIjBC,sBAAuB,kCCVzB1vF,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAETiT,UAYA,SAAsB+vE,GACpB,IAAI3nF,EAAW2nF,EAAO3nF,SAClB4nF,EAAaD,EAAOC,WACpBC,EAASF,EAAOE,OAChBxgE,EAAQsgE,EAAOtgE,MACfygE,EAAaH,EAAOG,WACpBC,EAAaJ,EAAOI,WAGpBC,EAAWlwE,GAAOjE,SAASggC,MAAM7zC,GAAY,EAC7C2K,EAAQi9E,GAAcC,EAASxgE,GAASygE,EACxCG,OAAY,EAiBhB,OAfKF,EASMp9E,EAAQ,EACjBA,EAAQ9K,KAAK6+E,IAAI/zE,EAAQu9E,EAAWzvE,QAAQgvE,iBAAmB,EACtD98E,EAAQq9E,IACjBr9E,EAAQq9E,EAAW,EAAInoF,KAAK6+E,KAAKsJ,EAAWr9E,GAASu9E,EAAWzvE,QAAQgvE,kBAVpE98E,EAAQ,EAEVs9E,IADAt9E,EAAQ,GACai9E,GAAcE,EAAazgE,EACvC1c,EAAQq9E,IAEjBC,IADAt9E,EAAQq9E,GACaJ,GAAcE,EAAazgE,IASlD1c,MAAOA,EACPk9E,OAAQI,IApCZ,IAAIC,EAEJ,SAAgC5vF,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAFtEigB,CAAuB4vE,mCCTxCnwF,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAwBTiT,UApB0B,SAA6B1f,EAAO4jB,GAC5D,IAAIssE,GAAmB,EAEvB,GAAIlwF,EAAM8H,SAASxH,QAAUsjB,EAAU9b,SAASxH,OAAQ,CACtD,IAAI6vF,EAAcnwF,EAAM8H,SAAS9H,EAAMyS,OACnC29E,EAASD,EAAcA,EAAY1vF,IAAM,QAE7C,GAAe,OAAX2vF,EAAiB,CACnB,IAAI/sE,EAAcO,EAAU9b,SAAS8b,EAAUnR,OAG3C29E,KAFS/sE,EAAcA,EAAY5iB,IAAM,WAG3CyvF,GAAmB,IAKzB,OAAOA,kCCtBTpwF,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IASTiT,UALA,SAAalC,EAAG88B,GACd,IAAI+1C,EAAI7yE,EAAI88B,EACZ,OAAO+1C,EAAI,EAAIA,EAAI/1C,EAAI+1C,kCC0CzB,SAAShwE,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAjDvFN,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAKT3M,OAAOslB,eAAe1F,EAAS,oBAC7BwB,YAAY,EACZ0f,IAAK,WACH,OAAOvgB,EAAuBiwE,IAAmB/vE,WAMrDzgB,OAAOslB,eAAe1F,EAAS,gBAC7BwB,YAAY,EACZ0f,IAAK,WACH,OAAOvgB,EAAuBkwE,IAAehwE,WAMjDzgB,OAAOslB,eAAe1F,EAAS,YAC7BwB,YAAY,EACZ0f,IAAK,WACH,OAAOvgB,EAAuB4vE,IAAW1vE,WAM7CzgB,OAAOslB,eAAe1F,EAAS,uBAC7BwB,YAAY,EACZ0f,IAAK,WACH,OAAOvgB,EAAuBmwE,IAAsBjwE,WAMxDzgB,OAAOslB,eAAe1F,EAAS,OAC7BwB,YAAY,EACZ0f,IAAK,WACH,OAAOvgB,EAAuBowE,IAAMlwE,0CCoBxC,SAASF,EAAuBjgB,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAEvF,SAASswF,EAAyBhtF,EAAMgN,EAAOw+E,EAASroF,GAEtD,OADA,EAAI8pF,EAAKpwE,SAAS7c,EAAMgN,EAAOw+E,EAASroF,IAEtC4M,OAAQ,YACN,EAAIm9E,EAAMrwE,SAAS7c,EAAMgN,EAAOw+E,EAASroF,KAS/C,SAASgqF,IAEP,IAAKC,EAAe,CAClB,IAAIpoF,EAAQzH,SAASC,cAAc,SACnCwH,EAAMi4E,UAAY,gNAEd1/E,SAAS6E,MACX7E,SAAS6E,KAAKkE,YAAYtB,GAE5BooF,GAAgB,GAkGpB,SAASC,EAAiBrpE,EAAU7gB,GAMlC,OAAO6gB,EAAW,IALH7gB,EAAQghB,SAKY,IAJhBhhB,EAAQmqF,aAI6B,IAH5CnqF,EAAQ+gB,MAOtB,SAASqpE,EAAoBC,EAAOC,GAClC,IAAIC,EAAiBC,EAAeD,eAAeD,GAEnD,OACEhiE,MAAOiiE,EAAezmF,EAAE,GAAKumF,EAAM/hE,MAAQiiE,EAAezmF,EAAE,GAAKumF,EAAM9hE,MACvEA,MAAOgiE,EAAexmF,EAAE,GAAKsmF,EAAM/hE,MAAQiiE,EAAexmF,EAAE,GAAKsmF,EAAM9hE,OAI3E,SAASkiE,EAAW5gF,GAElB,OADAA,EAAM6gF,UAAapiE,MAAOze,EAAMye,MAAOC,MAAO1e,EAAM0e,QAC7C1e,EAGT,SAAS8gF,EAAiB38E,EAAS48E,GAGjC,IAFA,IAAIC,KAEG78E,GAAWA,IAAY48E,IAExB58E,EAAQ88E,aAAa,mBAFa,CAMtC,IAAIjpF,EAAQpH,OAAOC,iBAAiBsT,GAIG,aAAvCnM,EAAMk1B,iBAAiB,aAEkB,WAAzCl1B,EAAMk1B,iBAAiB,cACrB8zD,MACS78E,EAAQlH,YAAc,GAAKkH,EAAQoxB,YAAcpxB,EAAQlH,aAAekH,EAAQjH,aAAe,GAAKiH,EAAQgrB,aAAehrB,EAAQjH,eAG5I8jF,EAAc98E,MACZC,QAASA,EACToxB,YAAapxB,EAAQoxB,YACrBpG,aAAchrB,EAAQgrB,aACtBlyB,YAAakH,EAAQlH,YACrBC,aAAciH,EAAQjH,aACtB/C,WAAYgK,EAAQhK,WACpBC,UAAW+J,EAAQ/J,YAIvB+J,EAAUA,EAAQxK,WAGpB,OAAOqnF,EAQT,SAASE,EAAkBnC,GACzB,IAAIiC,EAAgBjC,EAAOiC,cACvBviE,EAAQsgE,EAAOtgE,MACfwgE,EAASF,EAAOE,OAChBwB,EAAO1B,EAAO0B,KAGlB,OAAOO,EAAc/8E,KAAK,SAAUwK,GAElC,IAAI0yE,EAAe1iE,GAASwgE,EACf,MAATwB,GAAyB,MAATA,IAClBU,GAAgBA,GAGlB,IAAIC,EAAiB3yE,EAAMkyE,EAAeS,eAAeX,IAErDY,EAAgBD,EAAiB,EACjCE,EAAcF,EAAiB3yE,EAAMkyE,EAAeY,aAAad,IAAShyE,EAAMkyE,EAAea,aAAaf,IAEhH,SAAIU,GAAgBG,IAAgBH,GAAgBE,KAClDI,EAA0BhzE,EAAMtK,SACzB,KAlRb/U,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAKT,IAAI2lF,EAAY/xE,EAAuBgyE,IAInClM,EAAW9lE,EAAuB+lE,IAIlCkM,EAA4BjyE,EAAuBkyE,IAInDC,EAAmBnyE,EAAuBoyE,IAI1CC,EAAmBryE,EAAuBsyE,IAI1CC,EAAgBvyE,EAAuBwyE,IAIvCC,EAA8BzyE,EAAuB0yE,IAIrDC,EAAa3yE,EAAuB4yE,IAExCvzE,mBAA2B8xE,EAC3B9xE,oBAA4BkyE,EAI5B,IAAIjwE,EAAUtB,EAAuBT,IAIjCqI,EAAc5H,EAAuBwB,IAQrCqxE,GAJY7yE,EAAuByB,IAIpBzB,EAAuB4I,KAItC0nE,EAAOtwE,EAAuB8yE,IAI9BvC,EAAQvwE,EAAuB+yE,IAe/BtC,GAAgB,EAiBhBzvF,GACFmlC,WACE/gC,UAAW,MACXioE,QAAS,QAIX2lB,OACEpxF,MAAO,OACPqxF,iBAAkB,EAClBC,WAAY,EACZp4B,SAAU,SAIVk2B,GACF98D,MACE5pB,GACE6oF,UAAW,UAEbC,aACED,UAAW,UAEb5oF,GACE8oF,UAAW,UAEbC,aACED,UAAW,WAGfE,eACEjpF,EAAG,MACH8oF,YAAa,cACb7oF,EAAG,SACH+oF,YAAa,kBAEfrtE,WACE3b,EAAG,SAAWkpF,GACZ,MAAO,cAAgBA,EAAY,SAErCJ,YAAa,SAAkBI,GAC7B,MAAO,aAAeA,EAAY,SAEpCjpF,EAAG,SAAWipF,GACZ,MAAO,iBAAmBA,EAAY,MAExCF,YAAa,SAAkBE,GAC7B,MAAO,gBAAkBA,EAAY,OAGzCvzF,QACEqK,EAAG,QACH8oF,YAAa,QACb7oF,EAAG,SACH+oF,YAAa,UAEfvC,gBACEzmF,GACEA,GAAI,EAAG,GACPC,GAAI,EAAG,IAET6oF,aACE9oF,IAAK,EAAG,GACRC,GAAI,EAAG,IAETA,GACED,GAAI,EAAG,GACPC,GAAI,EAAG,IAET+oF,aACEhpF,GAAI,GAAI,GACRC,GAAI,EAAG,KAGXknF,gBACEnnF,EAAG,aACH8oF,YAAa,aACb7oF,EAAG,YACH+oF,YAAa,aAEfzB,cACEvnF,EAAG,cACH8oF,YAAa,cACb7oF,EAAG,eACH+oF,YAAa,gBAEf1B,cACEtnF,EAAG,cACH8oF,YAAa,cACb7oF,EAAG,eACH+oF,YAAa,iBAoEbxB,EAA0B,KA8B1B2B,EAAiB,SAAUC,GAG7B,SAASD,IACP,IAAIE,EAEA7qE,EAAOjH,EAAOkH,GAElB,EAAIspE,EAAiBnyE,SAASrP,KAAM4iF,GAEpC,IAAK,IAAIzqE,EAAOrc,UAAU1M,OAAQoU,EAAO9H,MAAMyc,GAAOpF,EAAO,EAAGA,EAAOoF,EAAMpF,IAC3EvP,EAAKuP,GAAQjX,UAAUiX,GAGzB,OAAekF,EAASjH,GAAQ,EAAI4wE,EAA4BvyE,SAASrP,MAAO8iF,EAAOF,EAAexyE,YAAa,EAAIkxE,EAAiBjyE,SAASuzE,IAAiB/mF,KAAK0S,MAAMu0E,GAAO9iF,MAAMoY,OAAO5U,KAAiBwN,EAAMjiB,SAAYiiB,EAAMuvE,SAAW,KAAMvvE,EAAM+xE,cAAgB,KAAM/xE,EAAMgyE,wBAAyB,EAAOhyE,EAAM0tE,WAAa,EAAG1tE,EAAMytE,OAAS,EAAGztE,EAAMiyE,MAAQ,EAAGjyE,EAAMkyE,GAAK,EAAGlyE,EAAMmyE,OAAS,EAAGnyE,EAAMoyE,eAAY10F,EAAWsiB,EAAMqyE,SAAU,EAAOryE,EAAMwtE,WAAa,EAAGxtE,EAAMsyE,mBAAqB,KAAMtyE,EAAMuyE,kBAAoB,KAAMvyE,EAAMwyE,YAAc,KAAMxyE,EAAMyyE,iBAAmB,SAAUjkF,GAC5lB,IAAIygF,EAAOjvE,EAAMliB,MAAMmxF,KAKvB,GAAuB,OAAnBjvE,EAAMuvE,SAAV,CAIA,IAAIP,EAAQD,EAAoBvgF,EAAM6gF,QAAQ,GAAIJ,GAElDjvE,EAAM0tE,WAAa1tE,EAAMuvE,SAAStrF,wBAAwBkrF,EAAe/wF,OAAO6wF,IAChFjvE,EAAMytE,OAASuB,EAAM/hE,MACrBjN,EAAMiyE,MAAQjD,EAAM/hE,MACpBjN,EAAMkyE,GAAK,EACXlyE,EAAMmyE,OAASnD,EAAM9hE,MACrBlN,EAAMoyE,eAAY10F,EAClBsiB,EAAMqyE,SAAU,EAEhB,IAAIK,EAAgBtzF,OAAOC,iBAAiB2gB,EAAM+xE,eAC9C3tE,EAAYsuE,EAAch3D,iBAAiB,sBAAwBg3D,EAAch3D,iBAAiB,aAEtG,GAAItX,EAAW,CACb,IAAIuuE,EAAkBvuE,EAAU1L,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAC9Dk6E,EAAYxzF,OAAOC,iBAAiB2gB,EAAMuvE,UAE1CsD,EAAqB9D,GACvB9hE,MAAO3lB,SAASqrF,EAAgB,GAAI,IACpCzlE,MAAO5lB,SAASqrF,EAAgB,GAAI,KACnC1D,GAEHjvE,EAAMwtE,YAAcqF,EAAmB5lE,OAASjN,EAAM0tE,WAAapmF,SAASsrF,EAAU9yB,YAAa,IAAMx4D,SAASsrF,EAAU7yB,aAAc,QAE3I//C,EAAM8yE,gBAAkB,SAAUtkF,GAGnC,GAAKwR,EAAMqyE,SAOX,GAAuB,OAAnBryE,EAAMuvE,WAKsB,OAA5BU,GAAoCA,IAA4BjwE,EAAMuvE,UAA1E,CAIA,IAAIwD,EAAc/yE,EAAMliB,MACpBmxF,EAAO8D,EAAY9D,KACnBrpF,EAAWmtF,EAAYntF,SACvBotF,EAAqBD,EAAYC,mBACjCC,EAAcF,EAAYE,YAC1BtF,EAAaoF,EAAYpF,WAGzBqB,EAAQD,EAAoBvgF,EAAM6gF,QAAQ,GAAIJ,GAGlD,QAAwBvxF,IAApBsiB,EAAMoyE,UAAyB,CACjC,IAAIc,EAAKztF,KAAKyG,IAAI8T,EAAMytE,OAASuB,EAAM/hE,OACnCkmE,EAAK1tF,KAAKyG,IAAI8T,EAAMmyE,OAASnD,EAAM9hE,OAEnCklE,EAAYc,EAAKC,GAAMD,EAAKE,GAAyBC,SAAS/F,sBAOlE,GAJI4F,EAAKC,GACP3kF,EAAM5L,kBAGU,IAAdwvF,GAAsBe,EAAKC,GAAyBC,SAAS/F,sBAI/D,OAHAttE,EAAMoyE,UAAYA,OAClBpyE,EAAMytE,OAASuB,EAAM/hE,OAMzB,IAAwB,IAApBjN,EAAMoyE,UAAV,CAKA5jF,EAAM5L,iBAGNod,EAAMkyE,GAAgB,GAAXlyE,EAAMkyE,GAAyC,IAA7BlD,EAAM/hE,MAAQjN,EAAMiyE,OACjDjyE,EAAMiyE,MAAQjD,EAAM/hE,MAEpB,IAAIohE,GAAgB,EAAI+E,GAAyBE,eAC/C1tF,SAAUA,EACV+nF,WAAYA,EACZ1gE,MAAO+hE,EAAM/hE,MACbugE,WAAYxtE,EAAMwtE,WAClBC,OAAQztE,EAAMytE,OACdC,WAAY1tE,EAAM0tE,aAEhBn9E,EAAQ89E,EAAc99E,MACtBk9E,EAASY,EAAcZ,OAKK,OAA5BwC,IAAqC+C,GAEXtD,GAC1BF,cAFkBF,EAAiB9gF,EAAM9L,OAAQsd,EAAMuvE,UAGvD9B,OAAQztE,EAAMytE,OACdxgE,MAAO+hE,EAAM/hE,MACbgiE,KAAMA,MAUNxB,EACFztE,EAAMytE,OAASA,EACsB,OAA5BwC,IACTA,EAA0BjwE,EAAMuvE,UAGlCvvE,EAAMvQ,UACJu+E,kBAAkB,EAClBuF,YAAY,EACZC,aAAcjjF,GACb,WACG0iF,GACFA,EAAY1iF,EAAO,kBAlGrByP,EAAMyzE,iBAAiBjlF,IAqGxBwR,EAAM0zE,eAAiB,WAKxB,GAJAzD,EAA0B,KAIrBjwE,EAAMqyE,UAIXryE,EAAMqyE,SAAU,GAEQ,IAApBryE,EAAMoyE,WAAV,CAIA,IAAIuB,EAAc3zE,EAAMjiB,MAAM41F,YAC1BH,EAAexzE,EAAMjiB,MAAMy1F,aAC3BI,EAAQD,EAAcH,EAEtBK,OAAW,EAKXA,EAFApuF,KAAKyG,IAAI8T,EAAMkyE,IAAMlyE,EAAMliB,MAAMsL,UAC/B4W,EAAMkyE,GAAK,EACFzsF,KAAK+vB,MAAMg+D,GAEX/tF,KAAKsvC,KAAKy+C,GAEd/tF,KAAKyG,IAAI0nF,GAAS5zE,EAAMliB,MAAMg2F,WAE5BF,EAAQ,EAAInuF,KAAK+vB,MAAMg+D,GAAgB/tF,KAAKsvC,KAAKy+C,GAEjDG,EAGb,IAAI/F,EAAWlwE,GAAOjE,SAASggC,MAAMz5B,EAAMliB,MAAM8H,UAAY,EAEzDiuF,EAAW,EACbA,EAAW,EACFA,EAAWjG,IACpBiG,EAAWjG,GAGb5tE,EAAMvQ,UACJ+jF,aAAcK,EACdF,YAAaE,EACbN,YAAY,GACX,WACGvzE,EAAMliB,MAAMm1F,aACdjzE,EAAMliB,MAAMm1F,YAAYY,EAAU,OAGhC7zE,EAAMliB,MAAMi2F,eAAiBF,IAAaF,GAC5C3zE,EAAMliB,MAAMi2F,cAAcF,EAAUF,GAIlCH,IAAiBG,GACnB3zE,EAAMg0E,0BAGTh0E,EAAMyzE,iBAAmB,SAAUjlF,GAChCwR,EAAMliB,MAAMuuC,cACdrsB,EAAMliB,MAAMuuC,aAAa79B,GAE3BwR,EAAMyyE,iBAAiBjkF,IACtBwR,EAAMi0E,eAAiB,SAAUzlF,GAC9BwR,EAAMliB,MAAM0uC,YACdxsB,EAAMliB,MAAM0uC,WAAWh+B,GAEzBwR,EAAM0zE,eAAellF,IACpBwR,EAAMk0E,gBAAkB,SAAU1lF,GAC/BwR,EAAMliB,MAAMy1C,aACdvzB,EAAMliB,MAAMy1C,YAAY/kC,GAE1BA,EAAMg8B,UACNxqB,EAAMyyE,iBAAiBrD,EAAW5gF,KACjCwR,EAAMm0E,cAAgB,SAAU3lF,GAC7BwR,EAAMliB,MAAM01C,WACdxzB,EAAMliB,MAAM01C,UAAUhlC,GAExBwR,EAAM0zE,eAAetE,EAAW5gF,KAC/BwR,EAAMo0E,iBAAmB,SAAU5lF,GAChCwR,EAAMliB,MAAMsuC,cACdpsB,EAAMliB,MAAMsuC,aAAa59B,GAIvBwR,EAAMqyE,SACRryE,EAAM0zE,eAAetE,EAAW5gF,KAEjCwR,EAAMq0E,gBAAkB,SAAU7lF,GAC/BwR,EAAMliB,MAAMw2F,aACdt0E,EAAMliB,MAAMw2F,YAAY9lF,GAItBwR,EAAMqyE,SACRryE,EAAM8yE,gBAAgB1D,EAAW5gF,KAElCwR,EAAMu0E,aAAe,SAAU/lF,GAMhC,GALIwR,EAAMliB,MAAM02F,UACdx0E,EAAMliB,MAAM02F,SAAShmF,GAInBA,EAAM9L,SAAWsd,EAAMuvE,SAI3B,GAAIvvE,EAAMgyE,uBACRhyE,EAAMgyE,wBAAyB,MADjC,CAKA,IAAI2B,EAAc3zE,EAAMjiB,MAAM41F,YAC1BE,EAAWpuF,KAAKsvC,KAAKvmC,EAAM9L,OAAOiG,WAAa6F,EAAM9L,OAAO+I,aAAekoF,EAE/E3zE,EAAMgyE,wBAAyB,EAE/BxjF,EAAM9L,OAAOiG,WAAa,EAEtBqX,EAAMliB,MAAMi2F,eAAiBF,IAAaF,GAC5C3zE,EAAMliB,MAAMi2F,cAAcF,EAAUF,KAtQjCzsE,EAwQJD,GAAQ,EAAI2pE,EAA4BvyE,SAAS2B,EAAOkH,GA6Q7D,OAliBA,EAAI4pE,EAAWzyE,SAASuzE,EAAgBC,IA0RxC,EAAInB,EAAcryE,SAASuzE,IACzBrzF,IAAK,kBACLgM,MAAO,WACL,IAAI2X,EAASlT,KAEb,OACEylF,gBACEC,kBAAmB,WACjBxyE,EAAOyyE,qBAMfp2F,IAAK,qBACLgM,MAAO,WACLyE,KAIKS,UACH+jF,aAAcxkF,KAAKlR,MAAMyS,MACzBojF,YAAa3kF,KAAKlR,MAAMyS,MACxBgjF,YAAY,EACZqB,eAAgB5lF,KAAKlR,MAAM+2F,mBAC3BC,aAAc,OAIlBv2F,IAAK,oBACLgM,MAAO,WACL,IAAI6X,EAASpT,KAGbA,KAAKsjF,mBAAqB9D,EAAyBx/E,KAAK+iF,cAAef,EAAa3yE,QAAQkH,IAAK,SAAU/W,GACrGA,EAAM9L,SAAW0f,EAAO2vE,eAI5B3vE,EAAO4xE,wBAIThlF,KAAKujF,kBAAoB/D,EAAyBx/E,KAAKugF,SAAU,YAAa,SAAU/gF,GAElF4T,EAAOtkB,MAAMqC,UAGjBiiB,EAAO0wE,gBAAgBtkF,KAEvB3J,SAAS,IAIXmK,KAAKS,UACHmlF,eAAe,IAIjBjG,OAGFpwF,IAAK,4BACLgM,MAAO,SAAmCmX,GACxC,IAAInR,EAAQmR,EAAUnR,MAGD,iBAAVA,GAAsBA,IAAUvB,KAAKlR,MAAMyS,OACpDvB,KAIKS,UAEHu+E,kBAAkB,EAAIoF,GAAyB2B,qBAAqB/lF,KAAKlR,MAAO4jB,GAChF8xE,aAAcjjF,EACdojF,YAAapjF,OAKnBhS,IAAK,qBACLgM,MAAO,SAA4B67B,EAAWi6B,GACvCrxD,KAAKlR,MAAMk3F,oBAAsB30B,EAAUmzB,eAAiBxkF,KAAKjR,MAAMy1F,cAC1ExkF,KAAKglF,yBAITz1F,IAAK,uBACLgM,MAAO,WACLyE,KAAKsjF,mBAAmB/gF,SACxBvC,KAAKujF,kBAAkBhhF,YAGzBhT,IAAK,sBACLgM,MAAO,WACAyE,KAAKlR,MAAMm3F,kBAKZjmF,KAAKjR,MAAMiwF,kBAMVh/E,KAAKjR,MAAMw1F,YACdvkF,KAAKlR,MAAMm3F,sBAIf12F,IAAK,eACLgM,MAAO,WACL,GAAyB,OAArByE,KAAKwjF,YAAsB,CAC7B,IAAIrpF,EAAQ6F,KAAKwjF,YAAY5sF,SAAS,QACxBlI,IAAVyL,QAA8CzL,IAAvByL,EAAMe,cAA8B8E,KAAKjR,MAAM+2F,eAAiB3rF,EAAMe,cAC/F8E,KAAKS,UACHqlF,aAAc3rF,EAAMe,mBAM5B3L,IAAK,SACLgM,MAAO,WACL,IAAIy9B,EAASh5B,KAETwnB,EAASxnB,KAAKlR,MACdo3F,EAAgB1+D,EAAO0+D,cACvBF,EAAqBx+D,EAAOw+D,mBAC5B/F,EAAOz4D,EAAOy4D,KACdrpF,EAAW4wB,EAAO5wB,SAClBuvF,EAAqB3+D,EAAO+lB,eAC5Bp8C,EAAWq2B,EAAOr2B,SAElBi1F,GADqB5+D,EAAOq+D,mBACRr+D,EAAO4+D,mBAQ3BC,GAPa7+D,EAAOs9D,WACCt9D,EAAOw8D,mBACpBx8D,EAAOjmB,MACCimB,EAAOu9D,cACTv9D,EAAOy8D,YACHz8D,EAAOy+D,gBACZz+D,EAAOm3D,WACHn3D,EAAO8+D,YACxBC,EAAiB/+D,EAAO++D,eACxBt5D,EAAezF,EAAOyF,aACtBz1B,EAAQgwB,EAAOhwB,MAEfgvF,GADYh/D,EAAOptB,WACX,EAAIgnF,EAA0B/xE,SAASmY,GAAS,gBAAiB,qBAAsB,OAAQ,WAAY,iBAAkB,WAAY,qBAAsB,oBAAqB,aAAc,qBAAsB,QAAS,gBAAiB,cAAe,kBAAmB,aAAc,aAAc,iBAAkB,eAAgB,QAAS,eACnW1B,EAAS9lB,KAAKjR,MACdiwF,EAAmBl5D,EAAOk5D,iBAC1B8G,EAAehgE,EAAOggE,aACtBtB,EAAe1+D,EAAO0+D,aACtBD,EAAaz+D,EAAOy+D,WACpBqB,EAAgB9/D,EAAO8/D,cAGvBa,EAAet1F,MACjBksC,aAAcr9B,KAAKykF,iBACnBjnD,WAAYx9B,KAAKilF,gBAGfyB,GAAev1F,GAAYi1F,GAC7B7hD,YAAavkC,KAAKklF,gBAClB1gD,UAAWxkC,KAAKmlF,cAChB/nD,aAAcp9B,KAAKolF,iBACnBE,YAAatlF,KAAKqlF,oBAMhBiB,GAAa,EAAIrR,EAAS5lE,YAAalf,EAAOgyF,MAAOkE,GAErD/tE,OAAa,EACbquE,OAAmB,EAEvB,GAAIpC,IAAeyB,GAAsBhH,EACvC1mE,EAAa,iBACbquE,EAAmB,sBAKnB,GAHAruE,EAAaunE,EAAiB,YAAa5yD,GAC3C05D,EAAmB9G,EAAiB,oBAAqB5yD,GAEpC,IAAjB64D,EAAoB,CACtB,IAAIc,EAAsB,KAAO/G,EAAiB,SAAU5yD,GAC5D3U,GAAcsuE,EACdD,GAAoBC,EAIxB,IAAIxxE,EAAY+qE,EAAe/qE,UAAU6qE,GAAqB,IAAfuE,GAC3Cj3C,GACFq6B,gBAAiBxyD,EACjBA,UAAWA,EACXpd,OAAQ,KACR6uF,oBAAqB1G,EAAeuC,cAAczC,GAClDyC,cAAevC,EAAeuC,cAAczC,GAC5C0G,iBAAkBA,EAClBruE,WAAYA,GAOd,OAJI4tE,IACF34C,EAAev1C,OAAS8tF,GAGnBr1E,EAAQpB,QAAQrf,cACrB,OACA,EAAIkxF,EAAU7xE,UACZ9R,IAAK,SAAa/K,GAChBwmC,EAAOunD,SAAW/tF,GAEpBgF,OAAO,EAAIy9E,EAAS5lE,YAAa8wE,EAAe98D,KAAK48D,GAAOzoF,IAC3DgvF,EAAOC,EAAaC,GACrBlB,SAAUxlF,KAAKulF,eAEjB90E,EAAQpB,QAAQrf,cACd,OAEEuN,IAAK,SAAa/K,GAChBwmC,EAAO+pD,cAAgBvwF,GAEzBgF,OAAO,EAAIy9E,EAAS5lE,YAAak+B,EAAgBp9C,EAAOmlC,UAAW6wD,GACnEv0F,UAAW,kCAEb8c,GAAOjE,SAASvI,IAAItL,EAAU,SAAUuD,EAAO2sF,GAC7C,GAAIlB,GAAiBkB,EAAa,EAChC,OAAO,KAKT,IAAIvpF,OAAM,EACNwpF,GAAS,EAcb,OAZID,IAAe9tD,EAAOjqC,MAAM41F,cAC9BoC,GAAS,EAELb,IACF3oF,EAAM,SAAa/K,GACjBwmC,EAAOwqD,YAAchxF,EACrBwmC,EAAO2sD,gBAETW,EAAW9D,UAAY,WAIpB/xE,EAAQpB,QAAQrf,cACrB,OAEEuN,IAAKA,EACL/F,MAAO8uF,EACP10F,UAAW20F,EACX3wD,cAAemxD,EACfC,iBAAkB,QAEpB7sF,WAOLyoF,EAniBY,CAoiBnBl0E,GAAOsF,WAET4uE,EAAexuF,YAAc,oBAC7BwuF,EAAelyE,cACbw1E,eAAe,EACfF,oBAAoB,EACpB/F,KAAM,IACN9uF,UAAU,EACV00F,oBAAoB,EACpBO,mBAAmB,EACnBtB,WAAY,GACZd,oBAAoB,EACpBziF,MAAO,EACPnH,UAAW,EACX6yB,cACEtW,SAAU,QACVmpE,aAAc,mCACdppE,MAAO,MAETioE,YAAY,GAEdiE,EAAe3zD,mBACbw2D,eAAgB1uE,EAAY1H,QAAQpB,OAClCy3E,kBAAmB3uE,EAAY1H,QAAQ5B,QAG3Cm1E,EAAe3uE,aAgJfzF,UAAkBo0E,mCCv+BlBh0F,OAAOslB,eAAe1F,EAAS,cAC7BjT,OAAO,IAKT,IAAI0rF,EAEJ,SAAgC/3F,GAAO,OAAOA,GAAOA,EAAIkgB,WAAalgB,GAAQmgB,QAASngB,GAFhEigB,CAAuB+3E,IAI9C14E,UAAkBy4E,EAAiB53E,WCFd83E,+KAgEbnnF,KAAKlR,MAPIklB,IAAXjS,UACA7B,IAAAA,GACA+W,IAAAA,OACArlB,IAAAA,UACAw1F,IAAAA,eACAxwF,IAAAA,SACG9H,mFAIHgI,yBACMhI,MACAoR,YACOpO,GAAG,eAAgBF,QACzB,0BACSqlB,oBACGmwE,cAzEaxmF,iBAAjBumF,GAmDZz2E,wBACM,WCtBM22E,0BA8KPv4F,8EACJA,aAqBRw4F,iBAAmB,SAAC/lF,EAAOgmF,EAAOC,EAAeC,EAAajoF,GACxDwR,EAAKliB,MAAM44F,eACR54F,MAAM44F,YAAYnmF,EAAOgmF,EAAOC,EAAeC,EAAajoF,QAG1B,IAA9BwR,EAAKliB,MAAM64F,kBACflnF,UAAWknF,eAAgBpmF,OAIpCqmF,mBAAqB,SAACD,KACfL,iBAAiBK,MAGxB9uD,cAAgB,SAACvD,KACV3W,WAAate,cAAYi1B,MAGhCuyD,aAAe,cACR72E,EAAK2N,gBAIJmpE,EAAc92E,EAAK2N,WAAW5qB,cAAc,oCAC9C+zF,GAAe92E,EAAKjiB,MAAMg5F,cAAgBD,EAAYn5D,gBACnDluB,UAAWsnF,YAAaD,EAAYn5D,mBA5CtC5/B,cAC+B,IAAzBD,EAAM64F,mBACV54F,MAAM44F,eAAiB74F,EAAMk5F,uFAK/BH,0DAGYzwD,EAAWi6B,GACVxiE,EAASuoC,EAAWi6B,EAAW,oBAC/BxiE,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,wBAG5C84F,2DAkCCE,EAAgB/nF,KAAKjR,MAArBg5F,cA6BJ/nF,KAAKlR,MA3BIklB,IAAXjS,UACAvK,IAAAA,MACA5F,IAAAA,UACAq2F,IAAAA,WACAC,IAAAA,eACAC,IAAAA,eACAv4B,IAAAA,YACAC,IAAAA,gBACAy2B,IAAAA,WACA8B,IAAAA,gBACAC,IAAAA,oBACAC,IAAAA,wBACAC,IAAAA,gBACAC,IAAAA,aACA5xF,IAAAA,SACAy1C,IAAAA,QACAztC,IAAAA,MACA6pF,IAAAA,aACAC,IAAAA,oBACA1yB,IAAAA,OAOGlnE,KALH21C,UACAkjD,iBACAD,cACAM,8XAIIvjD,EAAYzkC,KAAKlR,MAAjB21C,QAEAkjD,EAAiB94F,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,kBAElD45F,EAASl+E,WAASC,KAAK9T,GACvB2wF,EAAQoB,EAAO75F,MAAMy4F,MACrBr9C,EAAUz/B,WAASvI,IAAIymF,EAAO75F,MAAM8H,SAAU,SAACgyF,EAAKrnF,UACnDqnF,EAKH9xF,wBACM8xF,EAAI95F,MAAM+5F,YAAiBtB,YAAehmF,SACtComF,IAAmBpmF,QACpB0mF,YACIC,YACAC,iBACKS,EAAI95F,MAAMoR,IAASqnF,MAAShmF,oBAE3CgzB,IAAeY,eAAYD,SAAUhiB,EAAK20E,iBACtC/4F,MAAM8H,UAbNgyF,IAkBLE,EAAgBr+E,WAASC,KAAK9T,GAAU9H,MACxCi6F,EAAOj+E,eAAalU,gBACkB,IAA1BkyF,EAAcz8C,QAA0By8C,EAAcz8C,QAAUA,cACnErsC,KAAKsnF,oCAIhB0B,GAAmB,KACnBvkD,EAAS,KACLwkD,EAAex+E,WAASC,KAAK+5B,GAAS31C,QAClCgc,eAAa25B,aACVwkD,EAAalnF,WAAa,mBACI,IAAzBknF,EAAa58C,QAA0By8C,EAAcz8C,QAAUA,MAG9D48C,EAAatzB,WAAaszB,EAAalzB,mBAGxD1gB,SACAz2C,MAEA9H,2BACS84D,YACI99D,GAAG,gDACUkkE,GACrBnG,UACK24B,YACGD,aAQXW,QAAoBd,EAAkBL,UAG1CjxF,6BACSU,YACI1F,GAAG,oBAAqBF,IAC/B9C,OACCkR,KAAK64B,oBAGA,KAAO4L,IACP,KAAOskD,4BAEXL,SACGL,YACIv2F,GAAG,8CACgB2yC,IAAYgkD,GAAgB7pF,kCACvB6lC,GAAW7lC,GAAS6pF,oCAClBhkD,GAAW7lC,IAAUoqF,IAAqBP,8CAChChkD,GAAW7lC,GAASoqF,IAAqBP,yCAC9C7pF,GAAS6lC,GAAWgkD,IAAiBO,mDAC3BpqF,GAAS6lC,GAAWgkD,GAAgBO,GACrFV,oBAEEY,EACuB,mBAAf5C,EAA4BA,EAAW4C,EAAgBnB,GAAezB,SAE5EqB,gBACQ3nF,KAAK4nF,gCAzVahnF,iBAAtBymF,GAuKZ32E,wBACM,0BACM,eACH,kBACG,cC/MAy4E,6KAQT9yD,EAAYr2B,KAAKlR,MAAjBunC,eAENv/B,8BAEOi2B,GAAO/sB,KAAKlR,MAAM2L,cACdsyB,GAAO/sB,KAAKlR,MAAMiC,cACjBg8B,GAAOsJ,EAAU,EAAI,qBAG3B58B,IAAAA,EAAGzB,IAAAA,OAAQjH,IAAAA,MACPqkB,iBAA2B3b,qBAE/B3C,iEAIqBse,eACHA,cACDA,yBAGL,8BA7BkBxU,iBCUrBwoF,sNAwEnBr6F,OAAUsnC,SAAS,KAEnBgzD,eAAiB,SAACt2F,GACZie,EAAKliB,MAAMkE,WACRlE,MAAMkE,QAAQD,KAGhB0N,UAAW41B,SAAUrlB,EAAKjiB,MAAMsnC,aAGvC+E,aAAe,aACR36B,UAAW41B,SAAS,2EAerBr2B,KAAKlR,MAVPoR,IAAAA,GACA1I,IAAAA,MACA5F,IAAAA,UACA03F,IAAAA,SACAC,IAAAA,aACAR,IAAAA,KACAn+E,IAAAA,MACA+8E,IAAAA,eACA6B,IAAAA,gBACG16F,+GAECmoB,EAAS0wE,GAAkB6B,EAE3BZ,EACJ9xF,0BACMhI,WACKkR,KAAKqpF,qBACPC,YACIx3F,GAAG,sBAAuBy3F,eAOvCzyF,wBACMoJ,QACG1I,YACI1F,GAAG,iCACMmlB,sBACGA,GACpBrlB,UACKg3F,UACC5oF,KAAKjR,MAAMsnC,gBACXr2B,KAAKo7B,gBAERl5B,IAAIb,YA5HmBT,iBCRhB6oF,+KAOgBzpF,KAAKlR,MAA9BgG,IAAAA,KAAM+B,IAAAA,KAAS/H,+BAErBgI,iBAAC04C,SACK1gD,qBAEOgD,GAAG,qEACiBgD,gCACEA,8BACF+B,cAfQ+J,iBCYzC8oF,GAAuB,GACvBC,GAAwB,IAMTC,0BAkKP96F,8EACJA,MAkGR+pC,cAAgB,SAACvD,KACV3W,WAAa2W,IACbu0D,kBAAsC,OAApB74E,EAAK2N,eAG9BkrE,kBAAoB,SAACC,QACsB,kBAAlBA,GAA+BA,EACjD94E,EAAK2N,kBAIyB3N,EAAKliB,MAAhCynC,IAAAA,SAAUwzD,IAAAA,aACV39B,EAAWp7C,EAAKliB,MAAhBs9D,OAEJ0E,UACCv6B,GAAYvlB,EAAKg5E,aAAah5E,EAAKliB,WACxBkiB,EAAKi5E,iBAAiBj5E,EAAK2N,WAAYytC,QAGnDo9B,SACCp9B,MACep7C,EAAKk5E,mBAAmBl5E,EAAK2N,WAAYmyC,EAAai5B,QAGpEI,EAAoBn5E,EAAKo5E,uBAAuBp5E,EAAK2N,WAAYmrE,EAAgBh5B,EAAc,KAEhGrwD,aAAW2rD,SAAQ0E,cAAa04B,mBAAoBW,GAAqBn5E,EAAKoqC,2BAGrFA,sBAAwB,cACjBpqC,EAAK2N,YAAe3N,EAAKjiB,MAAMq9D,YAI9Bn1C,EAASjG,EAAK2N,WAAW5qB,cAAc,sBACxCkjB,OAICozE,EAAU3uF,MAAMC,UAAUC,MAAMC,KAAKmV,EAAK2N,WAAWne,iBAAiB,eACxE6pF,EAAQ,KAAOpzE,SAKiCjG,EAAK2N,WAApC2rE,IAAb5vF,YAA6Bf,IAAAA,WAChB4wF,EAA0CtzE,EAAvDvc,YAAsC8vF,EAAiBvzE,EAA7BowC,WAE5BojC,EAAmBD,EAAeD,GAAgBD,EAAiB3wF,IAAe,OADjE6wF,EAAe7wF,GAAc,KAE9B8wF,OAIlBhwF,EAAS,IACLgJ,KAAK,SAACmlF,EAAK1sF,UACbA,EAAI8U,EAAKliB,MAAM64F,oBACPiB,EAAIluF,aAGTwB,EAAI8U,EAAKjiB,MAAM44F,mBAGnBhpE,WAAWhlB,WAAac,UArBtBkkB,WAAWhlB,WAAa,OAwBjC2tF,iBAAmB,SAAC/lF,EAAOgmF,EAAOC,EAAeC,EAAajoF,GACxDwR,EAAKliB,MAAM44F,eACR54F,MAAM44F,YAAYnmF,EAAOgmF,EAAOC,EAAeC,EAAajoF,QAG1B,IAA9BwR,EAAKliB,MAAM64F,kBACflnF,4BACac,GACbyP,EAAKo5E,uBAAuBp5E,EAAK2N,WAAY,EAAGpd,EAAOyP,EAAKjiB,MAAMy6F,sBAK3EkB,uBAAyB,SAAC9B,EAAK1sF,OACvBqF,EAAQrF,EAAI8U,EAAKjiB,MAAMy6F,gBACvBvyE,EAASpoB,EAASmiB,EAAKliB,MAAOkiB,EAAKjiB,MAAO,oBAAsBwS,EAChEopF,EAAQlgF,WAASC,KAAKk+E,GACtBgC,EAAkB55E,EAAKs2E,6CAIdqD,EAAM77F,MAAM8b,cAChB,SAAqBpL,SACkBmrF,EAAM77F,MAA5CkE,IAAAA,QAASkN,IAAAA,GAAI2oF,IAAAA,WAAYjyF,IAAAA,SAC7B5D,KACMuO,EAAO/B,KAGD+B,EAAOrB,EAAI2oF,EAAYjyF,EAAU4I,QAKvDqrF,aAAe,SAACC,SAC6B95E,EAAKjiB,MAAxCg8F,IAAAA,cAAevB,IAAAA,gBACjBwB,GAAcxB,EAAkBuB,IAAkBD,EAAY,GAAK,KAEpErqF,wBACYsqF,EAAgBC,kBACdxB,EAAkBwB,OAIvCC,cAAgB,aACTJ,cAAa,MAGpBK,kBAAoB,aACbL,cAAa,QAjNZ7C,OAAkD,IAAzBl5F,EAAM64F,eAAiC74F,EAAMk5F,gBAAkBl5F,EAAM64F,eAC9FwD,EAAiBr8F,EAAMs9D,OAASs9B,GAAuBC,YACxD56F,wCAEco8F,EAAiBnD,oBAChB,gBACH,QAGmB,IAAzBl5F,EAAM64F,mBACV54F,MAAM44F,eAAiBK,0EAINt1E,GACpB1S,KAAKlR,MAAM64F,iBAAmBj1E,EAAUi1E,oBACrClnF,eACAT,KAAKoqF,uBAAuBpqF,KAAK2e,WAAY,EAAGjM,EAAUi1E,eAAgB3nF,KAAKjR,MAAMy6F,kBACvFxpF,KAAKo7C,wBACEp7C,KAAKgqF,aAAat3E,IAAc1S,KAAKgqF,aAAahqF,KAAKlR,aAC5D2R,UAAWqwD,YAAa,kDAId15B,EAAWi6B,MACxBrxD,KAAKgqF,aAAahqF,KAAKlR,QAAUkR,KAAKjR,MAAMy6F,kBAAoBn4B,EAAUm4B,gBAAiB,KACvF14B,EAAc9wD,KAAKiqF,iBAAiBjqF,KAAK2e,WAAY3e,KAAKjR,MAAMq9D,aAGjE3rD,UAAWqwD,oBACX,KACCwf,EAAS7lE,WAASvI,IAAIuI,WAASuS,QAAQhd,KAAKlR,MAAM8H,UAAW,qBAAG9H,MAAS8b,QACzEwgF,EAAa3gF,WAASvI,IAAIuI,WAASuS,QAAQoa,EAAUxgC,UAAW,qBAAG9H,MAAS8b,SAC9E0lE,EAAOlhF,SAAWg8F,EAAWh8F,QAAUkhF,EAAOjhF,OAAO,SAAC61E,EAAGhpE,UAAMo0E,EAAOp0E,KAAOkvF,EAAWlvF,KAAI9M,cACzFqR,eACAT,KAAKoqF,uBAAuBpqF,KAAK2e,WAAY,EAAG3e,KAAKlR,MAAM64F,eAAgB3nF,KAAKjR,MAAMy6F,kBACxFxpF,KAAKo7C,6DAKDtsD,SAC4B,kBAAzBA,EAAMu8F,eAChBv8F,EAAMu8F,eACN5gF,WAASuS,QAAQluB,EAAM8H,UAAUvH,OAAO,oBAAW8K,IAAO/K,OAAS,2CAGxDkmC,EAAW82B,UACLA,EA9NF,GACC,IA8NR92B,EAAUvhC,cAAc,WACIA,cAAc,iBAA9CszD,sDAKS/xB,OAA4BoU,eACvC4gD,EAAiBh1D,EAAU56B,YAC7BqwF,EAAgB,KAChBT,EAAiBh1D,EAAUP,YAAa,KAEtCu2D,EAAa,EADJ5vF,MAAMC,UAAUC,MAAMC,KAAKy5B,EAAU90B,iBAAiB,YAE9DiD,KAAK,SAACmlF,EAAK1sF,YACEA,MACF0sF,EAAIluF,aAEE4vF,WAIjB7zF,KAAK2H,IAAI,EAAG2sF,GAAiBrhD,EAAO,EAAI,mDAG1BpU,OAAWw7B,yDAAc,EAAG62B,eAAgB6B,eAC7DhrC,gBAC0B,iBAAnBmpC,EACL6B,EAAkB,GAAK7B,GAAkB6B,EAC9Bl0D,EAAUvhC,cAAc,iBAExBuhC,EAAU90B,iBAAiB,WAAWmnF,GAGxCryD,EAAUvhC,cAAc,2BAI5Bw3F,kBAAkB,SAGwC/sC,0BAA7D9jD,8BAA6B2sD,WAGAyJ,oBAChB04B,GAAmBA,EAAkB7B,iDAgItD3nF,KAAKjR,MANPy8F,IAAAA,gBACAL,IAAAA,eACAI,IAAAA,iBACAR,IAAAA,cACAvB,IAAAA,gBACA14B,IAAAA,cAqCE9wD,KAAKlR,MAjCIklB,IAAXjS,UACAvK,IAAAA,MACA5F,IAAAA,UACA65F,IAAAA,mBACAC,IAAAA,qBACAr/C,IAAAA,QACA9V,IAAAA,SACAgxD,IAAAA,MACAwC,IAAAA,aACA4B,IAAAA,kBACAhtB,IAAAA,SACAF,IAAAA,aACAmtB,IAAAA,iBAGAC,IAAAA,yBACAC,IAAAA,0BACApqB,IAAAA,iBACAC,IAAAA,kBACAH,IAAAA,qBACAC,IAAAA,sBAYG3yE,KAVH64F,iBACAK,kBACAN,cACA2D,iBACAj/B,SAGAZ,eACAO,2cAKI47B,EAAiB94F,EAASmR,KAAKlR,MAAOkR,KAAKjR,MAAO,kBAEpD8H,GAAO,EACPD,EAAW6T,WAASvI,IAAIuI,WAASuS,QAAQhd,KAAKlR,MAAM8H,UAAW,SAACgyF,EAAKrnF,UASnEqnF,EAAI95F,MAAM+H,UACL,GAGFiU,eAAa89E,2BAED6C,oBACEC,KACf9C,EAAI95F,MAAMoR,IAASqnF,MAAShmF,aACpBqnF,EAAI95F,MAAM+5F,YAAiBtB,YAAehmF,SAC9CA,IAAUomF,UAlBE,SAAC9qE,EAAU3c,EAAIsnF,EAAeC,EAAajoF,GAC3DopF,EAAI95F,MAAMkE,WACRlE,MAAMkE,QAAQu0F,EAAOrnF,EAAIsnF,EAAeC,EAAajoF,KAGtD8nF,iBAAiBzqE,EAAU3c,EAAIsnF,EAAeC,EAAajoF,QAkBhEyqD,SACA8hC,SACAC,YACAxC,EAAiB,KACbp6F,EAASwH,EAASxH,OACpB26F,MAEAjzF,iBAACsyF,OACQ7B,kCACSI,kBACC6B,QAEf1yF,qBAAe8T,MAAO+gF,KACDG,EAA2BD,EAA0BD,SAGtEh1F,EAASgF,MAAM4tF,EAAiB5yF,EAASxH,QAAQ8S,IAAIlC,KAAK0qF,6BAK3D9zF,EAASgF,MAAMmvF,EAAevB,IAEpCO,GAAgBgB,EAAgB,MAEjCj0F,iBAAC2yF,iBAEO5yF,SACEF,EAAkB8qE,EAAuBD,EAAsB/C,WAC9Dz+D,KAAKkrF,sBAKfnB,GAAgB36F,EAAS,GAAKo6F,EAAkBuB,GAAiB37F,MAElE0H,iBAAC2yF,SACO5yF,UACGmJ,KAAKirF,qBACNt0F,EAAkBgrE,EAAmBD,EAAkB/C,aAOrE7nE,yBACMhI,eACQ0I,GAAOs5D,0BACRh/D,GAAG,iCACW03F,IAAoBO,sBACtBxzD,2BACK8V,GACzBz6C,QACE,6BAEJ2iC,IAAea,cAAWD,eAAYD,SAAUl1B,KAAK6pF,kBAAmBp0D,MAAOz1B,KAAK64B,yCAKpFswD,IAAa1uF,OAAQ+wF,EAAiBz6F,MAAOo6F,EAAgB90D,QAASk1D,YA/f7C3qF,iBAAbgpF,GAyJZl5E,wBACM,qBACM,WACP5Z,8DACIA,kEACK,wBACDA,iDC7KDm1F,sNA0GnB7vE,aAAe,SAACrpB,GACVie,EAAKliB,MAAMkE,WACRlE,MAAMkE,QAAQge,EAAKliB,MAAMyS,MAAOyP,EAAKliB,MAAMoR,GAAI8Q,EAAKliB,MAAM+5F,WAAY73E,EAAKliB,MAAM8H,SAAU7D,4EAkB9FiN,KAAKlR,MAZPoR,IAAAA,GACA2oF,IAAAA,WACAj3F,IAAAA,UACAunB,IAAAA,gBACA+yE,IAAAA,kBACAj1E,IAAAA,OAMGnoB,KAJH+H,OACA+T,QACArJ,qHAKoBvB,KAAKlR,MAArB+H,IAAAA,KAAM+T,IAAAA,SACR/T,EAAM,KACFgtC,EAASp5B,WAASC,KAAK7T,KACtBiU,eAAajU,aACP/E,GAAG,eAAgB+xC,EAAO/0C,MAAM8C,gBAI3C8P,iBAAekJ,GAAQ,KACnB6hC,EAAUhiC,WAASC,KAAKE,KACtBE,eAAaF,aACR9Y,GAAG,eAAgB26C,EAAQ39C,MAAM8C,oBAGtCkF,wBAAKlF,UAAU,0BAGvBkF,0BACMhI,MACAoR,OACC,cACIF,KAAKoc,uBACHtqB,GAAG,4BACI8Y,GAAS/T,QACxBsiB,EAAkBA,GAAmBlC,QACrCi1E,EAAoBA,IAAsBj1E,MAC1CrlB,mBACYi3F,kBACA5xE,gBA5JUrW,iBAAZqrF,GAoGZv7E,wBACM,qBACM,mCACE,oBnSjDvBnG,GAAWnW,YAAc,aAEzBmW,GAAW0J,oBAIChT,GAAU0C,QAAQ0J,iBAIrBpM,GAAUzO,iBAIJyO,GAAUuM,wsCoS/EV"}