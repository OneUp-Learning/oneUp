# Generated by Django 2.2.4 on 2020-04-04 05:35

from django.db import migrations, models
import django.utils.timezone
import datetime

def migrate_instructor_dates(apps, schema_editor):
    # Update the course config "has date" parameters 

    Challenges = apps.get_model("Instructors","Challenges")
    Activities = apps.get_model("Instructors", "Activities")
    Announcements = apps.get_model("Instructors", "Announcements")

    default_date_year = datetime.datetime.strptime("12/31/2999 11:59 PM", "%m/%d/%Y %I:%M %p").replace(tzinfo=datetime.timezone.utc).year
    
    challenges = Challenges.objects.all()
    for params in challenges:
        save = False
        # This datetimefield is assume to not be a default datetime since the year is < 2999
        if params.startTimestamp.year < default_date_year:
            params.hasStartTimestamp = True
            save = True

        if params.endTimestamp.year < default_date_year:
            params.hasEndTimestamp = True
            save = True

        if params.dueDate.year < default_date_year:
            params.hasDueDate = True
            save = True

        if save:
            params.save()

    activities = Activities.objects.all()
    for params in activities:
        save = False
        # This datetimefield is assume to not be a default datetime since the year is < 2999
        if params.startTimestamp.year < default_date_year:
            params.hasStartTimestamp = True
            save = True

        if params.endTimestamp.year < default_date_year:
            params.hasEndTimestamp = True
            save = True

        if params.deadLine.year < default_date_year:
            params.hasDeadline = True
            save = True

        if save:
            params.save()

    announcements = Announcements.objects.all()
    for params in announcements:
        save = False
        # This datetimefield is assume to not be a default datetime since the year is < 2999
        if params.startTimestamp.year < default_date_year:
            params.hasStartTimestamp = True
            save = True

        if params.endTimestamp.year < default_date_year:
            params.hasEndTimestamp = True
            save = True

        if save:
            params.save()


class Migration(migrations.Migration):

    dependencies = [
        ('Instructors', '0117_auto_20200330_2146'),
    ]

    operations = [
        migrations.AddField(
            model_name='activities',
            name='hasDeadline',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='activities',
            name='hasEndTimestamp',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='activities',
            name='hasStartTimestamp',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='announcements',
            name='hasEndTimestamp',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='announcements',
            name='hasStartTimestamp',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='challenges',
            name='hasDueDate',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='challenges',
            name='hasEndTimestamp',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='challenges',
            name='hasStartTimestamp',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='announcements',
            name='endTimestamp',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='announcements',
            name='startTimestamp',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='questionprogrammingfiles',
            name='uploaded_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='uploadedactivityfiles',
            name='uploaded_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='uploadedfiles',
            name='uploaded_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.RunPython(migrate_instructor_dates),
    ]
